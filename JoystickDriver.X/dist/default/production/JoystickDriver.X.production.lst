

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Oct 18 03:40:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     _ADCON0	set	4034
    26  0000                     _ADCON0bits	set	4034
    27  0000                     _ADCON1	set	4033
    28  0000                     _ADCON2	set	4032
    29  0000                     _ADRESH	set	4036
    30  0000                     _ADRESL	set	4035
    31  0000                     _CCP3CON	set	4023
    32  0000                     _CCP3CONbits	set	4023
    33  0000                     _CCPR3L	set	4024
    34  0000                     _INTCON	set	4082
    35  0000                     _PIR1bits	set	3998
    36  0000                     _PORTAbits	set	3968
    37  0000                     _PORTBbits	set	3969
    38  0000                     _PR2	set	4043
    39  0000                     _SSP1BUF	set	4041
    40  0000                     _SSP1CON1	set	4038
    41  0000                     _SSP1CON1bits	set	4038
    42  0000                     _SSP1STAT	set	4039
    43  0000                     _SSP1STATbits	set	4039
    44  0000                     _T2CON	set	4042
    45  0000                     _T3CON	set	4017
    46  0000                     _TRISAbits	set	3986
    47  0000                     _TRISBbits	set	3987
    48  0000                     _TRISCbits	set	3988
    49  0000                     _TRISD	set	3989
    50  0000                     _TRISEbits	set	3990
    51  0000                     _TRISFbits	set	3991
    52  0000                     _TRISGbits	set	3992
    53                           
    54                           	psect	smallconst
    55  001000                     __psmallconst:
    56                           	opt stack 0
    57  001000  00                 	db	0
    58  001001  38                 	db	56	;'8'
    59  001002  36                 	db	54	;'6'
    60  001003  38                 	db	56	;'8'
    61  001004  30                 	db	48	;'0'
    62  001005  3A                 	db	58	;':'
    63  001006  20                 	db	32
    64  001007  00                 	db	0
    65  001008  38                 	db	56	;'8'
    66  001009  37                 	db	55	;'7'
    67  00100A  32                 	db	50	;'2'
    68  00100B  32                 	db	50	;'2'
    69  00100C  3A                 	db	58	;':'
    70  00100D  20                 	db	32
    71  00100E  00                 	db	0
    72                           
    73                           ; #config settings
    74  00100F  00                 	db	0	; dummy byte at the end
    75  0000                     
    76                           	psect	cinit
    77  001310                     __pcinit:
    78                           	opt stack 0
    79  001310                     start_initialization:
    80                           	opt stack 0
    81  001310                     __initialization:
    82                           	opt stack 0
    83                           
    84                           ; Clear objects allocated to COMRAM (2 bytes)
    85  001310  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86  001312  6A0D               	clrf	__pbssCOMRAM& (0+255),c
    87  001314                     end_of_initialization:
    88                           	opt stack 0
    89  001314                     __end_of__initialization:
    90                           	opt stack 0
    91  001314  0100               	movlb	0
    92  001316  EF29  F009         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95  00000D                     __pbssCOMRAM:
    96                           	opt stack 0
    97  00000D                     _JSEnableFlag:
    98                           	opt stack 0
    99  00000D                     	ds	1
   100  00000E                     _PIDEnableFlag:
   101                           	opt stack 0
   102  00000E                     	ds	1
   103                           
   104                           	psect	cstackCOMRAM
   105  000001                     __pcstackCOMRAM:
   106                           	opt stack 0
   107  000001                     ?_abs:
   108                           	opt stack 0
   109  000001                     ?_DetectMovement:
   110                           	opt stack 0
   111  000001                     OpenSPI1@bus_mode:
   112                           	opt stack 0
   113  000001                     WriteSPI1@TempVar:
   114                           	opt stack 0
   115  000001                     Delay10TCYx@unit:
   116                           	opt stack 0
   117  000001                     abs@a:
   118                           	opt stack 0
   119                           
   120                           ; 2 bytes @ 0x0
   121  000001                     	ds	1
   122  000002                     OpenSPI1@smp_phase:
   123                           	opt stack 0
   124  000002                     WriteSPI1@data_out:
   125                           	opt stack 0
   126                           
   127                           ; 1 bytes @ 0x1
   128  000002                     	ds	1
   129  000003                     ??_abs:
   130  000003                     setGPIO@value:
   131                           	opt stack 0
   132  000003                     setIODIR@dir:
   133                           	opt stack 0
   134  000003                     OpenSPI1@sync_mode:
   135                           	opt stack 0
   136  000003                     DetectMovement@JoystickResult:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x2
   140  000003                     	ds	1
   141  000004                     setGPIO@address:
   142                           	opt stack 0
   143  000004                     setIODIR@address:
   144                           	opt stack 0
   145                           
   146                           ; 1 bytes @ 0x3
   147  000004                     	ds	1
   148  000005                     lcdCommand@command:
   149                           	opt stack 0
   150  000005                     DetectMovement@ADCresult:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x4
   154  000005                     	ds	1
   155  000006                     
   156                           ; 0 bytes @ 0x5
   157  000006                     	ds	1
   158  000007                     ImplementJSMotion@JoystickValue:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x6
   162  000007                     	ds	2
   163  000009                     ??_ImplementJSMotion:
   164                           
   165                           ; 0 bytes @ 0x8
   166  000009                     	ds	2
   167  00000B                     ImplementJSMotion@CCPinput:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0xA
   171  00000B                     	ds	2
   172  00000D                     
   173                           ; 0 bytes @ 0xC
   174 ;;
   175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   176 ;;
   177 ;; *************** function _main *****************
   178 ;; Defined at:
   179 ;;		line 14 in file "JoystickDriver.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;		None
   182 ;; Auto vars:     Size  Location     Type
   183 ;;		None
   184 ;; Return value:  Size  Location     Type
   185 ;;		None               void
   186 ;; Registers used:
   187 ;;		wreg, status,2, status,0, cstack
   188 ;; Tracked objects:
   189 ;;		On entry : 0/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   197 ;;Total ram usage:        0 bytes
   198 ;; Hardware stack levels required when called:    5
   199 ;; This function calls:
   200 ;;		_DetectMovement
   201 ;;		_ImplementJSMotion
   202 ;;		_initialize
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text0
   209  001252                     __ptext0:
   210                           	opt stack 0
   211  001252                     _main:
   212                           	opt stack 26
   213                           
   214                           ;JoystickDriver.c: 16: initialize();
   215                           
   216                           ;incstack = 0
   217  001252  EC75  F009         	call	_initialize	;wreg free
   218  001256  D000               	goto	l1246
   219  001258                     l1246:
   220                           
   221                           ;JoystickDriver.c: 18: {
   222                           ;JoystickDriver.c: 20: JSEnableFlag = 1;
   223  001258  0E01               	movlw	1
   224  00125A  6E0D               	movwf	_JSEnableFlag,c
   225                           
   226                           ;JoystickDriver.c: 21: if (JSEnableFlag == 1)
   227  00125C  040D               	decf	_JSEnableFlag,w,c
   228  00125E  A4D8               	btfss	status,2,c
   229  001260  D7FB               	goto	l1246
   230                           
   231                           ;JoystickDriver.c: 22: ImplementJSMotion(DetectMovement());
   232  001262  EC59  F008         	call	_DetectMovement	;wreg free
   233  001266  C001  F007         	movff	?_DetectMovement,ImplementJSMotion@JoystickValue
   234  00126A  C002  F008         	movff	?_DetectMovement+1,ImplementJSMotion@JoystickValue+1
   235  00126E  EC08  F008         	call	_ImplementJSMotion	;wreg free
   236  001272  D7F2               	goto	l1246
   237  001274  EF00  F000         	goto	start
   238  001278                     __end_of_main:
   239                           	opt stack 0
   240                           status	equ	0xFD8
   241                           
   242 ;; *************** function _initialize *****************
   243 ;; Defined at:
   244 ;;		line 28 in file "JoystickDriver.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;		None               void
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels used:    1
   264 ;; Hardware stack levels required when called:    4
   265 ;; This function calls:
   266 ;;		_JoystickInit
   267 ;;		_MotorDriverInit
   268 ;;		_lcdInit
   269 ;; This function is called by:
   270 ;;		_main
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text1
   275  0012EA                     __ptext1:
   276                           	opt stack 0
   277  0012EA                     _initialize:
   278                           	opt stack 26
   279                           
   280                           ;JoystickDriver.c: 30: MotorDriverInit();
   281                           
   282                           ;incstack = 0
   283  0012EA  EC4D  F009         	call	_MotorDriverInit	;wreg free
   284                           
   285                           ;JoystickDriver.c: 31: JoystickInit();
   286  0012EE  ECFD  F008         	call	_JoystickInit	;wreg free
   287                           
   288                           ;JoystickDriver.c: 32: lcdInit();
   289  0012F2  ECB6  F008         	call	_lcdInit	;wreg free
   290                           
   291                           ;JoystickDriver.c: 33: INTCON = INTCON | 0xC0;
   292  0012F6  50F2               	movf	intcon,w,c	;volatile
   293  0012F8  09C0               	iorlw	192
   294  0012FA  6EF2               	movwf	intcon,c	;volatile
   295  0012FC  0012               	return		;funcret
   296  0012FE                     __end_of_initialize:
   297                           	opt stack 0
   298                           intcon	equ	0xFF2
   299                           status	equ	0xFD8
   300                           
   301 ;; *************** function _lcdInit *****************
   302 ;; Defined at:
   303 ;;		line 110 in file "LCD.h"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;		None               void
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels used:    1
   323 ;; Hardware stack levels required when called:    3
   324 ;; This function calls:
   325 ;;		_OpenSPI1
   326 ;;		_lcdCommand
   327 ;;		_setGPIO
   328 ;;		_setIODIR
   329 ;; This function is called by:
   330 ;;		_initialize
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text2
   335  00116C                     __ptext2:
   336                           	opt stack 0
   337  00116C                     _lcdInit:
   338                           	opt stack 26
   339                           
   340                           ;LCD.h: 112: TRISAbits.RA2=0;
   341                           
   342                           ;incstack = 0
   343  00116C  9492               	bcf	3986,2,c	;volatile
   344                           
   345                           ;LCD.h: 113: PORTAbits.RA2=1;
   346  00116E  8480               	bsf	3968,2,c	;volatile
   347                           
   348                           ;LCD.h: 115: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
   349  001170  0E02               	movlw	2
   350  001172  6E01               	movwf	OpenSPI1@bus_mode,c
   351  001174  0E80               	movlw	128
   352  001176  6E02               	movwf	OpenSPI1@smp_phase,c
   353  001178  0E02               	movlw	2
   354  00117A  EC8B  F008         	call	_OpenSPI1
   355                           
   356                           ;LCD.h: 117: setIODIR(0x01,0x00);
   357  00117E  0E00               	movlw	0
   358  001180  6E03               	movwf	setIODIR@dir,c
   359  001182  0E01               	movlw	1
   360  001184  EC5B  F009         	call	_setIODIR
   361                           
   362                           ;LCD.h: 119: setIODIR(0x00,0x00);
   363  001188  0E00               	movlw	0
   364  00118A  6E03               	movwf	setIODIR@dir,c
   365  00118C  0E00               	movlw	0
   366  00118E  EC5B  F009         	call	_setIODIR
   367                           
   368                           ;LCD.h: 121: setGPIO(0x00,0x00);
   369  001192  0E00               	movlw	0
   370  001194  6E03               	movwf	setGPIO@value,c
   371  001196  0E00               	movlw	0
   372  001198  EC68  F009         	call	_setGPIO
   373                           
   374                           ;LCD.h: 123: lcdCommand(0b00111111);
   375  00119C  0E3F               	movlw	63
   376  00119E  ECDB  F008         	call	_lcdCommand
   377                           
   378                           ;LCD.h: 125: lcdCommand(0b00001111);
   379  0011A2  0E0F               	movlw	15
   380  0011A4  ECDB  F008         	call	_lcdCommand
   381                           
   382                           ;LCD.h: 127: lcdCommand(0b00000001);
   383  0011A8  0E01               	movlw	1
   384  0011AA  ECDB  F008         	call	_lcdCommand
   385                           
   386                           ;LCD.h: 129: lcdCommand(0b00000110);
   387  0011AE  0E06               	movlw	6
   388  0011B0  ECDB  F008         	call	_lcdCommand
   389  0011B4  0012               	return		;funcret
   390  0011B6                     __end_of_lcdInit:
   391                           	opt stack 0
   392                           intcon	equ	0xFF2
   393                           status	equ	0xFD8
   394                           
   395 ;; *************** function _setIODIR *****************
   396 ;; Defined at:
   397 ;;		line 43 in file "LCD.h"
   398 ;; Parameters:    Size  Location     Type
   399 ;;  address         1    wreg     unsigned char 
   400 ;;  dir             1    2[COMRAM] unsigned char 
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  address         1    3[COMRAM] unsigned char 
   403 ;; Return value:  Size  Location     Type
   404 ;;		None               void
   405 ;; Registers used:
   406 ;;		wreg, status,2, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   412 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;Total ram usage:        2 bytes
   417 ;; Hardware stack levels used:    1
   418 ;; Hardware stack levels required when called:    1
   419 ;; This function calls:
   420 ;;		_WriteSPI1
   421 ;; This function is called by:
   422 ;;		_lcdInit
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text3
   427  0012B6                     __ptext3:
   428                           	opt stack 0
   429  0012B6                     _setIODIR:
   430                           	opt stack 27
   431                           
   432                           ;incstack = 0
   433                           ;setIODIR@address stored from wreg
   434  0012B6  6E04               	movwf	setIODIR@address,c
   435                           
   436                           ;LCD.h: 45: PORTAbits.RA2=0;
   437  0012B8  9480               	bcf	3968,2,c	;volatile
   438                           
   439                           ;LCD.h: 46: WriteSPI1(0x40);
   440  0012BA  0E40               	movlw	64
   441  0012BC  EC3C  F009         	call	_WriteSPI1
   442                           
   443                           ;LCD.h: 47: WriteSPI1(address);
   444  0012C0  5004               	movf	setIODIR@address,w,c
   445  0012C2  EC3C  F009         	call	_WriteSPI1
   446                           
   447                           ;LCD.h: 48: WriteSPI1(dir);
   448  0012C6  5003               	movf	setIODIR@dir,w,c
   449  0012C8  EC3C  F009         	call	_WriteSPI1
   450                           
   451                           ;LCD.h: 49: PORTAbits.RA2=1;
   452  0012CC  8480               	bsf	3968,2,c	;volatile
   453  0012CE  0012               	return		;funcret
   454  0012D0                     __end_of_setIODIR:
   455                           	opt stack 0
   456                           intcon	equ	0xFF2
   457                           status	equ	0xFD8
   458                           
   459 ;; *************** function _lcdCommand *****************
   460 ;; Defined at:
   461 ;;		line 52 in file "LCD.h"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  command         1    wreg     unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  command         1    4[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg, status,2, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        1 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		_Delay10TCYx
   484 ;;		_setGPIO
   485 ;; This function is called by:
   486 ;;		_lcdInit
   487 ;;		_lcdGoTo
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text4
   492  0011B6                     __ptext4:
   493                           	opt stack 0
   494  0011B6                     _lcdCommand:
   495                           	opt stack 26
   496                           
   497                           ;incstack = 0
   498                           ;lcdCommand@command stored from wreg
   499  0011B6  6E05               	movwf	lcdCommand@command,c
   500                           
   501                           ;LCD.h: 54: setGPIO(0x12,0x00);
   502  0011B8  0E00               	movlw	0
   503  0011BA  6E03               	movwf	setGPIO@value,c
   504  0011BC  0E12               	movlw	18
   505  0011BE  EC68  F009         	call	_setGPIO
   506                           
   507                           ;LCD.h: 55: Delay10TCYx(0);
   508  0011C2  0E00               	movlw	0
   509  0011C4  EC7F  F009         	call	_Delay10TCYx
   510                           
   511                           ;LCD.h: 56: setGPIO(0x13, command);
   512  0011C8  C005  F003         	movff	lcdCommand@command,setGPIO@value
   513  0011CC  0E13               	movlw	19
   514  0011CE  EC68  F009         	call	_setGPIO
   515                           
   516                           ;LCD.h: 57: Delay10TCYx(0);
   517  0011D2  0E00               	movlw	0
   518  0011D4  EC7F  F009         	call	_Delay10TCYx
   519                           
   520                           ;LCD.h: 58: setGPIO(0x12,0x40);
   521  0011D8  0E40               	movlw	64
   522  0011DA  6E03               	movwf	setGPIO@value,c
   523  0011DC  0E12               	movlw	18
   524  0011DE  EC68  F009         	call	_setGPIO
   525                           
   526                           ;LCD.h: 59: Delay10TCYx(0);
   527  0011E2  0E00               	movlw	0
   528  0011E4  EC7F  F009         	call	_Delay10TCYx
   529                           
   530                           ;LCD.h: 60: setGPIO(0x12,0x00);
   531  0011E8  0E00               	movlw	0
   532  0011EA  6E03               	movwf	setGPIO@value,c
   533  0011EC  0E12               	movlw	18
   534  0011EE  EC68  F009         	call	_setGPIO
   535                           
   536                           ;LCD.h: 61: Delay10TCYx(0);
   537  0011F2  0E00               	movlw	0
   538  0011F4  EC7F  F009         	call	_Delay10TCYx
   539  0011F8  0012               	return		;funcret
   540  0011FA                     __end_of_lcdCommand:
   541                           	opt stack 0
   542                           intcon	equ	0xFF2
   543                           status	equ	0xFD8
   544                           
   545 ;; *************** function _setGPIO *****************
   546 ;; Defined at:
   547 ;;		line 32 in file "LCD.h"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  address         1    wreg     unsigned char 
   550 ;;  value           1    2[COMRAM] unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  address         1    3[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;		None               void
   555 ;; Registers used:
   556 ;;		wreg, status,2, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        2 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; Hardware stack levels required when called:    1
   569 ;; This function calls:
   570 ;;		_WriteSPI1
   571 ;; This function is called by:
   572 ;;		_lcdCommand
   573 ;;		_lcdInit
   574 ;;		_lcdChar
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text5
   579  0012D0                     __ptext5:
   580                           	opt stack 0
   581  0012D0                     _setGPIO:
   582                           	opt stack 27
   583                           
   584                           ;incstack = 0
   585                           ;setGPIO@address stored from wreg
   586  0012D0  6E04               	movwf	setGPIO@address,c
   587                           
   588                           ;LCD.h: 34: PORTAbits.RA2=0;
   589  0012D2  9480               	bcf	3968,2,c	;volatile
   590                           
   591                           ;LCD.h: 37: WriteSPI1(0x40);
   592  0012D4  0E40               	movlw	64
   593  0012D6  EC3C  F009         	call	_WriteSPI1
   594                           
   595                           ;LCD.h: 38: WriteSPI1(address);
   596  0012DA  5004               	movf	setGPIO@address,w,c
   597  0012DC  EC3C  F009         	call	_WriteSPI1
   598                           
   599                           ;LCD.h: 39: WriteSPI1(value);
   600  0012E0  5003               	movf	setGPIO@value,w,c
   601  0012E2  EC3C  F009         	call	_WriteSPI1
   602                           
   603                           ;LCD.h: 40: PORTAbits.RA2=1;
   604  0012E6  8480               	bsf	3968,2,c	;volatile
   605  0012E8  0012               	return		;funcret
   606  0012EA                     __end_of_setGPIO:
   607                           	opt stack 0
   608                           intcon	equ	0xFF2
   609                           status	equ	0xFD8
   610                           
   611 ;; *************** function _WriteSPI1 *****************
   612 ;; Defined at:
   613 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  data_out        1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  data_out        1    1[COMRAM] unsigned char 
   618 ;;  TempVar         1    0[COMRAM] unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      char 
   621 ;; Registers used:
   622 ;;		wreg
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_setGPIO
   638 ;;		_setIODIR
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text6
   643  001278                     __ptext6:
   644                           	opt stack 0
   645  001278                     _WriteSPI1:
   646                           	opt stack 27
   647                           
   648                           ;incstack = 0
   649                           ;WriteSPI1@data_out stored from wreg
   650  001278  6E02               	movwf	WriteSPI1@data_out,c
   651  00127A  CFC9 F001          	movff	4041,WriteSPI1@TempVar	;volatile
   652  00127E  969E               	bcf	3998,3,c	;volatile
   653  001280  9EC6               	bcf	4038,7,c	;volatile
   654  001282  C002  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
   655  001286  BEC6               	btfsc	4038,7,c	;volatile
   656  001288  D007               	goto	l193
   657  00128A  D002               	goto	l195
   658                           
   659                           ;	Return value of _WriteSPI1 is never used
   660  00128C  D005               	goto	l193
   661  00128E  D000               	goto	l195
   662  001290                     l195:
   663  001290  B69E               	btfsc	3998,3,c	;volatile
   664  001292  D002               	goto	l193
   665  001294  D7FD               	goto	l195
   666  001296  D000               	goto	l193
   667  001298                     l193:
   668  001298  0012               	return		;funcret
   669  00129A                     __end_of_WriteSPI1:
   670                           	opt stack 0
   671                           intcon	equ	0xFF2
   672                           status	equ	0xFD8
   673                           
   674 ;; *************** function _Delay10TCYx *****************
   675 ;; Defined at:
   676 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  unit            1    wreg     unsigned char 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  unit            1    0[COMRAM] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;		None               void
   683 ;; Registers used:
   684 ;;		wreg
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;Total ram usage:        1 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_lcdCommand
   700 ;;		_lcdChar
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text7
   705  0012FE                     __ptext7:
   706                           	opt stack 0
   707  0012FE                     _Delay10TCYx:
   708                           	opt stack 27
   709                           
   710                           ;incstack = 0
   711                           ;Delay10TCYx@unit stored from wreg
   712  0012FE  6E01               	movwf	Delay10TCYx@unit,c
   713  001300  0E03               	movlw	3
   714  001302                     u317:
   715  001302  2EE8               	decfsz	wreg,f,c
   716  001304  D7FE               	goto	u317
   717  001306  F000               	nop	
   718  001308  2E01               	decfsz	Delay10TCYx@unit,f,c
   719  00130A  D7FA               	goto	l826
   720  00130C  D000               	goto	l429
   721  00130E                     l429:
   722  00130E  0012               	return		;funcret
   723  001310                     __end_of_Delay10TCYx:
   724                           	opt stack 0
   725                           intcon	equ	0xFF2
   726                           wreg	equ	0xFE8
   727                           status	equ	0xFD8
   728                           
   729 ;; *************** function _OpenSPI1 *****************
   730 ;; Defined at:
   731 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  sync_mode       1    wreg     unsigned char 
   734 ;;  bus_mode        1    0[COMRAM] unsigned char 
   735 ;;  smp_phase       1    1[COMRAM] unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  sync_mode       1    2[COMRAM] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;		None               void
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_lcdInit
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text8
   761  001116                     __ptext8:
   762                           	opt stack 0
   763  001116                     _OpenSPI1:
   764                           	opt stack 28
   765                           
   766                           ;incstack = 0
   767                           ;OpenSPI1@sync_mode stored from wreg
   768  001116  6E03               	movwf	OpenSPI1@sync_mode,c
   769  001118  0E3F               	movlw	63
   770  00111A  16C7               	andwf	4039,f,c	;volatile
   771  00111C  0E00               	movlw	0
   772  00111E  6EC6               	movwf	4038,c	;volatile
   773  001120  5003               	movf	OpenSPI1@sync_mode,w,c
   774  001122  12C6               	iorwf	4038,f,c	;volatile
   775  001124  5002               	movf	OpenSPI1@smp_phase,w,c
   776  001126  12C7               	iorwf	4039,f,c	;volatile
   777  001128  D005               	goto	l1100
   778  00112A                     l171:
   779  00112A  8CC7               	bsf	4039,6,c	;volatile
   780  00112C  D013               	goto	l1104
   781  00112E                     l173:
   782  00112E  8CC7               	bsf	4039,6,c	;volatile
   783  001130                     l174:
   784  001130  88C6               	bsf	4038,4,c	;volatile
   785  001132  D010               	goto	l1104
   786  001134                     l1100:
   787  001134  5001               	movf	OpenSPI1@bus_mode,w,c
   788                           
   789                           ; Switch size 1, requested type "space"
   790                           ; Number of cases is 3, Range of values is 0 to 3
   791                           ; switch strategies available:
   792                           ; Name         Instructions Cycles
   793                           ; simple_byte           10     6 (average)
   794                           ;	Chosen strategy is simple_byte
   795  001136  0A00               	xorlw	0	; case 0
   796  001138  B4D8               	btfsc	status,2,c
   797  00113A  D7F7               	goto	l171
   798  00113C  0A02               	xorlw	2	; case 2
   799  00113E  B4D8               	btfsc	status,2,c
   800  001140  D7F6               	goto	l173
   801  001142  0A01               	xorlw	1	; case 3
   802  001144  B4D8               	btfsc	status,2,c
   803  001146  D7F4               	goto	l174
   804  001148  D005               	goto	l1104
   805  00114A                     l177:
   806  00114A  8E97               	bsf	3991,7,c	;volatile
   807  00114C                     l179:
   808  00114C  8694               	bsf	3988,3,c	;volatile
   809  00114E  D00A               	goto	l178
   810  001150                     l180:
   811  001150  9694               	bcf	3988,3,c	;volatile
   812  001152  D008               	goto	l178
   813  001154                     l1104:
   814  001154  5003               	movf	OpenSPI1@sync_mode,w,c
   815                           
   816                           ; Switch size 1, requested type "space"
   817                           ; Number of cases is 2, Range of values is 4 to 5
   818                           ; switch strategies available:
   819                           ; Name         Instructions Cycles
   820                           ; simple_byte            7     4 (average)
   821                           ;	Chosen strategy is simple_byte
   822  001156  0A04               	xorlw	4	; case 4
   823  001158  B4D8               	btfsc	status,2,c
   824  00115A  D7F7               	goto	l177
   825  00115C  0A01               	xorlw	1	; case 5
   826  00115E  B4D8               	btfsc	status,2,c
   827  001160  D7F5               	goto	l179
   828  001162  D7F6               	goto	l180
   829  001164                     l178:
   830  001164  8894               	bsf	3988,4,c	;volatile
   831  001166  9A94               	bcf	3988,5,c	;volatile
   832  001168  8AC6               	bsf	4038,5,c	;volatile
   833  00116A  0012               	return		;funcret
   834  00116C                     __end_of_OpenSPI1:
   835                           	opt stack 0
   836                           intcon	equ	0xFF2
   837                           wreg	equ	0xFE8
   838                           status	equ	0xFD8
   839                           
   840 ;; *************** function _MotorDriverInit *****************
   841 ;; Defined at:
   842 ;;		line 5 in file "MotorControl.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;		None               void
   849 ;; Registers used:
   850 ;;		wreg, status,2
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_initialize
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text9
   870  00129A                     __ptext9:
   871                           	opt stack 0
   872  00129A                     _MotorDriverInit:
   873                           	opt stack 29
   874                           
   875                           ;MotorControl.c: 7: TRISGbits.RG0 = 0;
   876                           
   877                           ;incstack = 0
   878  00129A  9098               	bcf	3992,0,c	;volatile
   879                           
   880                           ;MotorControl.c: 8: TRISEbits.RE4 = 0;
   881  00129C  9896               	bcf	3990,4,c	;volatile
   882                           
   883                           ;MotorControl.c: 9: TRISEbits.RE3 = 0;
   884  00129E  9696               	bcf	3990,3,c	;volatile
   885                           
   886                           ;MotorControl.c: 10: TRISGbits.RG3 = 0;
   887  0012A0  9698               	bcf	3992,3,c	;volatile
   888                           
   889                           ;MotorControl.c: 12: TRISBbits.RB0 = 1;
   890  0012A2  8093               	bsf	3987,0,c	;volatile
   891                           
   892                           ;MotorControl.c: 14: TRISAbits.RA4 = 0;
   893  0012A4  9892               	bcf	3986,4,c	;volatile
   894                           
   895                           ;MotorControl.c: 16: CCP3CON = 0x4C;
   896  0012A6  0E4C               	movlw	76
   897  0012A8  6EB7               	movwf	4023,c	;volatile
   898                           
   899                           ;MotorControl.c: 17: PR2 = 0xFF;
   900  0012AA  68CB               	setf	4043,c	;volatile
   901                           
   902                           ;MotorControl.c: 18: T3CON = 0x00;
   903  0012AC  0E00               	movlw	0
   904  0012AE  6EB1               	movwf	4017,c	;volatile
   905                           
   906                           ;MotorControl.c: 19: T2CON = 0x04;
   907  0012B0  0E04               	movlw	4
   908  0012B2  6ECA               	movwf	4042,c	;volatile
   909  0012B4  0012               	return		;funcret
   910  0012B6                     __end_of_MotorDriverInit:
   911                           	opt stack 0
   912                           intcon	equ	0xFF2
   913                           wreg	equ	0xFE8
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function _JoystickInit *****************
   917 ;; Defined at:
   918 ;;		line 6 in file "Joystick.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;		None               void
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_initialize
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text10
   946  0011FA                     __ptext10:
   947                           	opt stack 0
   948  0011FA                     _JoystickInit:
   949                           	opt stack 29
   950                           
   951                           ;Joystick.c: 8: TRISD = 0;
   952                           
   953                           ;incstack = 0
   954  0011FA  0E00               	movlw	0
   955  0011FC  6E95               	movwf	3989,c	;volatile
   956                           
   957                           ;Joystick.c: 9: TRISAbits.RA2 = 0;
   958  0011FE  9492               	bcf	3986,2,c	;volatile
   959                           
   960                           ;Joystick.c: 10: TRISBbits.RB1 = 1;
   961  001200  8293               	bsf	3987,1,c	;volatile
   962                           
   963                           ;Joystick.c: 11: if (PORTBbits.RB1 == 1)
   964  001202  A281               	btfss	3969,1,c	;volatile
   965  001204  D003               	goto	l29
   966                           
   967                           ;Joystick.c: 12: {
   968                           ;Joystick.c: 13: PORTAbits.RA2 = 1;
   969  001206  8480               	bsf	3968,2,c	;volatile
   970                           
   971                           ;Joystick.c: 14: JSEnableFlag = 1;
   972  001208  0E01               	movlw	1
   973  00120A  D004               	goto	L1
   974  00120C                     l29:
   975                           
   976                           ;Joystick.c: 16: else if (PORTBbits.RB1 == 0)
   977  00120C  B281               	btfsc	3969,1,c	;volatile
   978  00120E  D004               	goto	l886
   979                           
   980                           ;Joystick.c: 17: {
   981                           ;Joystick.c: 18: PORTAbits.RA2 = 0;
   982  001210  9480               	bcf	3968,2,c	;volatile
   983                           
   984                           ;Joystick.c: 19: JSEnableFlag = 0;
   985  001212  0E00               	movlw	0
   986  001214                     L1:
   987  001214  6E0D               	movwf	_JSEnableFlag,c
   988  001216  D000               	goto	l886
   989  001218                     l886:
   990                           
   991                           ;Joystick.c: 20: }
   992                           ;Joystick.c: 22: ADCON0bits.ADON = 1;
   993  001218  80C2               	bsf	4034,0,c	;volatile
   994                           
   995                           ;Joystick.c: 23: ADCON0 = ADCON0 & 0x01;
   996  00121A  50C2               	movf	4034,w,c	;volatile
   997  00121C  0B01               	andlw	1
   998  00121E  6EC2               	movwf	4034,c	;volatile
   999                           
  1000                           ;Joystick.c: 24: ADCON1 = 0x0D;
  1001  001220  0E0D               	movlw	13
  1002  001222  6EC1               	movwf	4033,c	;volatile
  1003                           
  1004                           ;Joystick.c: 25: ADCON2 = 0xB4;
  1005  001224  0EB4               	movlw	180
  1006  001226  6EC0               	movwf	4032,c	;volatile
  1007  001228  0012               	return		;funcret
  1008  00122A                     __end_of_JoystickInit:
  1009                           	opt stack 0
  1010                           intcon	equ	0xFF2
  1011                           wreg	equ	0xFE8
  1012                           status	equ	0xFD8
  1013                           
  1014 ;; *************** function _ImplementJSMotion *****************
  1015 ;; Defined at:
  1016 ;;		line 42 in file "MotorControl.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  JoystickValu    2    6[COMRAM] int 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  CCPinput        2   10[COMRAM] unsigned int 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;		None               void
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        6 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    1
  1037 ;; This function calls:
  1038 ;;		_abs
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text11
  1045  001010                     __ptext11:
  1046                           	opt stack 0
  1047  001010                     _ImplementJSMotion:
  1048                           	opt stack 29
  1049                           
  1050                           ;MotorControl.c: 44: unsigned int CCPinput;
  1051                           ;MotorControl.c: 45: PIDEnableFlag = 0;
  1052                           
  1053                           ;incstack = 0
  1054  001010  0E00               	movlw	0
  1055  001012  6E0E               	movwf	_PIDEnableFlag,c
  1056                           
  1057                           ;MotorControl.c: 46: if (JoystickValue < -10)
  1058  001014  AE08               	btfss	ImplementJSMotion@JoystickValue+1,7,c
  1059  001016  D008               	goto	l1172
  1060  001018  0EF6               	movlw	246
  1061  00101A  5C07               	subwf	ImplementJSMotion@JoystickValue,w,c
  1062  00101C  0EFF               	movlw	255
  1063  00101E  5808               	subwfb	ImplementJSMotion@JoystickValue+1,w,c
  1064  001020  B0D8               	btfsc	status,0,c
  1065  001022  D002               	goto	l1172
  1066                           
  1067                           ;MotorControl.c: 47: {
  1068                           ;MotorControl.c: 48: CCP3CONbits.P3M1 = 1;
  1069  001024  8EB7               	bsf	4023,7,c	;volatile
  1070                           
  1071                           ;MotorControl.c: 49: }
  1072  001026  D01F               	goto	l1182
  1073  001028                     l1172:
  1074                           
  1075                           ;MotorControl.c: 50: else if (JoystickValue > 10)
  1076  001028  BE08               	btfsc	ImplementJSMotion@JoystickValue+1,7,c
  1077  00102A  D008               	goto	l1176
  1078  00102C  5008               	movf	ImplementJSMotion@JoystickValue+1,w,c
  1079  00102E  E104               	bnz	u240
  1080  001030  0E0B               	movlw	11
  1081  001032  5C07               	subwf	ImplementJSMotion@JoystickValue,w,c
  1082  001034  A0D8               	btfss	status,0,c
  1083  001036  D002               	goto	l1176
  1084  001038                     u240:
  1085                           
  1086                           ;MotorControl.c: 51: {
  1087                           ;MotorControl.c: 52: CCP3CONbits.P3M1 = 0;
  1088  001038  9EB7               	bcf	4023,7,c	;volatile
  1089                           
  1090                           ;MotorControl.c: 53: }
  1091  00103A  D015               	goto	l1182
  1092  00103C                     l1176:
  1093                           
  1094                           ;MotorControl.c: 54: else if (JoystickValue <= 10 && JoystickValue >= -10)
  1095  00103C  BE08               	btfsc	ImplementJSMotion@JoystickValue+1,7,c
  1096  00103E  D006               	goto	l1178
  1097  001040  5008               	movf	ImplementJSMotion@JoystickValue+1,w,c
  1098  001042  E111               	bnz	l1182
  1099  001044  0E0B               	movlw	11
  1100  001046  5C07               	subwf	ImplementJSMotion@JoystickValue,w,c
  1101  001048  B0D8               	btfsc	status,0,c
  1102  00104A  D00D               	goto	l1182
  1103  00104C                     l1178:
  1104  00104C  AE08               	btfss	ImplementJSMotion@JoystickValue+1,7,c
  1105  00104E  D006               	goto	l1180
  1106  001050  0EF6               	movlw	246
  1107  001052  5C07               	subwf	ImplementJSMotion@JoystickValue,w,c
  1108  001054  0EFF               	movlw	255
  1109  001056  5808               	subwfb	ImplementJSMotion@JoystickValue+1,w,c
  1110  001058  A0D8               	btfss	status,0,c
  1111  00105A  D005               	goto	l1182
  1112  00105C                     l1180:
  1113                           
  1114                           ;MotorControl.c: 55: {
  1115                           ;MotorControl.c: 56: JoystickValue = 0;
  1116  00105C  0E00               	movlw	0
  1117  00105E  6E08               	movwf	ImplementJSMotion@JoystickValue+1,c
  1118  001060  0E00               	movlw	0
  1119  001062  6E07               	movwf	ImplementJSMotion@JoystickValue,c
  1120  001064  D000               	goto	l1182
  1121  001066                     l1182:
  1122                           
  1123                           ;MotorControl.c: 57: }
  1124                           ;MotorControl.c: 59: JoystickValue = abs(JoystickValue);
  1125  001066  C007  F001         	movff	ImplementJSMotion@JoystickValue,abs@a
  1126  00106A  C008  F002         	movff	ImplementJSMotion@JoystickValue+1,abs@a+1
  1127  00106E  EC15  F009         	call	_abs	;wreg free
  1128  001072  C001  F007         	movff	?_abs,ImplementJSMotion@JoystickValue
  1129  001076  C002  F008         	movff	?_abs+1,ImplementJSMotion@JoystickValue+1
  1130                           
  1131                           ;MotorControl.c: 60: CCPinput = JoystickValue * 2;
  1132  00107A  90D8               	bcf	status,0,c
  1133  00107C  3407               	rlcf	ImplementJSMotion@JoystickValue,w,c
  1134  00107E  6E0B               	movwf	ImplementJSMotion@CCPinput,c
  1135  001080  3408               	rlcf	ImplementJSMotion@JoystickValue+1,w,c
  1136  001082  6E0C               	movwf	ImplementJSMotion@CCPinput+1,c
  1137                           
  1138                           ;MotorControl.c: 61: CCPR3L = (CCPinput >> 2) & 0xFF;
  1139  001084  C00B  F009         	movff	ImplementJSMotion@CCPinput,??_ImplementJSMotion
  1140  001088  C00C  F00A         	movff	ImplementJSMotion@CCPinput+1,??_ImplementJSMotion+1
  1141  00108C  90D8               	bcf	status,0,c
  1142  00108E  320A               	rrcf	??_ImplementJSMotion+1,f,c
  1143  001090  3209               	rrcf	??_ImplementJSMotion,f,c
  1144  001092  90D8               	bcf	status,0,c
  1145  001094  320A               	rrcf	??_ImplementJSMotion+1,f,c
  1146  001096  3209               	rrcf	??_ImplementJSMotion,f,c
  1147  001098  5009               	movf	??_ImplementJSMotion,w,c
  1148  00109A  6EB8               	movwf	4024,c	;volatile
  1149                           
  1150                           ;MotorControl.c: 63: CCP3CONbits.DC3B = (CCPinput & 0x03);
  1151  00109C  C00B  F009         	movff	ImplementJSMotion@CCPinput,??_ImplementJSMotion
  1152  0010A0  0E03               	movlw	3
  1153  0010A2  1609               	andwf	??_ImplementJSMotion,f,c
  1154  0010A4  3A09               	swapf	??_ImplementJSMotion,f,c
  1155  0010A6  50B7               	movf	4023,w,c	;volatile
  1156  0010A8  1809               	xorwf	??_ImplementJSMotion,w,c
  1157  0010AA  0BCF               	andlw	-49
  1158  0010AC  1809               	xorwf	??_ImplementJSMotion,w,c
  1159  0010AE  6EB7               	movwf	4023,c	;volatile
  1160  0010B0  0012               	return		;funcret
  1161  0010B2                     __end_of_ImplementJSMotion:
  1162                           	opt stack 0
  1163                           intcon	equ	0xFF2
  1164                           wreg	equ	0xFE8
  1165                           status	equ	0xFD8
  1166                           
  1167 ;; *************** function _abs *****************
  1168 ;; Defined at:
  1169 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/abs.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  a               2    0[COMRAM] int 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  2    0[COMRAM] int 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;Total ram usage:        4 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_ImplementJSMotion
  1193 ;;		_ImplementPIDMotion
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text12
  1198  00122A                     __ptext12:
  1199                           	opt stack 0
  1200  00122A                     _abs:
  1201                           	opt stack 29
  1202                           
  1203                           ;incstack = 0
  1204  00122A  AE02               	btfss	abs@a+1,7,c
  1205  00122C  D00D               	goto	l247
  1206  00122E  C001  F003         	movff	abs@a,??_abs
  1207  001232  C002  F004         	movff	abs@a+1,??_abs+1
  1208  001236  1E03               	comf	??_abs,f,c
  1209  001238  1E04               	comf	??_abs+1,f,c
  1210  00123A  4A03               	infsnz	??_abs,f,c
  1211  00123C  2A04               	incf	??_abs+1,f,c
  1212  00123E  C003  F001         	movff	??_abs,?_abs
  1213  001242  C004  F002         	movff	??_abs+1,?_abs+1
  1214  001246  D004               	goto	l248
  1215  001248                     l247:
  1216  001248  C001  F001         	movff	abs@a,?_abs
  1217  00124C  C002  F002         	movff	abs@a+1,?_abs+1
  1218  001250                     l248:
  1219  001250  0012               	return		;funcret
  1220  001252                     __end_of_abs:
  1221                           	opt stack 0
  1222                           intcon	equ	0xFF2
  1223                           wreg	equ	0xFE8
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _DetectMovement *****************
  1227 ;; Defined at:
  1228 ;;		line 43 in file "Joystick.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  ADCresult       2    4[COMRAM] unsigned int 
  1233 ;;  JoystickResu    2    2[COMRAM] int 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  2    0[COMRAM] int 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;Total ram usage:        6 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text13
  1257  0010B2                     __ptext13:
  1258                           	opt stack 0
  1259  0010B2                     _DetectMovement:
  1260                           	opt stack 30
  1261                           
  1262                           ;Joystick.c: 45: unsigned int ADCresult;
  1263                           ;Joystick.c: 46: int JoystickResult;
  1264                           ;Joystick.c: 48: ADCON0bits.GODONE = 1;
  1265                           
  1266                           ;incstack = 0
  1267  0010B2  82C2               	bsf	4034,1,c	;volatile
  1268                           
  1269                           ;Joystick.c: 49: while (ADCON0bits.GO_NOT_DONE == 1);
  1270  0010B4  D000               	goto	l41
  1271  0010B6                     l41:
  1272  0010B6  B2C2               	btfsc	4034,1,c	;volatile
  1273  0010B8  D7FE               	goto	l41
  1274                           
  1275                           ;Joystick.c: 51: ADCresult = ADRESH;
  1276  0010BA  CFC4 F005          	movff	4036,DetectMovement@ADCresult	;volatile
  1277  0010BE  6A06               	clrf	DetectMovement@ADCresult+1,c
  1278                           
  1279                           ;Joystick.c: 52: ADCresult = ADCresult << 8;
  1280  0010C0  5005               	movf	DetectMovement@ADCresult,w,c
  1281  0010C2  6E06               	movwf	DetectMovement@ADCresult+1,c
  1282  0010C4  6A05               	clrf	DetectMovement@ADCresult,c
  1283                           
  1284                           ;Joystick.c: 53: ADCresult = ADCresult | ADRESL;
  1285  0010C6  5005               	movf	DetectMovement@ADCresult,w,c
  1286  0010C8  10C3               	iorwf	4035,w,c	;volatile
  1287  0010CA  6E05               	movwf	DetectMovement@ADCresult,c
  1288  0010CC  5006               	movf	DetectMovement@ADCresult+1,w,c
  1289  0010CE  6E06               	movwf	DetectMovement@ADCresult+1,c
  1290                           
  1291                           ;Joystick.c: 54: JoystickResult = (ADCresult - 512);
  1292  0010D0  0E00               	movlw	0
  1293  0010D2  2405               	addwf	DetectMovement@ADCresult,w,c
  1294  0010D4  6E03               	movwf	DetectMovement@JoystickResult,c
  1295  0010D6  0EFE               	movlw	254
  1296  0010D8  2006               	addwfc	DetectMovement@ADCresult+1,w,c
  1297  0010DA  6E04               	movwf	DetectMovement@JoystickResult+1,c
  1298                           
  1299                           ;Joystick.c: 56: if ((JoystickResult > 100) || (JoystickResult < -100))
  1300  0010DC  BE04               	btfsc	DetectMovement@JoystickResult+1,7,c
  1301  0010DE  D006               	goto	l1152
  1302  0010E0  5004               	movf	DetectMovement@JoystickResult+1,w,c
  1303  0010E2  E10C               	bnz	l1154
  1304  0010E4  0E65               	movlw	101
  1305  0010E6  5C03               	subwf	DetectMovement@JoystickResult,w,c
  1306  0010E8  B0D8               	btfsc	status,0,c
  1307  0010EA  D008               	goto	l1154
  1308  0010EC                     l1152:
  1309  0010EC  AE04               	btfss	DetectMovement@JoystickResult+1,7,c
  1310  0010EE  D00D               	goto	l1162
  1311  0010F0  0E9C               	movlw	156
  1312  0010F2  5C03               	subwf	DetectMovement@JoystickResult,w,c
  1313  0010F4  0EFF               	movlw	255
  1314  0010F6  5804               	subwfb	DetectMovement@JoystickResult+1,w,c
  1315  0010F8  B0D8               	btfsc	status,0,c
  1316  0010FA  D007               	goto	l1162
  1317  0010FC                     l1154:
  1318                           
  1319                           ;Joystick.c: 57: {
  1320                           ;Joystick.c: 58: PIDEnableFlag = 0;
  1321  0010FC  0E00               	movlw	0
  1322  0010FE  6E0E               	movwf	_PIDEnableFlag,c
  1323                           
  1324                           ;Joystick.c: 59: return JoystickResult;
  1325  001100  C003  F001         	movff	DetectMovement@JoystickResult,?_DetectMovement
  1326  001104  C004  F002         	movff	DetectMovement@JoystickResult+1,?_DetectMovement+1
  1327                           
  1328                           ;Joystick.c: 60: }
  1329  001108  D005               	goto	l47
  1330  00110A                     l1162:
  1331                           
  1332                           ;Joystick.c: 61: else
  1333                           ;Joystick.c: 62: return 0;
  1334  00110A  0E00               	movlw	0
  1335  00110C  6E02               	movwf	?_DetectMovement+1,c
  1336  00110E  0E00               	movlw	0
  1337  001110  6E01               	movwf	?_DetectMovement,c
  1338  001112  D000               	goto	l47
  1339  001114                     l47:
  1340  001114  0012               	return		;funcret
  1341  001116                     __end_of_DetectMovement:
  1342                           	opt stack 0
  1343                           intcon	equ	0xFF2
  1344                           wreg	equ	0xFE8
  1345                           status	equ	0xFD8
  1346                           intcon	equ	0xFF2
  1347                           wreg	equ	0xFE8
  1348                           status	equ	0xFD8
  1349                           
  1350                           	psect	rparam
  1351  0000                     intcon	equ	0xFF2
  1352                           wreg	equ	0xFE8
  1353                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ImplementJSMotion
    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _lcdCommand->_setGPIO
    _setGPIO->_WriteSPI1
    _ImplementJSMotion->_DetectMovement

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2283
                     _DetectMovement
                  _ImplementJSMotion
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    1710
                       _JoystickInit
                    _MotorDriverInit
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1710
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     187
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     672
                                              4 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     635
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     216
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _MotorDriverInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ImplementJSMotion                                    6     4      2     437
                                              6 COMRAM     6     4      2
                     _DetectMovement (ARG)
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     194
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DetectMovement                                       6     4      2     136
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DetectMovement
   _ImplementJSMotion
     _DetectMovement (ARG)
     _abs (ARG)
   _initialize
     _JoystickInit
     _MotorDriverInit
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C       E       1       14.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      32        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Oct 18 03:40:34 2015

      __size_of_MotorDriverInit 001C                              l41 10B6                              l29 120C  
                            l47 1114       ImplementJSMotion@CCPinput 000B                             l171 112A  
                           l180 1150                             l173 112E                             l174 1130  
                           l247 1248                             l248 1250                             l177 114A  
                           l193 1298                             l178 1164                             l179 114C  
                           l195 1290                             l429 130E                             l826 1300  
                           l886 1218                             u240 1038                             u317 1302  
                           _PR2 000FCB                             _abs 122A               lcdCommand@command 0005  
                           wreg 000FE8                    __CFG_WDT$OFF 000000                            l1100 1134  
                          l1104 1154                            ?_abs 0001                            l1152 10EC  
                          l1162 110A                            l1154 10FC                            l1180 105C  
                          l1172 1028                            l1182 1066                            l1246 1258  
                          l1176 103C                            l1178 104C                            STR_1 1008  
                          STR_2 1001  ImplementJSMotion@JoystickValue 0007                            abs@a 0001  
                          _main 1252                            start 0000                    ___param_bank 000010  
                   _Delay10TCYx 12FE                           ??_abs 0003                           ?_main 0001  
                         _T2CON 000FCA                           _T3CON 000FB1                           _TRISD 000F95  
               __end_of_lcdInit 11B6                  __CFG_FCMEN$OFF 000000                 __end_of_setGPIO 12EA  
                         status 000FD8      __size_of_ImplementJSMotion 00A2                 __initialization 1310  
                  __end_of_main 1278                  _DetectMovement 10B2                  __CFG_OSC$HSPLL 000000  
              __end_of_OpenSPI1 116C                          ??_main 000D                   __activetblptr 000003  
             ??_MotorDriverInit 0001         DetectMovement@ADCresult 0005                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR3L 000FB8                          _INTCON 000FF2  
        __end_of_DetectMovement 1116                OpenSPI1@bus_mode 0001                __end_of_setIODIR 12D0  
                   setIODIR@dir 0003                       ??_lcdInit 0006                       ??_setGPIO 0004  
                  __mediumconst 0000                      __accesstop 0060         __end_of__initialization 1314  
            __size_of_WriteSPI1 0022                   ___rparam_used 000001                 ?_DetectMovement 0001  
                __pcstackCOMRAM 0001                WriteSPI1@TempVar 0001                   ?_JoystickInit 0001  
                     ?_OpenSPI1 0001                    ?_Delay10TCYx 0001                      _lcdCommand 11B6  
                       _CCP3CON 000FB7               __end_of_WriteSPI1 129A                   _PIDEnableFlag 000E  
                       _SSP1BUF 000FC9                  ??_JoystickInit 0001                       ?_setIODIR 0003  
                    ??_OpenSPI1 0003                         __Hparam 0000                         __Lparam 0000  
               _MotorDriverInit 129A                    __psmallconst 1000                         __pcinit 1310  
               Delay10TCYx@unit 0001                         __ramtop 1000                      _initialize 12EA  
                       _lcdInit 116C                         __ptext0 1252                         __ptext1 12EA  
                       __ptext2 116C                         __ptext3 12B6                         __ptext4 11B6  
                       __ptext5 12D0                         __ptext6 1278                         __ptext7 12FE  
                       __ptext8 1116                         __ptext9 129A                    __size_of_abs 0028  
                       _setGPIO 12D0                 setIODIR@address 0004                    setGPIO@value 0003  
          end_of_initialization 1314                      ??_setIODIR 0004               OpenSPI1@smp_phase 0002  
                   ?_lcdCommand 0001               OpenSPI1@sync_mode 0003                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _TRISAbits 000F92                       _TRISBbits 000F93  
                     _TRISCbits 000F94                       _TRISEbits 000F96                       _TRISFbits 000F97  
                     _TRISGbits 000F98         __end_of_MotorDriverInit 12B6                ??_DetectMovement 0003  
                   _CCP3CONbits 000FB7            __size_of_Delay10TCYx 0012                     ?_initialize 0001  
          __end_of_JoystickInit 122A             start_initialization 1310                     __end_of_abs 1252  
           __size_of_lcdCommand 0044               __size_of_OpenSPI1 0056                     __pbssCOMRAM 000D  
                     _WriteSPI1 1278                ?_MotorDriverInit 0001             __size_of_initialize 0014  
             WriteSPI1@data_out 0002               __size_of_setIODIR 001A                        ?_lcdInit 0001  
                   __smallconst 1000                        ?_setGPIO 0003                      ?_WriteSPI1 0001  
                      _PIR1bits 000F9E                  setGPIO@address 0004                    ??_lcdCommand 0005  
         __size_of_JoystickInit 0030                        _SSP1CON1 000FC6                        _SSP1STAT 000FC7  
             __CFG_ECCPMX$PORTE 000000                      _ADCON0bits 000FC2              __end_of_lcdCommand 11FA  
                  _JoystickInit 11FA                        _OpenSPI1 1116                        __Hrparam 0000  
                      __Lrparam 0000                    _JSEnableFlag 000D                    ??_initialize 0006  
              __size_of_lcdInit 004A                __size_of_setGPIO 001A                     ??_WriteSPI1 0001  
                      __ptext10 11FA                        __ptext11 1010                        __ptext12 122A  
                      __ptext13 10B2                    _SSP1CON1bits 000FC6                        _setIODIR 12B6  
                 __size_of_main 0026              __end_of_initialize 12FE                   ??_Delay10TCYx 0001  
                  _SSP1STATbits 000FC7    DetectMovement@JoystickResult 0003               _ImplementJSMotion 1010  
            ?_ImplementJSMotion 0007         __size_of_DetectMovement 0064             __end_of_Delay10TCYx 1310  
           ??_ImplementJSMotion 0009       __end_of_ImplementJSMotion 10B2  
