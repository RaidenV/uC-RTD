

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Aug 23 03:31:17 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     _PORTAbits	set	3968
    32  0000                     _PORTBbits	set	3969
    33  0000                     _PORTD	set	3971
    34  0000                     _PORTEbits	set	3972
    35  0000                     _PORTH	set	3975
    36  0000                     _TRISAbits	set	3986
    37  0000                     _TRISBbits	set	3987
    38  0000                     _TRISCbits	set	3988
    39  0000                     _TRISD	set	3989
    40  0000                     _TRISEbits	set	3990
    41  0000                     _TRISFbits	set	3991
    42  0000                     _TRISGbits	set	3992
    43  0000                     _TRISH	set	3993
    44  0000                     _TRISJbits	set	3994
    45  0000                     _ADCON0	set	4034
    46  0000                     _ADCON0bits	set	4034
    47  0000                     _ADCON1	set	4033
    48  0000                     _ADCON2	set	4032
    49  0000                     _ADRESH	set	4036
    50  0000                     _ADRESL	set	4035
    51  0000                     _CCP3CON	set	4023
    52  0000                     _CCP3CONbits	set	4023
    53  0000                     _CCPR3L	set	4024
    54  0000                     _PIR1bits	set	3998
    55  0000                     _PR2	set	4043
    56  0000                     _RCONbits	set	4048
    57  0000                     _SSP1BUF	set	4041
    58  0000                     _SSP1CON1	set	4038
    59  0000                     _SSP1CON1bits	set	4038
    60  0000                     _SSP1STAT	set	4039
    61  0000                     _SSP1STATbits	set	4039
    62  0000                     _T2CON	set	4042
    63  0000                     _T3CON	set	4017
    64  0000                     _INTCON	set	4082
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _INTCON3bits	set	4080
    67                           
    68                           	psect	smallconst
    69  001000                     __psmallconst:
    70                           	opt stack 0
    71  001000  00                 	db	0
    72  001001  38                 	db	56	;'8'
    73  001002  36                 	db	54	;'6'
    74  001003  38                 	db	56	;'8'
    75  001004  30                 	db	48	;'0'
    76  001005  3A                 	db	58	;':'
    77  001006  20                 	db	32
    78  001007  00                 	db	0
    79  001008  38                 	db	56	;'8'
    80  001009  37                 	db	55	;'7'
    81  00100A  32                 	db	50	;'2'
    82  00100B  32                 	db	50	;'2'
    83  00100C  3A                 	db	58	;':'
    84  00100D  20                 	db	32
    85  00100E  00                 	db	0
    86                           
    87                           ; #config settings
    88  00100F  00                 	db	0	; dummy byte at the end
    89  0000                     
    90                           	psect	cinit
    91  00165A                     __pcinit:
    92                           	opt stack 0
    93  00165A                     start_initialization:
    94                           	opt stack 0
    95  00165A                     __initialization:
    96                           	opt stack 0
    97                           
    98                           ; Clear objects allocated to COMRAM (2 bytes)
    99  00165A  6A49               	clrf	(__pbssCOMRAM+1)& (0+255),c
   100  00165C  6A48               	clrf	__pbssCOMRAM& (0+255),c
   101  00165E                     end_of_initialization:
   102                           	opt stack 0
   103  00165E                     __end_of__initialization:
   104                           	opt stack 0
   105  00165E  0100               	movlb	0
   106  001660  EFDA  F00A         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	bssCOMRAM
   109  000048                     __pbssCOMRAM:
   110                           	opt stack 0
   111  000048                     _JSEnableFlag:
   112                           	opt stack 0
   113  000048                     	ds	1
   114  000049                     _PIDEnableFlag:
   115                           	opt stack 0
   116  000049                     	ds	1
   117                           
   118                           	psect	cstackCOMRAM
   119  000001                     __pcstackCOMRAM:
   120                           	opt stack 0
   121  000001                     ??_LowISR:
   122  000001                     
   123                           ; 1 bytes @ 0x0
   124  000001                     	ds	17
   125  000012                     ?_abs:
   126                           	opt stack 0
   127  000012                     ?___ftpack:
   128                           	opt stack 0
   129  000012                     OpenSPI1@bus_mode:
   130                           	opt stack 0
   131  000012                     WriteSPI1@TempVar:
   132                           	opt stack 0
   133  000012                     Delay10TCYx@unit:
   134                           	opt stack 0
   135  000012                     abs@a:
   136                           	opt stack 0
   137  000012                     ___ftpack@arg:
   138                           	opt stack 0
   139                           
   140                           ; 3 bytes @ 0x11
   141  000012                     	ds	1
   142  000013                     OpenSPI1@smp_phase:
   143                           	opt stack 0
   144  000013                     WriteSPI1@data_out:
   145                           	opt stack 0
   146                           
   147                           ; 1 bytes @ 0x12
   148  000013                     	ds	1
   149  000014                     ??_abs:
   150  000014                     setGPIO@value:
   151                           	opt stack 0
   152  000014                     setIODIR@dir:
   153                           	opt stack 0
   154  000014                     OpenSPI1@sync_mode:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x13
   158  000014                     	ds	1
   159  000015                     setGPIO@address:
   160                           	opt stack 0
   161  000015                     setIODIR@address:
   162                           	opt stack 0
   163  000015                     ___ftpack@exp:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x14
   167  000015                     	ds	1
   168  000016                     lcdCommand@command:
   169                           	opt stack 0
   170  000016                     ___ftpack@sign:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x15
   174  000016                     	ds	1
   175  000017                     ??___ftpack:
   176  000017                     
   177                           ; 0 bytes @ 0x16
   178  000017                     	ds	3
   179  00001A                     ?___awtoft:
   180                           	opt stack 0
   181  00001A                     ___awtoft@c:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x19
   185  00001A                     	ds	3
   186  00001D                     ___awtoft@sign:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x1C
   190  00001D                     	ds	1
   191  00001E                     ?___ftmul:
   192                           	opt stack 0
   193  00001E                     ___ftmul@f1:
   194                           	opt stack 0
   195                           
   196                           ; 3 bytes @ 0x1D
   197  00001E                     	ds	3
   198  000021                     ___ftmul@f2:
   199                           	opt stack 0
   200                           
   201                           ; 3 bytes @ 0x20
   202  000021                     	ds	3
   203  000024                     ??___ftmul:
   204                           
   205                           ; 0 bytes @ 0x23
   206  000024                     	ds	3
   207  000027                     ___ftmul@exp:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x26
   211  000027                     	ds	1
   212  000028                     ___ftmul@f3_as_product:
   213                           	opt stack 0
   214                           
   215                           ; 3 bytes @ 0x27
   216  000028                     	ds	3
   217  00002B                     ___ftmul@cntr:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x2A
   221  00002B                     	ds	1
   222  00002C                     ___ftmul@sign:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x2B
   226  00002C                     	ds	1
   227  00002D                     ?___fttol:
   228                           	opt stack 0
   229  00002D                     ___fttol@f1:
   230                           	opt stack 0
   231                           
   232                           ; 3 bytes @ 0x2C
   233  00002D                     	ds	4
   234  000031                     ??___fttol:
   235                           
   236                           ; 0 bytes @ 0x30
   237  000031                     	ds	5
   238  000036                     ___fttol@sign1:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x35
   242  000036                     	ds	1
   243  000037                     ___fttol@lval:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0x36
   247  000037                     	ds	4
   248  00003B                     ___fttol@exp1:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x3A
   252  00003B                     	ds	1
   253  00003C                     ?_DetectMovement:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x3B
   257  00003C                     	ds	2
   258  00003E                     DetectMovement@JoystickResult:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x3D
   262  00003E                     	ds	2
   263  000040                     DetectMovement@ADCresult:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x3F
   267  000040                     	ds	2
   268  000042                     ImplementJSMotion@JoystickValue:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0x41
   272  000042                     	ds	2
   273  000044                     ??_ImplementJSMotion:
   274                           
   275                           ; 0 bytes @ 0x43
   276  000044                     	ds	2
   277  000046                     ImplementJSMotion@CCPinput:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x45
   281  000046                     	ds	2
   282  000048                     
   283                           ; 0 bytes @ 0x47
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 15 in file "JoystickDriver.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;		None               void
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called:    7
   309 ;; This function calls:
   310 ;;		_DetectMovement
   311 ;;		_ImplementJSMotion
   312 ;;		_initialize
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319  0015B4                     __ptext0:
   320                           	opt stack 0
   321  0015B4                     _main:
   322                           	opt stack 24
   323                           
   324                           ;JoystickDriver.c: 17: initialize();
   325                           
   326                           ;incstack = 0
   327  0015B4  EC1A  F00B         	call	_initialize	;wreg free
   328  0015B8                     l56:
   329                           
   330                           ;JoystickDriver.c: 19: {
   331                           ;JoystickDriver.c: 20: ImplementJSMotion(DetectMovement());
   332  0015B8  EC5A  F009         	call	_DetectMovement	;wreg free
   333  0015BC  C03C  F042         	movff	?_DetectMovement,ImplementJSMotion@JoystickValue
   334  0015C0  C03D  F043         	movff	?_DetectMovement+1,ImplementJSMotion@JoystickValue+1
   335  0015C4  ECB2  F009         	call	_ImplementJSMotion	;wreg free
   336  0015C8  D7F7               	goto	l56
   337  0015CA  EF56  F000         	goto	start
   338  0015CE                     __end_of_main:
   339                           	opt stack 0
   340                           
   341 ;; *************** function _initialize *****************
   342 ;; Defined at:
   343 ;;		line 34 in file "JoystickDriver.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;		None               void
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; Hardware stack levels required when called:    6
   364 ;; This function calls:
   365 ;;		_JoystickInit
   366 ;;		_MotorDriverInit
   367 ;;		_lcdInit
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text1
   374  001634                     __ptext1:
   375                           	opt stack 0
   376  001634                     _initialize:
   377                           	opt stack 24
   378                           
   379                           ;JoystickDriver.c: 36: MotorDriverInit();
   380                           
   381                           ;incstack = 0
   382  001634  EC01  F00B         	call	_MotorDriverInit	;wreg free
   383                           
   384                           ;JoystickDriver.c: 37: JoystickInit();
   385  001638  EC77  F00A         	call	_JoystickInit	;wreg free
   386                           
   387                           ;JoystickDriver.c: 38: lcdInit();
   388  00163C  EC30  F00A         	call	_lcdInit	;wreg free
   389                           
   390                           ;JoystickDriver.c: 39: INTCON = INTCON | 0xC0;
   391  001640  50F2               	movf	intcon,w,c	;volatile
   392  001642  09C0               	iorlw	192
   393  001644  6EF2               	movwf	intcon,c	;volatile
   394  001646  0012               	return		;funcret
   395  001648                     __end_of_initialize:
   396                           	opt stack 0
   397                           intcon	equ	0xFF2
   398                           
   399 ;; *************** function _lcdInit *****************
   400 ;; Defined at:
   401 ;;		line 110 in file "LCD.h"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;		None               void
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; Hardware stack levels required when called:    5
   422 ;; This function calls:
   423 ;;		_OpenSPI1
   424 ;;		_lcdCommand
   425 ;;		_setGPIO
   426 ;;		_setIODIR
   427 ;; This function is called by:
   428 ;;		_initialize
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text2
   433  001460                     __ptext2:
   434                           	opt stack 0
   435  001460                     _lcdInit:
   436                           	opt stack 24
   437                           
   438                           ;LCD.h: 112: TRISAbits.RA2=0;
   439                           
   440                           ;incstack = 0
   441  001460  9492               	bcf	3986,2,c	;volatile
   442                           
   443                           ;LCD.h: 113: PORTAbits.RA2=1;
   444  001462  8480               	bsf	3968,2,c	;volatile
   445                           
   446                           ;LCD.h: 115: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
   447  001464  0E02               	movlw	2
   448  001466  6E12               	movwf	OpenSPI1@bus_mode,c
   449  001468  0E80               	movlw	128
   450  00146A  6E13               	movwf	OpenSPI1@smp_phase,c
   451  00146C  0E02               	movlw	2
   452  00146E  EC05  F00A         	call	_OpenSPI1
   453                           
   454                           ;LCD.h: 117: setIODIR(0x01,0x00);
   455  001472  0E00               	movlw	0
   456  001474  6E14               	movwf	setIODIR@dir,c
   457  001476  0E01               	movlw	1
   458  001478  ECE7  F00A         	call	_setIODIR
   459                           
   460                           ;LCD.h: 119: setIODIR(0x00,0x00);
   461  00147C  0E00               	movlw	0
   462  00147E  6E14               	movwf	setIODIR@dir,c
   463  001480  0E00               	movlw	0
   464  001482  ECE7  F00A         	call	_setIODIR
   465                           
   466                           ;LCD.h: 121: setGPIO(0x00,0x00);
   467  001486  0E00               	movlw	0
   468  001488  6E14               	movwf	setGPIO@value,c
   469  00148A  0E00               	movlw	0
   470  00148C  ECF4  F00A         	call	_setGPIO
   471                           
   472                           ;LCD.h: 123: lcdCommand(0b00111111);
   473  001490  0E3F               	movlw	63
   474  001492  EC55  F00A         	call	_lcdCommand
   475                           
   476                           ;LCD.h: 125: lcdCommand(0b00001111);
   477  001496  0E0F               	movlw	15
   478  001498  EC55  F00A         	call	_lcdCommand
   479                           
   480                           ;LCD.h: 127: lcdCommand(0b00000001);
   481  00149C  0E01               	movlw	1
   482  00149E  EC55  F00A         	call	_lcdCommand
   483                           
   484                           ;LCD.h: 129: lcdCommand(0b00000110);
   485  0014A2  0E06               	movlw	6
   486  0014A4  EC55  F00A         	call	_lcdCommand
   487  0014A8  0012               	return		;funcret
   488  0014AA                     __end_of_lcdInit:
   489                           	opt stack 0
   490                           intcon	equ	0xFF2
   491                           
   492 ;; *************** function _setIODIR *****************
   493 ;; Defined at:
   494 ;;		line 43 in file "LCD.h"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  address         1    wreg     unsigned char 
   497 ;;  dir             1   19[COMRAM] unsigned char 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  address         1   20[COMRAM] unsigned char 
   500 ;; Return value:  Size  Location     Type
   501 ;;		None               void
   502 ;; Registers used:
   503 ;;		wreg, status,2, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;Total ram usage:        2 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    3
   516 ;; This function calls:
   517 ;;		_WriteSPI1
   518 ;; This function is called by:
   519 ;;		_lcdInit
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text3
   524  0015CE                     __ptext3:
   525                           	opt stack 0
   526  0015CE                     _setIODIR:
   527                           	opt stack 25
   528                           
   529                           ;incstack = 0
   530                           ;setIODIR@address stored from wreg
   531  0015CE  6E15               	movwf	setIODIR@address,c
   532                           
   533                           ;LCD.h: 45: PORTAbits.RA2=0;
   534  0015D0  9480               	bcf	3968,2,c	;volatile
   535                           
   536                           ;LCD.h: 46: WriteSPI1(0x40);
   537  0015D2  0E40               	movlw	64
   538  0015D4  ECC9  F00A         	call	_WriteSPI1
   539                           
   540                           ;LCD.h: 47: WriteSPI1(address);
   541  0015D8  5015               	movf	setIODIR@address,w,c
   542  0015DA  ECC9  F00A         	call	_WriteSPI1
   543                           
   544                           ;LCD.h: 48: WriteSPI1(dir);
   545  0015DE  5014               	movf	setIODIR@dir,w,c
   546  0015E0  ECC9  F00A         	call	_WriteSPI1
   547                           
   548                           ;LCD.h: 49: PORTAbits.RA2=1;
   549  0015E4  8480               	bsf	3968,2,c	;volatile
   550  0015E6  0012               	return		;funcret
   551  0015E8                     __end_of_setIODIR:
   552                           	opt stack 0
   553                           intcon	equ	0xFF2
   554                           
   555 ;; *************** function _lcdCommand *****************
   556 ;; Defined at:
   557 ;;		line 52 in file "LCD.h"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  command         1    wreg     unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  command         1   21[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;		None               void
   564 ;; Registers used:
   565 ;;		wreg, status,2, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;Total ram usage:        1 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    4
   578 ;; This function calls:
   579 ;;		_Delay10TCYx
   580 ;;		_setGPIO
   581 ;; This function is called by:
   582 ;;		_lcdInit
   583 ;;		_lcdGoTo
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text4
   588  0014AA                     __ptext4:
   589                           	opt stack 0
   590  0014AA                     _lcdCommand:
   591                           	opt stack 24
   592                           
   593                           ;incstack = 0
   594                           ;lcdCommand@command stored from wreg
   595  0014AA  6E16               	movwf	lcdCommand@command,c
   596                           
   597                           ;LCD.h: 54: setGPIO(0x12,0x00);
   598  0014AC  0E00               	movlw	0
   599  0014AE  6E14               	movwf	setGPIO@value,c
   600  0014B0  0E12               	movlw	18
   601  0014B2  ECF4  F00A         	call	_setGPIO
   602                           
   603                           ;LCD.h: 55: Delay10TCYx(0);
   604  0014B6  0E00               	movlw	0
   605  0014B8  EC24  F00B         	call	_Delay10TCYx
   606                           
   607                           ;LCD.h: 56: setGPIO(0x13, command);
   608  0014BC  C016  F014         	movff	lcdCommand@command,setGPIO@value
   609  0014C0  0E13               	movlw	19
   610  0014C2  ECF4  F00A         	call	_setGPIO
   611                           
   612                           ;LCD.h: 57: Delay10TCYx(0);
   613  0014C6  0E00               	movlw	0
   614  0014C8  EC24  F00B         	call	_Delay10TCYx
   615                           
   616                           ;LCD.h: 58: setGPIO(0x12,0x40);
   617  0014CC  0E40               	movlw	64
   618  0014CE  6E14               	movwf	setGPIO@value,c
   619  0014D0  0E12               	movlw	18
   620  0014D2  ECF4  F00A         	call	_setGPIO
   621                           
   622                           ;LCD.h: 59: Delay10TCYx(0);
   623  0014D6  0E00               	movlw	0
   624  0014D8  EC24  F00B         	call	_Delay10TCYx
   625                           
   626                           ;LCD.h: 60: setGPIO(0x12,0x00);
   627  0014DC  0E00               	movlw	0
   628  0014DE  6E14               	movwf	setGPIO@value,c
   629  0014E0  0E12               	movlw	18
   630  0014E2  ECF4  F00A         	call	_setGPIO
   631                           
   632                           ;LCD.h: 61: Delay10TCYx(0);
   633  0014E6  0E00               	movlw	0
   634  0014E8  EC24  F00B         	call	_Delay10TCYx
   635  0014EC  0012               	return		;funcret
   636  0014EE                     __end_of_lcdCommand:
   637                           	opt stack 0
   638                           intcon	equ	0xFF2
   639                           
   640 ;; *************** function _setGPIO *****************
   641 ;; Defined at:
   642 ;;		line 32 in file "LCD.h"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  address         1    wreg     unsigned char 
   645 ;;  value           1   19[COMRAM] unsigned char 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  address         1   20[COMRAM] unsigned char 
   648 ;; Return value:  Size  Location     Type
   649 ;;		None               void
   650 ;; Registers used:
   651 ;;		wreg, status,2, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   657 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;Total ram usage:        2 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    3
   664 ;; This function calls:
   665 ;;		_WriteSPI1
   666 ;; This function is called by:
   667 ;;		_lcdCommand
   668 ;;		_lcdInit
   669 ;;		_lcdChar
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text5
   674  0015E8                     __ptext5:
   675                           	opt stack 0
   676  0015E8                     _setGPIO:
   677                           	opt stack 25
   678                           
   679                           ;incstack = 0
   680                           ;setGPIO@address stored from wreg
   681  0015E8  6E15               	movwf	setGPIO@address,c
   682                           
   683                           ;LCD.h: 34: PORTAbits.RA2=0;
   684  0015EA  9480               	bcf	3968,2,c	;volatile
   685                           
   686                           ;LCD.h: 37: WriteSPI1(0x40);
   687  0015EC  0E40               	movlw	64
   688  0015EE  ECC9  F00A         	call	_WriteSPI1
   689                           
   690                           ;LCD.h: 38: WriteSPI1(address);
   691  0015F2  5015               	movf	setGPIO@address,w,c
   692  0015F4  ECC9  F00A         	call	_WriteSPI1
   693                           
   694                           ;LCD.h: 39: WriteSPI1(value);
   695  0015F8  5014               	movf	setGPIO@value,w,c
   696  0015FA  ECC9  F00A         	call	_WriteSPI1
   697                           
   698                           ;LCD.h: 40: PORTAbits.RA2=1;
   699  0015FE  8480               	bsf	3968,2,c	;volatile
   700  001600  0012               	return		;funcret
   701  001602                     __end_of_setGPIO:
   702                           	opt stack 0
   703                           intcon	equ	0xFF2
   704                           
   705 ;; *************** function _WriteSPI1 *****************
   706 ;; Defined at:
   707 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  data_out        1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  data_out        1   18[COMRAM] unsigned char 
   712 ;;  TempVar         1   17[COMRAM] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      char 
   715 ;; Registers used:
   716 ;;		wreg
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:        2 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    2
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_setGPIO
   733 ;;		_setIODIR
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text6
   738  001592                     __ptext6:
   739                           	opt stack 0
   740  001592                     _WriteSPI1:
   741                           	opt stack 25
   742                           
   743                           ;incstack = 0
   744                           ;WriteSPI1@data_out stored from wreg
   745  001592  6E13               	movwf	WriteSPI1@data_out,c
   746  001594  CFC9 F012          	movff	4041,WriteSPI1@TempVar	;volatile
   747  001598  969E               	bcf	3998,3,c	;volatile
   748  00159A  9EC6               	bcf	4038,7,c	;volatile
   749  00159C  C013  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
   750  0015A0  BEC6               	btfsc	4038,7,c	;volatile
   751  0015A2  D007               	goto	l224
   752  0015A4  D002               	goto	l226
   753                           
   754                           ;	Return value of _WriteSPI1 is never used
   755  0015A6  D005               	goto	l224
   756  0015A8  D000               	goto	l226
   757  0015AA                     l226:
   758  0015AA  B69E               	btfsc	3998,3,c	;volatile
   759  0015AC  D002               	goto	l224
   760  0015AE  D7FD               	goto	l226
   761  0015B0  D000               	goto	l224
   762  0015B2                     l224:
   763  0015B2  0012               	return		;funcret
   764  0015B4                     __end_of_WriteSPI1:
   765                           	opt stack 0
   766                           intcon	equ	0xFF2
   767                           
   768 ;; *************** function _Delay10TCYx *****************
   769 ;; Defined at:
   770 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  unit            1    wreg     unsigned char 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  unit            1   17[COMRAM] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;		None               void
   777 ;; Registers used:
   778 ;;		wreg
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;Total ram usage:        1 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    2
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_lcdCommand
   795 ;;		_lcdChar
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text7
   800  001648                     __ptext7:
   801                           	opt stack 0
   802  001648                     _Delay10TCYx:
   803                           	opt stack 25
   804                           
   805                           ;incstack = 0
   806                           ;Delay10TCYx@unit stored from wreg
   807  001648  6E12               	movwf	Delay10TCYx@unit,c
   808  00164A  0E03               	movlw	3
   809  00164C                     u767:
   810  00164C  2EE8               	decfsz	wreg,f,c
   811  00164E  D7FE               	goto	u767
   812  001650  F000               	nop	
   813  001652  2E12               	decfsz	Delay10TCYx@unit,f,c
   814  001654  D7FA               	goto	l857
   815  001656  D000               	goto	l460
   816  001658                     l460:
   817  001658  0012               	return		;funcret
   818  00165A                     __end_of_Delay10TCYx:
   819                           	opt stack 0
   820                           intcon	equ	0xFF2
   821                           wreg	equ	0xFE8
   822                           
   823 ;; *************** function _OpenSPI1 *****************
   824 ;; Defined at:
   825 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  sync_mode       1    wreg     unsigned char 
   828 ;;  bus_mode        1   17[COMRAM] unsigned char 
   829 ;;  smp_phase       1   18[COMRAM] unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  sync_mode       1   19[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;		None               void
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;Total ram usage:        3 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    2
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_lcdInit
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text8
   856  00140A                     __ptext8:
   857                           	opt stack 0
   858  00140A                     _OpenSPI1:
   859                           	opt stack 26
   860                           
   861                           ;incstack = 0
   862                           ;OpenSPI1@sync_mode stored from wreg
   863  00140A  6E14               	movwf	OpenSPI1@sync_mode,c
   864  00140C  0E3F               	movlw	63
   865  00140E  16C7               	andwf	4039,f,c	;volatile
   866  001410  0E00               	movlw	0
   867  001412  6EC6               	movwf	4038,c	;volatile
   868  001414  5014               	movf	OpenSPI1@sync_mode,w,c
   869  001416  12C6               	iorwf	4038,f,c	;volatile
   870  001418  5013               	movf	OpenSPI1@smp_phase,w,c
   871  00141A  12C7               	iorwf	4039,f,c	;volatile
   872  00141C  D005               	goto	l1297
   873  00141E                     l202:
   874  00141E  8CC7               	bsf	4039,6,c	;volatile
   875  001420  D013               	goto	l1301
   876  001422                     l204:
   877  001422  8CC7               	bsf	4039,6,c	;volatile
   878  001424                     l205:
   879  001424  88C6               	bsf	4038,4,c	;volatile
   880  001426  D010               	goto	l1301
   881  001428                     l1297:
   882  001428  5012               	movf	OpenSPI1@bus_mode,w,c
   883                           
   884                           ; Switch size 1, requested type "space"
   885                           ; Number of cases is 3, Range of values is 0 to 3
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte           10     6 (average)
   889                           ;	Chosen strategy is simple_byte
   890  00142A  0A00               	xorlw	0	; case 0
   891  00142C  B4D8               	btfsc	status,2,c
   892  00142E  D7F7               	goto	l202
   893  001430  0A02               	xorlw	2	; case 2
   894  001432  B4D8               	btfsc	status,2,c
   895  001434  D7F6               	goto	l204
   896  001436  0A01               	xorlw	1	; case 3
   897  001438  B4D8               	btfsc	status,2,c
   898  00143A  D7F4               	goto	l205
   899  00143C  D005               	goto	l1301
   900  00143E                     l208:
   901  00143E  8E97               	bsf	3991,7,c	;volatile
   902  001440                     l210:
   903  001440  8694               	bsf	3988,3,c	;volatile
   904  001442  D00A               	goto	l209
   905  001444                     l211:
   906  001444  9694               	bcf	3988,3,c	;volatile
   907  001446  D008               	goto	l209
   908  001448                     l1301:
   909  001448  5014               	movf	OpenSPI1@sync_mode,w,c
   910                           
   911                           ; Switch size 1, requested type "space"
   912                           ; Number of cases is 2, Range of values is 4 to 5
   913                           ; switch strategies available:
   914                           ; Name         Instructions Cycles
   915                           ; simple_byte            7     4 (average)
   916                           ;	Chosen strategy is simple_byte
   917  00144A  0A04               	xorlw	4	; case 4
   918  00144C  B4D8               	btfsc	status,2,c
   919  00144E  D7F7               	goto	l208
   920  001450  0A01               	xorlw	1	; case 5
   921  001452  B4D8               	btfsc	status,2,c
   922  001454  D7F5               	goto	l210
   923  001456  D7F6               	goto	l211
   924  001458                     l209:
   925  001458  8894               	bsf	3988,4,c	;volatile
   926  00145A  9A94               	bcf	3988,5,c	;volatile
   927  00145C  8AC6               	bsf	4038,5,c	;volatile
   928  00145E  0012               	return		;funcret
   929  001460                     __end_of_OpenSPI1:
   930                           	opt stack 0
   931                           intcon	equ	0xFF2
   932                           wreg	equ	0xFE8
   933                           status	equ	0xFD8
   934                           
   935 ;; *************** function _MotorDriverInit *****************
   936 ;; Defined at:
   937 ;;		line 3 in file "MotorControl.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		wreg, status,2
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_initialize
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text9
   966  001602                     __ptext9:
   967                           	opt stack 0
   968  001602                     _MotorDriverInit:
   969                           	opt stack 27
   970                           
   971                           ;MotorControl.c: 5: TRISGbits.RG0 = 0;
   972                           
   973                           ;incstack = 0
   974  001602  9098               	bcf	3992,0,c	;volatile
   975                           
   976                           ;MotorControl.c: 6: TRISGbits.RG3 = 0;
   977  001604  9698               	bcf	3992,3,c	;volatile
   978                           
   979                           ;MotorControl.c: 7: TRISEbits.RE3 = 0;
   980  001606  9696               	bcf	3990,3,c	;volatile
   981                           
   982                           ;MotorControl.c: 8: TRISEbits.RE4 = 0;
   983  001608  9896               	bcf	3990,4,c	;volatile
   984                           
   985                           ;MotorControl.c: 9: TRISBbits.RB0 = 1;
   986  00160A  8093               	bsf	3987,0,c	;volatile
   987                           
   988                           ;MotorControl.c: 11: CCP3CON = 0x4C;
   989  00160C  0E4C               	movlw	76
   990  00160E  6EB7               	movwf	4023,c	;volatile
   991                           
   992                           ;MotorControl.c: 12: PR2 = 0xFF;
   993  001610  68CB               	setf	4043,c	;volatile
   994                           
   995                           ;MotorControl.c: 13: T3CON = 0x00;
   996  001612  0E00               	movlw	0
   997  001614  6EB1               	movwf	4017,c	;volatile
   998                           
   999                           ;MotorControl.c: 14: T2CON = 0x04;
  1000  001616  0E04               	movlw	4
  1001  001618  6ECA               	movwf	4042,c	;volatile
  1002  00161A  0012               	return		;funcret
  1003  00161C                     __end_of_MotorDriverInit:
  1004                           	opt stack 0
  1005                           intcon	equ	0xFF2
  1006                           wreg	equ	0xFE8
  1007                           status	equ	0xFD8
  1008                           
  1009 ;; *************** function _JoystickInit *****************
  1010 ;; Defined at:
  1011 ;;		line 9 in file "Joystick.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;		None               void
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;Total ram usage:        0 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    2
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_initialize
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text10
  1040  0014EE                     __ptext10:
  1041                           	opt stack 0
  1042  0014EE                     _JoystickInit:
  1043                           	opt stack 27
  1044                           
  1045                           ;Joystick.c: 11: INTCON3bits.INT1IE = 1;
  1046                           
  1047                           ;incstack = 0
  1048  0014EE  86F0               	bsf	intcon3,3,c	;volatile
  1049                           
  1050                           ;Joystick.c: 12: TRISD = 0;
  1051  0014F0  0E00               	movlw	0
  1052  0014F2  6E95               	movwf	3989,c	;volatile
  1053                           
  1054                           ;Joystick.c: 13: TRISAbits.RA2 = 0;
  1055  0014F4  9492               	bcf	3986,2,c	;volatile
  1056                           
  1057                           ;Joystick.c: 14: TRISBbits.RB1 = 1;
  1058  0014F6  8293               	bsf	3987,1,c	;volatile
  1059                           
  1060                           ;Joystick.c: 15: if (PORTBbits.RB1 == 1)
  1061  0014F8  A281               	btfss	3969,1,c	;volatile
  1062  0014FA  D004               	goto	l109
  1063                           
  1064                           ;Joystick.c: 16: {
  1065                           ;Joystick.c: 17: PORTAbits.RA2 = 1;
  1066  0014FC  8480               	bsf	3968,2,c	;volatile
  1067                           
  1068                           ;Joystick.c: 18: INTCON2bits.INTEDG1 = 0;
  1069  0014FE  9AF1               	bcf	intcon2,5,c	;volatile
  1070                           
  1071                           ;Joystick.c: 19: JSEnableFlag = 1;
  1072  001500  0E01               	movlw	1
  1073  001502  D005               	goto	L1
  1074  001504                     l109:
  1075                           
  1076                           ;Joystick.c: 21: else if (PORTBbits.RB1 == 0)
  1077  001504  B281               	btfsc	3969,1,c	;volatile
  1078  001506  D005               	goto	l991
  1079                           
  1080                           ;Joystick.c: 22: {
  1081                           ;Joystick.c: 23: PORTAbits.RA2 = 0;
  1082  001508  9480               	bcf	3968,2,c	;volatile
  1083                           
  1084                           ;Joystick.c: 24: INTCON2bits.INTEDG1 = 1;
  1085  00150A  8AF1               	bsf	intcon2,5,c	;volatile
  1086                           
  1087                           ;Joystick.c: 25: JSEnableFlag = 0;
  1088  00150C  0E00               	movlw	0
  1089  00150E                     L1:
  1090  00150E  6E48               	movwf	_JSEnableFlag,c
  1091  001510  D000               	goto	l991
  1092  001512                     l991:
  1093                           
  1094                           ;Joystick.c: 26: }
  1095                           ;Joystick.c: 28: ADCON0bits.ADON = 1;
  1096  001512  80C2               	bsf	4034,0,c	;volatile
  1097                           
  1098                           ;Joystick.c: 29: INTCON3bits.INT1IP = 0;
  1099  001514  9CF0               	bcf	intcon3,6,c	;volatile
  1100                           
  1101                           ;Joystick.c: 30: RCONbits.IPEN = 1;
  1102  001516  8ED0               	bsf	4048,7,c	;volatile
  1103                           
  1104                           ;Joystick.c: 31: ADCON0 = ADCON0 & 0x01;
  1105  001518  50C2               	movf	4034,w,c	;volatile
  1106  00151A  0B01               	andlw	1
  1107  00151C  6EC2               	movwf	4034,c	;volatile
  1108                           
  1109                           ;Joystick.c: 32: ADCON0 = ADCON0 | 0x04;
  1110  00151E  50C2               	movf	4034,w,c	;volatile
  1111  001520  0904               	iorlw	4
  1112  001522  6EC2               	movwf	4034,c	;volatile
  1113                           
  1114                           ;Joystick.c: 33: ADCON1 = 0x0D;
  1115  001524  0E0D               	movlw	13
  1116  001526  6EC1               	movwf	4033,c	;volatile
  1117                           
  1118                           ;Joystick.c: 34: ADCON2 = 0xB4;
  1119  001528  0EB4               	movlw	180
  1120  00152A  6EC0               	movwf	4032,c	;volatile
  1121  00152C  0012               	return		;funcret
  1122  00152E                     __end_of_JoystickInit:
  1123                           	opt stack 0
  1124                           intcon	equ	0xFF2
  1125                           intcon2	equ	0xFF1
  1126                           intcon3	equ	0xFF0
  1127                           wreg	equ	0xFE8
  1128                           status	equ	0xFD8
  1129                           
  1130 ;; *************** function _ImplementJSMotion *****************
  1131 ;; Defined at:
  1132 ;;		line 77 in file "Joystick.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  JoystickValu    2   65[COMRAM] int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  CCPinput        2   69[COMRAM] unsigned int 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;		None               void
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        6 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    3
  1153 ;; This function calls:
  1154 ;;		_abs
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text11
  1161  001364                     __ptext11:
  1162                           	opt stack 0
  1163  001364                     _ImplementJSMotion:
  1164                           	opt stack 27
  1165                           
  1166                           ;Joystick.c: 79: unsigned int CCPinput;
  1167                           ;Joystick.c: 80: PIDEnableFlag = 0;
  1168                           
  1169                           ;incstack = 0
  1170  001364  0E00               	movlw	0
  1171  001366  6E49               	movwf	_PIDEnableFlag,c
  1172                           
  1173                           ;Joystick.c: 81: if(JoystickValue < -100)
  1174  001368  AE43               	btfss	ImplementJSMotion@JoystickValue+1,7,c
  1175  00136A  D008               	goto	l1533
  1176  00136C  0E9C               	movlw	156
  1177  00136E  5C42               	subwf	ImplementJSMotion@JoystickValue,w,c
  1178  001370  0EFF               	movlw	255
  1179  001372  5843               	subwfb	ImplementJSMotion@JoystickValue+1,w,c
  1180  001374  B0D8               	btfsc	status,0,c
  1181  001376  D002               	goto	l1533
  1182                           
  1183                           ;Joystick.c: 82: {
  1184                           ;Joystick.c: 83: CCP3CONbits.P3M1 = 1;
  1185  001378  8EB7               	bsf	4023,7,c	;volatile
  1186                           
  1187                           ;Joystick.c: 84: }
  1188  00137A  D01F               	goto	l1543
  1189  00137C                     l1533:
  1190                           
  1191                           ;Joystick.c: 85: else if(JoystickValue > 100)
  1192  00137C  BE43               	btfsc	ImplementJSMotion@JoystickValue+1,7,c
  1193  00137E  D008               	goto	l1537
  1194  001380  5043               	movf	ImplementJSMotion@JoystickValue+1,w,c
  1195  001382  E104               	bnz	u730
  1196  001384  0E65               	movlw	101
  1197  001386  5C42               	subwf	ImplementJSMotion@JoystickValue,w,c
  1198  001388  A0D8               	btfss	status,0,c
  1199  00138A  D002               	goto	l1537
  1200  00138C                     u730:
  1201                           
  1202                           ;Joystick.c: 86: {
  1203                           ;Joystick.c: 87: CCP3CONbits.P3M1 = 0;
  1204  00138C  9EB7               	bcf	4023,7,c	;volatile
  1205                           
  1206                           ;Joystick.c: 88: }
  1207  00138E  D015               	goto	l1543
  1208  001390                     l1537:
  1209                           
  1210                           ;Joystick.c: 89: else if (JoystickValue <= 100 && JoystickValue >= -100)
  1211  001390  BE43               	btfsc	ImplementJSMotion@JoystickValue+1,7,c
  1212  001392  D006               	goto	l1539
  1213  001394  5043               	movf	ImplementJSMotion@JoystickValue+1,w,c
  1214  001396  E111               	bnz	l1543
  1215  001398  0E65               	movlw	101
  1216  00139A  5C42               	subwf	ImplementJSMotion@JoystickValue,w,c
  1217  00139C  B0D8               	btfsc	status,0,c
  1218  00139E  D00D               	goto	l1543
  1219  0013A0                     l1539:
  1220  0013A0  AE43               	btfss	ImplementJSMotion@JoystickValue+1,7,c
  1221  0013A2  D006               	goto	l1541
  1222  0013A4  0E9C               	movlw	156
  1223  0013A6  5C42               	subwf	ImplementJSMotion@JoystickValue,w,c
  1224  0013A8  0EFF               	movlw	255
  1225  0013AA  5843               	subwfb	ImplementJSMotion@JoystickValue+1,w,c
  1226  0013AC  A0D8               	btfss	status,0,c
  1227  0013AE  D005               	goto	l1543
  1228  0013B0                     l1541:
  1229                           
  1230                           ;Joystick.c: 90: {
  1231                           ;Joystick.c: 91: JoystickValue = 0;
  1232  0013B0  0E00               	movlw	0
  1233  0013B2  6E43               	movwf	ImplementJSMotion@JoystickValue+1,c
  1234  0013B4  0E00               	movlw	0
  1235  0013B6  6E42               	movwf	ImplementJSMotion@JoystickValue,c
  1236  0013B8  D000               	goto	l1543
  1237  0013BA                     l1543:
  1238                           
  1239                           ;Joystick.c: 92: }
  1240                           ;Joystick.c: 94: JoystickValue = abs(JoystickValue);
  1241  0013BA  C042  F012         	movff	ImplementJSMotion@JoystickValue,abs@a
  1242  0013BE  C043  F013         	movff	ImplementJSMotion@JoystickValue+1,abs@a+1
  1243  0013C2  ECB5  F00A         	call	_abs	;wreg free
  1244  0013C6  C012  F042         	movff	?_abs,ImplementJSMotion@JoystickValue
  1245  0013CA  C013  F043         	movff	?_abs+1,ImplementJSMotion@JoystickValue+1
  1246                           
  1247                           ;Joystick.c: 95: CCPinput = JoystickValue * 2;
  1248  0013CE  90D8               	bcf	status,0,c
  1249  0013D0  3442               	rlcf	ImplementJSMotion@JoystickValue,w,c
  1250  0013D2  6E46               	movwf	ImplementJSMotion@CCPinput,c
  1251  0013D4  3443               	rlcf	ImplementJSMotion@JoystickValue+1,w,c
  1252  0013D6  6E47               	movwf	ImplementJSMotion@CCPinput+1,c
  1253                           
  1254                           ;Joystick.c: 96: CCPR3L = (CCPinput >> 2) & 0xFF;
  1255  0013D8  C046  F044         	movff	ImplementJSMotion@CCPinput,??_ImplementJSMotion
  1256  0013DC  C047  F045         	movff	ImplementJSMotion@CCPinput+1,??_ImplementJSMotion+1
  1257  0013E0  90D8               	bcf	status,0,c
  1258  0013E2  3245               	rrcf	??_ImplementJSMotion+1,f,c
  1259  0013E4  3244               	rrcf	??_ImplementJSMotion,f,c
  1260  0013E6  90D8               	bcf	status,0,c
  1261  0013E8  3245               	rrcf	??_ImplementJSMotion+1,f,c
  1262  0013EA  3244               	rrcf	??_ImplementJSMotion,f,c
  1263  0013EC  5044               	movf	??_ImplementJSMotion,w,c
  1264  0013EE  6EB8               	movwf	4024,c	;volatile
  1265                           
  1266                           ;Joystick.c: 97: PORTD = CCPinput & 0xFF;
  1267  0013F0  C046  FF83         	movff	ImplementJSMotion@CCPinput,3971	;volatile
  1268                           
  1269                           ;Joystick.c: 98: CCP3CONbits.DC3B = (CCPinput & 0x03);
  1270  0013F4  C046  F044         	movff	ImplementJSMotion@CCPinput,??_ImplementJSMotion
  1271  0013F8  0E03               	movlw	3
  1272  0013FA  1644               	andwf	??_ImplementJSMotion,f,c
  1273  0013FC  3A44               	swapf	??_ImplementJSMotion,f,c
  1274  0013FE  50B7               	movf	4023,w,c	;volatile
  1275  001400  1844               	xorwf	??_ImplementJSMotion,w,c
  1276  001402  0BCF               	andlw	-49
  1277  001404  1844               	xorwf	??_ImplementJSMotion,w,c
  1278  001406  6EB7               	movwf	4023,c	;volatile
  1279  001408  0012               	return		;funcret
  1280  00140A                     __end_of_ImplementJSMotion:
  1281                           	opt stack 0
  1282                           intcon	equ	0xFF2
  1283                           intcon2	equ	0xFF1
  1284                           intcon3	equ	0xFF0
  1285                           wreg	equ	0xFE8
  1286                           status	equ	0xFD8
  1287                           
  1288 ;; *************** function _abs *****************
  1289 ;; Defined at:
  1290 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/abs.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  a               2   17[COMRAM] int 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  2   17[COMRAM] int 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;Total ram usage:        4 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    2
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_ImplementJSMotion
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text12
  1319  00156A                     __ptext12:
  1320                           	opt stack 0
  1321  00156A                     _abs:
  1322                           	opt stack 27
  1323                           
  1324                           ;incstack = 0
  1325  00156A  AE13               	btfss	abs@a+1,7,c
  1326  00156C  D00D               	goto	l278
  1327  00156E  C012  F014         	movff	abs@a,??_abs
  1328  001572  C013  F015         	movff	abs@a+1,??_abs+1
  1329  001576  1E14               	comf	??_abs,f,c
  1330  001578  1E15               	comf	??_abs+1,f,c
  1331  00157A  4A14               	infsnz	??_abs,f,c
  1332  00157C  2A15               	incf	??_abs+1,f,c
  1333  00157E  C014  F012         	movff	??_abs,?_abs
  1334  001582  C015  F013         	movff	??_abs+1,?_abs+1
  1335  001586  D004               	goto	l279
  1336  001588                     l278:
  1337  001588  C012  F012         	movff	abs@a,?_abs
  1338  00158C  C013  F013         	movff	abs@a+1,?_abs+1
  1339  001590                     l279:
  1340  001590  0012               	return		;funcret
  1341  001592                     __end_of_abs:
  1342                           	opt stack 0
  1343                           intcon	equ	0xFF2
  1344                           intcon2	equ	0xFF1
  1345                           intcon3	equ	0xFF0
  1346                           wreg	equ	0xFE8
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _DetectMovement *****************
  1350 ;; Defined at:
  1351 ;;		line 54 in file "Joystick.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  ADCresult       2   63[COMRAM] unsigned int 
  1356 ;;  JoystickResu    2   61[COMRAM] int 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2   59[COMRAM] int 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;Total ram usage:        6 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    4
  1373 ;; This function calls:
  1374 ;;		___awtoft
  1375 ;;		___ftmul
  1376 ;;		___fttol
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text13
  1383  0012B4                     __ptext13:
  1384                           	opt stack 0
  1385  0012B4                     _DetectMovement:
  1386                           	opt stack 26
  1387                           
  1388                           ;Joystick.c: 56: unsigned int ADCresult;
  1389                           ;Joystick.c: 57: int JoystickResult;
  1390                           ;Joystick.c: 59: ADCON0bits.GODONE = 1;
  1391                           
  1392                           ;incstack = 0
  1393  0012B4  82C2               	bsf	4034,1,c	;volatile
  1394                           
  1395                           ;Joystick.c: 60: while (ADCON0bits.GO_NOT_DONE == 1);
  1396  0012B6  D000               	goto	l121
  1397  0012B8                     l121:
  1398  0012B8  B2C2               	btfsc	4034,1,c	;volatile
  1399  0012BA  D7FE               	goto	l121
  1400                           
  1401                           ;Joystick.c: 62: ADCresult = ADRESH;
  1402  0012BC  CFC4 F040          	movff	4036,DetectMovement@ADCresult	;volatile
  1403  0012C0  6A41               	clrf	DetectMovement@ADCresult+1,c
  1404                           
  1405                           ;Joystick.c: 63: ADCresult = ADCresult << 8;
  1406  0012C2  5040               	movf	DetectMovement@ADCresult,w,c
  1407  0012C4  6E41               	movwf	DetectMovement@ADCresult+1,c
  1408  0012C6  6A40               	clrf	DetectMovement@ADCresult,c
  1409                           
  1410                           ;Joystick.c: 64: ADCresult = ADCresult | ADRESL;
  1411  0012C8  5040               	movf	DetectMovement@ADCresult,w,c
  1412  0012CA  10C3               	iorwf	4035,w,c	;volatile
  1413  0012CC  6E40               	movwf	DetectMovement@ADCresult,c
  1414  0012CE  5041               	movf	DetectMovement@ADCresult+1,w,c
  1415  0012D0  6E41               	movwf	DetectMovement@ADCresult+1,c
  1416                           
  1417                           ;Joystick.c: 65: ADCresult = ADCresult + 225;
  1418  0012D2  0EE1               	movlw	225
  1419  0012D4  2440               	addwf	DetectMovement@ADCresult,w,c
  1420  0012D6  6E40               	movwf	DetectMovement@ADCresult,c
  1421  0012D8  0E00               	movlw	0
  1422  0012DA  2041               	addwfc	DetectMovement@ADCresult+1,w,c
  1423  0012DC  6E41               	movwf	DetectMovement@ADCresult+1,c
  1424                           
  1425                           ;Joystick.c: 66: JoystickResult = (ADCresult - 512);
  1426  0012DE  0E00               	movlw	0
  1427  0012E0  2440               	addwf	DetectMovement@ADCresult,w,c
  1428  0012E2  6E3E               	movwf	DetectMovement@JoystickResult,c
  1429  0012E4  0EFE               	movlw	254
  1430  0012E6  2041               	addwfc	DetectMovement@ADCresult+1,w,c
  1431  0012E8  6E3F               	movwf	DetectMovement@JoystickResult+1,c
  1432                           
  1433                           ;Joystick.c: 67: JoystickResult = JoystickResult * 14.28571428571428571429;
  1434  0012EA  0E92               	movlw	146
  1435  0012EC  6E21               	movwf	___ftmul@f2,c
  1436  0012EE  0E64               	movlw	100
  1437  0012F0  6E22               	movwf	___ftmul@f2+1,c
  1438  0012F2  0E41               	movlw	65
  1439  0012F4  6E23               	movwf	___ftmul@f2+2,c
  1440  0012F6  C03E  F01A         	movff	DetectMovement@JoystickResult,___awtoft@c
  1441  0012FA  C03F  F01B         	movff	DetectMovement@JoystickResult+1,___awtoft@c+1
  1442  0012FE  EC97  F00A         	call	___awtoft	;wreg free
  1443  001302  C01A  F01E         	movff	?___awtoft,___ftmul@f1
  1444  001306  C01B  F01F         	movff	?___awtoft+1,___ftmul@f1+1
  1445  00130A  C01C  F020         	movff	?___awtoft+2,___ftmul@f1+2
  1446  00130E  EC08  F008         	call	___ftmul	;wreg free
  1447  001312  C01E  F02D         	movff	?___ftmul,___fttol@f1
  1448  001316  C01F  F02E         	movff	?___ftmul+1,___fttol@f1+1
  1449  00131A  C020  F02F         	movff	?___ftmul+2,___fttol@f1+2
  1450  00131E  EC84  F008         	call	___fttol	;wreg free
  1451  001322  C02D  F03E         	movff	?___fttol,DetectMovement@JoystickResult
  1452  001326  C02E  F03F         	movff	?___fttol+1,DetectMovement@JoystickResult+1
  1453                           
  1454                           ;Joystick.c: 69: if ((JoystickResult > 100) || (JoystickResult < -100))
  1455  00132A  BE3F               	btfsc	DetectMovement@JoystickResult+1,7,c
  1456  00132C  D006               	goto	l1513
  1457  00132E  503F               	movf	DetectMovement@JoystickResult+1,w,c
  1458  001330  E10C               	bnz	l1515
  1459  001332  0E65               	movlw	101
  1460  001334  5C3E               	subwf	DetectMovement@JoystickResult,w,c
  1461  001336  B0D8               	btfsc	status,0,c
  1462  001338  D008               	goto	l1515
  1463  00133A                     l1513:
  1464  00133A  AE3F               	btfss	DetectMovement@JoystickResult+1,7,c
  1465  00133C  D00D               	goto	l1523
  1466  00133E  0E9C               	movlw	156
  1467  001340  5C3E               	subwf	DetectMovement@JoystickResult,w,c
  1468  001342  0EFF               	movlw	255
  1469  001344  583F               	subwfb	DetectMovement@JoystickResult+1,w,c
  1470  001346  B0D8               	btfsc	status,0,c
  1471  001348  D007               	goto	l1523
  1472  00134A                     l1515:
  1473                           
  1474                           ;Joystick.c: 70: {
  1475                           ;Joystick.c: 71: PIDEnableFlag = 0;
  1476  00134A  0E00               	movlw	0
  1477  00134C  6E49               	movwf	_PIDEnableFlag,c
  1478                           
  1479                           ;Joystick.c: 72: return JoystickResult;
  1480  00134E  C03E  F03C         	movff	DetectMovement@JoystickResult,?_DetectMovement
  1481  001352  C03F  F03D         	movff	DetectMovement@JoystickResult+1,?_DetectMovement+1
  1482                           
  1483                           ;Joystick.c: 73: }
  1484  001356  D005               	goto	l127
  1485  001358                     l1523:
  1486                           
  1487                           ;Joystick.c: 74: else
  1488                           ;Joystick.c: 75: return 0;
  1489  001358  0E00               	movlw	0
  1490  00135A  6E3D               	movwf	?_DetectMovement+1,c
  1491  00135C  0E00               	movlw	0
  1492  00135E  6E3C               	movwf	?_DetectMovement,c
  1493  001360  D000               	goto	l127
  1494  001362                     l127:
  1495  001362  0012               	return		;funcret
  1496  001364                     __end_of_DetectMovement:
  1497                           	opt stack 0
  1498                           intcon	equ	0xFF2
  1499                           intcon2	equ	0xFF1
  1500                           intcon3	equ	0xFF0
  1501                           wreg	equ	0xFE8
  1502                           status	equ	0xFD8
  1503                           
  1504 ;; *************** function ___fttol *****************
  1505 ;; Defined at:
  1506 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  f1              3   44[COMRAM] float 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  lval            4   54[COMRAM] unsigned long 
  1511 ;;  exp1            1   58[COMRAM] unsigned char 
  1512 ;;  sign1           1   53[COMRAM] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  4   44[COMRAM] long 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;Total ram usage:       15 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    2
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_DetectMovement
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text14
  1537  001108                     __ptext14:
  1538                           	opt stack 0
  1539  001108                     ___fttol:
  1540                           	opt stack 27
  1541                           
  1542                           ;incstack = 0
  1543  001108  C02F  F031         	movff	___fttol@f1+2,??___fttol
  1544  00110C  6A32               	clrf	(??___fttol+1)& (0+255),c
  1545  00110E  6A33               	clrf	(??___fttol+2)& (0+255),c
  1546  001110  342E               	rlcf	___fttol@f1+1,w,c
  1547  001112  3631               	rlcf	??___fttol& (0+255),f,c
  1548  001114  E301               	bnc	u601
  1549  001116  8032               	bsf	(??___fttol+1)& (0+255),0,c
  1550  001118                     u601:
  1551  001118  5031               	movf	??___fttol,w,c
  1552  00111A  6E3B               	movwf	___fttol@exp1,c
  1553  00111C  503B               	movf	___fttol@exp1,w,c
  1554  00111E  A4D8               	btfss	status,2,c
  1555  001120  D002               	goto	l1441
  1556  001122  D039               	goto	l1465
  1557  001124  D063               	goto	l658
  1558  001126                     l1441:
  1559  001126  0E17               	movlw	23
  1560  001128  6E31               	movwf	??___fttol& (0+255),c
  1561  00112A  C02D  F032         	movff	___fttol@f1,??___fttol+1
  1562  00112E  C02E  F033         	movff	___fttol@f1+1,??___fttol+2
  1563  001132  C02F  F034         	movff	___fttol@f1+2,??___fttol+3
  1564  001136  2831               	incf	??___fttol,w,c
  1565  001138  6E35               	movwf	(??___fttol+4)& (0+255),c
  1566  00113A  D004               	goto	u620
  1567  00113C                     u625:
  1568  00113C  90D8               	bcf	status,0,c
  1569  00113E  3234               	rrcf	??___fttol+3,f,c
  1570  001140  3233               	rrcf	??___fttol+2,f,c
  1571  001142  3232               	rrcf	??___fttol+1,f,c
  1572  001144                     u620:
  1573  001144  2E35               	decfsz	(??___fttol+4)& (0+255),f,c
  1574  001146  D7FA               	goto	u625
  1575  001148  5032               	movf	??___fttol+1,w,c
  1576  00114A  6E36               	movwf	___fttol@sign1,c
  1577  00114C  8E2E               	bsf	___fttol@f1+1,7,c
  1578  00114E  0EFF               	movlw	255
  1579  001150  162D               	andwf	___fttol@f1,f,c
  1580  001152  0EFF               	movlw	255
  1581  001154  162E               	andwf	___fttol@f1+1,f,c
  1582  001156  0E00               	movlw	0
  1583  001158  162F               	andwf	___fttol@f1+2,f,c
  1584  00115A  502D               	movf	___fttol@f1,w,c
  1585  00115C  6E37               	movwf	___fttol@lval,c
  1586  00115E  502E               	movf	___fttol@f1+1,w,c
  1587  001160  6E38               	movwf	___fttol@lval+1,c
  1588  001162  502F               	movf	___fttol@f1+2,w,c
  1589  001164  6E39               	movwf	___fttol@lval+2,c
  1590  001166  6A3A               	clrf	___fttol@lval+3,c
  1591  001168  0E8E               	movlw	142
  1592  00116A  5E3B               	subwf	___fttol@exp1,f,c
  1593  00116C  AE3B               	btfss	___fttol@exp1,7,c
  1594  00116E  D010               	goto	l1463
  1595  001170  503B               	movf	___fttol@exp1,w,c
  1596  001172  0A80               	xorlw	128
  1597  001174  0F8F               	addlw	143
  1598  001176  B0D8               	btfsc	status,0,c
  1599  001178  D003               	goto	l1459
  1600  00117A  D00D               	goto	l1465
  1601  00117C  D037               	goto	l658
  1602  00117E  D000               	goto	l1459
  1603  001180                     l1459:
  1604  001180  90D8               	bcf	status,0,c
  1605  001182  323A               	rrcf	___fttol@lval+3,f,c
  1606  001184  3239               	rrcf	___fttol@lval+2,f,c
  1607  001186  3238               	rrcf	___fttol@lval+1,f,c
  1608  001188  3237               	rrcf	___fttol@lval,f,c
  1609  00118A  3E3B               	incfsz	___fttol@exp1,f,c
  1610  00118C  D7F9               	goto	l1459
  1611  00118E  D019               	goto	l1473
  1612  001190                     l1463:
  1613  001190  0E17               	movlw	23
  1614  001192  643B               	cpfsgt	___fttol@exp1,c
  1615  001194  D011               	goto	l1471
  1616  001196                     l1465:
  1617  001196  0E00               	movlw	0
  1618  001198  6E2D               	movwf	?___fttol,c
  1619  00119A  0E00               	movlw	0
  1620  00119C  6E2E               	movwf	?___fttol+1,c
  1621  00119E  0E00               	movlw	0
  1622  0011A0  6E2F               	movwf	?___fttol+2,c
  1623  0011A2  0E00               	movlw	0
  1624  0011A4  6E30               	movwf	?___fttol+3,c
  1625  0011A6  D022               	goto	l658
  1626  0011A8  D007               	goto	l1471
  1627  0011AA                     l1469:
  1628  0011AA  90D8               	bcf	status,0,c
  1629  0011AC  3637               	rlcf	___fttol@lval,f,c
  1630  0011AE  3638               	rlcf	___fttol@lval+1,f,c
  1631  0011B0  3639               	rlcf	___fttol@lval+2,f,c
  1632  0011B2  363A               	rlcf	___fttol@lval+3,f,c
  1633  0011B4  063B               	decf	___fttol@exp1,f,c
  1634  0011B6  D000               	goto	l1471
  1635  0011B8                     l1471:
  1636  0011B8  503B               	movf	___fttol@exp1,w,c
  1637  0011BA  B4D8               	btfsc	status,2,c
  1638  0011BC  D002               	goto	l1473
  1639  0011BE  D7F5               	goto	l1469
  1640  0011C0  D000               	goto	l1473
  1641  0011C2                     l1473:
  1642  0011C2  5036               	movf	___fttol@sign1,w,c
  1643  0011C4  B4D8               	btfsc	status,2,c
  1644  0011C6  D009               	goto	l1477
  1645  0011C8  1E3A               	comf	___fttol@lval+3,f,c
  1646  0011CA  1E39               	comf	___fttol@lval+2,f,c
  1647  0011CC  1E38               	comf	___fttol@lval+1,f,c
  1648  0011CE  6C37               	negf	___fttol@lval,c
  1649  0011D0  0E00               	movlw	0
  1650  0011D2  2238               	addwfc	___fttol@lval+1,f,c
  1651  0011D4  2239               	addwfc	___fttol@lval+2,f,c
  1652  0011D6  223A               	addwfc	___fttol@lval+3,f,c
  1653  0011D8  D000               	goto	l1477
  1654  0011DA                     l1477:
  1655  0011DA  C037  F02D         	movff	___fttol@lval,?___fttol
  1656  0011DE  C038  F02E         	movff	___fttol@lval+1,?___fttol+1
  1657  0011E2  C039  F02F         	movff	___fttol@lval+2,?___fttol+2
  1658  0011E6  C03A  F030         	movff	___fttol@lval+3,?___fttol+3
  1659  0011EA  D000               	goto	l658
  1660  0011EC                     l658:
  1661  0011EC  0012               	return		;funcret
  1662  0011EE                     __end_of___fttol:
  1663                           	opt stack 0
  1664                           intcon	equ	0xFF2
  1665                           intcon2	equ	0xFF1
  1666                           intcon3	equ	0xFF0
  1667                           wreg	equ	0xFE8
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function ___ftmul *****************
  1671 ;; Defined at:
  1672 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  f1              3   29[COMRAM] float 
  1675 ;;  f2              3   32[COMRAM] float 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  f3_as_produc    3   39[COMRAM] unsigned um
  1678 ;;  sign            1   43[COMRAM] unsigned char 
  1679 ;;  cntr            1   42[COMRAM] unsigned char 
  1680 ;;  exp             1   38[COMRAM] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  3   29[COMRAM] float 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:       15 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    3
  1697 ;; This function calls:
  1698 ;;		___ftpack
  1699 ;; This function is called by:
  1700 ;;		_DetectMovement
  1701 ;;		_RTD2Angle
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text15
  1706  001010                     __ptext15:
  1707                           	opt stack 0
  1708  001010                     ___ftmul:
  1709                           	opt stack 26
  1710                           
  1711                           ;incstack = 0
  1712  001010  C020  F024         	movff	___ftmul@f1+2,??___ftmul
  1713  001014  6A25               	clrf	(??___ftmul+1)& (0+255),c
  1714  001016  6A26               	clrf	(??___ftmul+2)& (0+255),c
  1715  001018  341F               	rlcf	___ftmul@f1+1,w,c
  1716  00101A  3624               	rlcf	??___ftmul& (0+255),f,c
  1717  00101C  E301               	bnc	u531
  1718  00101E  8025               	bsf	(??___ftmul+1)& (0+255),0,c
  1719  001020                     u531:
  1720  001020  5024               	movf	??___ftmul,w,c
  1721  001022  6E27               	movwf	___ftmul@exp,c
  1722  001024  5027               	movf	___ftmul@exp,w,c
  1723  001026  A4D8               	btfss	status,2,c
  1724  001028  D002               	goto	l1381
  1725  00102A  D00E               	goto	l1383
  1726  00102C  D06C               	goto	l637
  1727  00102E                     l1381:
  1728  00102E  C023  F024         	movff	___ftmul@f2+2,??___ftmul
  1729  001032  6A25               	clrf	(??___ftmul+1)& (0+255),c
  1730  001034  6A26               	clrf	(??___ftmul+2)& (0+255),c
  1731  001036  3422               	rlcf	___ftmul@f2+1,w,c
  1732  001038  3624               	rlcf	??___ftmul& (0+255),f,c
  1733  00103A  E301               	bnc	u551
  1734  00103C  8025               	bsf	(??___ftmul+1)& (0+255),0,c
  1735  00103E                     u551:
  1736  00103E  5024               	movf	??___ftmul,w,c
  1737  001040  6E2C               	movwf	___ftmul@sign,c
  1738  001042  502C               	movf	___ftmul@sign,w,c
  1739  001044  A4D8               	btfss	status,2,c
  1740  001046  D007               	goto	l1387
  1741  001048                     l1383:
  1742  001048  0E00               	movlw	0
  1743  00104A  6E1E               	movwf	?___ftmul,c
  1744  00104C  0E00               	movlw	0
  1745  00104E  6E1F               	movwf	?___ftmul+1,c
  1746  001050  0E00               	movlw	0
  1747  001052  6E20               	movwf	?___ftmul+2,c
  1748  001054  D058               	goto	l637
  1749  001056                     l1387:
  1750  001056  502C               	movf	___ftmul@sign,w,c
  1751  001058  0F7B               	addlw	123
  1752  00105A  2627               	addwf	___ftmul@exp,f,c
  1753  00105C  C020  F02C         	movff	___ftmul@f1+2,___ftmul@sign
  1754  001060  5023               	movf	___ftmul@f2+2,w,c
  1755  001062  1A2C               	xorwf	___ftmul@sign,f,c
  1756  001064  0E80               	movlw	128
  1757  001066  162C               	andwf	___ftmul@sign,f,c
  1758  001068  8E1F               	bsf	___ftmul@f1+1,7,c
  1759  00106A  8E22               	bsf	___ftmul@f2+1,7,c
  1760  00106C  0EFF               	movlw	255
  1761  00106E  1621               	andwf	___ftmul@f2,f,c
  1762  001070  0EFF               	movlw	255
  1763  001072  1622               	andwf	___ftmul@f2+1,f,c
  1764  001074  0E00               	movlw	0
  1765  001076  1623               	andwf	___ftmul@f2+2,f,c
  1766  001078  0E00               	movlw	0
  1767  00107A  6E28               	movwf	___ftmul@f3_as_product,c
  1768  00107C  0E00               	movlw	0
  1769  00107E  6E29               	movwf	___ftmul@f3_as_product+1,c
  1770  001080  0E00               	movlw	0
  1771  001082  6E2A               	movwf	___ftmul@f3_as_product+2,c
  1772  001084  0E07               	movlw	7
  1773  001086  6E2B               	movwf	___ftmul@cntr,c
  1774  001088  D000               	goto	l1401
  1775  00108A                     l1401:
  1776  00108A  A01E               	btfss	___ftmul@f1,0,c
  1777  00108C  D007               	goto	l1405
  1778  00108E  5021               	movf	___ftmul@f2,w,c
  1779  001090  2628               	addwf	___ftmul@f3_as_product,f,c
  1780  001092  5022               	movf	___ftmul@f2+1,w,c
  1781  001094  2229               	addwfc	___ftmul@f3_as_product+1,f,c
  1782  001096  5023               	movf	___ftmul@f2+2,w,c
  1783  001098  222A               	addwfc	___ftmul@f3_as_product+2,f,c
  1784  00109A  D000               	goto	l1405
  1785  00109C                     l1405:
  1786  00109C  90D8               	bcf	status,0,c
  1787  00109E  3220               	rrcf	___ftmul@f1+2,f,c
  1788  0010A0  321F               	rrcf	___ftmul@f1+1,f,c
  1789  0010A2  321E               	rrcf	___ftmul@f1,f,c
  1790  0010A4  90D8               	bcf	status,0,c
  1791  0010A6  3621               	rlcf	___ftmul@f2,f,c
  1792  0010A8  3622               	rlcf	___ftmul@f2+1,f,c
  1793  0010AA  3623               	rlcf	___ftmul@f2+2,f,c
  1794  0010AC  2E2B               	decfsz	___ftmul@cntr,f,c
  1795  0010AE  D7ED               	goto	l1401
  1796  0010B0  D000               	goto	l1409
  1797  0010B2                     l1409:
  1798  0010B2  0E09               	movlw	9
  1799  0010B4  6E2B               	movwf	___ftmul@cntr,c
  1800  0010B6  D000               	goto	l1411
  1801  0010B8                     l1411:
  1802  0010B8  A01E               	btfss	___ftmul@f1,0,c
  1803  0010BA  D007               	goto	l1415
  1804  0010BC  5021               	movf	___ftmul@f2,w,c
  1805  0010BE  2628               	addwf	___ftmul@f3_as_product,f,c
  1806  0010C0  5022               	movf	___ftmul@f2+1,w,c
  1807  0010C2  2229               	addwfc	___ftmul@f3_as_product+1,f,c
  1808  0010C4  5023               	movf	___ftmul@f2+2,w,c
  1809  0010C6  222A               	addwfc	___ftmul@f3_as_product+2,f,c
  1810  0010C8  D000               	goto	l1415
  1811  0010CA                     l1415:
  1812  0010CA  90D8               	bcf	status,0,c
  1813  0010CC  3220               	rrcf	___ftmul@f1+2,f,c
  1814  0010CE  321F               	rrcf	___ftmul@f1+1,f,c
  1815  0010D0  321E               	rrcf	___ftmul@f1,f,c
  1816  0010D2  90D8               	bcf	status,0,c
  1817  0010D4  322A               	rrcf	___ftmul@f3_as_product+2,f,c
  1818  0010D6  3229               	rrcf	___ftmul@f3_as_product+1,f,c
  1819  0010D8  3228               	rrcf	___ftmul@f3_as_product,f,c
  1820  0010DA  2E2B               	decfsz	___ftmul@cntr,f,c
  1821  0010DC  D7ED               	goto	l1411
  1822  0010DE  D000               	goto	l1419
  1823  0010E0                     l1419:
  1824  0010E0  C028  F012         	movff	___ftmul@f3_as_product,___ftpack@arg
  1825  0010E4  C029  F013         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1826  0010E8  C02A  F014         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1827  0010EC  C027  F015         	movff	___ftmul@exp,___ftpack@exp
  1828  0010F0  C02C  F016         	movff	___ftmul@sign,___ftpack@sign
  1829  0010F4  ECF7  F008         	call	___ftpack	;wreg free
  1830  0010F8  C012  F01E         	movff	?___ftpack,?___ftmul
  1831  0010FC  C013  F01F         	movff	?___ftpack+1,?___ftmul+1
  1832  001100  C014  F020         	movff	?___ftpack+2,?___ftmul+2
  1833  001104  D000               	goto	l637
  1834  001106                     l637:
  1835  001106  0012               	return		;funcret
  1836  001108                     __end_of___ftmul:
  1837                           	opt stack 0
  1838                           intcon	equ	0xFF2
  1839                           intcon2	equ	0xFF1
  1840                           intcon3	equ	0xFF0
  1841                           wreg	equ	0xFE8
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function ___awtoft *****************
  1845 ;; Defined at:
  1846 ;;		line 32 in file "/opt/microchip/xc8/v1.34/sources/common/awtoft.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  c               2   25[COMRAM] int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  sign            1   28[COMRAM] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  3   25[COMRAM] float 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        4 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    3
  1867 ;; This function calls:
  1868 ;;		___ftpack
  1869 ;; This function is called by:
  1870 ;;		_DetectMovement
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text16
  1875  00152E                     __ptext16:
  1876                           	opt stack 0
  1877  00152E                     ___awtoft:
  1878                           	opt stack 26
  1879                           
  1880                           ;incstack = 0
  1881  00152E  0E00               	movlw	0
  1882  001530  6E1D               	movwf	___awtoft@sign,c
  1883  001532  AE1B               	btfss	___awtoft@c+1,7,c
  1884  001534  D007               	goto	l1431
  1885  001536  6C1A               	negf	___awtoft@c,c
  1886  001538  1E1B               	comf	___awtoft@c+1,f,c
  1887  00153A  B0D8               	btfsc	status,0,c
  1888  00153C  2A1B               	incf	___awtoft@c+1,f,c
  1889  00153E  0E01               	movlw	1
  1890  001540  6E1D               	movwf	___awtoft@sign,c
  1891  001542  D000               	goto	l1431
  1892  001544                     l1431:
  1893  001544  C01A  F012         	movff	___awtoft@c,___ftpack@arg
  1894  001548  C01B  F013         	movff	___awtoft@c+1,___ftpack@arg+1
  1895  00154C  6A14               	clrf	___ftpack@arg+2,c
  1896  00154E  0E8E               	movlw	142
  1897  001550  6E15               	movwf	___ftpack@exp,c
  1898  001552  C01D  F016         	movff	___awtoft@sign,___ftpack@sign
  1899  001556  ECF7  F008         	call	___ftpack	;wreg free
  1900  00155A  C012  F01A         	movff	?___ftpack,?___awtoft
  1901  00155E  C013  F01B         	movff	?___ftpack+1,?___awtoft+1
  1902  001562  C014  F01C         	movff	?___ftpack+2,?___awtoft+2
  1903  001566  D000               	goto	l453
  1904  001568                     l453:
  1905  001568  0012               	return		;funcret
  1906  00156A                     __end_of___awtoft:
  1907                           	opt stack 0
  1908                           intcon	equ	0xFF2
  1909                           intcon2	equ	0xFF1
  1910                           intcon3	equ	0xFF0
  1911                           wreg	equ	0xFE8
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function ___ftpack *****************
  1915 ;; Defined at:
  1916 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  arg             3   17[COMRAM] unsigned um
  1919 ;;  exp             1   20[COMRAM] unsigned char 
  1920 ;;  sign            1   21[COMRAM] unsigned char 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  3   17[COMRAM] float 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1932 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;Total ram usage:        8 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    2
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		___awtoft
  1943 ;;		___ftmul
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text17
  1948  0011EE                     __ptext17:
  1949                           	opt stack 0
  1950  0011EE                     ___ftpack:
  1951                           	opt stack 26
  1952                           
  1953                           ;incstack = 0
  1954  0011EE  5015               	movf	___ftpack@exp,w,c
  1955  0011F0  B4D8               	btfsc	status,2,c
  1956  0011F2  D005               	goto	l1309
  1957  0011F4  5012               	movf	___ftpack@arg,w,c
  1958  0011F6  1013               	iorwf	___ftpack@arg+1,w,c
  1959  0011F8  1014               	iorwf	___ftpack@arg+2,w,c
  1960  0011FA  A4D8               	btfss	status,2,c
  1961  0011FC  D00E               	goto	l1315
  1962  0011FE                     l1309:
  1963  0011FE  0E00               	movlw	0
  1964  001200  6E12               	movwf	?___ftpack,c
  1965  001202  0E00               	movlw	0
  1966  001204  6E13               	movwf	?___ftpack+1,c
  1967  001206  0E00               	movlw	0
  1968  001208  6E14               	movwf	?___ftpack+2,c
  1969  00120A  D053               	goto	l550
  1970  00120C  D006               	goto	l1315
  1971  00120E                     l1313:
  1972  00120E  2A15               	incf	___ftpack@exp,f,c
  1973  001210  90D8               	bcf	status,0,c
  1974  001212  3214               	rrcf	___ftpack@arg+2,f,c
  1975  001214  3213               	rrcf	___ftpack@arg+1,f,c
  1976  001216  3212               	rrcf	___ftpack@arg,f,c
  1977  001218  D000               	goto	l1315
  1978  00121A                     l1315:
  1979  00121A  0E00               	movlw	0
  1980  00121C  1412               	andwf	___ftpack@arg,w,c
  1981  00121E  6E17               	movwf	??___ftpack& (0+255),c
  1982  001220  0E00               	movlw	0
  1983  001222  1413               	andwf	___ftpack@arg+1,w,c
  1984  001224  6E18               	movwf	(??___ftpack+1)& (0+255),c
  1985  001226  0EFE               	movlw	254
  1986  001228  1414               	andwf	___ftpack@arg+2,w,c
  1987  00122A  6E19               	movwf	(??___ftpack+2)& (0+255),c
  1988  00122C  5017               	movf	??___ftpack,w,c
  1989  00122E  1018               	iorwf	??___ftpack+1,w,c
  1990  001230  1019               	iorwf	??___ftpack+2,w,c
  1991  001232  B4D8               	btfsc	status,2,c
  1992  001234  D00E               	goto	l1321
  1993  001236  D7EB               	goto	l1313
  1994  001238  D00C               	goto	l1321
  1995  00123A                     l1317:
  1996  00123A  2A15               	incf	___ftpack@exp,f,c
  1997  00123C  0E01               	movlw	1
  1998  00123E  2612               	addwf	___ftpack@arg,f,c
  1999  001240  0E00               	movlw	0
  2000  001242  2213               	addwfc	___ftpack@arg+1,f,c
  2001  001244  0E00               	movlw	0
  2002  001246  2214               	addwfc	___ftpack@arg+2,f,c
  2003  001248  90D8               	bcf	status,0,c
  2004  00124A  3214               	rrcf	___ftpack@arg+2,f,c
  2005  00124C  3213               	rrcf	___ftpack@arg+1,f,c
  2006  00124E  3212               	rrcf	___ftpack@arg,f,c
  2007  001250  D000               	goto	l1321
  2008  001252                     l1321:
  2009  001252  0E00               	movlw	0
  2010  001254  1412               	andwf	___ftpack@arg,w,c
  2011  001256  6E17               	movwf	??___ftpack& (0+255),c
  2012  001258  0E00               	movlw	0
  2013  00125A  1413               	andwf	___ftpack@arg+1,w,c
  2014  00125C  6E18               	movwf	(??___ftpack+1)& (0+255),c
  2015  00125E  0EFF               	movlw	255
  2016  001260  1414               	andwf	___ftpack@arg+2,w,c
  2017  001262  6E19               	movwf	(??___ftpack+2)& (0+255),c
  2018  001264  5017               	movf	??___ftpack,w,c
  2019  001266  1018               	iorwf	??___ftpack+1,w,c
  2020  001268  1019               	iorwf	??___ftpack+2,w,c
  2021  00126A  B4D8               	btfsc	status,2,c
  2022  00126C  D008               	goto	l1325
  2023  00126E  D7E5               	goto	l1317
  2024  001270  D006               	goto	l1325
  2025  001272                     l1323:
  2026  001272  0615               	decf	___ftpack@exp,f,c
  2027  001274  90D8               	bcf	status,0,c
  2028  001276  3612               	rlcf	___ftpack@arg,f,c
  2029  001278  3613               	rlcf	___ftpack@arg+1,f,c
  2030  00127A  3614               	rlcf	___ftpack@arg+2,f,c
  2031  00127C  D000               	goto	l1325
  2032  00127E                     l1325:
  2033  00127E  BE13               	btfsc	___ftpack@arg+1,7,c
  2034  001280  D004               	goto	l561
  2035  001282  0E02               	movlw	2
  2036  001284  6015               	cpfslt	___ftpack@exp,c
  2037  001286  D7F5               	goto	l1323
  2038  001288  D000               	goto	l561
  2039  00128A                     l561:
  2040  00128A  B015               	btfsc	___ftpack@exp,0,c
  2041  00128C  D002               	goto	l1331
  2042  00128E  9E13               	bcf	___ftpack@arg+1,7,c
  2043  001290  D000               	goto	l1331
  2044  001292                     l1331:
  2045  001292  90D8               	bcf	status,0,c
  2046  001294  3215               	rrcf	___ftpack@exp,f,c
  2047  001296  5015               	movf	___ftpack@exp,w,c
  2048  001298  1214               	iorwf	___ftpack@arg+2,f,c
  2049  00129A  5016               	movf	___ftpack@sign,w,c
  2050  00129C  B4D8               	btfsc	status,2,c
  2051  00129E  D002               	goto	l1337
  2052  0012A0  8E14               	bsf	___ftpack@arg+2,7,c
  2053  0012A2  D000               	goto	l1337
  2054  0012A4                     l1337:
  2055  0012A4  C012  F012         	movff	___ftpack@arg,?___ftpack
  2056  0012A8  C013  F013         	movff	___ftpack@arg+1,?___ftpack+1
  2057  0012AC  C014  F014         	movff	___ftpack@arg+2,?___ftpack+2
  2058  0012B0  D000               	goto	l550
  2059  0012B2                     l550:
  2060  0012B2  0012               	return		;funcret
  2061  0012B4                     __end_of___ftpack:
  2062                           	opt stack 0
  2063                           intcon	equ	0xFF2
  2064                           intcon2	equ	0xFF1
  2065                           intcon3	equ	0xFF0
  2066                           wreg	equ	0xFE8
  2067                           status	equ	0xFD8
  2068                           
  2069 ;; *************** function _LowISR *****************
  2070 ;; Defined at:
  2071 ;;		line 25 in file "JoystickDriver.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:       17 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    1
  2092 ;; This function calls:
  2093 ;;		_DetectJoystick
  2094 ;; This function is called by:
  2095 ;;		Interrupt level 1
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	intcodelo
  2100  000018                     __pintcodelo:
  2101                           	opt stack 0
  2102  000018                     _LowISR:
  2103                           	opt stack 24
  2104                           
  2105                           ;incstack = 0
  2106  000018  CFD8 F001          	movff	status,??_LowISR
  2107  00001C  CFE8 F002          	movff	wreg,??_LowISR+1
  2108  000020  CFE0 F003          	movff	bsr,??_LowISR+2
  2109  000024  CFFA F004          	movff	pclath,??_LowISR+3
  2110  000028  CFFB F005          	movff	pclatu,??_LowISR+4
  2111  00002C  CFE9 F006          	movff	fsr0l,??_LowISR+5
  2112  000030  CFEA F007          	movff	fsr0h,??_LowISR+6
  2113  000034  CFE1 F008          	movff	fsr1l,??_LowISR+7
  2114  000038  CFE2 F009          	movff	fsr1h,??_LowISR+8
  2115  00003C  CFD9 F00A          	movff	fsr2l,??_LowISR+9
  2116  000040  CFDA F00B          	movff	fsr2h,??_LowISR+10
  2117  000044  CFF3 F00C          	movff	prodl,??_LowISR+11
  2118  000048  CFF4 F00D          	movff	prodh,??_LowISR+12
  2119  00004C  CFF6 F00E          	movff	tblptrl,??_LowISR+13
  2120  000050  CFF7 F00F          	movff	tblptrh,??_LowISR+14
  2121  000054  CFF8 F010          	movff	tblptru,??_LowISR+15
  2122  000058  CFF5 F011          	movff	tablat,??_LowISR+16
  2123                           
  2124                           ;JoystickDriver.c: 27: if(INTCON3bits.INT1IF == 1)
  2125  00005C  A0F0               	btfss	intcon3,0,c	;volatile
  2126  00005E  D003               	goto	i1l63
  2127                           
  2128                           ;JoystickDriver.c: 28: {
  2129                           ;JoystickDriver.c: 29: DetectJoystick();
  2130  000060  EC0E  F00B         	call	_DetectJoystick	;wreg free
  2131  000064  D000               	goto	i1l63
  2132  000066                     i1l63:
  2133  000066  C011  FFF5         	movff	??_LowISR+16,tablat
  2134  00006A  C010  FFF8         	movff	??_LowISR+15,tblptru
  2135  00006E  C00F  FFF7         	movff	??_LowISR+14,tblptrh
  2136  000072  C00E  FFF6         	movff	??_LowISR+13,tblptrl
  2137  000076  C00D  FFF4         	movff	??_LowISR+12,prodh
  2138  00007A  C00C  FFF3         	movff	??_LowISR+11,prodl
  2139  00007E  C00B  FFDA         	movff	??_LowISR+10,fsr2h
  2140  000082  C00A  FFD9         	movff	??_LowISR+9,fsr2l
  2141  000086  C009  FFE2         	movff	??_LowISR+8,fsr1h
  2142  00008A  C008  FFE1         	movff	??_LowISR+7,fsr1l
  2143  00008E  C007  FFEA         	movff	??_LowISR+6,fsr0h
  2144  000092  C006  FFE9         	movff	??_LowISR+5,fsr0l
  2145  000096  C005  FFFB         	movff	??_LowISR+4,pclatu
  2146  00009A  C004  FFFA         	movff	??_LowISR+3,pclath
  2147  00009E  C003  FFE0         	movff	??_LowISR+2,bsr
  2148  0000A2  C002  FFE8         	movff	??_LowISR+1,wreg
  2149  0000A6  C001  FFD8         	movff	??_LowISR,status
  2150  0000AA  0010               	retfie	
  2151  0000AC                     __end_of_LowISR:
  2152                           	opt stack 0
  2153                           pclatu	equ	0xFFB
  2154                           pclath	equ	0xFFA
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           prodh	equ	0xFF4
  2160                           prodl	equ	0xFF3
  2161                           intcon	equ	0xFF2
  2162                           intcon2	equ	0xFF1
  2163                           intcon3	equ	0xFF0
  2164                           fsr0h	equ	0xFEA
  2165                           fsr0l	equ	0xFE9
  2166                           wreg	equ	0xFE8
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           bsr	equ	0xFE0
  2170                           fsr2h	equ	0xFDA
  2171                           fsr2l	equ	0xFD9
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _DetectJoystick *****************
  2175 ;; Defined at:
  2176 ;;		line 37 in file "Joystick.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_LowISR
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text19
  2204  00161C                     __ptext19:
  2205                           	opt stack 0
  2206  00161C                     _DetectJoystick:
  2207                           	opt stack 24
  2208                           
  2209                           ;Joystick.c: 39: if (PORTBbits.RB1 == 0)
  2210                           
  2211                           ;incstack = 0
  2212  00161C  B281               	btfsc	3969,1,c	;volatile
  2213  00161E  D003               	goto	i1l115
  2214                           
  2215                           ;Joystick.c: 40: {
  2216                           ;Joystick.c: 41: INTCON2bits.INTEDG1 == 1;
  2217  001620  50F1               	movf	intcon2,w,c	;volatile
  2218                           
  2219                           ;Joystick.c: 42: PORTAbits.RA2 = 0;
  2220  001622  9480               	bcf	3968,2,c	;volatile
  2221                           
  2222                           ;Joystick.c: 43: }
  2223  001624  D005               	goto	i1l1191
  2224  001626                     i1l115:
  2225                           
  2226                           ;Joystick.c: 45: else if (PORTBbits.RB1 == 1)
  2227  001626  A281               	btfss	3969,1,c	;volatile
  2228  001628  D003               	goto	i1l1191
  2229                           
  2230                           ;Joystick.c: 46: {
  2231                           ;Joystick.c: 47: INTCON2bits.INTEDG1 = 0;
  2232  00162A  9AF1               	bcf	intcon2,5,c	;volatile
  2233                           
  2234                           ;Joystick.c: 48: PORTAbits.RA2 = 1;
  2235  00162C  8480               	bsf	3968,2,c	;volatile
  2236  00162E  D000               	goto	i1l1191
  2237  001630                     i1l1191:
  2238                           
  2239                           ;Joystick.c: 49: }
  2240                           ;Joystick.c: 51: INTCON3bits.INT1IF == 0;
  2241  001630  50F0               	movf	intcon3,w,c	;volatile
  2242  001632  0012               	return		;funcret
  2243  001634                     __end_of_DetectJoystick:
  2244                           	opt stack 0
  2245                           pclatu	equ	0xFFB
  2246                           pclath	equ	0xFFA
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           prodh	equ	0xFF4
  2252                           prodl	equ	0xFF3
  2253                           intcon	equ	0xFF2
  2254                           intcon2	equ	0xFF1
  2255                           intcon3	equ	0xFF0
  2256                           fsr0h	equ	0xFEA
  2257                           fsr0l	equ	0xFE9
  2258                           wreg	equ	0xFE8
  2259                           fsr1h	equ	0xFE2
  2260                           fsr1l	equ	0xFE1
  2261                           bsr	equ	0xFE0
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           pclatu	equ	0xFFB
  2266                           pclath	equ	0xFFA
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           intcon	equ	0xFF2
  2274                           intcon2	equ	0xFF1
  2275                           intcon3	equ	0xFF0
  2276                           fsr0h	equ	0xFEA
  2277                           fsr0l	equ	0xFE9
  2278                           wreg	equ	0xFE8
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           bsr	equ	0xFE0
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286                           	psect	rparam
  2287  0000                     pclatu	equ	0xFFB
  2288                           pclath	equ	0xFFA
  2289                           tblptru	equ	0xFF8
  2290                           tblptrh	equ	0xFF7
  2291                           tblptrl	equ	0xFF6
  2292                           tablat	equ	0xFF5
  2293                           prodh	equ	0xFF4
  2294                           prodl	equ	0xFF3
  2295                           intcon	equ	0xFF2
  2296                           intcon2	equ	0xFF1
  2297                           intcon3	equ	0xFF0
  2298                           fsr0h	equ	0xFEA
  2299                           fsr0l	equ	0xFE9
  2300                           wreg	equ	0xFE8
  2301                           fsr1h	equ	0xFE2
  2302                           fsr1l	equ	0xFE1
  2303                           bsr	equ	0xFE0
  2304                           fsr2h	equ	0xFDA
  2305                           fsr2l	equ	0xFD9
  2306                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     71      73
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ImplementJSMotion
    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _lcdCommand->_setGPIO
    _setGPIO->_WriteSPI1
    _ImplementJSMotion->_DetectMovement
    _DetectMovement->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LowISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7426
                     _DetectMovement
                  _ImplementJSMotion
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    1710
                       _JoystickInit
                    _MotorDriverInit
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1710
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     187
                                             19 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     672
                                             21 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     635
                                             19 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      15
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     216
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _MotorDriverInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ImplementJSMotion                                    6     4      2     395
                                             65 COMRAM     6     4      2
                     _DetectMovement (ARG)
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     130
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DetectMovement                                       6     4      2    5321
                                             59 COMRAM     6     4      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             44 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2676
                                             29 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2147
                                             25 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             17 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _LowISR                                              17    17      0       0
                                              0 COMRAM    17    17      0
                     _DetectJoystick
 ---------------------------------------------------------------------------------
 (7) _DetectJoystick                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DetectMovement
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _ImplementJSMotion
     _DetectMovement (ARG)
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _abs (ARG)
   _initialize
     _JoystickInit
     _MotorDriverInit
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1

 _LowISR (ROOT)
   _DetectJoystick

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     47      49       1       76.8%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49       6        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Aug 23 03:31:17 2015

      __size_of_MotorDriverInit 001A                              l56 15B8                              bsr 000FE0  
     ImplementJSMotion@CCPinput 0046                             l121 12B8                             l210 1440  
                           l202 141E                             l211 1444                             l204 1422  
                           l109 1504                             l205 1424                             l127 1362  
                           l208 143E                             l224 15B2                             l209 1458  
                           l226 15AA                             l460 1658                             l453 1568  
                           l550 12B2                             l278 1588                             l279 1590  
                           l561 128A                             l637 1106                             l658 11EC  
                           l857 164A                             l991 1512                             _PR2 000FCB  
                           u601 1118                             u531 1020                             u620 1144  
                           u551 103E                             u625 113C                             u730 138C  
                           u767 164C                             _abs 156A               lcdCommand@command 0016  
                           wreg 000FE8                    __CFG_WDT$OFF 000000                            ?_abs 0012  
                          l1301 1448                            l1321 1252                            l1313 120E  
                          l1401 108A                            l1331 1292                            l1323 1272  
                          l1315 121A                            l1411 10B8                            l1325 127E  
                          l1317 123A                            l1309 11FE                            l1405 109C  
                          l1431 1544                            l1415 10CA                            l1337 12A4  
                          l1409 10B2                            l1441 1126                            l1513 133A  
                          l1419 10E0                            l1523 1358                            l1515 134A  
                          l1381 102E                            l1541 13B0                            l1533 137C  
                          l1383 1048                            l1471 11B8                            l1463 1190  
                          l1543 13BA                            l1465 1196                            l1473 11C2  
                          l1537 1390                            l1297 1428                            l1387 1056  
                          l1459 1180                            l1539 13A0                            l1477 11DA  
                          l1469 11AA                            STR_1 1008                            STR_2 1001  
                          i1l63 0066  ImplementJSMotion@JoystickValue 0042                            abs@a 0012  
                          _main 15B4                    ___ftpack@arg 0012                    ___ftpack@exp 0015  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            fsr1l 000FE1                            fsr2l 000FD9  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 00AC                    ___ftmul@cntr 002B                    ___param_bank 000010  
                  ___ftmul@sign 002C                     _Delay10TCYx 1648                    ___fttol@exp1 003B  
                         ??_abs 0014                    ___fttol@lval 0037                           ?_main 0001  
               __end_of___ftmul 1108                 __end_of___fttol 11EE                           _T2CON 000FCA  
                         _T3CON 000FB1                           i1l115 1626                           _PORTD 000F83  
                         _PORTH 000F87                           _TRISD 000F95                           _TRISH 000F99  
               __end_of_lcdInit 14AA                  __CFG_FCMEN$OFF 000000                   ___awtoft@sign 001D  
               __end_of_setGPIO 1602                   ___ftpack@sign 0016                           tablat 000FF5  
                         status 000FD8      __size_of_ImplementJSMotion 00A6                 __initialization 165A  
                  __end_of_main 15CE                  _DetectJoystick 161C                  _DetectMovement 12B4  
                __CFG_OSC$HSPLL 000000                __end_of_OpenSPI1 1460                          ??_main 0048  
                 ___fttol@sign1 0036                   __activetblptr 000003               ??_MotorDriverInit 0012  
       DetectMovement@ADCresult 0040                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                          _ADRESH 000FC4                          _ADRESL 000FC3  
                        _CCPR3L 000FB8                __end_of___awtoft 156A                __end_of___ftpack 12B4  
                        i1l1191 1630                          _INTCON 000FF2                          _LowISR 0018  
        __end_of_DetectJoystick 1634          __end_of_DetectMovement 1364                OpenSPI1@bus_mode 0012  
                     ??___ftmul 0024                       ??___fttol 0031                __end_of_setIODIR 15E8  
                   setIODIR@dir 0014                       ??_lcdInit 0017           ___ftmul@f3_as_product 0028  
                     ??_setGPIO 0015                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                      __accesstop 0060  
       __end_of__initialization 165E              __size_of_WriteSPI1 0022                   ___rparam_used 000001  
                    ___awtoft@c 001A                      ___ftmul@f1 001E                      ___ftmul@f2 0021  
               ?_DetectJoystick 0001                 ?_DetectMovement 003C                      ___fttol@f1 002D  
                __pcstackCOMRAM 0001                WriteSPI1@TempVar 0012                   ?_JoystickInit 0001  
                     ?_OpenSPI1 0012                         ?_LowISR 0001                    ?_Delay10TCYx 0001  
                    _lcdCommand 14AA                         _CCP3CON 000FB7                       ?___awtoft 001A  
                     ?___ftpack 0012               __end_of_WriteSPI1 15B4                   _PIDEnableFlag 0049  
                       _SSP1BUF 000FC9                  ??_JoystickInit 0012                       ?_setIODIR 0014  
                    ??_OpenSPI1 0014                         __Hparam 0000                         __Lparam 0000  
               __size_of_LowISR 0094                 _MotorDriverInit 1602                         ___ftmul 1010  
                       ___fttol 1108                    __psmallconst 1000                         __pcinit 165A  
                    ??___awtoft 001D                      ??___ftpack 0017                 Delay10TCYx@unit 0012  
                       __ramtop 1000                      _initialize 1634                         _lcdInit 1460  
                       __ptext0 15B4                         __ptext1 1634                         __ptext2 1460  
                       __ptext3 15CE                         __ptext4 14AA                         __ptext5 15E8  
                       __ptext6 1592                         __ptext7 1648                         __ptext8 140A  
                       __ptext9 1602                    __size_of_abs 0028                         _setGPIO 15E8  
               setIODIR@address 0015                    setGPIO@value 0014            end_of_initialization 165E  
                    ??_setIODIR 0015               OpenSPI1@smp_phase 0013                     ?_lcdCommand 0001  
             OpenSPI1@sync_mode 0014                       _PORTAbits 000F80                       _PORTBbits 000F81  
                     _PORTEbits 000F84                       _TRISAbits 000F92                       _TRISBbits 000F93  
                     _TRISCbits 000F94                       _TRISEbits 000F96                       _TRISFbits 000F97  
                     _TRISGbits 000F98                       _TRISJbits 000F9A         __end_of_MotorDriverInit 161C  
              ??_DetectJoystick 0001                ??_DetectMovement 003E                     _CCP3CONbits 000FB7  
                   ___ftmul@exp 0027                  __end_of_LowISR 00AC            __size_of_Delay10TCYx 0012  
                   ?_initialize 0001            __end_of_JoystickInit 152E             start_initialization 165A  
                   __end_of_abs 1592             __size_of_lcdCommand 0044                        ??_LowISR 0001  
             __size_of_OpenSPI1 0056               __size_of___awtoft 003C               __size_of___ftpack 00C6  
                   __pbssCOMRAM 0048                       _WriteSPI1 1592                ?_MotorDriverInit 0001  
           __size_of_initialize 0014               WriteSPI1@data_out 0013               __size_of_setIODIR 001A  
                      ?___ftmul 001E                        ?___fttol 002D                     __pintcodelo 0018  
                      ?_lcdInit 0001                     __smallconst 1000                        ?_setGPIO 0014  
                    ?_WriteSPI1 0001                        _PIR1bits 000F9E                  setGPIO@address 0015  
                      _RCONbits 000FD0                    ??_lcdCommand 0016           __size_of_JoystickInit 0040  
                      _SSP1CON1 000FC6                        _SSP1STAT 000FC7               __CFG_ECCPMX$PORTE 000000  
                    _ADCON0bits 000FC2                     _INTCON2bits 000FF1                     _INTCON3bits 000FF0  
            __end_of_lcdCommand 14EE                    _JoystickInit 14EE                        _OpenSPI1 140A  
                      __Hrparam 0000                        __Lrparam 0000                    _JSEnableFlag 0048  
              __size_of___ftmul 00F8                __size_of___fttol 00E6                    ??_initialize 0017  
                      ___awtoft 152E                        ___ftpack 11EE                __size_of_lcdInit 004A  
              __size_of_setGPIO 001A                     ??_WriteSPI1 0012                        __ptext10 14EE  
                      __ptext11 1364                        __ptext12 156A                        __ptext13 12B4  
                      __ptext14 1108                        __ptext15 1010                        __ptext16 152E  
                      __ptext17 11EE                        __ptext19 161C                    _SSP1CON1bits 000FC6  
                      _setIODIR 15CE                   __size_of_main 001A              __end_of_initialize 1648  
                 ??_Delay10TCYx 0012                    _SSP1STATbits 000FC7                        intlevel1 0000  
  DetectMovement@JoystickResult 003E               _ImplementJSMotion 1364              ?_ImplementJSMotion 0042  
       __size_of_DetectJoystick 0018         __size_of_DetectMovement 00B0             __end_of_Delay10TCYx 165A  
           ??_ImplementJSMotion 0044       __end_of_ImplementJSMotion 140A  
