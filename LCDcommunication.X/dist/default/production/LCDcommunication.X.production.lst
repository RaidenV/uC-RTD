

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 11 04:45:48 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	idataCOMRAM
    25  00124E                     __pidataCOMRAM:
    26                           	opt stack 0
    27                           
    28                           ;initializer for _mynameis
    29  00124E  4D                 	db	77
    30  00124F  79                 	db	121
    31  001250  20                 	db	32
    32  001251  6E                 	db	110
    33  001252  61                 	db	97
    34  001253  6D                 	db	109
    35  001254  65                 	db	101
    36  001255  20                 	db	32
    37  001256  69                 	db	105
    38  001257  73                 	db	115
    39  001258  20                 	db	32
    40  001259  41                 	db	65
    41  00125A  6C                 	db	108
    42  00125B  65                 	db	101
    43  00125C  78                 	db	120
    44  0000                     _PIR1bits	set	3998
    45  0000                     _PORTAbits	set	3968
    46  0000                     _SSP1BUF	set	4041
    47  0000                     _SSP1CON1	set	4038
    48  0000                     _SSP1CON1bits	set	4038
    49  0000                     _SSP1STAT	set	4039
    50  0000                     _SSP1STATbits	set	4039
    51  0000                     _TRISAbits	set	3986
    52  0000                     _TRISCbits	set	3988
    53  0000                     _TRISFbits	set	3991
    54                           
    55                           	psect	smallconst
    56  001000                     __psmallconst:
    57                           	opt stack 0
    58  001000  00                 	db	0
    59  001001                     STR_1:
    60  001001  48                 	db	72	;'H'
    61  001002  65                 	db	101	;'e'
    62  001003  6C                 	db	108	;'l'
    63  001004  6C                 	db	108	;'l'
    64  001005  6F                 	db	111	;'o'
    65  001006  20                 	db	32
    66  001007  57                 	db	87	;'W'
    67  001008  6F                 	db	111	;'o'
    68  001009  72                 	db	114	;'r'
    69  00100A  6C                 	db	108	;'l'
    70  00100B  64                 	db	100	;'d'
    71  00100C  00                 	db	0
    72                           
    73                           ; #config settings
    74  00100D  00                 	db	0	; dummy byte at the end
    75  0000                     
    76                           	psect	cinit
    77  0011BA                     __pcinit:
    78                           	opt stack 0
    79  0011BA                     start_initialization:
    80                           	opt stack 0
    81  0011BA                     __initialization:
    82                           	opt stack 0
    83                           
    84                           ; Clear objects allocated to COMRAM (3 bytes)
    85  0011BA  6A19               	clrf	(__pbssCOMRAM+2)& (0+255),c
    86  0011BC  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
    87  0011BE  6A17               	clrf	__pbssCOMRAM& (0+255),c
    88                           
    89                           ; Initialize objects allocated to COMRAM (15 bytes)
    90                           ; load TBLPTR registers with __pidataCOMRAM
    91  0011C0  0E4E               	movlw	low __pidataCOMRAM
    92  0011C2  6EF6               	movwf	tblptrl,c
    93  0011C4  0E12               	movlw	high __pidataCOMRAM
    94  0011C6  6EF7               	movwf	tblptrh,c
    95  0011C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    96  0011CA  6EF8               	movwf	tblptru,c
    97  0011CC  EE00  F001         	lfsr	0,__pdataCOMRAM
    98  0011D0  EE10 F00F          	lfsr	1,15
    99  0011D4                     copy_data0:
   100  0011D4  0009               	tblrd		*+
   101  0011D6  CFF5 FFEE          	movff	tablat,postinc0
   102  0011DA  50E5               	movf	postdec1,w,c
   103  0011DC  50E1               	movf	fsr1l,w,c
   104  0011DE  E1FA               	bnz	copy_data0
   105  0011E0                     end_of_initialization:
   106                           	opt stack 0
   107  0011E0                     __end_of__initialization:
   108                           	opt stack 0
   109  0011E0  0100               	movlb	0
   110  0011E2  EF07  F008         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           postdec1	equ	0xFE5
   117                           fsr1l	equ	0xFE1
   118                           
   119                           	psect	bssCOMRAM
   120  000017                     __pbssCOMRAM:
   121                           	opt stack 0
   122  000017                     _temp:
   123                           	opt stack 0
   124  000017                     	ds	1
   125  000018                     _x:
   126                           	opt stack 0
   127  000018                     	ds	1
   128  000019                     _y:
   129                           	opt stack 0
   130  000019                     	ds	1
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	dataCOMRAM
   140  000001                     __pdataCOMRAM:
   141                           	opt stack 0
   142  000001                     _mynameis:
   143                           	opt stack 0
   144  000001                     	ds	15
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	cstackCOMRAM
   154  000010                     __pcstackCOMRAM:
   155                           	opt stack 0
   156  000010                     OpenSPI1@bus_mode:
   157                           	opt stack 0
   158  000010                     WriteSPI1@TempVar:
   159                           	opt stack 0
   160  000010                     Delay10TCYx@unit:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x0
   164  000010                     	ds	1
   165  000011                     OpenSPI1@smp_phase:
   166                           	opt stack 0
   167  000011                     WriteSPI1@data_out:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0x1
   171  000011                     	ds	1
   172  000012                     setGPIO@value:
   173                           	opt stack 0
   174  000012                     setIODIR@dir:
   175                           	opt stack 0
   176  000012                     OpenSPI1@sync_mode:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x2
   180  000012                     	ds	1
   181  000013                     setGPIO@address:
   182                           	opt stack 0
   183  000013                     setIODIR@address:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0x3
   187  000013                     	ds	1
   188  000014                     lcdCommand@command:
   189                           	opt stack 0
   190  000014                     lcdChar@letter:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x4
   194  000014                     	ds	1
   195  000015                     lcdGoTo@pos:
   196                           	opt stack 0
   197  000015                     lcdWriteString@s:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x5
   201  000015                     	ds	2
   202  000017                     tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           tblptrl	equ	0xFF6
   205                           tablat	equ	0xFF5
   206                           postinc0	equ	0xFEE
   207                           postdec1	equ	0xFE5
   208                           fsr1l	equ	0xFE1
   209                           
   210                           ; 0 bytes @ 0x7
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 29 in file "LCDcomm.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;		None               void
   223 ;; Registers used:
   224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called:    4
   236 ;; This function calls:
   237 ;;		_OpenSPI1
   238 ;;		_lcdChar
   239 ;;		_lcdCommand
   240 ;;		_lcdGoTo
   241 ;;		_lcdWriteString
   242 ;;		_setGPIO
   243 ;;		_setIODIR
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text0
   250  00100E                     __ptext0:
   251                           	opt stack 0
   252  00100E                     _main:
   253                           	opt stack 27
   254                           
   255                           ;LCDcomm.c: 30: TRISAbits.RA2=0;
   256                           
   257                           ;incstack = 0
   258  00100E  9492               	bcf	3986,2,c	;volatile
   259                           
   260                           ;LCDcomm.c: 31: PORTAbits.RA2=1;
   261  001010  8480               	bsf	3968,2,c	;volatile
   262                           
   263                           ;LCDcomm.c: 34: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
   264  001012  0E02               	movlw	2
   265  001014  6E10               	movwf	OpenSPI1@bus_mode,c
   266  001016  0E80               	movlw	128
   267  001018  6E11               	movwf	OpenSPI1@smp_phase,c
   268  00101A  0E02               	movlw	2
   269  00101C  EC57  F008         	call	_OpenSPI1
   270                           
   271                           ;LCDcomm.c: 36: setIODIR(0x01,0x00);
   272  001020  0E00               	movlw	0
   273  001022  6E12               	movwf	setIODIR@dir,c
   274  001024  0E01               	movlw	1
   275  001026  EC04  F009         	call	_setIODIR
   276                           
   277                           ;LCDcomm.c: 38: setIODIR(0x00,0x00);
   278  00102A  0E00               	movlw	0
   279  00102C  6E12               	movwf	setIODIR@dir,c
   280  00102E  0E00               	movlw	0
   281  001030  EC04  F009         	call	_setIODIR
   282                           
   283                           ;LCDcomm.c: 40: setGPIO(0x00,0x00);
   284  001034  0E00               	movlw	0
   285  001036  6E12               	movwf	setGPIO@value,c
   286  001038  0E00               	movlw	0
   287  00103A  EC11  F009         	call	_setGPIO
   288                           
   289                           ;LCDcomm.c: 42: lcdCommand(0b00111111);
   290  00103E  0E3F               	movlw	63
   291  001040  EC82  F008         	call	_lcdCommand
   292                           
   293                           ;LCDcomm.c: 44: lcdCommand(0b00001111);
   294  001044  0E0F               	movlw	15
   295  001046  EC82  F008         	call	_lcdCommand
   296                           
   297                           ;LCDcomm.c: 46: lcdCommand(0b00000001);
   298  00104A  0E01               	movlw	1
   299  00104C  EC82  F008         	call	_lcdCommand
   300                           
   301                           ;LCDcomm.c: 48: lcdCommand(0b00000110);
   302  001050  0E06               	movlw	6
   303  001052  EC82  F008         	call	_lcdCommand
   304                           
   305                           ;LCDcomm.c: 50: lcdWriteString("Hello World");
   306  001056  0E01               	movlw	low STR_1
   307  001058  6E15               	movwf	lcdWriteString@s,c
   308  00105A  0E10               	movlw	high STR_1
   309  00105C  6E16               	movwf	lcdWriteString@s+1,c
   310  00105E  ECC3  F008         	call	_lcdWriteString	;wreg free
   311                           
   312                           ;LCDcomm.c: 51: lcdGoTo(0x40);
   313  001062  0E40               	movlw	64
   314  001064  EC2F  F009         	call	_lcdGoTo
   315  001068  D000               	goto	l921
   316  00106A                     l921:
   317                           
   318                           ;LCDcomm.c: 54: for(x = 0; x < 16; x++)
   319  00106A  0E00               	movlw	0
   320  00106C  6E18               	movwf	_x,c
   321  00106E                     l923:
   322  00106E  0E0F               	movlw	15
   323  001070  6418               	cpfsgt	_x,c
   324  001072  D001               	goto	l927
   325  001074  D7FA               	goto	l921
   326  001076                     l927:
   327                           
   328                           ;LCDcomm.c: 55: {
   329                           ;LCDcomm.c: 56: lcdGoTo((0x40 + x));
   330  001076  5018               	movf	_x,w,c
   331  001078  0F40               	addlw	64
   332  00107A  EC2F  F009         	call	_lcdGoTo
   333                           
   334                           ;LCDcomm.c: 57: lcdChar(mynameis[y]);
   335  00107E  5019               	movf	_y,w,c
   336  001080  0D01               	mullw	1
   337  001082  0E01               	movlw	low _mynameis
   338  001084  24F3               	addwf	prodl,w,c
   339  001086  6ED9               	movwf	fsr2l,c
   340  001088  0E00               	movlw	high _mynameis
   341  00108A  20F4               	addwfc	prodh,w,c
   342  00108C  6EDA               	movwf	fsr2h,c
   343  00108E  50DF               	movf	indf2,w,c
   344  001090  ECA4  F008         	call	_lcdChar
   345                           
   346                           ;LCDcomm.c: 58: y++;
   347  001094  2A19               	incf	_y,f,c
   348                           
   349                           ;LCDcomm.c: 59: if(y == 15)
   350  001096  0E0F               	movlw	15
   351  001098  1819               	xorwf	_y,w,c
   352  00109A  A4D8               	btfss	status,2,c
   353  00109C  D003               	goto	l937
   354                           
   355                           ;LCDcomm.c: 60: y = 0;
   356  00109E  0E00               	movlw	0
   357  0010A0  6E19               	movwf	_y,c
   358  0010A2  D000               	goto	l937
   359  0010A4                     l937:
   360  0010A4  2A18               	incf	_x,f,c
   361  0010A6  D7E3               	goto	l923
   362  0010A8  D7E0               	goto	l921
   363  0010AA  EF00  F000         	goto	start
   364  0010AE                     __end_of_main:
   365                           	opt stack 0
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           prodh	equ	0xFF4
   371                           prodl	equ	0xFF3
   372                           postinc0	equ	0xFEE
   373                           postdec1	equ	0xFE5
   374                           fsr1l	equ	0xFE1
   375                           indf2	equ	0xFDF
   376                           fsr2h	equ	0xFDA
   377                           fsr2l	equ	0xFD9
   378                           status	equ	0xFD8
   379                           
   380 ;; *************** function _setIODIR *****************
   381 ;; Defined at:
   382 ;;		line 85 in file "LCDcomm.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  address         1    wreg     unsigned char 
   385 ;;  dir             1    2[COMRAM] unsigned char 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  address         1    3[COMRAM] unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;		None               void
   390 ;; Registers used:
   391 ;;		wreg, status,2, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        2 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    1
   404 ;; This function calls:
   405 ;;		_WriteSPI1
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text1
   412  001208                     __ptext1:
   413                           	opt stack 0
   414  001208                     _setIODIR:
   415                           	opt stack 29
   416                           
   417                           ;incstack = 0
   418                           ;setIODIR@address stored from wreg
   419  001208  6E13               	movwf	setIODIR@address,c
   420                           
   421                           ;LCDcomm.c: 86: PORTAbits.RA2=0;
   422  00120A  9480               	bcf	3968,2,c	;volatile
   423                           
   424                           ;LCDcomm.c: 87: WriteSPI1(0x40);
   425  00120C  0E40               	movlw	64
   426  00120E  ECF3  F008         	call	_WriteSPI1
   427                           
   428                           ;LCDcomm.c: 88: WriteSPI1(address);
   429  001212  5013               	movf	setIODIR@address,w,c
   430  001214  ECF3  F008         	call	_WriteSPI1
   431                           
   432                           ;LCDcomm.c: 89: WriteSPI1(dir);
   433  001218  5012               	movf	setIODIR@dir,w,c
   434  00121A  ECF3  F008         	call	_WriteSPI1
   435                           
   436                           ;LCDcomm.c: 90: PORTAbits.RA2=1;
   437  00121E  8480               	bsf	3968,2,c	;volatile
   438  001220  0012               	return		;funcret
   439  001222                     __end_of_setIODIR:
   440                           	opt stack 0
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           prodh	equ	0xFF4
   446                           prodl	equ	0xFF3
   447                           postinc0	equ	0xFEE
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           indf2	equ	0xFDF
   451                           fsr2h	equ	0xFDA
   452                           fsr2l	equ	0xFD9
   453                           status	equ	0xFD8
   454                           
   455 ;; *************** function _lcdWriteString *****************
   456 ;; Defined at:
   457 ;;		line 130 in file "LCDcomm.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  s               2    5[COMRAM] PTR unsigned char 
   460 ;;		 -> STR_1(12), 
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;		None               void
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:        2 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    3
   479 ;; This function calls:
   480 ;;		_lcdChar
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text2
   487  001186                     __ptext2:
   488                           	opt stack 0
   489  001186                     _lcdWriteString:
   490                           	opt stack 27
   491                           
   492                           ;LCDcomm.c: 131: while(*s)
   493                           
   494                           ;incstack = 0
   495  001186  D00D               	goto	l895
   496  001188                     l891:
   497                           
   498                           ;LCDcomm.c: 132: lcdChar(*s++);
   499  001188  C015  FFF6         	movff	lcdWriteString@s,tblptrl
   500  00118C  C016  FFF7         	movff	lcdWriteString@s+1,tblptrh
   501  001190                     	if	0	;tblptru may be non-zero
   502  001190                     	endif
   503  001190                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   504  001190  0E00               	movlw	low (__mediumconst shr (0+16))
   505  001192  6EF8               	movwf	tblptru,c
   506  001194                     	endif
   507  001194  0008               	tblrd		*
   508  001196  50F5               	movf	tablat,w,c
   509  001198  ECA4  F008         	call	_lcdChar
   510  00119C  4A15               	infsnz	lcdWriteString@s,f,c
   511  00119E  2A16               	incf	lcdWriteString@s+1,f,c
   512  0011A0  D000               	goto	l895
   513  0011A2                     l895:
   514  0011A2  C015  FFF6         	movff	lcdWriteString@s,tblptrl
   515  0011A6  C016  FFF7         	movff	lcdWriteString@s+1,tblptrh
   516  0011AA                     	if	0	;tblptru may be non-zero
   517  0011AA                     	endif
   518  0011AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   519  0011AA  0E00               	movlw	low (__mediumconst shr (0+16))
   520  0011AC  6EF8               	movwf	tblptru,c
   521  0011AE                     	endif
   522  0011AE  0008               	tblrd		*
   523  0011B0  50F5               	movf	tablat,w,c
   524  0011B2  0900               	iorlw	0
   525  0011B4  A4D8               	btfss	status,2,c
   526  0011B6  D7E8               	goto	l891
   527  0011B8  0012               	return		;funcret
   528  0011BA                     __end_of_lcdWriteString:
   529                           	opt stack 0
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           prodh	equ	0xFF4
   535                           prodl	equ	0xFF3
   536                           postinc0	equ	0xFEE
   537                           postdec1	equ	0xFE5
   538                           fsr1l	equ	0xFE1
   539                           indf2	equ	0xFDF
   540                           fsr2h	equ	0xFDA
   541                           fsr2l	equ	0xFD9
   542                           status	equ	0xFD8
   543                           
   544 ;; *************** function _lcdChar *****************
   545 ;; Defined at:
   546 ;;		line 110 in file "LCDcomm.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  letter          1    wreg     unsigned char 
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  letter          1    4[COMRAM] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;		None               void
   553 ;; Registers used:
   554 ;;		wreg, status,2, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;Total ram usage:        1 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    2
   567 ;; This function calls:
   568 ;;		_Delay10TCYx
   569 ;;		_setGPIO
   570 ;; This function is called by:
   571 ;;		_main
   572 ;;		_lcdWriteString
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text3
   577  001148                     __ptext3:
   578                           	opt stack 0
   579  001148                     _lcdChar:
   580                           	opt stack 27
   581                           
   582                           ;incstack = 0
   583                           ;lcdChar@letter stored from wreg
   584  001148  6E14               	movwf	lcdChar@letter,c
   585                           
   586                           ;LCDcomm.c: 111: setGPIO(0x12,0x80);
   587  00114A  0E80               	movlw	128
   588  00114C  6E12               	movwf	setGPIO@value,c
   589  00114E  0E12               	movlw	18
   590  001150  EC11  F009         	call	_setGPIO
   591                           
   592                           ;LCDcomm.c: 112: Delay10TCYx(0);
   593  001154  0E00               	movlw	0
   594  001156  EC1E  F009         	call	_Delay10TCYx
   595                           
   596                           ;LCDcomm.c: 113: setGPIO(0x13,letter);
   597  00115A  C014  F012         	movff	lcdChar@letter,setGPIO@value
   598  00115E  0E13               	movlw	19
   599  001160  EC11  F009         	call	_setGPIO
   600                           
   601                           ;LCDcomm.c: 115: setGPIO(0x12, 0xc0);
   602  001164  0EC0               	movlw	192
   603  001166  6E12               	movwf	setGPIO@value,c
   604  001168  0E12               	movlw	18
   605  00116A  EC11  F009         	call	_setGPIO
   606                           
   607                           ;LCDcomm.c: 116: Delay10TCYx(0);
   608  00116E  0E00               	movlw	0
   609  001170  EC1E  F009         	call	_Delay10TCYx
   610                           
   611                           ;LCDcomm.c: 117: setGPIO(0x12,0x00);
   612  001174  0E00               	movlw	0
   613  001176  6E12               	movwf	setGPIO@value,c
   614  001178  0E12               	movlw	18
   615  00117A  EC11  F009         	call	_setGPIO
   616                           
   617                           ;LCDcomm.c: 118: Delay10TCYx(0);
   618  00117E  0E00               	movlw	0
   619  001180  EC1E  F009         	call	_Delay10TCYx
   620  001184  0012               	return		;funcret
   621  001186                     __end_of_lcdChar:
   622                           	opt stack 0
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           prodh	equ	0xFF4
   628                           prodl	equ	0xFF3
   629                           postinc0	equ	0xFEE
   630                           postdec1	equ	0xFE5
   631                           fsr1l	equ	0xFE1
   632                           indf2	equ	0xFDF
   633                           fsr2h	equ	0xFDA
   634                           fsr2l	equ	0xFD9
   635                           status	equ	0xFD8
   636                           
   637 ;; *************** function _lcdGoTo *****************
   638 ;; Defined at:
   639 ;;		line 125 in file "LCDcomm.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  pos             1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  pos             1    5[COMRAM] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;		None               void
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        1 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    3
   660 ;; This function calls:
   661 ;;		_lcdCommand
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text4
   668  00125E                     __ptext4:
   669                           	opt stack 0
   670  00125E                     _lcdGoTo:
   671                           	opt stack 27
   672                           
   673                           ;incstack = 0
   674                           ;lcdGoTo@pos stored from wreg
   675  00125E  6E15               	movwf	lcdGoTo@pos,c
   676                           
   677                           ;LCDcomm.c: 127: lcdCommand(0x80+pos);
   678  001260  5015               	movf	lcdGoTo@pos,w,c
   679  001262  0F80               	addlw	128
   680  001264  EC82  F008         	call	_lcdCommand
   681  001268  0012               	return		;funcret
   682  00126A                     __end_of_lcdGoTo:
   683                           	opt stack 0
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           prodh	equ	0xFF4
   689                           prodl	equ	0xFF3
   690                           postinc0	equ	0xFEE
   691                           postdec1	equ	0xFE5
   692                           fsr1l	equ	0xFE1
   693                           indf2	equ	0xFDF
   694                           fsr2h	equ	0xFDA
   695                           fsr2l	equ	0xFD9
   696                           status	equ	0xFD8
   697                           
   698 ;; *************** function _lcdCommand *****************
   699 ;; Defined at:
   700 ;;		line 96 in file "LCDcomm.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  command         1    wreg     unsigned char 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  command         1    4[COMRAM] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;		None               void
   707 ;; Registers used:
   708 ;;		wreg, status,2, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;Total ram usage:        1 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    2
   721 ;; This function calls:
   722 ;;		_Delay10TCYx
   723 ;;		_setGPIO
   724 ;; This function is called by:
   725 ;;		_main
   726 ;;		_lcdGoTo
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text5
   731  001104                     __ptext5:
   732                           	opt stack 0
   733  001104                     _lcdCommand:
   734                           	opt stack 27
   735                           
   736                           ;incstack = 0
   737                           ;lcdCommand@command stored from wreg
   738  001104  6E14               	movwf	lcdCommand@command,c
   739                           
   740                           ;LCDcomm.c: 97: setGPIO(0x12,0x00);
   741  001106  0E00               	movlw	0
   742  001108  6E12               	movwf	setGPIO@value,c
   743  00110A  0E12               	movlw	18
   744  00110C  EC11  F009         	call	_setGPIO
   745                           
   746                           ;LCDcomm.c: 98: Delay10TCYx(0);
   747  001110  0E00               	movlw	0
   748  001112  EC1E  F009         	call	_Delay10TCYx
   749                           
   750                           ;LCDcomm.c: 99: setGPIO(0x13, command);
   751  001116  C014  F012         	movff	lcdCommand@command,setGPIO@value
   752  00111A  0E13               	movlw	19
   753  00111C  EC11  F009         	call	_setGPIO
   754                           
   755                           ;LCDcomm.c: 100: Delay10TCYx(0);
   756  001120  0E00               	movlw	0
   757  001122  EC1E  F009         	call	_Delay10TCYx
   758                           
   759                           ;LCDcomm.c: 101: setGPIO(0x12,0x40);
   760  001126  0E40               	movlw	64
   761  001128  6E12               	movwf	setGPIO@value,c
   762  00112A  0E12               	movlw	18
   763  00112C  EC11  F009         	call	_setGPIO
   764                           
   765                           ;LCDcomm.c: 102: Delay10TCYx(0);
   766  001130  0E00               	movlw	0
   767  001132  EC1E  F009         	call	_Delay10TCYx
   768                           
   769                           ;LCDcomm.c: 103: setGPIO(0x12,0x00);
   770  001136  0E00               	movlw	0
   771  001138  6E12               	movwf	setGPIO@value,c
   772  00113A  0E12               	movlw	18
   773  00113C  EC11  F009         	call	_setGPIO
   774                           
   775                           ;LCDcomm.c: 104: Delay10TCYx(0);
   776  001140  0E00               	movlw	0
   777  001142  EC1E  F009         	call	_Delay10TCYx
   778  001146  0012               	return		;funcret
   779  001148                     __end_of_lcdCommand:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           prodh	equ	0xFF4
   786                           prodl	equ	0xFF3
   787                           postinc0	equ	0xFEE
   788                           postdec1	equ	0xFE5
   789                           fsr1l	equ	0xFE1
   790                           indf2	equ	0xFDF
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function _setGPIO *****************
   796 ;; Defined at:
   797 ;;		line 70 in file "LCDcomm.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  address         1    wreg     unsigned char 
   800 ;;  value           1    2[COMRAM] unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  address         1    3[COMRAM] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;		None               void
   805 ;; Registers used:
   806 ;;		wreg, status,2, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   812 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;Total ram usage:        2 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    1
   819 ;; This function calls:
   820 ;;		_WriteSPI1
   821 ;; This function is called by:
   822 ;;		_main
   823 ;;		_lcdCommand
   824 ;;		_lcdChar
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text6
   829  001222                     __ptext6:
   830                           	opt stack 0
   831  001222                     _setGPIO:
   832                           	opt stack 29
   833                           
   834                           ;incstack = 0
   835                           ;setGPIO@address stored from wreg
   836  001222  6E13               	movwf	setGPIO@address,c
   837                           
   838                           ;LCDcomm.c: 71: PORTAbits.RA2=0;
   839  001224  9480               	bcf	3968,2,c	;volatile
   840                           
   841                           ;LCDcomm.c: 74: WriteSPI1(0x40);
   842  001226  0E40               	movlw	64
   843  001228  ECF3  F008         	call	_WriteSPI1
   844                           
   845                           ;LCDcomm.c: 75: WriteSPI1(address);
   846  00122C  5013               	movf	setGPIO@address,w,c
   847  00122E  ECF3  F008         	call	_WriteSPI1
   848                           
   849                           ;LCDcomm.c: 76: WriteSPI1(value);
   850  001232  5012               	movf	setGPIO@value,w,c
   851  001234  ECF3  F008         	call	_WriteSPI1
   852                           
   853                           ;LCDcomm.c: 77: PORTAbits.RA2=1;
   854  001238  8480               	bsf	3968,2,c	;volatile
   855  00123A  0012               	return		;funcret
   856  00123C                     __end_of_setGPIO:
   857                           	opt stack 0
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           prodh	equ	0xFF4
   863                           prodl	equ	0xFF3
   864                           postinc0	equ	0xFEE
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           indf2	equ	0xFDF
   868                           fsr2h	equ	0xFDA
   869                           fsr2l	equ	0xFD9
   870                           status	equ	0xFD8
   871                           
   872 ;; *************** function _WriteSPI1 *****************
   873 ;; Defined at:
   874 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  data_out        1    wreg     unsigned char 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  data_out        1    1[COMRAM] unsigned char 
   879 ;;  TempVar         1    0[COMRAM] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      char 
   882 ;; Registers used:
   883 ;;		wreg
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;Total ram usage:        2 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_setGPIO
   899 ;;		_setIODIR
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text7
   904  0011E6                     __ptext7:
   905                           	opt stack 0
   906  0011E6                     _WriteSPI1:
   907                           	opt stack 29
   908                           
   909                           ;incstack = 0
   910                           ;WriteSPI1@data_out stored from wreg
   911  0011E6  6E11               	movwf	WriteSPI1@data_out,c
   912  0011E8  CFC9 F010          	movff	4041,WriteSPI1@TempVar	;volatile
   913  0011EC  969E               	bcf	3998,3,c	;volatile
   914  0011EE  9EC6               	bcf	4038,7,c	;volatile
   915  0011F0  C011  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
   916  0011F4  BEC6               	btfsc	4038,7,c	;volatile
   917  0011F6  D007               	goto	l98
   918  0011F8  D002               	goto	l100
   919                           
   920                           ;	Return value of _WriteSPI1 is never used
   921  0011FA  D005               	goto	l98
   922  0011FC  D000               	goto	l100
   923  0011FE                     l100:
   924  0011FE  B69E               	btfsc	3998,3,c	;volatile
   925  001200  D002               	goto	l98
   926  001202  D7FD               	goto	l100
   927  001204  D000               	goto	l98
   928  001206                     l98:
   929  001206  0012               	return		;funcret
   930  001208                     __end_of_WriteSPI1:
   931                           	opt stack 0
   932                           tblptru	equ	0xFF8
   933                           tblptrh	equ	0xFF7
   934                           tblptrl	equ	0xFF6
   935                           tablat	equ	0xFF5
   936                           prodh	equ	0xFF4
   937                           prodl	equ	0xFF3
   938                           postinc0	equ	0xFEE
   939                           postdec1	equ	0xFE5
   940                           fsr1l	equ	0xFE1
   941                           indf2	equ	0xFDF
   942                           fsr2h	equ	0xFDA
   943                           fsr2l	equ	0xFD9
   944                           status	equ	0xFD8
   945                           
   946 ;; *************** function _Delay10TCYx *****************
   947 ;; Defined at:
   948 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  unit            1    wreg     unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  unit            1    0[COMRAM] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;		None               void
   955 ;; Registers used:
   956 ;;		wreg
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        1 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_lcdCommand
   972 ;;		_lcdChar
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text8
   977  00123C                     __ptext8:
   978                           	opt stack 0
   979  00123C                     _Delay10TCYx:
   980                           	opt stack 28
   981                           
   982                           ;incstack = 0
   983                           ;Delay10TCYx@unit stored from wreg
   984  00123C  6E10               	movwf	Delay10TCYx@unit,c
   985  00123E  0E03               	movlw	3
   986  001240                     u117:
   987  001240  2EE8               	decfsz	wreg,f,c
   988  001242  D7FE               	goto	u117
   989  001244  F000               	nop	
   990  001246  2E10               	decfsz	Delay10TCYx@unit,f,c
   991  001248  D7FA               	goto	l719
   992  00124A  D000               	goto	l330
   993  00124C                     l330:
   994  00124C  0012               	return		;funcret
   995  00124E                     __end_of_Delay10TCYx:
   996                           	opt stack 0
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           prodh	equ	0xFF4
  1002                           prodl	equ	0xFF3
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           postdec1	equ	0xFE5
  1006                           fsr1l	equ	0xFE1
  1007                           indf2	equ	0xFDF
  1008                           fsr2h	equ	0xFDA
  1009                           fsr2l	equ	0xFD9
  1010                           status	equ	0xFD8
  1011                           
  1012 ;; *************** function _OpenSPI1 *****************
  1013 ;; Defined at:
  1014 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  sync_mode       1    wreg     unsigned char 
  1017 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1018 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;		None               void
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        3 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text9
  1044  0010AE                     __ptext9:
  1045                           	opt stack 0
  1046  0010AE                     _OpenSPI1:
  1047                           	opt stack 30
  1048                           
  1049                           ;incstack = 0
  1050                           ;OpenSPI1@sync_mode stored from wreg
  1051  0010AE  6E12               	movwf	OpenSPI1@sync_mode,c
  1052  0010B0  0E3F               	movlw	63
  1053  0010B2  16C7               	andwf	4039,f,c	;volatile
  1054  0010B4  0E00               	movlw	0
  1055  0010B6  6EC6               	movwf	4038,c	;volatile
  1056  0010B8  5012               	movf	OpenSPI1@sync_mode,w,c
  1057  0010BA  12C6               	iorwf	4038,f,c	;volatile
  1058  0010BC  5011               	movf	OpenSPI1@smp_phase,w,c
  1059  0010BE  12C7               	iorwf	4039,f,c	;volatile
  1060  0010C0  D005               	goto	l871
  1061  0010C2                     l76:
  1062  0010C2  8CC7               	bsf	4039,6,c	;volatile
  1063  0010C4  D013               	goto	l875
  1064  0010C6                     l78:
  1065  0010C6  8CC7               	bsf	4039,6,c	;volatile
  1066  0010C8                     l79:
  1067  0010C8  88C6               	bsf	4038,4,c	;volatile
  1068  0010CA  D010               	goto	l875
  1069  0010CC                     l871:
  1070  0010CC  5010               	movf	OpenSPI1@bus_mode,w,c
  1071                           
  1072                           ; Switch size 1, requested type "space"
  1073                           ; Number of cases is 3, Range of values is 0 to 3
  1074                           ; switch strategies available:
  1075                           ; Name         Instructions Cycles
  1076                           ; simple_byte           10     6 (average)
  1077                           ;	Chosen strategy is simple_byte
  1078  0010CE  0A00               	xorlw	0	; case 0
  1079  0010D0  B4D8               	btfsc	status,2,c
  1080  0010D2  D7F7               	goto	l76
  1081  0010D4  0A02               	xorlw	2	; case 2
  1082  0010D6  B4D8               	btfsc	status,2,c
  1083  0010D8  D7F6               	goto	l78
  1084  0010DA  0A01               	xorlw	1	; case 3
  1085  0010DC  B4D8               	btfsc	status,2,c
  1086  0010DE  D7F4               	goto	l79
  1087  0010E0  D005               	goto	l875
  1088  0010E2                     l82:
  1089  0010E2  8E97               	bsf	3991,7,c	;volatile
  1090  0010E4                     l84:
  1091  0010E4  8694               	bsf	3988,3,c	;volatile
  1092  0010E6  D00A               	goto	l83
  1093  0010E8                     l85:
  1094  0010E8  9694               	bcf	3988,3,c	;volatile
  1095  0010EA  D008               	goto	l83
  1096  0010EC                     l875:
  1097  0010EC  5012               	movf	OpenSPI1@sync_mode,w,c
  1098                           
  1099                           ; Switch size 1, requested type "space"
  1100                           ; Number of cases is 2, Range of values is 4 to 5
  1101                           ; switch strategies available:
  1102                           ; Name         Instructions Cycles
  1103                           ; simple_byte            7     4 (average)
  1104                           ;	Chosen strategy is simple_byte
  1105  0010EE  0A04               	xorlw	4	; case 4
  1106  0010F0  B4D8               	btfsc	status,2,c
  1107  0010F2  D7F7               	goto	l82
  1108  0010F4  0A01               	xorlw	1	; case 5
  1109  0010F6  B4D8               	btfsc	status,2,c
  1110  0010F8  D7F5               	goto	l84
  1111  0010FA  D7F6               	goto	l85
  1112  0010FC                     l83:
  1113  0010FC  8894               	bsf	3988,4,c	;volatile
  1114  0010FE  9A94               	bcf	3988,5,c	;volatile
  1115  001100  8AC6               	bsf	4038,5,c	;volatile
  1116  001102  0012               	return		;funcret
  1117  001104                     __end_of_OpenSPI1:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           prodh	equ	0xFF4
  1124                           prodl	equ	0xFF3
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           postdec1	equ	0xFE5
  1128                           fsr1l	equ	0xFE1
  1129                           indf2	equ	0xFDF
  1130                           fsr2h	equ	0xFDA
  1131                           fsr2l	equ	0xFD9
  1132                           status	equ	0xFD8
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           prodh	equ	0xFF4
  1138                           prodl	equ	0xFF3
  1139                           postinc0	equ	0xFEE
  1140                           wreg	equ	0xFE8
  1141                           postdec1	equ	0xFE5
  1142                           fsr1l	equ	0xFE1
  1143                           indf2	equ	0xFDF
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148                           	psect	rparam
  1149  0000                     tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           prodh	equ	0xFF4
  1154                           prodl	equ	0xFF3
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postdec1	equ	0xFE5
  1158                           fsr1l	equ	0xFE1
  1159                           indf2	equ	0xFDF
  1160                           fsr2h	equ	0xFDA
  1161                           fsr2l	equ	0xFD9
  1162                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        15
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    lcdWriteString@s	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_lcdWriteString
    _setIODIR->_WriteSPI1
    _lcdWriteString->_lcdChar
    _lcdChar->_setGPIO
    _lcdGoTo->_lcdCommand
    _lcdCommand->_setGPIO
    _setGPIO->_WriteSPI1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3307
                           _OpenSPI1
                            _lcdChar
                         _lcdCommand
                            _lcdGoTo
                     _lcdWriteString
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (1) _setIODIR                                             2     1      1     165
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (1) _lcdWriteString                                       2     0      2     671
                                              5 COMRAM     2     0      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0     573
                                              4 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (1) _lcdGoTo                                              1     1      0     595
                                              5 COMRAM     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0     573
                                              4 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (1) _setGPIO                                              2     1      1     536
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (2) _WriteSPI1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay10TCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenSPI1                                             3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenSPI1
   _lcdChar
     _Delay10TCYx
     _setGPIO
       _WriteSPI1
   _lcdCommand
     _Delay10TCYx
     _setGPIO
       _WriteSPI1
   _lcdGoTo
     _lcdCommand
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
   _lcdWriteString
     _lcdChar
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
   _setGPIO
     _WriteSPI1
   _setIODIR
     _WriteSPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7      19       1       26.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      32        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 11 04:45:48 2015

                      _x 0018                        _y 0019                       l82 10E2  
                     l83 10FC                       l84 10E4                       l76 10C2  
                     l85 10E8                       l78 10C6                       l79 10C8  
                     l98 1206              __CFG_OSC$HS 000000                      l100 11FE  
                    l330 124C                      l719 123E                      l921 106A  
                    l923 106E                      l871 10CC                      l927 1076  
                    l937 10A4                      l875 10EC                      l891 1188  
                    l895 11A2                      u117 1240        lcdCommand@command 0014  
                    prod 000FF3                      wreg 000FE8             __CFG_WDT$OFF 000000  
                   STR_1 1001                     _main 100E                     _temp 0017  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   prodl 000FF3                     start 0000             ___param_bank 000010  
            _Delay10TCYx 123C                    ?_main 0010          __end_of_lcdChar 1186  
        __end_of_lcdGoTo 126A           __CFG_FCMEN$OFF 000000          __end_of_setGPIO 123C  
                  tablat 000FF5                    status 000FD8          __initialization 11BA  
           __end_of_main 10AE         __end_of_OpenSPI1 1104                   ??_main 0017  
          __activetblptr 000003         ??_lcdWriteString 0017         OpenSPI1@bus_mode 0010  
        lcdWriteString@s 0015         __end_of_setIODIR 1222              setIODIR@dir 0012  
              ??_lcdChar 0014                ??_lcdGoTo 0015             __pdataCOMRAM 0001  
              ??_setGPIO 0013             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 11E0       __size_of_WriteSPI1 0022            ___rparam_used 000001  
         __pcstackCOMRAM 0010         WriteSPI1@TempVar 0010                ?_OpenSPI1 0010  
           ?_Delay10TCYx 0010               _lcdCommand 1104        __end_of_WriteSPI1 1208  
                _SSP1BUF 000FC9                ?_setIODIR 0012               ??_OpenSPI1 0012  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1000  
                __pcinit 11BA          Delay10TCYx@unit 0010                  _lcdChar 1148  
                __ramtop 1000                  _lcdGoTo 125E                  __ptext0 100E  
                __ptext1 1208                  __ptext2 1186                  __ptext3 1148  
                __ptext4 125E                  __ptext5 1104                  __ptext6 1222  
                __ptext7 11E6                  __ptext8 123C                  __ptext9 10AE  
                _setGPIO 1222          setIODIR@address 0013             setGPIO@value 0012  
   end_of_initialization 11E0               ??_setIODIR 0013        OpenSPI1@smp_phase 0011  
             lcdGoTo@pos 0015                  postdec1 000FE5              ?_lcdCommand 0010  
                postinc0 000FEE        OpenSPI1@sync_mode 0012                _PORTAbits 000F80  
              _TRISAbits 000F92                _TRISCbits 000F94                _TRISFbits 000F97  
   __size_of_Delay10TCYx 0012            __pidataCOMRAM 124E            lcdChar@letter 0014  
    start_initialization 11BA      __size_of_lcdCommand 0044  __size_of_lcdWriteString 0034  
      __size_of_OpenSPI1 0056              __pbssCOMRAM 0017                _WriteSPI1 11E6  
      WriteSPI1@data_out 0011        __size_of_setIODIR 001A                 ?_lcdChar 0010  
               ?_lcdGoTo 0010              __smallconst 1000                 ?_setGPIO 0012  
             ?_WriteSPI1 0010                 _PIR1bits 000F9E           setGPIO@address 0013  
           ??_lcdCommand 0014                 _SSP1CON1 000FC6                 _SSP1STAT 000FC7  
              copy_data0 11D4       __end_of_lcdCommand 1148           _lcdWriteString 1186  
               _OpenSPI1 10AE                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_lcdChar 003E         __size_of_lcdGoTo 000C         __size_of_setGPIO 001A  
            ??_WriteSPI1 0010             _SSP1CON1bits 000FC6   __end_of_lcdWriteString 11BA  
               _setIODIR 1208            __size_of_main 00A0            ??_Delay10TCYx 0010  
               _mynameis 0001             _SSP1STATbits 000FC7          ?_lcdWriteString 0015  
    __end_of_Delay10TCYx 124E  
