

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Oct 11 00:27:27 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     _INTCONbits	set	4082
    38  0000                     _PIE3bits	set	4003
    39  0000                     _PIR1bits	set	3998
    40  0000                     _PIR3bits	set	4004
    41  0000                     _PORTAbits	set	3968
    42  0000                     _PORTCbits	set	3970
    43  0000                     _SSP1BUF	set	4041
    44  0000                     _SSP1CON1	set	4038
    45  0000                     _SSP1CON1bits	set	4038
    46  0000                     _SSP1STAT	set	4039
    47  0000                     _SSP1STATbits	set	4039
    48  0000                     _SSP2BUF	set	3942
    49  0000                     _SSP2CON1bits	set	3939
    50  0000                     _SSP2STATbits	set	3940
    51  0000                     _TRISAbits	set	3986
    52  0000                     _TRISCbits	set	3988
    53  0000                     _TRISFbits	set	3991
    54                           
    55                           	psect	smallconst
    56  001000                     __psmallconst:
    57                           	opt stack 0
    58  001000  00                 	db	0
    59  001001  38                 	db	56	;'8'
    60  001002  36                 	db	54	;'6'
    61  001003  38                 	db	56	;'8'
    62  001004  30                 	db	48	;'0'
    63  001005  3A                 	db	58	;':'
    64  001006  20                 	db	32
    65  001007  00                 	db	0
    66  001008  38                 	db	56	;'8'
    67  001009  37                 	db	55	;'7'
    68  00100A  32                 	db	50	;'2'
    69  00100B  32                 	db	50	;'2'
    70  00100C  3A                 	db	58	;':'
    71  00100D  20                 	db	32
    72  00100E  00                 	db	0
    73                           
    74                           ; #config settings
    75  00100F  00                 	db	0	; dummy byte at the end
    76  0000                     
    77                           	psect	cinit
    78  00198E                     __pcinit:
    79                           	opt stack 0
    80  00198E                     start_initialization:
    81                           	opt stack 0
    82  00198E                     __initialization:
    83                           	opt stack 0
    84                           
    85                           ; Clear objects allocated to COMRAM (28 bytes)
    86  00198E  EE00  F035         	lfsr	0,__pbssCOMRAM
    87  001992  0E1C               	movlw	28
    88  001994                     clear_0:
    89  001994  6AEE               	clrf	postinc0,c
    90  001996  06E8               	decf	wreg,f,c
    91  001998  E1FD               	bnz	clear_0
    92  00199A                     end_of_initialization:
    93                           	opt stack 0
    94  00199A                     __end_of__initialization:
    95                           	opt stack 0
    96  00199A  0100               	movlb	0
    97  00199C  EF08  F008         	goto	_main	;jump to C main() function
    98                           postinc0	equ	0xFEE
    99                           wreg	equ	0xFE8
   100                           
   101                           	psect	bssCOMRAM
   102  000035                     __pbssCOMRAM:
   103                           	opt stack 0
   104  000035                     _DoubleSPIS:
   105                           	opt stack 0
   106  000035                     	ds	4
   107  000039                     _CurrentAngle:
   108                           	opt stack 0
   109  000039                     	ds	3
   110  00003C                     _CurrentVelocity:
   111                           	opt stack 0
   112  00003C                     	ds	3
   113  00003F                     _Kd:
   114                           	opt stack 0
   115  00003F                     	ds	3
   116  000042                     _Ki:
   117                           	opt stack 0
   118  000042                     	ds	3
   119  000045                     _Kp:
   120                           	opt stack 0
   121  000045                     	ds	3
   122  000048                     _SetAngle:
   123                           	opt stack 0
   124  000048                     	ds	3
   125  00004B                     _DoublePtr:
   126                           	opt stack 0
   127  00004B                     	ds	2
   128  00004D                     _Command:
   129                           	opt stack 0
   130  00004D                     	ds	1
   131  00004E                     _PIDEnableFlag:
   132                           	opt stack 0
   133  00004E                     	ds	1
   134  00004F                     _SPIflag:
   135                           	opt stack 0
   136  00004F                     	ds	1
   137  000050                     _dummy_byte:
   138                           	opt stack 0
   139  000050                     	ds	1
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	cstackBANK0
   144  000060                     __pcstackBANK0:
   145                           	opt stack 0
   146  000060                     LCDbreakDouble@dubs:
   147                           	opt stack 0
   148                           
   149                           ; 3 bytes @ 0x0
   150  000060                     	ds	3
   151  000063                     LCDbreakDouble@tempDub:
   152                           	opt stack 0
   153                           
   154                           ; 2 bytes @ 0x3
   155  000063                     	ds	2
   156  000065                     LCDbreakDouble@temp1:
   157                           	opt stack 0
   158                           
   159                           ; 2 bytes @ 0x5
   160  000065                     	ds	2
   161  000067                     LCDbreakDouble@temp2:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0x7
   165  000067                     	ds	2
   166  000069                     main@temporary:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x9
   170  000069                     	ds	1
   171  00006A                     main@x:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0xA
   175  00006A                     	ds	1
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	cstackCOMRAM
   180  000001                     __pcstackCOMRAM:
   181                           	opt stack 0
   182  000001                     ??_ISR:
   183  000001                     
   184                           ; 1 bytes @ 0x0
   185  000001                     	ds	14
   186  00000F                     ?___lwdiv:
   187                           	opt stack 0
   188  00000F                     ?___lwmod:
   189                           	opt stack 0
   190  00000F                     ?_SPIReassembleDouble:
   191                           	opt stack 0
   192  00000F                     ?___ftpack:
   193                           	opt stack 0
   194  00000F                     SendSPI1@temp:
   195                           	opt stack 0
   196  00000F                     GenerateChecksum@sum:
   197                           	opt stack 0
   198  00000F                     OpenSPI1@bus_mode:
   199                           	opt stack 0
   200  00000F                     WriteSPI1@TempVar:
   201                           	opt stack 0
   202  00000F                     Delay10TCYx@unit:
   203                           	opt stack 0
   204  00000F                     ___lwdiv@dividend:
   205                           	opt stack 0
   206  00000F                     ___lwmod@dividend:
   207                           	opt stack 0
   208  00000F                     ___ftpack@arg:
   209                           	opt stack 0
   210                           
   211                           ; 3 bytes @ 0xE
   212  00000F                     	ds	1
   213  000010                     SendSPI1@data:
   214                           	opt stack 0
   215  000010                     GenerateChecksum@y:
   216                           	opt stack 0
   217  000010                     OpenSPI1@smp_phase:
   218                           	opt stack 0
   219  000010                     WriteSPI1@data_out:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0xF
   223  000010                     	ds	1
   224  000011                     setGPIO@value:
   225                           	opt stack 0
   226  000011                     setIODIR@dir:
   227                           	opt stack 0
   228  000011                     OpenSPI1@sync_mode:
   229                           	opt stack 0
   230  000011                     ___lwdiv@divisor:
   231                           	opt stack 0
   232  000011                     ___lwmod@divisor:
   233                           	opt stack 0
   234  000011                     SPIDisassembleDouble@dub:
   235                           	opt stack 0
   236                           
   237                           ; 3 bytes @ 0x10
   238  000011                     	ds	1
   239  000012                     setGPIO@address:
   240                           	opt stack 0
   241  000012                     setIODIR@address:
   242                           	opt stack 0
   243  000012                     ___ftpack@exp:
   244                           	opt stack 0
   245  000012                     SPIReassembleDouble@dub:
   246                           	opt stack 0
   247                           
   248                           ; 3 bytes @ 0x11
   249  000012                     	ds	1
   250  000013                     lcdCommand@command:
   251                           	opt stack 0
   252  000013                     lcdChar@letter:
   253                           	opt stack 0
   254  000013                     ___ftpack@sign:
   255                           	opt stack 0
   256  000013                     ___lwdiv@counter:
   257                           	opt stack 0
   258  000013                     ___lwmod@counter:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x12
   262  000013                     	ds	1
   263  000014                     ??___ftpack:
   264  000014                     lcdGoTo@pos:
   265                           	opt stack 0
   266  000014                     ___lwdiv@quotient:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x13
   270  000014                     	ds	3
   271  000017                     ?___ftmul:
   272                           	opt stack 0
   273  000017                     ___ftmul@f1:
   274                           	opt stack 0
   275                           
   276                           ; 3 bytes @ 0x16
   277  000017                     	ds	3
   278  00001A                     ___ftmul@f2:
   279                           	opt stack 0
   280                           
   281                           ; 3 bytes @ 0x19
   282  00001A                     	ds	3
   283  00001D                     ??___ftmul:
   284                           
   285                           ; 0 bytes @ 0x1C
   286  00001D                     	ds	3
   287  000020                     ___ftmul@exp:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x1F
   291  000020                     	ds	1
   292  000021                     ___ftmul@f3_as_product:
   293                           	opt stack 0
   294                           
   295                           ; 3 bytes @ 0x20
   296  000021                     	ds	3
   297  000024                     ___ftmul@cntr:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x23
   301  000024                     	ds	1
   302  000025                     ___ftmul@sign:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x24
   306  000025                     	ds	1
   307  000026                     ?___fttol:
   308                           	opt stack 0
   309  000026                     ___fttol@f1:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x25
   313  000026                     	ds	4
   314  00002A                     ??___fttol:
   315                           
   316                           ; 0 bytes @ 0x29
   317  00002A                     	ds	5
   318  00002F                     ___fttol@sign1:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x2E
   322  00002F                     	ds	1
   323  000030                     ___fttol@lval:
   324                           	opt stack 0
   325                           
   326                           ; 4 bytes @ 0x2F
   327  000030                     	ds	4
   328  000034                     ___fttol@exp1:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x33
   332  000034                     	ds	1
   333  000035                     postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           
   336                           ; 0 bytes @ 0x34
   337 ;;
   338 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   339 ;;
   340 ;; *************** function _main *****************
   341 ;; Defined at:
   342 ;;		line 15 in file "SPItestSLAVE.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;  x               1   10[BANK0 ] unsigned char 
   347 ;;  temporary       1    9[BANK0 ] unsigned char 
   348 ;; Return value:  Size  Location     Type
   349 ;;		None               void
   350 ;; Registers used:
   351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;Total ram usage:        2 bytes
   362 ;; Hardware stack levels required when called:    7
   363 ;; This function calls:
   364 ;;		_LCDbreakDouble
   365 ;;		_ReceiveSPI1
   366 ;;		_SPIDisassembleDouble
   367 ;;		_SPIReassembleDouble
   368 ;;		_SendSPI1
   369 ;;		_initialize
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text0
   376  001010                     __ptext0:
   377                           	opt stack 0
   378  001010                     _main:
   379                           	opt stack 24
   380                           
   381                           ;SPItestSLAVE.c: 17: unsigned char temporary, x;
   382                           ;SPItestSLAVE.c: 18: initialize();
   383                           
   384                           ;incstack = 0
   385  001010  ECEF  F00C         	call	_initialize	;wreg free
   386                           
   387                           ;SPItestSLAVE.c: 19: SPIDisassembleDouble(355.89);
   388  001014  0EF2               	movlw	242
   389  001016  6E11               	movwf	SPIDisassembleDouble@dub,c
   390  001018  0EB1               	movlw	177
   391  00101A  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   392  00101C  0E43               	movlw	67
   393  00101E  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   394  001020  EC59  F00C         	call	_SPIDisassembleDouble	;wreg free
   395                           
   396                           ;SPItestSLAVE.c: 21: PORTCbits.RC6 = 0;
   397  001024  9C82               	bcf	3970,6,c	;volatile
   398                           
   399                           ;SPItestSLAVE.c: 22: SSP2BUF = dummy_byte;
   400  001026  C050  FF66         	movff	_dummy_byte,3942	;volatile
   401  00102A  D000               	goto	l2189
   402  00102C                     l2189:
   403                           
   404                           ;SPItestSLAVE.c: 25: {
   405                           ;SPItestSLAVE.c: 26: if (SPIflag == 1)
   406  00102C  044F               	decf	_SPIflag,w,c
   407  00102E  A4D8               	btfss	status,2,c
   408  001030  D7FD               	goto	l2189
   409                           
   410                           ;SPItestSLAVE.c: 27: {
   411                           ;SPItestSLAVE.c: 28: SPIflag = 0;
   412  001032  0E00               	movlw	0
   413  001034  6E4F               	movwf	_SPIflag,c
   414                           
   415                           ;SPItestSLAVE.c: 29: if ((Command == 0x02) || (Command == 0x03) || (Command == 0x04) || 
      +                          (Command == 0x06) || (Command == 0x08))
   416  001036  0E02               	movlw	2
   417  001038  184D               	xorwf	_Command,w,c
   418  00103A  B4D8               	btfsc	status,2,c
   419  00103C  D010               	goto	l2203
   420  00103E  0E03               	movlw	3
   421  001040  184D               	xorwf	_Command,w,c
   422  001042  B4D8               	btfsc	status,2,c
   423  001044  D00C               	goto	l2203
   424  001046  0E04               	movlw	4
   425  001048  184D               	xorwf	_Command,w,c
   426  00104A  B4D8               	btfsc	status,2,c
   427  00104C  D008               	goto	l2203
   428  00104E  0E06               	movlw	6
   429  001050  184D               	xorwf	_Command,w,c
   430  001052  B4D8               	btfsc	status,2,c
   431  001054  D004               	goto	l2203
   432  001056  0E08               	movlw	8
   433  001058  184D               	xorwf	_Command,w,c
   434  00105A  A4D8               	btfss	status,2,c
   435  00105C  D05A               	goto	l2237
   436  00105E                     l2203:
   437                           
   438                           ;SPItestSLAVE.c: 30: {
   439                           ;SPItestSLAVE.c: 31: if (Command == 0x02)
   440  00105E  0E02               	movlw	2
   441  001060  184D               	xorwf	_Command,w,c
   442  001062  A4D8               	btfss	status,2,c
   443  001064  D009               	goto	l2207
   444                           
   445                           ;SPItestSLAVE.c: 32: SPIDisassembleDouble(CurrentAngle);
   446  001066  C039  F011         	movff	_CurrentAngle,SPIDisassembleDouble@dub
   447  00106A  C03A  F012         	movff	_CurrentAngle+1,SPIDisassembleDouble@dub+1
   448  00106E  C03B  F013         	movff	_CurrentAngle+2,SPIDisassembleDouble@dub+2
   449  001072  EC59  F00C         	call	_SPIDisassembleDouble	;wreg free
   450  001076  D034               	goto	l2223
   451  001078                     l2207:
   452                           
   453                           ;SPItestSLAVE.c: 33: else if (Command == 0x03)
   454  001078  0E03               	movlw	3
   455  00107A  184D               	xorwf	_Command,w,c
   456  00107C  A4D8               	btfss	status,2,c
   457  00107E  D009               	goto	l2211
   458                           
   459                           ;SPItestSLAVE.c: 34: SPIDisassembleDouble(CurrentVelocity);
   460  001080  C03C  F011         	movff	_CurrentVelocity,SPIDisassembleDouble@dub
   461  001084  C03D  F012         	movff	_CurrentVelocity+1,SPIDisassembleDouble@dub+1
   462  001088  C03E  F013         	movff	_CurrentVelocity+2,SPIDisassembleDouble@dub+2
   463  00108C  EC59  F00C         	call	_SPIDisassembleDouble	;wreg free
   464  001090  D027               	goto	l2223
   465  001092                     l2211:
   466                           
   467                           ;SPItestSLAVE.c: 35: else if (Command == 0x04)
   468  001092  0E04               	movlw	4
   469  001094  184D               	xorwf	_Command,w,c
   470  001096  A4D8               	btfss	status,2,c
   471  001098  D009               	goto	l2215
   472                           
   473                           ;SPItestSLAVE.c: 36: SPIDisassembleDouble(Kp);
   474  00109A  C045  F011         	movff	_Kp,SPIDisassembleDouble@dub
   475  00109E  C046  F012         	movff	_Kp+1,SPIDisassembleDouble@dub+1
   476  0010A2  C047  F013         	movff	_Kp+2,SPIDisassembleDouble@dub+2
   477  0010A6  EC59  F00C         	call	_SPIDisassembleDouble	;wreg free
   478  0010AA  D01A               	goto	l2223
   479  0010AC                     l2215:
   480                           
   481                           ;SPItestSLAVE.c: 37: else if (Command == 0x06)
   482  0010AC  0E06               	movlw	6
   483  0010AE  184D               	xorwf	_Command,w,c
   484  0010B0  A4D8               	btfss	status,2,c
   485  0010B2  D009               	goto	l2219
   486                           
   487                           ;SPItestSLAVE.c: 38: SPIDisassembleDouble(Ki);
   488  0010B4  C042  F011         	movff	_Ki,SPIDisassembleDouble@dub
   489  0010B8  C043  F012         	movff	_Ki+1,SPIDisassembleDouble@dub+1
   490  0010BC  C044  F013         	movff	_Ki+2,SPIDisassembleDouble@dub+2
   491  0010C0  EC59  F00C         	call	_SPIDisassembleDouble	;wreg free
   492  0010C4  D00D               	goto	l2223
   493  0010C6                     l2219:
   494                           
   495                           ;SPItestSLAVE.c: 39: else if (Command == 0x08)
   496  0010C6  0E08               	movlw	8
   497  0010C8  184D               	xorwf	_Command,w,c
   498  0010CA  A4D8               	btfss	status,2,c
   499  0010CC  D009               	goto	l2223
   500                           
   501                           ;SPItestSLAVE.c: 40: SPIDisassembleDouble(Kd);
   502  0010CE  C03F  F011         	movff	_Kd,SPIDisassembleDouble@dub
   503  0010D2  C040  F012         	movff	_Kd+1,SPIDisassembleDouble@dub+1
   504  0010D6  C041  F013         	movff	_Kd+2,SPIDisassembleDouble@dub+2
   505  0010DA  EC59  F00C         	call	_SPIDisassembleDouble	;wreg free
   506  0010DE  D000               	goto	l2223
   507  0010E0                     l2223:
   508                           
   509                           ;SPItestSLAVE.c: 41: PORTCbits.RC6 = 0;
   510  0010E0  9C82               	bcf	3970,6,c	;volatile
   511                           
   512                           ;SPItestSLAVE.c: 42: for (x = 0; x < 4; x++)
   513  0010E2  0E00               	movlw	0
   514  0010E4  0100               	movlb	0	; () banked
   515  0010E6  6F6A               	movwf	main@x& (0+255),b
   516  0010E8  D00F               	goto	l2235
   517                           
   518                           ; BSR set to: 0
   519                           
   520                           ; BSR set to: 0
   521  0010EA  D091               	goto	l2283
   522  0010EC                     l2231:
   523                           
   524                           ; BSR set to: 0
   525                           ;SPItestSLAVE.c: 43: SendSPI1(DoubleSPIS[x]);
   526  0010EC  0100               	movlb	0	; () banked
   527  0010EE  516A               	movf	main@x& (0+255),w,b
   528  0010F0  0D01               	mullw	1
   529  0010F2  0E35               	movlw	low _DoubleSPIS
   530  0010F4  24F3               	addwf	prodl,w,c
   531  0010F6  6ED9               	movwf	fsr2l,c
   532  0010F8  0E00               	movlw	high _DoubleSPIS
   533  0010FA  20F4               	addwfc	prodh,w,c
   534  0010FC  6EDA               	movwf	fsr2h,c
   535  0010FE  50DF               	movf	indf2,w,c
   536  001100  ECBB  F00C         	call	_SendSPI1
   537  001104  0100               	movlb	0	; () banked
   538  001106  2B6A               	incf	main@x& (0+255),f,b
   539  001108                     l2235:
   540                           
   541                           ; BSR set to: 0
   542  001108  0E03               	movlw	3
   543  00110A  0100               	movlb	0	; () banked
   544  00110C  656A               	cpfsgt	main@x& (0+255),b
   545  00110E  D7EE               	goto	l2231
   546  001110  D07E               	goto	l2283
   547  001112                     l2237:
   548                           
   549                           ;SPItestSLAVE.c: 46: else if ((Command == 0x01) || (Command == 0x05) || (Command == 0x07
      +                          ) || (Command == 0x09))
   550  001112  044D               	decf	_Command,w,c
   551  001114  B4D8               	btfsc	status,2,c
   552  001116  D00C               	goto	l105
   553  001118  0E05               	movlw	5
   554  00111A  184D               	xorwf	_Command,w,c
   555  00111C  B4D8               	btfsc	status,2,c
   556  00111E  D008               	goto	l105
   557  001120  0E07               	movlw	7
   558  001122  184D               	xorwf	_Command,w,c
   559  001124  B4D8               	btfsc	status,2,c
   560  001126  D004               	goto	l105
   561  001128  0E09               	movlw	9
   562  00112A  184D               	xorwf	_Command,w,c
   563  00112C  A4D8               	btfss	status,2,c
   564  00112E  D072               	goto	l2285
   565  001130                     l105:
   566                           
   567                           ;SPItestSLAVE.c: 47: {
   568                           ;SPItestSLAVE.c: 48: PORTCbits.RC6 = 0;
   569  001130  9C82               	bcf	3970,6,c	;volatile
   570                           
   571                           ;SPItestSLAVE.c: 49: for (x = 0; x != 4; x++)
   572  001132  0E00               	movlw	0
   573  001134  0100               	movlb	0	; () banked
   574  001136  6F6A               	movwf	main@x& (0+255),b
   575  001138                     l2247:
   576                           
   577                           ; BSR set to: 0
   578  001138  0E04               	movlw	4
   579  00113A  0100               	movlb	0	; () banked
   580  00113C  196A               	xorwf	main@x& (0+255),w,b
   581  00113E  B4D8               	btfsc	status,2,c
   582  001140  D011               	goto	l2257
   583  001142  D001               	goto	l2251
   584                           
   585                           ; BSR set to: 0
   586  001144  D00F               	goto	l2257
   587  001146                     l2251:
   588                           
   589                           ; BSR set to: 0
   590                           ;SPItestSLAVE.c: 50: DoubleSPIS[x] = ReceiveSPI1();
   591  001146  0100               	movlb	0	; () banked
   592  001148  516A               	movf	main@x& (0+255),w,b
   593  00114A  0D01               	mullw	1
   594  00114C  0E35               	movlw	low _DoubleSPIS
   595  00114E  24F3               	addwf	prodl,w,c
   596  001150  6ED9               	movwf	fsr2l,c
   597  001152  0E00               	movlw	high _DoubleSPIS
   598  001154  20F4               	addwfc	prodh,w,c
   599  001156  6EDA               	movwf	fsr2h,c
   600  001158  ECD9  F00C         	call	_ReceiveSPI1	;wreg free
   601  00115C  6EDF               	movwf	indf2,c
   602  00115E  0100               	movlb	0	; () banked
   603  001160  2B6A               	incf	main@x& (0+255),f,b
   604  001162  D7EA               	goto	l2247
   605  001164                     l2257:
   606                           
   607                           ; BSR set to: 0
   608                           ;SPItestSLAVE.c: 51: if (Command == 0x01)
   609  001164  044D               	decf	_Command,w,c
   610  001166  A4D8               	btfss	status,2,c
   611  001168  D013               	goto	l2265
   612                           
   613                           ; BSR set to: 0
   614                           ;SPItestSLAVE.c: 52: {
   615                           ;SPItestSLAVE.c: 53: SetAngle = SPIReassembleDouble();
   616  00116A  ECF6  F00B         	call	_SPIReassembleDouble	;wreg free
   617  00116E  C00F  F048         	movff	?_SPIReassembleDouble,_SetAngle
   618  001172  C010  F049         	movff	?_SPIReassembleDouble+1,_SetAngle+1
   619  001176  C011  F04A         	movff	?_SPIReassembleDouble+2,_SetAngle+2
   620                           
   621                           ;SPItestSLAVE.c: 54: PIDEnableFlag = 0x03;
   622  00117A  0E03               	movlw	3
   623  00117C  6E4E               	movwf	_PIDEnableFlag,c
   624                           
   625                           ;SPItestSLAVE.c: 55: LCDbreakDouble(SetAngle);
   626  00117E  C048  F060         	movff	_SetAngle,LCDbreakDouble@dubs
   627  001182  C049  F061         	movff	_SetAngle+1,LCDbreakDouble@dubs+1
   628  001186  C04A  F062         	movff	_SetAngle+2,LCDbreakDouble@dubs+2
   629  00118A  EC0E  F009         	call	_LCDbreakDouble	;wreg free
   630                           
   631                           ;SPItestSLAVE.c: 56: }
   632  00118E  D03F               	goto	l2283
   633  001190                     l2265:
   634                           
   635                           ;SPItestSLAVE.c: 57: else if (Command == 0x05)
   636  001190  0E05               	movlw	5
   637  001192  184D               	xorwf	_Command,w,c
   638  001194  A4D8               	btfss	status,2,c
   639  001196  D011               	goto	l2271
   640                           
   641                           ;SPItestSLAVE.c: 58: {
   642                           ;SPItestSLAVE.c: 59: Kp = SPIReassembleDouble();
   643  001198  ECF6  F00B         	call	_SPIReassembleDouble	;wreg free
   644  00119C  C00F  F045         	movff	?_SPIReassembleDouble,_Kp
   645  0011A0  C010  F046         	movff	?_SPIReassembleDouble+1,_Kp+1
   646  0011A4  C011  F047         	movff	?_SPIReassembleDouble+2,_Kp+2
   647                           
   648                           ;SPItestSLAVE.c: 60: LCDbreakDouble(Kp);
   649  0011A8  C045  F060         	movff	_Kp,LCDbreakDouble@dubs
   650  0011AC  C046  F061         	movff	_Kp+1,LCDbreakDouble@dubs+1
   651  0011B0  C047  F062         	movff	_Kp+2,LCDbreakDouble@dubs+2
   652  0011B4  EC0E  F009         	call	_LCDbreakDouble	;wreg free
   653                           
   654                           ;SPItestSLAVE.c: 61: }
   655  0011B8  D02A               	goto	l2283
   656  0011BA                     l2271:
   657                           
   658                           ;SPItestSLAVE.c: 62: else if (Command == 0x07)
   659  0011BA  0E07               	movlw	7
   660  0011BC  184D               	xorwf	_Command,w,c
   661  0011BE  A4D8               	btfss	status,2,c
   662  0011C0  D011               	goto	l2277
   663                           
   664                           ;SPItestSLAVE.c: 63: {
   665                           ;SPItestSLAVE.c: 64: Ki = SPIReassembleDouble();
   666  0011C2  ECF6  F00B         	call	_SPIReassembleDouble	;wreg free
   667  0011C6  C00F  F042         	movff	?_SPIReassembleDouble,_Ki
   668  0011CA  C010  F043         	movff	?_SPIReassembleDouble+1,_Ki+1
   669  0011CE  C011  F044         	movff	?_SPIReassembleDouble+2,_Ki+2
   670                           
   671                           ;SPItestSLAVE.c: 65: LCDbreakDouble(Ki);
   672  0011D2  C042  F060         	movff	_Ki,LCDbreakDouble@dubs
   673  0011D6  C043  F061         	movff	_Ki+1,LCDbreakDouble@dubs+1
   674  0011DA  C044  F062         	movff	_Ki+2,LCDbreakDouble@dubs+2
   675  0011DE  EC0E  F009         	call	_LCDbreakDouble	;wreg free
   676                           
   677                           ;SPItestSLAVE.c: 66: }
   678  0011E2  D015               	goto	l2283
   679  0011E4                     l2277:
   680                           
   681                           ;SPItestSLAVE.c: 67: else if (Command == 0x09)
   682  0011E4  0E09               	movlw	9
   683  0011E6  184D               	xorwf	_Command,w,c
   684  0011E8  A4D8               	btfss	status,2,c
   685  0011EA  D011               	goto	l2283
   686                           
   687                           ;SPItestSLAVE.c: 68: {
   688                           ;SPItestSLAVE.c: 69: Kd = SPIReassembleDouble();
   689  0011EC  ECF6  F00B         	call	_SPIReassembleDouble	;wreg free
   690  0011F0  C00F  F03F         	movff	?_SPIReassembleDouble,_Kd
   691  0011F4  C010  F040         	movff	?_SPIReassembleDouble+1,_Kd+1
   692  0011F8  C011  F041         	movff	?_SPIReassembleDouble+2,_Kd+2
   693                           
   694                           ;SPItestSLAVE.c: 70: LCDbreakDouble(Kd);
   695  0011FC  C03F  F060         	movff	_Kd,LCDbreakDouble@dubs
   696  001200  C040  F061         	movff	_Kd+1,LCDbreakDouble@dubs+1
   697  001204  C041  F062         	movff	_Kd+2,LCDbreakDouble@dubs+2
   698  001208  EC0E  F009         	call	_LCDbreakDouble	;wreg free
   699  00120C  D000               	goto	l2283
   700  00120E                     l2283:
   701                           
   702                           ;SPItestSLAVE.c: 71: }
   703                           ;SPItestSLAVE.c: 72: temporary = SSP2BUF;
   704  00120E  CF66 F069          	movff	3942,main@temporary	;volatile
   705  001212  D000               	goto	l2285
   706  001214                     l2285:
   707                           
   708                           ;SPItestSLAVE.c: 73: }
   709                           ;SPItestSLAVE.c: 74: PIE3bits.SSP2IE = 1;
   710  001214  8EA3               	bsf	4003,7,c	;volatile
   711  001216  D70A               	goto	l2189
   712  001218  EF0C  F000         	goto	start
   713  00121C                     __end_of_main:
   714                           	opt stack 0
   715                           prodh	equ	0xFF4
   716                           prodl	equ	0xFF3
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           indf2	equ	0xFDF
   720                           fsr2h	equ	0xFDA
   721                           fsr2l	equ	0xFD9
   722                           status	equ	0xFD8
   723                           
   724 ;; *************** function _initialize *****************
   725 ;; Defined at:
   726 ;;		line 80 in file "SPItestSLAVE.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;		None               void
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    6
   747 ;; This function calls:
   748 ;;		_lcdInit
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text1
   755  0019DE                     __ptext1:
   756                           	opt stack 0
   757  0019DE                     _initialize:
   758                           	opt stack 24
   759                           
   760                           ;SPItestSLAVE.c: 82: lcdInit();
   761                           
   762                           ;incstack = 0
   763  0019DE  ECD1  F00B         	call	_lcdInit	;wreg free
   764                           
   765                           ;SPItestSLAVE.c: 83: INTCONbits.GIE = 1;
   766  0019E2  8EF2               	bsf	intcon,7,c	;volatile
   767                           
   768                           ;SPItestSLAVE.c: 84: INTCONbits.PEIE = 1;
   769  0019E4  8CF2               	bsf	intcon,6,c	;volatile
   770  0019E6  0012               	return		;funcret
   771  0019E8                     __end_of_initialize:
   772                           	opt stack 0
   773                           prodh	equ	0xFF4
   774                           prodl	equ	0xFF3
   775                           intcon	equ	0xFF2
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           indf2	equ	0xFDF
   779                           fsr2h	equ	0xFDA
   780                           fsr2l	equ	0xFD9
   781                           status	equ	0xFD8
   782                           
   783 ;; *************** function _lcdInit *****************
   784 ;; Defined at:
   785 ;;		line 110 in file "LCD.h"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;		None               void
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    5
   806 ;; This function calls:
   807 ;;		_OpenSPI1
   808 ;;		_lcdCommand
   809 ;;		_setGPIO
   810 ;;		_setIODIR
   811 ;; This function is called by:
   812 ;;		_initialize
   813 ;;		_SPIInit
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text2
   818  0017A2                     __ptext2:
   819                           	opt stack 0
   820  0017A2                     _lcdInit:
   821                           	opt stack 24
   822                           
   823                           ;LCD.h: 112: TRISAbits.RA2=0;
   824                           
   825                           ;incstack = 0
   826  0017A2  9492               	bcf	3986,2,c	;volatile
   827                           
   828                           ;LCD.h: 113: PORTAbits.RA2=1;
   829  0017A4  8480               	bsf	3968,2,c	;volatile
   830                           
   831                           ;LCD.h: 115: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
   832  0017A6  0E02               	movlw	2
   833  0017A8  6E0F               	movwf	OpenSPI1@bus_mode,c
   834  0017AA  0E80               	movlw	128
   835  0017AC  6E10               	movwf	OpenSPI1@smp_phase,c
   836  0017AE  0E02               	movlw	2
   837  0017B0  EC80  F00B         	call	_OpenSPI1
   838                           
   839                           ;LCD.h: 117: setIODIR(0x01,0x00);
   840  0017B4  0E00               	movlw	0
   841  0017B6  6E11               	movwf	setIODIR@dir,c
   842  0017B8  0E01               	movlw	1
   843  0017BA  ECA1  F00C         	call	_setIODIR
   844                           
   845                           ;LCD.h: 119: setIODIR(0x00,0x00);
   846  0017BE  0E00               	movlw	0
   847  0017C0  6E11               	movwf	setIODIR@dir,c
   848  0017C2  0E00               	movlw	0
   849  0017C4  ECA1  F00C         	call	_setIODIR
   850                           
   851                           ;LCD.h: 121: setGPIO(0x00,0x00);
   852  0017C8  0E00               	movlw	0
   853  0017CA  6E11               	movwf	setGPIO@value,c
   854  0017CC  0E00               	movlw	0
   855  0017CE  ECAE  F00C         	call	_setGPIO
   856                           
   857                           ;LCD.h: 123: lcdCommand(0b00111111);
   858  0017D2  0E3F               	movlw	63
   859  0017D4  EC18  F00C         	call	_lcdCommand
   860                           
   861                           ;LCD.h: 125: lcdCommand(0b00001111);
   862  0017D8  0E0F               	movlw	15
   863  0017DA  EC18  F00C         	call	_lcdCommand
   864                           
   865                           ;LCD.h: 127: lcdCommand(0b00000001);
   866  0017DE  0E01               	movlw	1
   867  0017E0  EC18  F00C         	call	_lcdCommand
   868                           
   869                           ;LCD.h: 129: lcdCommand(0b00000110);
   870  0017E4  0E06               	movlw	6
   871  0017E6  EC18  F00C         	call	_lcdCommand
   872  0017EA  0012               	return		;funcret
   873  0017EC                     __end_of_lcdInit:
   874                           	opt stack 0
   875                           prodh	equ	0xFF4
   876                           prodl	equ	0xFF3
   877                           intcon	equ	0xFF2
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           indf2	equ	0xFDF
   881                           fsr2h	equ	0xFDA
   882                           fsr2l	equ	0xFD9
   883                           status	equ	0xFD8
   884                           
   885 ;; *************** function _setIODIR *****************
   886 ;; Defined at:
   887 ;;		line 43 in file "LCD.h"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  address         1    wreg     unsigned char 
   890 ;;  dir             1   16[COMRAM] unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  address         1   17[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;		None               void
   895 ;; Registers used:
   896 ;;		wreg, status,2, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   902 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;Total ram usage:        2 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    3
   909 ;; This function calls:
   910 ;;		_WriteSPI1
   911 ;; This function is called by:
   912 ;;		_lcdInit
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text3
   917  001942                     __ptext3:
   918                           	opt stack 0
   919  001942                     _setIODIR:
   920                           	opt stack 25
   921                           
   922                           ;incstack = 0
   923                           ;setIODIR@address stored from wreg
   924  001942  6E12               	movwf	setIODIR@address,c
   925                           
   926                           ;LCD.h: 45: PORTAbits.RA2=0;
   927  001944  9480               	bcf	3968,2,c	;volatile
   928                           
   929                           ;LCD.h: 46: WriteSPI1(0x40);
   930  001946  0E40               	movlw	64
   931  001948  EC90  F00C         	call	_WriteSPI1
   932                           
   933                           ;LCD.h: 47: WriteSPI1(address);
   934  00194C  5012               	movf	setIODIR@address,w,c
   935  00194E  EC90  F00C         	call	_WriteSPI1
   936                           
   937                           ;LCD.h: 48: WriteSPI1(dir);
   938  001952  5011               	movf	setIODIR@dir,w,c
   939  001954  EC90  F00C         	call	_WriteSPI1
   940                           
   941                           ;LCD.h: 49: PORTAbits.RA2=1;
   942  001958  8480               	bsf	3968,2,c	;volatile
   943  00195A  0012               	return		;funcret
   944  00195C                     __end_of_setIODIR:
   945                           	opt stack 0
   946                           prodh	equ	0xFF4
   947                           prodl	equ	0xFF3
   948                           intcon	equ	0xFF2
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           indf2	equ	0xFDF
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _OpenSPI1 *****************
   957 ;; Defined at:
   958 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  sync_mode       1    wreg     unsigned char 
   961 ;;  bus_mode        1   14[COMRAM] unsigned char 
   962 ;;  smp_phase       1   15[COMRAM] unsigned char 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  sync_mode       1   16[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;		None               void
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;Total ram usage:        3 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    2
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_lcdInit
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text4
   989  001700                     __ptext4:
   990                           	opt stack 0
   991  001700                     _OpenSPI1:
   992                           	opt stack 26
   993                           
   994                           ;incstack = 0
   995                           ;OpenSPI1@sync_mode stored from wreg
   996  001700  6E11               	movwf	OpenSPI1@sync_mode,c
   997  001702  0E3F               	movlw	63
   998  001704  16C7               	andwf	4039,f,c	;volatile
   999  001706  0E00               	movlw	0
  1000  001708  6EC6               	movwf	4038,c	;volatile
  1001  00170A  5011               	movf	OpenSPI1@sync_mode,w,c
  1002  00170C  12C6               	iorwf	4038,f,c	;volatile
  1003  00170E  5010               	movf	OpenSPI1@smp_phase,w,c
  1004  001710  12C7               	iorwf	4039,f,c	;volatile
  1005  001712  D005               	goto	l1863
  1006  001714                     l218:
  1007  001714  8CC7               	bsf	4039,6,c	;volatile
  1008  001716  D013               	goto	l1867
  1009  001718                     l220:
  1010  001718  8CC7               	bsf	4039,6,c	;volatile
  1011  00171A                     l221:
  1012  00171A  88C6               	bsf	4038,4,c	;volatile
  1013  00171C  D010               	goto	l1867
  1014  00171E                     l1863:
  1015  00171E  500F               	movf	OpenSPI1@bus_mode,w,c
  1016                           
  1017                           ; Switch size 1, requested type "space"
  1018                           ; Number of cases is 3, Range of values is 0 to 3
  1019                           ; switch strategies available:
  1020                           ; Name         Instructions Cycles
  1021                           ; simple_byte           10     6 (average)
  1022                           ;	Chosen strategy is simple_byte
  1023  001720  0A00               	xorlw	0	; case 0
  1024  001722  B4D8               	btfsc	status,2,c
  1025  001724  D7F7               	goto	l218
  1026  001726  0A02               	xorlw	2	; case 2
  1027  001728  B4D8               	btfsc	status,2,c
  1028  00172A  D7F6               	goto	l220
  1029  00172C  0A01               	xorlw	1	; case 3
  1030  00172E  B4D8               	btfsc	status,2,c
  1031  001730  D7F4               	goto	l221
  1032  001732  D005               	goto	l1867
  1033  001734                     l224:
  1034  001734  8E97               	bsf	3991,7,c	;volatile
  1035  001736                     l226:
  1036  001736  8694               	bsf	3988,3,c	;volatile
  1037  001738  D00A               	goto	l225
  1038  00173A                     l227:
  1039  00173A  9694               	bcf	3988,3,c	;volatile
  1040  00173C  D008               	goto	l225
  1041  00173E                     l1867:
  1042  00173E  5011               	movf	OpenSPI1@sync_mode,w,c
  1043                           
  1044                           ; Switch size 1, requested type "space"
  1045                           ; Number of cases is 2, Range of values is 4 to 5
  1046                           ; switch strategies available:
  1047                           ; Name         Instructions Cycles
  1048                           ; simple_byte            7     4 (average)
  1049                           ;	Chosen strategy is simple_byte
  1050  001740  0A04               	xorlw	4	; case 4
  1051  001742  B4D8               	btfsc	status,2,c
  1052  001744  D7F7               	goto	l224
  1053  001746  0A01               	xorlw	1	; case 5
  1054  001748  B4D8               	btfsc	status,2,c
  1055  00174A  D7F5               	goto	l226
  1056  00174C  D7F6               	goto	l227
  1057  00174E                     l225:
  1058  00174E  8894               	bsf	3988,4,c	;volatile
  1059  001750  9A94               	bcf	3988,5,c	;volatile
  1060  001752  8AC6               	bsf	4038,5,c	;volatile
  1061  001754  0012               	return		;funcret
  1062  001756                     __end_of_OpenSPI1:
  1063                           	opt stack 0
  1064                           prodh	equ	0xFF4
  1065                           prodl	equ	0xFF3
  1066                           intcon	equ	0xFF2
  1067                           postinc0	equ	0xFEE
  1068                           wreg	equ	0xFE8
  1069                           indf2	equ	0xFDF
  1070                           fsr2h	equ	0xFDA
  1071                           fsr2l	equ	0xFD9
  1072                           status	equ	0xFD8
  1073                           
  1074 ;; *************** function _SendSPI1 *****************
  1075 ;; Defined at:
  1076 ;;		line 34 in file "SPISlave.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  data            1    wreg     unsigned char 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  data            1   15[COMRAM] unsigned char 
  1081 ;;  temp            1   14[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;Total ram usage:        2 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    2
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text5
  1106  001976                     __ptext5:
  1107                           	opt stack 0
  1108  001976                     _SendSPI1:
  1109                           	opt stack 28
  1110                           
  1111                           ;incstack = 0
  1112                           ;SendSPI1@data stored from wreg
  1113  001976  6E10               	movwf	SendSPI1@data,c
  1114                           
  1115                           ;SPISlave.c: 36: SSP2BUF = data;
  1116  001978  C010  FF66         	movff	SendSPI1@data,3942	;volatile
  1117                           
  1118                           ;SPISlave.c: 37: unsigned char temp;
  1119                           ;SPISlave.c: 38: PIR3bits.SSP2IF = 0;
  1120  00197C  9EA4               	bcf	4004,7,c	;volatile
  1121                           
  1122                           ;SPISlave.c: 39: temp = SSP2BUF;
  1123  00197E  CF66 F00F          	movff	3942,SendSPI1@temp	;volatile
  1124                           
  1125                           ;SPISlave.c: 40: while (!PIR3bits.SSP2IF);
  1126  001982  D000               	goto	l182
  1127  001984                     l182:
  1128  001984  AEA4               	btfss	4004,7,c	;volatile
  1129  001986  D7FE               	goto	l182
  1130                           
  1131                           ;SPISlave.c: 41: SSP2CON1bits.SSPOV2 = 0;
  1132  001988  9C63               	bcf	3939,6,c	;volatile
  1133                           
  1134                           ;SPISlave.c: 42: PIR3bits.SSP2IF = 0;
  1135  00198A  9EA4               	bcf	4004,7,c	;volatile
  1136  00198C  0012               	return		;funcret
  1137  00198E                     __end_of_SendSPI1:
  1138                           	opt stack 0
  1139                           prodh	equ	0xFF4
  1140                           prodl	equ	0xFF3
  1141                           intcon	equ	0xFF2
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           indf2	equ	0xFDF
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _SPIReassembleDouble *****************
  1150 ;; Defined at:
  1151 ;;		line 69 in file "SPISlave.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  dub             3   17[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  3   14[COMRAM] unsigned char 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        6 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    2
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text6
  1180  0017EC                     __ptext6:
  1181                           	opt stack 0
  1182  0017EC                     _SPIReassembleDouble:
  1183                           	opt stack 28
  1184                           
  1185                           ;SPISlave.c: 71: double dub;
  1186                           ;SPISlave.c: 72: DoublePtr = (unsigned char*) &dub;
  1187                           
  1188                           ;incstack = 0
  1189  0017EC  0E12               	movlw	low SPIReassembleDouble@dub
  1190  0017EE  6E4B               	movwf	_DoublePtr,c
  1191  0017F0  0E00               	movlw	high SPIReassembleDouble@dub
  1192  0017F2  6E4C               	movwf	_DoublePtr+1,c
  1193                           
  1194                           ;SPISlave.c: 73: DoublePtr[0] = DoubleSPIS[0];
  1195  0017F4  C04B  FFD9         	movff	_DoublePtr,fsr2l
  1196  0017F8  C04C  FFDA         	movff	_DoublePtr+1,fsr2h
  1197  0017FC  C035  FFDF         	movff	_DoubleSPIS,indf2
  1198                           
  1199                           ;SPISlave.c: 74: DoublePtr[1] = DoubleSPIS[1];
  1200  001800  EE20 F001          	lfsr	2,1
  1201  001804  504B               	movf	_DoublePtr,w,c
  1202  001806  26D9               	addwf	fsr2l,f,c
  1203  001808  504C               	movf	_DoublePtr+1,w,c
  1204  00180A  22DA               	addwfc	fsr2h,f,c
  1205  00180C  C036  FFDF         	movff	_DoubleSPIS+1,indf2
  1206                           
  1207                           ;SPISlave.c: 75: DoublePtr[2] = DoubleSPIS[2];
  1208  001810  EE20 F002          	lfsr	2,2
  1209  001814  504B               	movf	_DoublePtr,w,c
  1210  001816  26D9               	addwf	fsr2l,f,c
  1211  001818  504C               	movf	_DoublePtr+1,w,c
  1212  00181A  22DA               	addwfc	fsr2h,f,c
  1213  00181C  C037  FFDF         	movff	_DoubleSPIS+2,indf2
  1214                           
  1215                           ;SPISlave.c: 77: return dub;
  1216  001820  C012  F00F         	movff	SPIReassembleDouble@dub,?_SPIReassembleDouble
  1217  001824  C013  F010         	movff	SPIReassembleDouble@dub+1,?_SPIReassembleDouble+1
  1218  001828  C014  F011         	movff	SPIReassembleDouble@dub+2,?_SPIReassembleDouble+2
  1219  00182C  D000               	goto	l202
  1220  00182E                     l202:
  1221  00182E  0012               	return		;funcret
  1222  001830                     __end_of_SPIReassembleDouble:
  1223                           	opt stack 0
  1224                           prodh	equ	0xFF4
  1225                           prodl	equ	0xFF3
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           indf2	equ	0xFDF
  1230                           fsr2h	equ	0xFDA
  1231                           fsr2l	equ	0xFD9
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _SPIDisassembleDouble *****************
  1235 ;; Defined at:
  1236 ;;		line 52 in file "SPISlave.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  dub             3   16[COMRAM] unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1250 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;Total ram usage:        3 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    3
  1257 ;; This function calls:
  1258 ;;		_GenerateChecksum
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text7
  1265  0018B2                     __ptext7:
  1266                           	opt stack 0
  1267  0018B2                     _SPIDisassembleDouble:
  1268                           	opt stack 27
  1269                           
  1270                           ;SPISlave.c: 54: DoublePtr = (unsigned char*) &dub;
  1271                           
  1272                           ;incstack = 0
  1273  0018B2  0E11               	movlw	low SPIDisassembleDouble@dub
  1274  0018B4  6E4B               	movwf	_DoublePtr,c
  1275  0018B6  0E00               	movlw	high SPIDisassembleDouble@dub
  1276  0018B8  6E4C               	movwf	_DoublePtr+1,c
  1277                           
  1278                           ;SPISlave.c: 55: DoubleSPIS[0] = DoublePtr[0];
  1279  0018BA  C04B  FFD9         	movff	_DoublePtr,fsr2l
  1280  0018BE  C04C  FFDA         	movff	_DoublePtr+1,fsr2h
  1281  0018C2  50DF               	movf	indf2,w,c
  1282  0018C4  6E35               	movwf	_DoubleSPIS,c
  1283                           
  1284                           ;SPISlave.c: 56: DoubleSPIS[1] = DoublePtr[1];
  1285  0018C6  EE20 F001          	lfsr	2,1
  1286  0018CA  504B               	movf	_DoublePtr,w,c
  1287  0018CC  26D9               	addwf	fsr2l,f,c
  1288  0018CE  504C               	movf	_DoublePtr+1,w,c
  1289  0018D0  22DA               	addwfc	fsr2h,f,c
  1290  0018D2  50DF               	movf	indf2,w,c
  1291  0018D4  6E36               	movwf	_DoubleSPIS+1,c
  1292                           
  1293                           ;SPISlave.c: 57: DoubleSPIS[2] = DoublePtr[2];
  1294  0018D6  EE20 F002          	lfsr	2,2
  1295  0018DA  504B               	movf	_DoublePtr,w,c
  1296  0018DC  26D9               	addwf	fsr2l,f,c
  1297  0018DE  504C               	movf	_DoublePtr+1,w,c
  1298  0018E0  22DA               	addwfc	fsr2h,f,c
  1299  0018E2  50DF               	movf	indf2,w,c
  1300  0018E4  6E37               	movwf	_DoubleSPIS+2,c
  1301                           
  1302                           ;SPISlave.c: 58: DoubleSPIS[3] = GenerateChecksum();
  1303  0018E6  EC77  F00C         	call	_GenerateChecksum	;wreg free
  1304  0018EA  6E38               	movwf	_DoubleSPIS+3,c
  1305  0018EC  0012               	return		;funcret
  1306  0018EE                     __end_of_SPIDisassembleDouble:
  1307                           	opt stack 0
  1308                           prodh	equ	0xFF4
  1309                           prodl	equ	0xFF3
  1310                           intcon	equ	0xFF2
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           indf2	equ	0xFDF
  1314                           fsr2h	equ	0xFDA
  1315                           fsr2l	equ	0xFD9
  1316                           status	equ	0xFD8
  1317                           
  1318 ;; *************** function _GenerateChecksum *****************
  1319 ;; Defined at:
  1320 ;;		line 61 in file "SPISlave.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  y               1   15[COMRAM] unsigned char 
  1325 ;;  sum             1   14[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      unsigned char 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    2
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_SPIDisassembleDouble
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text8
  1350  0018EE                     __ptext8:
  1351                           	opt stack 0
  1352  0018EE                     _GenerateChecksum:
  1353                           	opt stack 27
  1354                           
  1355                           ;SPISlave.c: 63: unsigned char y, sum = 0;
  1356                           
  1357                           ;incstack = 0
  1358  0018EE  0E00               	movlw	0
  1359  0018F0  6E0F               	movwf	GenerateChecksum@sum,c
  1360                           
  1361                           ;SPISlave.c: 64: for (y = 0; y != 3; y++)
  1362  0018F2  0E00               	movlw	0
  1363  0018F4  6E10               	movwf	GenerateChecksum@y,c
  1364  0018F6                     l1941:
  1365  0018F6  0E03               	movlw	3
  1366  0018F8  1810               	xorwf	GenerateChecksum@y,w,c
  1367  0018FA  B4D8               	btfsc	status,2,c
  1368  0018FC  D00E               	goto	l1951
  1369  0018FE  D001               	goto	l1945
  1370  001900  D00C               	goto	l1951
  1371  001902                     l1945:
  1372                           
  1373                           ;SPISlave.c: 65: sum += DoubleSPIS[y];
  1374  001902  5010               	movf	GenerateChecksum@y,w,c
  1375  001904  0D01               	mullw	1
  1376  001906  0E35               	movlw	low _DoubleSPIS
  1377  001908  24F3               	addwf	prodl,w,c
  1378  00190A  6ED9               	movwf	fsr2l,c
  1379  00190C  0E00               	movlw	high _DoubleSPIS
  1380  00190E  20F4               	addwfc	prodh,w,c
  1381  001910  6EDA               	movwf	fsr2h,c
  1382  001912  50DF               	movf	indf2,w,c
  1383  001914  260F               	addwf	GenerateChecksum@sum,f,c
  1384  001916  2A10               	incf	GenerateChecksum@y,f,c
  1385  001918  D7EE               	goto	l1941
  1386  00191A                     l1951:
  1387                           
  1388                           ;SPISlave.c: 66: return sum;
  1389  00191A  500F               	movf	GenerateChecksum@sum,w,c
  1390  00191C  D000               	goto	l199
  1391  00191E                     l199:
  1392  00191E  0012               	return		;funcret
  1393  001920                     __end_of_GenerateChecksum:
  1394                           	opt stack 0
  1395                           prodh	equ	0xFF4
  1396                           prodl	equ	0xFF3
  1397                           intcon	equ	0xFF2
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           indf2	equ	0xFDF
  1401                           fsr2h	equ	0xFDA
  1402                           fsr2l	equ	0xFD9
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _ReceiveSPI1 *****************
  1406 ;; Defined at:
  1407 ;;		line 45 in file "SPISlave.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    2
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text9
  1436  0019B2                     __ptext9:
  1437                           	opt stack 0
  1438  0019B2                     _ReceiveSPI1:
  1439                           	opt stack 28
  1440                           
  1441                           ;SPISlave.c: 47: SSP2BUF = 0x00;
  1442                           
  1443                           ;incstack = 0
  1444  0019B2  0E00               	movlw	0
  1445  0019B4  6E66               	movwf	3942,c	;volatile
  1446                           
  1447                           ;SPISlave.c: 48: while (SSP2STATbits.BF == 0);
  1448  0019B6  D000               	goto	l188
  1449  0019B8                     l188:
  1450  0019B8  A064               	btfss	3940,0,c	;volatile
  1451  0019BA  D7FE               	goto	l188
  1452                           
  1453                           ;SPISlave.c: 49: return SSP2BUF;
  1454  0019BC  5066               	movf	3942,w,c	;volatile
  1455  0019BE  D000               	goto	l191
  1456  0019C0                     l191:
  1457  0019C0  0012               	return		;funcret
  1458  0019C2                     __end_of_ReceiveSPI1:
  1459                           	opt stack 0
  1460                           prodh	equ	0xFF4
  1461                           prodl	equ	0xFF3
  1462                           intcon	equ	0xFF2
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           indf2	equ	0xFDF
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _LCDbreakDouble *****************
  1471 ;; Defined at:
  1472 ;;		line 95 in file "SPItestSLAVE.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  dubs            3    0[BANK0 ] unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  temp2           2    7[BANK0 ] unsigned int 
  1477 ;;  temp1           2    5[BANK0 ] unsigned int 
  1478 ;;  tempDub         2    3[BANK0 ] unsigned int 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:        9 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    6
  1495 ;; This function calls:
  1496 ;;		___ftmul
  1497 ;;		___fttol
  1498 ;;		___lwdiv
  1499 ;;		___lwmod
  1500 ;;		_lcdChar
  1501 ;;		_lcdCommand
  1502 ;;		_lcdGoTo
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text10
  1509  00121C                     __ptext10:
  1510                           	opt stack 0
  1511  00121C                     _LCDbreakDouble:
  1512                           	opt stack 24
  1513                           
  1514                           ;SPItestSLAVE.c: 97: unsigned int temp1, temp2;
  1515                           ;SPItestSLAVE.c: 98: unsigned int tempDub;
  1516                           ;SPItestSLAVE.c: 100: lcdCommand(0x01);
  1517                           
  1518                           ;incstack = 0
  1519  00121C  0E01               	movlw	1
  1520  00121E  EC18  F00C         	call	_lcdCommand
  1521                           
  1522                           ;SPItestSLAVE.c: 101: lcdGoTo(0x40);
  1523  001222  0E40               	movlw	64
  1524  001224  ECE9  F00C         	call	_lcdGoTo
  1525                           
  1526                           ;SPItestSLAVE.c: 102: tempDub = dubs * 100;
  1527  001228  0E00               	movlw	0
  1528  00122A  6E1A               	movwf	___ftmul@f2,c
  1529  00122C  0EC8               	movlw	200
  1530  00122E  6E1B               	movwf	___ftmul@f2+1,c
  1531  001230  0E42               	movlw	66
  1532  001232  6E1C               	movwf	___ftmul@f2+2,c
  1533  001234  C060  F017         	movff	LCDbreakDouble@dubs,___ftmul@f1
  1534  001238  C061  F018         	movff	LCDbreakDouble@dubs+1,___ftmul@f1+1
  1535  00123C  C062  F019         	movff	LCDbreakDouble@dubs+2,___ftmul@f1+2
  1536  001240  ECC7  F009         	call	___ftmul	;wreg free
  1537  001244  C017  F026         	movff	?___ftmul,___fttol@f1
  1538  001248  C018  F027         	movff	?___ftmul+1,___fttol@f1+1
  1539  00124C  C019  F028         	movff	?___ftmul+2,___fttol@f1+2
  1540  001250  EC43  F00A         	call	___fttol	;wreg free
  1541  001254  C026  F063         	movff	?___fttol,LCDbreakDouble@tempDub
  1542  001258  C027  F064         	movff	?___fttol+1,LCDbreakDouble@tempDub+1
  1543                           
  1544                           ;SPItestSLAVE.c: 103: temp1 = tempDub / 10000;
  1545  00125C  C063  F00F         	movff	LCDbreakDouble@tempDub,___lwdiv@dividend
  1546  001260  C064  F010         	movff	LCDbreakDouble@tempDub+1,___lwdiv@dividend+1
  1547  001264  0E27               	movlw	39
  1548  001266  6E12               	movwf	___lwdiv@divisor+1,c
  1549  001268  0E10               	movlw	16
  1550  00126A  6E11               	movwf	___lwdiv@divisor,c
  1551  00126C  EC52  F00B         	call	___lwdiv	;wreg free
  1552  001270  C00F  F065         	movff	?___lwdiv,LCDbreakDouble@temp1
  1553  001274  C010  F066         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1554                           
  1555                           ;SPItestSLAVE.c: 104: temp2 = tempDub % 10000;
  1556  001278  C063  F00F         	movff	LCDbreakDouble@tempDub,___lwmod@dividend
  1557  00127C  C064  F010         	movff	LCDbreakDouble@tempDub+1,___lwmod@dividend+1
  1558  001280  0E27               	movlw	39
  1559  001282  6E12               	movwf	___lwmod@divisor+1,c
  1560  001284  0E10               	movlw	16
  1561  001286  6E11               	movwf	___lwmod@divisor,c
  1562  001288  ECAB  F00B         	call	___lwmod	;wreg free
  1563  00128C  C00F  F067         	movff	?___lwmod,LCDbreakDouble@temp2
  1564  001290  C010  F068         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1565                           
  1566                           ;SPItestSLAVE.c: 105: if (temp1 != 0)
  1567  001294  0100               	movlb	0	; () banked
  1568  001296  5165               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1569  001298  0100               	movlb	0	; () banked
  1570  00129A  1166               	iorwf	(LCDbreakDouble@temp1+1)& (0+255),w,b
  1571  00129C  B4D8               	btfsc	status,2,c
  1572  00129E  D005               	goto	l127
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;SPItestSLAVE.c: 106: lcdChar(temp1 + 0x30);
  1576  0012A0  0100               	movlb	0	; () banked
  1577  0012A2  5165               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1578  0012A4  0F30               	addlw	48
  1579  0012A6  EC3A  F00C         	call	_lcdChar
  1580  0012AA                     l127:
  1581                           
  1582                           ;SPItestSLAVE.c: 107: temp1 = temp2 / 1000;
  1583  0012AA  C067  F00F         	movff	LCDbreakDouble@temp2,___lwdiv@dividend
  1584  0012AE  C068  F010         	movff	LCDbreakDouble@temp2+1,___lwdiv@dividend+1
  1585  0012B2  0E03               	movlw	3
  1586  0012B4  6E12               	movwf	___lwdiv@divisor+1,c
  1587  0012B6  0EE8               	movlw	232
  1588  0012B8  6E11               	movwf	___lwdiv@divisor,c
  1589  0012BA  EC52  F00B         	call	___lwdiv	;wreg free
  1590  0012BE  C00F  F065         	movff	?___lwdiv,LCDbreakDouble@temp1
  1591  0012C2  C010  F066         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1592                           
  1593                           ;SPItestSLAVE.c: 108: temp2 = temp2 % 1000;
  1594  0012C6  C067  F00F         	movff	LCDbreakDouble@temp2,___lwmod@dividend
  1595  0012CA  C068  F010         	movff	LCDbreakDouble@temp2+1,___lwmod@dividend+1
  1596  0012CE  0E03               	movlw	3
  1597  0012D0  6E12               	movwf	___lwmod@divisor+1,c
  1598  0012D2  0EE8               	movlw	232
  1599  0012D4  6E11               	movwf	___lwmod@divisor,c
  1600  0012D6  ECAB  F00B         	call	___lwmod	;wreg free
  1601  0012DA  C00F  F067         	movff	?___lwmod,LCDbreakDouble@temp2
  1602  0012DE  C010  F068         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1603                           
  1604                           ;SPItestSLAVE.c: 109: if (temp1 != 0)
  1605  0012E2  0100               	movlb	0	; () banked
  1606  0012E4  5165               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1607  0012E6  0100               	movlb	0	; () banked
  1608  0012E8  1166               	iorwf	(LCDbreakDouble@temp1+1)& (0+255),w,b
  1609  0012EA  B4D8               	btfsc	status,2,c
  1610  0012EC  D005               	goto	l128
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;SPItestSLAVE.c: 110: lcdChar(temp1 + 0x30);
  1614  0012EE  0100               	movlb	0	; () banked
  1615  0012F0  5165               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1616  0012F2  0F30               	addlw	48
  1617  0012F4  EC3A  F00C         	call	_lcdChar
  1618  0012F8                     l128:
  1619                           
  1620                           ;SPItestSLAVE.c: 111: temp1 = temp2 / 100;
  1621  0012F8  C067  F00F         	movff	LCDbreakDouble@temp2,___lwdiv@dividend
  1622  0012FC  C068  F010         	movff	LCDbreakDouble@temp2+1,___lwdiv@dividend+1
  1623  001300  0E00               	movlw	0
  1624  001302  6E12               	movwf	___lwdiv@divisor+1,c
  1625  001304  0E64               	movlw	100
  1626  001306  6E11               	movwf	___lwdiv@divisor,c
  1627  001308  EC52  F00B         	call	___lwdiv	;wreg free
  1628  00130C  C00F  F065         	movff	?___lwdiv,LCDbreakDouble@temp1
  1629  001310  C010  F066         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1630                           
  1631                           ;SPItestSLAVE.c: 112: temp2 = temp2 % 100;
  1632  001314  C067  F00F         	movff	LCDbreakDouble@temp2,___lwmod@dividend
  1633  001318  C068  F010         	movff	LCDbreakDouble@temp2+1,___lwmod@dividend+1
  1634  00131C  0E00               	movlw	0
  1635  00131E  6E12               	movwf	___lwmod@divisor+1,c
  1636  001320  0E64               	movlw	100
  1637  001322  6E11               	movwf	___lwmod@divisor,c
  1638  001324  ECAB  F00B         	call	___lwmod	;wreg free
  1639  001328  C00F  F067         	movff	?___lwmod,LCDbreakDouble@temp2
  1640  00132C  C010  F068         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1641                           
  1642                           ;SPItestSLAVE.c: 113: lcdChar(temp1 + 0x30);
  1643  001330  0100               	movlb	0	; () banked
  1644  001332  5165               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1645  001334  0F30               	addlw	48
  1646  001336  EC3A  F00C         	call	_lcdChar
  1647                           
  1648                           ;SPItestSLAVE.c: 114: lcdChar('.');
  1649  00133A  0E2E               	movlw	46
  1650  00133C  EC3A  F00C         	call	_lcdChar
  1651                           
  1652                           ;SPItestSLAVE.c: 115: temp1 = temp2 / 10;
  1653  001340  C067  F00F         	movff	LCDbreakDouble@temp2,___lwdiv@dividend
  1654  001344  C068  F010         	movff	LCDbreakDouble@temp2+1,___lwdiv@dividend+1
  1655  001348  0E00               	movlw	0
  1656  00134A  6E12               	movwf	___lwdiv@divisor+1,c
  1657  00134C  0E0A               	movlw	10
  1658  00134E  6E11               	movwf	___lwdiv@divisor,c
  1659  001350  EC52  F00B         	call	___lwdiv	;wreg free
  1660  001354  C00F  F065         	movff	?___lwdiv,LCDbreakDouble@temp1
  1661  001358  C010  F066         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1662                           
  1663                           ;SPItestSLAVE.c: 116: temp2 = temp2 % 10;
  1664  00135C  C067  F00F         	movff	LCDbreakDouble@temp2,___lwmod@dividend
  1665  001360  C068  F010         	movff	LCDbreakDouble@temp2+1,___lwmod@dividend+1
  1666  001364  0E00               	movlw	0
  1667  001366  6E12               	movwf	___lwmod@divisor+1,c
  1668  001368  0E0A               	movlw	10
  1669  00136A  6E11               	movwf	___lwmod@divisor,c
  1670  00136C  ECAB  F00B         	call	___lwmod	;wreg free
  1671  001370  C00F  F067         	movff	?___lwmod,LCDbreakDouble@temp2
  1672  001374  C010  F068         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1673                           
  1674                           ;SPItestSLAVE.c: 117: lcdChar(temp1 + 0x30);
  1675  001378  0100               	movlb	0	; () banked
  1676  00137A  5165               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1677  00137C  0F30               	addlw	48
  1678  00137E  EC3A  F00C         	call	_lcdChar
  1679                           
  1680                           ;SPItestSLAVE.c: 118: lcdChar(temp2 + 0x30);
  1681  001382  0100               	movlb	0	; () banked
  1682  001384  5167               	movf	LCDbreakDouble@temp2& (0+255),w,b
  1683  001386  0F30               	addlw	48
  1684  001388  EC3A  F00C         	call	_lcdChar
  1685  00138C  0012               	return		;funcret
  1686  00138E                     __end_of_LCDbreakDouble:
  1687                           	opt stack 0
  1688                           prodh	equ	0xFF4
  1689                           prodl	equ	0xFF3
  1690                           intcon	equ	0xFF2
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           indf2	equ	0xFDF
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _lcdGoTo *****************
  1699 ;; Defined at:
  1700 ;;		line 76 in file "LCD.h"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  pos             1    wreg     unsigned char 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  pos             1   19[COMRAM] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;		None               void
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;Total ram usage:        1 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    5
  1721 ;; This function calls:
  1722 ;;		_lcdCommand
  1723 ;; This function is called by:
  1724 ;;		_LCDbreakDouble
  1725 ;;		_lcdPrint
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text11
  1730  0019D2                     __ptext11:
  1731                           	opt stack 0
  1732  0019D2                     _lcdGoTo:
  1733                           	opt stack 24
  1734                           
  1735                           ;incstack = 0
  1736                           ;lcdGoTo@pos stored from wreg
  1737  0019D2  6E14               	movwf	lcdGoTo@pos,c
  1738                           
  1739                           ;LCD.h: 79: lcdCommand(0x80+pos);
  1740  0019D4  5014               	movf	lcdGoTo@pos,w,c
  1741  0019D6  0F80               	addlw	128
  1742  0019D8  EC18  F00C         	call	_lcdCommand
  1743  0019DC  0012               	return		;funcret
  1744  0019DE                     __end_of_lcdGoTo:
  1745                           	opt stack 0
  1746                           prodh	equ	0xFF4
  1747                           prodl	equ	0xFF3
  1748                           intcon	equ	0xFF2
  1749                           postinc0	equ	0xFEE
  1750                           wreg	equ	0xFE8
  1751                           indf2	equ	0xFDF
  1752                           fsr2h	equ	0xFDA
  1753                           fsr2l	equ	0xFD9
  1754                           status	equ	0xFD8
  1755                           
  1756 ;; *************** function _lcdCommand *****************
  1757 ;; Defined at:
  1758 ;;		line 52 in file "LCD.h"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  command         1    wreg     unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  command         1   18[COMRAM] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;		None               void
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;Total ram usage:        1 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    4
  1779 ;; This function calls:
  1780 ;;		_Delay10TCYx
  1781 ;;		_setGPIO
  1782 ;; This function is called by:
  1783 ;;		_lcdGoTo
  1784 ;;		_lcdInit
  1785 ;;		_LCDbreakDouble
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text12
  1790  001830                     __ptext12:
  1791                           	opt stack 0
  1792  001830                     _lcdCommand:
  1793                           	opt stack 24
  1794                           
  1795                           ;incstack = 0
  1796                           ;lcdCommand@command stored from wreg
  1797  001830  6E13               	movwf	lcdCommand@command,c
  1798                           
  1799                           ;LCD.h: 54: setGPIO(0x12,0x00);
  1800  001832  0E00               	movlw	0
  1801  001834  6E11               	movwf	setGPIO@value,c
  1802  001836  0E12               	movlw	18
  1803  001838  ECAE  F00C         	call	_setGPIO
  1804                           
  1805                           ;LCD.h: 55: Delay10TCYx(0);
  1806  00183C  0E00               	movlw	0
  1807  00183E  ECD0  F00C         	call	_Delay10TCYx
  1808                           
  1809                           ;LCD.h: 56: setGPIO(0x13, command);
  1810  001842  C013  F011         	movff	lcdCommand@command,setGPIO@value
  1811  001846  0E13               	movlw	19
  1812  001848  ECAE  F00C         	call	_setGPIO
  1813                           
  1814                           ;LCD.h: 57: Delay10TCYx(0);
  1815  00184C  0E00               	movlw	0
  1816  00184E  ECD0  F00C         	call	_Delay10TCYx
  1817                           
  1818                           ;LCD.h: 58: setGPIO(0x12,0x40);
  1819  001852  0E40               	movlw	64
  1820  001854  6E11               	movwf	setGPIO@value,c
  1821  001856  0E12               	movlw	18
  1822  001858  ECAE  F00C         	call	_setGPIO
  1823                           
  1824                           ;LCD.h: 59: Delay10TCYx(0);
  1825  00185C  0E00               	movlw	0
  1826  00185E  ECD0  F00C         	call	_Delay10TCYx
  1827                           
  1828                           ;LCD.h: 60: setGPIO(0x12,0x00);
  1829  001862  0E00               	movlw	0
  1830  001864  6E11               	movwf	setGPIO@value,c
  1831  001866  0E12               	movlw	18
  1832  001868  ECAE  F00C         	call	_setGPIO
  1833                           
  1834                           ;LCD.h: 61: Delay10TCYx(0);
  1835  00186C  0E00               	movlw	0
  1836  00186E  ECD0  F00C         	call	_Delay10TCYx
  1837  001872  0012               	return		;funcret
  1838  001874                     __end_of_lcdCommand:
  1839                           	opt stack 0
  1840                           prodh	equ	0xFF4
  1841                           prodl	equ	0xFF3
  1842                           intcon	equ	0xFF2
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           indf2	equ	0xFDF
  1846                           fsr2h	equ	0xFDA
  1847                           fsr2l	equ	0xFD9
  1848                           status	equ	0xFD8
  1849                           
  1850 ;; *************** function _lcdChar *****************
  1851 ;; Defined at:
  1852 ;;		line 64 in file "LCD.h"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  letter          1    wreg     unsigned char 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  letter          1   18[COMRAM] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;		None               void
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;Total ram usage:        1 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    4
  1873 ;; This function calls:
  1874 ;;		_Delay10TCYx
  1875 ;;		_setGPIO
  1876 ;; This function is called by:
  1877 ;;		_LCDbreakDouble
  1878 ;;		_lcdWriteString
  1879 ;;		_lcdPrint
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text13
  1884  001874                     __ptext13:
  1885                           	opt stack 0
  1886  001874                     _lcdChar:
  1887                           	opt stack 25
  1888                           
  1889                           ;incstack = 0
  1890                           ;lcdChar@letter stored from wreg
  1891  001874  6E13               	movwf	lcdChar@letter,c
  1892                           
  1893                           ;LCD.h: 66: setGPIO(0x12,0x80);
  1894  001876  0E80               	movlw	128
  1895  001878  6E11               	movwf	setGPIO@value,c
  1896  00187A  0E12               	movlw	18
  1897  00187C  ECAE  F00C         	call	_setGPIO
  1898                           
  1899                           ;LCD.h: 67: Delay10TCYx(0);
  1900  001880  0E00               	movlw	0
  1901  001882  ECD0  F00C         	call	_Delay10TCYx
  1902                           
  1903                           ;LCD.h: 68: setGPIO(0x13,letter);
  1904  001886  C013  F011         	movff	lcdChar@letter,setGPIO@value
  1905  00188A  0E13               	movlw	19
  1906  00188C  ECAE  F00C         	call	_setGPIO
  1907                           
  1908                           ;LCD.h: 70: setGPIO(0x12, 0xc0);
  1909  001890  0EC0               	movlw	192
  1910  001892  6E11               	movwf	setGPIO@value,c
  1911  001894  0E12               	movlw	18
  1912  001896  ECAE  F00C         	call	_setGPIO
  1913                           
  1914                           ;LCD.h: 71: Delay10TCYx(0);
  1915  00189A  0E00               	movlw	0
  1916  00189C  ECD0  F00C         	call	_Delay10TCYx
  1917                           
  1918                           ;LCD.h: 72: setGPIO(0x12,0x00);
  1919  0018A0  0E00               	movlw	0
  1920  0018A2  6E11               	movwf	setGPIO@value,c
  1921  0018A4  0E12               	movlw	18
  1922  0018A6  ECAE  F00C         	call	_setGPIO
  1923                           
  1924                           ;LCD.h: 73: Delay10TCYx(0);
  1925  0018AA  0E00               	movlw	0
  1926  0018AC  ECD0  F00C         	call	_Delay10TCYx
  1927  0018B0  0012               	return		;funcret
  1928  0018B2                     __end_of_lcdChar:
  1929                           	opt stack 0
  1930                           prodh	equ	0xFF4
  1931                           prodl	equ	0xFF3
  1932                           intcon	equ	0xFF2
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           indf2	equ	0xFDF
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           
  1940 ;; *************** function _setGPIO *****************
  1941 ;; Defined at:
  1942 ;;		line 32 in file "LCD.h"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  address         1    wreg     unsigned char 
  1945 ;;  value           1   16[COMRAM] unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  address         1   17[COMRAM] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    3
  1964 ;; This function calls:
  1965 ;;		_WriteSPI1
  1966 ;; This function is called by:
  1967 ;;		_lcdCommand
  1968 ;;		_lcdChar
  1969 ;;		_lcdInit
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text14
  1974  00195C                     __ptext14:
  1975                           	opt stack 0
  1976  00195C                     _setGPIO:
  1977                           	opt stack 25
  1978                           
  1979                           ;incstack = 0
  1980                           ;setGPIO@address stored from wreg
  1981  00195C  6E12               	movwf	setGPIO@address,c
  1982                           
  1983                           ;LCD.h: 34: PORTAbits.RA2=0;
  1984  00195E  9480               	bcf	3968,2,c	;volatile
  1985                           
  1986                           ;LCD.h: 37: WriteSPI1(0x40);
  1987  001960  0E40               	movlw	64
  1988  001962  EC90  F00C         	call	_WriteSPI1
  1989                           
  1990                           ;LCD.h: 38: WriteSPI1(address);
  1991  001966  5012               	movf	setGPIO@address,w,c
  1992  001968  EC90  F00C         	call	_WriteSPI1
  1993                           
  1994                           ;LCD.h: 39: WriteSPI1(value);
  1995  00196C  5011               	movf	setGPIO@value,w,c
  1996  00196E  EC90  F00C         	call	_WriteSPI1
  1997                           
  1998                           ;LCD.h: 40: PORTAbits.RA2=1;
  1999  001972  8480               	bsf	3968,2,c	;volatile
  2000  001974  0012               	return		;funcret
  2001  001976                     __end_of_setGPIO:
  2002                           	opt stack 0
  2003                           prodh	equ	0xFF4
  2004                           prodl	equ	0xFF3
  2005                           intcon	equ	0xFF2
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           indf2	equ	0xFDF
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _WriteSPI1 *****************
  2014 ;; Defined at:
  2015 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  data_out        1    wreg     unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  data_out        1   15[COMRAM] unsigned char 
  2020 ;;  TempVar         1   14[COMRAM] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      char 
  2023 ;; Registers used:
  2024 ;;		wreg
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        2 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_setGPIO
  2041 ;;		_setIODIR
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text15
  2046  001920                     __ptext15:
  2047                           	opt stack 0
  2048  001920                     _WriteSPI1:
  2049                           	opt stack 25
  2050                           
  2051                           ;incstack = 0
  2052                           ;WriteSPI1@data_out stored from wreg
  2053  001920  6E10               	movwf	WriteSPI1@data_out,c
  2054  001922  CFC9 F00F          	movff	4041,WriteSPI1@TempVar	;volatile
  2055  001926  969E               	bcf	3998,3,c	;volatile
  2056  001928  9EC6               	bcf	4038,7,c	;volatile
  2057  00192A  C010  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  2058  00192E  BEC6               	btfsc	4038,7,c	;volatile
  2059  001930  D007               	goto	l240
  2060  001932  D002               	goto	l242
  2061                           
  2062                           ;	Return value of _WriteSPI1 is never used
  2063  001934  D005               	goto	l240
  2064  001936  D000               	goto	l242
  2065  001938                     l242:
  2066  001938  B69E               	btfsc	3998,3,c	;volatile
  2067  00193A  D002               	goto	l240
  2068  00193C  D7FD               	goto	l242
  2069  00193E  D000               	goto	l240
  2070  001940                     l240:
  2071  001940  0012               	return		;funcret
  2072  001942                     __end_of_WriteSPI1:
  2073                           	opt stack 0
  2074                           prodh	equ	0xFF4
  2075                           prodl	equ	0xFF3
  2076                           intcon	equ	0xFF2
  2077                           postinc0	equ	0xFEE
  2078                           wreg	equ	0xFE8
  2079                           indf2	equ	0xFDF
  2080                           fsr2h	equ	0xFDA
  2081                           fsr2l	equ	0xFD9
  2082                           status	equ	0xFD8
  2083                           
  2084 ;; *************** function _Delay10TCYx *****************
  2085 ;; Defined at:
  2086 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  unit            1    wreg     unsigned char 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  unit            1   14[COMRAM] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;		None               void
  2093 ;; Registers used:
  2094 ;;		wreg
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;Total ram usage:        1 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    2
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_lcdCommand
  2111 ;;		_lcdChar
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text16
  2116  0019A0                     __ptext16:
  2117                           	opt stack 0
  2118  0019A0                     _Delay10TCYx:
  2119                           	opt stack 25
  2120                           
  2121                           ;incstack = 0
  2122                           ;Delay10TCYx@unit stored from wreg
  2123  0019A0  6E0F               	movwf	Delay10TCYx@unit,c
  2124  0019A2  0E03               	movlw	3
  2125  0019A4                     u1767:
  2126  0019A4  2EE8               	decfsz	wreg,f,c
  2127  0019A6  D7FE               	goto	u1767
  2128  0019A8  F000               	nop	
  2129  0019AA  2E0F               	decfsz	Delay10TCYx@unit,f,c
  2130  0019AC  D7FA               	goto	l1827
  2131  0019AE  D000               	goto	l496
  2132  0019B0                     l496:
  2133  0019B0  0012               	return		;funcret
  2134  0019B2                     __end_of_Delay10TCYx:
  2135                           	opt stack 0
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           intcon	equ	0xFF2
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           indf2	equ	0xFDF
  2142                           fsr2h	equ	0xFDA
  2143                           fsr2l	equ	0xFD9
  2144                           status	equ	0xFD8
  2145                           
  2146 ;; *************** function ___lwmod *****************
  2147 ;; Defined at:
  2148 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  dividend        2   14[COMRAM] unsigned int 
  2151 ;;  divisor         2   16[COMRAM] unsigned int 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  counter         1   18[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  2   14[COMRAM] unsigned int 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        5 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    2
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_LCDbreakDouble
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text17
  2178  001756                     __ptext17:
  2179                           	opt stack 0
  2180  001756                     ___lwmod:
  2181                           	opt stack 27
  2182                           
  2183                           ;incstack = 0
  2184  001756  5011               	movf	___lwmod@divisor,w,c
  2185  001758  1012               	iorwf	___lwmod@divisor+1,w,c
  2186  00175A  B4D8               	btfsc	status,2,c
  2187  00175C  D01D               	goto	l806
  2188  00175E  0E01               	movlw	1
  2189  001760  6E13               	movwf	___lwmod@counter,c
  2190  001762  D005               	goto	l2077
  2191  001764                     l2075:
  2192  001764  90D8               	bcf	status,0,c
  2193  001766  3611               	rlcf	___lwmod@divisor,f,c
  2194  001768  3612               	rlcf	___lwmod@divisor+1,f,c
  2195  00176A  2A13               	incf	___lwmod@counter,f,c
  2196  00176C  D000               	goto	l2077
  2197  00176E                     l2077:
  2198  00176E  BE12               	btfsc	___lwmod@divisor+1,7,c
  2199  001770  D002               	goto	l2079
  2200  001772  D7F8               	goto	l2075
  2201  001774  D000               	goto	l2079
  2202  001776                     l2079:
  2203  001776  5011               	movf	___lwmod@divisor,w,c
  2204  001778  5C0F               	subwf	___lwmod@dividend,w,c
  2205  00177A  5012               	movf	___lwmod@divisor+1,w,c
  2206  00177C  5810               	subwfb	___lwmod@dividend+1,w,c
  2207  00177E  A0D8               	btfss	status,0,c
  2208  001780  D005               	goto	l2083
  2209  001782  5011               	movf	___lwmod@divisor,w,c
  2210  001784  5E0F               	subwf	___lwmod@dividend,f,c
  2211  001786  5012               	movf	___lwmod@divisor+1,w,c
  2212  001788  5A10               	subwfb	___lwmod@dividend+1,f,c
  2213  00178A  D000               	goto	l2083
  2214  00178C                     l2083:
  2215  00178C  90D8               	bcf	status,0,c
  2216  00178E  3212               	rrcf	___lwmod@divisor+1,f,c
  2217  001790  3211               	rrcf	___lwmod@divisor,f,c
  2218  001792  2E13               	decfsz	___lwmod@counter,f,c
  2219  001794  D7F0               	goto	l2079
  2220  001796  D000               	goto	l806
  2221  001798                     l806:
  2222  001798  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2223  00179C  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2224  0017A0  0012               	return		;funcret
  2225  0017A2                     __end_of___lwmod:
  2226                           	opt stack 0
  2227                           prodh	equ	0xFF4
  2228                           prodl	equ	0xFF3
  2229                           intcon	equ	0xFF2
  2230                           postinc0	equ	0xFEE
  2231                           wreg	equ	0xFE8
  2232                           indf2	equ	0xFDF
  2233                           fsr2h	equ	0xFDA
  2234                           fsr2l	equ	0xFD9
  2235                           status	equ	0xFD8
  2236                           
  2237 ;; *************** function ___lwdiv *****************
  2238 ;; Defined at:
  2239 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  dividend        2   14[COMRAM] unsigned int 
  2242 ;;  divisor         2   16[COMRAM] unsigned int 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  quotient        2   19[COMRAM] unsigned int 
  2245 ;;  counter         1   18[COMRAM] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2   14[COMRAM] unsigned int 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:        7 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    2
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_LCDbreakDouble
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text18
  2270  0016A4                     __ptext18:
  2271                           	opt stack 0
  2272  0016A4                     ___lwdiv:
  2273                           	opt stack 27
  2274                           
  2275                           ;incstack = 0
  2276  0016A4  0E00               	movlw	0
  2277  0016A6  6E15               	movwf	___lwdiv@quotient+1,c
  2278  0016A8  0E00               	movlw	0
  2279  0016AA  6E14               	movwf	___lwdiv@quotient,c
  2280  0016AC  5011               	movf	___lwdiv@divisor,w,c
  2281  0016AE  1012               	iorwf	___lwdiv@divisor+1,w,c
  2282  0016B0  B4D8               	btfsc	status,2,c
  2283  0016B2  D021               	goto	l796
  2284  0016B4  0E01               	movlw	1
  2285  0016B6  6E13               	movwf	___lwdiv@counter,c
  2286  0016B8  D005               	goto	l2057
  2287  0016BA                     l2055:
  2288  0016BA  90D8               	bcf	status,0,c
  2289  0016BC  3611               	rlcf	___lwdiv@divisor,f,c
  2290  0016BE  3612               	rlcf	___lwdiv@divisor+1,f,c
  2291  0016C0  2A13               	incf	___lwdiv@counter,f,c
  2292  0016C2  D000               	goto	l2057
  2293  0016C4                     l2057:
  2294  0016C4  BE12               	btfsc	___lwdiv@divisor+1,7,c
  2295  0016C6  D002               	goto	l2059
  2296  0016C8  D7F8               	goto	l2055
  2297  0016CA  D000               	goto	l2059
  2298  0016CC                     l2059:
  2299  0016CC  90D8               	bcf	status,0,c
  2300  0016CE  3614               	rlcf	___lwdiv@quotient,f,c
  2301  0016D0  3615               	rlcf	___lwdiv@quotient+1,f,c
  2302  0016D2  5011               	movf	___lwdiv@divisor,w,c
  2303  0016D4  5C0F               	subwf	___lwdiv@dividend,w,c
  2304  0016D6  5012               	movf	___lwdiv@divisor+1,w,c
  2305  0016D8  5810               	subwfb	___lwdiv@dividend+1,w,c
  2306  0016DA  A0D8               	btfss	status,0,c
  2307  0016DC  D006               	goto	l2067
  2308  0016DE  5011               	movf	___lwdiv@divisor,w,c
  2309  0016E0  5E0F               	subwf	___lwdiv@dividend,f,c
  2310  0016E2  5012               	movf	___lwdiv@divisor+1,w,c
  2311  0016E4  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2312  0016E6  8014               	bsf	___lwdiv@quotient,0,c
  2313  0016E8  D000               	goto	l2067
  2314  0016EA                     l2067:
  2315  0016EA  90D8               	bcf	status,0,c
  2316  0016EC  3212               	rrcf	___lwdiv@divisor+1,f,c
  2317  0016EE  3211               	rrcf	___lwdiv@divisor,f,c
  2318  0016F0  2E13               	decfsz	___lwdiv@counter,f,c
  2319  0016F2  D7EC               	goto	l2059
  2320  0016F4  D000               	goto	l796
  2321  0016F6                     l796:
  2322  0016F6  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2323  0016FA  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2324  0016FE  0012               	return		;funcret
  2325  001700                     __end_of___lwdiv:
  2326                           	opt stack 0
  2327                           prodh	equ	0xFF4
  2328                           prodl	equ	0xFF3
  2329                           intcon	equ	0xFF2
  2330                           postinc0	equ	0xFEE
  2331                           wreg	equ	0xFE8
  2332                           indf2	equ	0xFDF
  2333                           fsr2h	equ	0xFDA
  2334                           fsr2l	equ	0xFD9
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function ___fttol *****************
  2338 ;; Defined at:
  2339 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  f1              3   37[COMRAM] float 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  lval            4   47[COMRAM] unsigned long 
  2344 ;;  exp1            1   51[COMRAM] unsigned char 
  2345 ;;  sign1           1   46[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  4   37[COMRAM] long 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;Total ram usage:       15 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_LCDbreakDouble
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text19
  2370  001486                     __ptext19:
  2371                           	opt stack 0
  2372  001486                     ___fttol:
  2373                           	opt stack 27
  2374                           
  2375                           ;incstack = 0
  2376  001486  C028  F02A         	movff	___fttol@f1+2,??___fttol
  2377  00148A  6A2B               	clrf	(??___fttol+1)& (0+255),c
  2378  00148C  6A2C               	clrf	(??___fttol+2)& (0+255),c
  2379  00148E  3427               	rlcf	___fttol@f1+1,w,c
  2380  001490  362A               	rlcf	??___fttol& (0+255),f,c
  2381  001492  E301               	bnc	u1341
  2382  001494  802B               	bsf	(??___fttol+1)& (0+255),0,c
  2383  001496                     u1341:
  2384  001496  502A               	movf	??___fttol,w,c
  2385  001498  6E34               	movwf	___fttol@exp1,c
  2386  00149A  5034               	movf	___fttol@exp1,w,c
  2387  00149C  A4D8               	btfss	status,2,c
  2388  00149E  D002               	goto	l2009
  2389  0014A0  D039               	goto	l2033
  2390  0014A2  D063               	goto	l694
  2391  0014A4                     l2009:
  2392  0014A4  0E17               	movlw	23
  2393  0014A6  6E2A               	movwf	??___fttol& (0+255),c
  2394  0014A8  C026  F02B         	movff	___fttol@f1,??___fttol+1
  2395  0014AC  C027  F02C         	movff	___fttol@f1+1,??___fttol+2
  2396  0014B0  C028  F02D         	movff	___fttol@f1+2,??___fttol+3
  2397  0014B4  282A               	incf	??___fttol,w,c
  2398  0014B6  6E2E               	movwf	(??___fttol+4)& (0+255),c
  2399  0014B8  D004               	goto	u1360
  2400  0014BA                     u1365:
  2401  0014BA  90D8               	bcf	status,0,c
  2402  0014BC  322D               	rrcf	??___fttol+3,f,c
  2403  0014BE  322C               	rrcf	??___fttol+2,f,c
  2404  0014C0  322B               	rrcf	??___fttol+1,f,c
  2405  0014C2                     u1360:
  2406  0014C2  2E2E               	decfsz	(??___fttol+4)& (0+255),f,c
  2407  0014C4  D7FA               	goto	u1365
  2408  0014C6  502B               	movf	??___fttol+1,w,c
  2409  0014C8  6E2F               	movwf	___fttol@sign1,c
  2410  0014CA  8E27               	bsf	___fttol@f1+1,7,c
  2411  0014CC  0EFF               	movlw	255
  2412  0014CE  1626               	andwf	___fttol@f1,f,c
  2413  0014D0  0EFF               	movlw	255
  2414  0014D2  1627               	andwf	___fttol@f1+1,f,c
  2415  0014D4  0E00               	movlw	0
  2416  0014D6  1628               	andwf	___fttol@f1+2,f,c
  2417  0014D8  5026               	movf	___fttol@f1,w,c
  2418  0014DA  6E30               	movwf	___fttol@lval,c
  2419  0014DC  5027               	movf	___fttol@f1+1,w,c
  2420  0014DE  6E31               	movwf	___fttol@lval+1,c
  2421  0014E0  5028               	movf	___fttol@f1+2,w,c
  2422  0014E2  6E32               	movwf	___fttol@lval+2,c
  2423  0014E4  6A33               	clrf	___fttol@lval+3,c
  2424  0014E6  0E8E               	movlw	142
  2425  0014E8  5E34               	subwf	___fttol@exp1,f,c
  2426  0014EA  AE34               	btfss	___fttol@exp1,7,c
  2427  0014EC  D010               	goto	l2031
  2428  0014EE  5034               	movf	___fttol@exp1,w,c
  2429  0014F0  0A80               	xorlw	128
  2430  0014F2  0F8F               	addlw	143
  2431  0014F4  B0D8               	btfsc	status,0,c
  2432  0014F6  D003               	goto	l2027
  2433  0014F8  D00D               	goto	l2033
  2434  0014FA  D037               	goto	l694
  2435  0014FC  D000               	goto	l2027
  2436  0014FE                     l2027:
  2437  0014FE  90D8               	bcf	status,0,c
  2438  001500  3233               	rrcf	___fttol@lval+3,f,c
  2439  001502  3232               	rrcf	___fttol@lval+2,f,c
  2440  001504  3231               	rrcf	___fttol@lval+1,f,c
  2441  001506  3230               	rrcf	___fttol@lval,f,c
  2442  001508  3E34               	incfsz	___fttol@exp1,f,c
  2443  00150A  D7F9               	goto	l2027
  2444  00150C  D019               	goto	l2041
  2445  00150E                     l2031:
  2446  00150E  0E17               	movlw	23
  2447  001510  6434               	cpfsgt	___fttol@exp1,c
  2448  001512  D011               	goto	l2039
  2449  001514                     l2033:
  2450  001514  0E00               	movlw	0
  2451  001516  6E26               	movwf	?___fttol,c
  2452  001518  0E00               	movlw	0
  2453  00151A  6E27               	movwf	?___fttol+1,c
  2454  00151C  0E00               	movlw	0
  2455  00151E  6E28               	movwf	?___fttol+2,c
  2456  001520  0E00               	movlw	0
  2457  001522  6E29               	movwf	?___fttol+3,c
  2458  001524  D022               	goto	l694
  2459  001526  D007               	goto	l2039
  2460  001528                     l2037:
  2461  001528  90D8               	bcf	status,0,c
  2462  00152A  3630               	rlcf	___fttol@lval,f,c
  2463  00152C  3631               	rlcf	___fttol@lval+1,f,c
  2464  00152E  3632               	rlcf	___fttol@lval+2,f,c
  2465  001530  3633               	rlcf	___fttol@lval+3,f,c
  2466  001532  0634               	decf	___fttol@exp1,f,c
  2467  001534  D000               	goto	l2039
  2468  001536                     l2039:
  2469  001536  5034               	movf	___fttol@exp1,w,c
  2470  001538  B4D8               	btfsc	status,2,c
  2471  00153A  D002               	goto	l2041
  2472  00153C  D7F5               	goto	l2037
  2473  00153E  D000               	goto	l2041
  2474  001540                     l2041:
  2475  001540  502F               	movf	___fttol@sign1,w,c
  2476  001542  B4D8               	btfsc	status,2,c
  2477  001544  D009               	goto	l2045
  2478  001546  1E33               	comf	___fttol@lval+3,f,c
  2479  001548  1E32               	comf	___fttol@lval+2,f,c
  2480  00154A  1E31               	comf	___fttol@lval+1,f,c
  2481  00154C  6C30               	negf	___fttol@lval,c
  2482  00154E  0E00               	movlw	0
  2483  001550  2231               	addwfc	___fttol@lval+1,f,c
  2484  001552  2232               	addwfc	___fttol@lval+2,f,c
  2485  001554  2233               	addwfc	___fttol@lval+3,f,c
  2486  001556  D000               	goto	l2045
  2487  001558                     l2045:
  2488  001558  C030  F026         	movff	___fttol@lval,?___fttol
  2489  00155C  C031  F027         	movff	___fttol@lval+1,?___fttol+1
  2490  001560  C032  F028         	movff	___fttol@lval+2,?___fttol+2
  2491  001564  C033  F029         	movff	___fttol@lval+3,?___fttol+3
  2492  001568  D000               	goto	l694
  2493  00156A                     l694:
  2494  00156A  0012               	return		;funcret
  2495  00156C                     __end_of___fttol:
  2496                           	opt stack 0
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           indf2	equ	0xFDF
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function ___ftmul *****************
  2508 ;; Defined at:
  2509 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  f1              3   22[COMRAM] float 
  2512 ;;  f2              3   25[COMRAM] float 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  f3_as_produc    3   32[COMRAM] unsigned um
  2515 ;;  sign            1   36[COMRAM] unsigned char 
  2516 ;;  cntr            1   35[COMRAM] unsigned char 
  2517 ;;  exp             1   31[COMRAM] unsigned char 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  3   22[COMRAM] float 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2527 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;Total ram usage:       15 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    3
  2534 ;; This function calls:
  2535 ;;		___ftpack
  2536 ;; This function is called by:
  2537 ;;		_LCDbreakDouble
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text20
  2542  00138E                     __ptext20:
  2543                           	opt stack 0
  2544  00138E                     ___ftmul:
  2545                           	opt stack 26
  2546                           
  2547                           ;incstack = 0
  2548  00138E  C019  F01D         	movff	___ftmul@f1+2,??___ftmul
  2549  001392  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  2550  001394  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  2551  001396  3418               	rlcf	___ftmul@f1+1,w,c
  2552  001398  361D               	rlcf	??___ftmul& (0+255),f,c
  2553  00139A  E301               	bnc	u1281
  2554  00139C  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  2555  00139E                     u1281:
  2556  00139E  501D               	movf	??___ftmul,w,c
  2557  0013A0  6E20               	movwf	___ftmul@exp,c
  2558  0013A2  5020               	movf	___ftmul@exp,w,c
  2559  0013A4  A4D8               	btfss	status,2,c
  2560  0013A6  D002               	goto	l1961
  2561  0013A8  D00E               	goto	l1963
  2562  0013AA  D06C               	goto	l673
  2563  0013AC                     l1961:
  2564  0013AC  C01C  F01D         	movff	___ftmul@f2+2,??___ftmul
  2565  0013B0  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  2566  0013B2  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  2567  0013B4  341B               	rlcf	___ftmul@f2+1,w,c
  2568  0013B6  361D               	rlcf	??___ftmul& (0+255),f,c
  2569  0013B8  E301               	bnc	u1301
  2570  0013BA  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  2571  0013BC                     u1301:
  2572  0013BC  501D               	movf	??___ftmul,w,c
  2573  0013BE  6E25               	movwf	___ftmul@sign,c
  2574  0013C0  5025               	movf	___ftmul@sign,w,c
  2575  0013C2  A4D8               	btfss	status,2,c
  2576  0013C4  D007               	goto	l1967
  2577  0013C6                     l1963:
  2578  0013C6  0E00               	movlw	0
  2579  0013C8  6E17               	movwf	?___ftmul,c
  2580  0013CA  0E00               	movlw	0
  2581  0013CC  6E18               	movwf	?___ftmul+1,c
  2582  0013CE  0E00               	movlw	0
  2583  0013D0  6E19               	movwf	?___ftmul+2,c
  2584  0013D2  D058               	goto	l673
  2585  0013D4                     l1967:
  2586  0013D4  5025               	movf	___ftmul@sign,w,c
  2587  0013D6  0F7B               	addlw	123
  2588  0013D8  2620               	addwf	___ftmul@exp,f,c
  2589  0013DA  C019  F025         	movff	___ftmul@f1+2,___ftmul@sign
  2590  0013DE  501C               	movf	___ftmul@f2+2,w,c
  2591  0013E0  1A25               	xorwf	___ftmul@sign,f,c
  2592  0013E2  0E80               	movlw	128
  2593  0013E4  1625               	andwf	___ftmul@sign,f,c
  2594  0013E6  8E18               	bsf	___ftmul@f1+1,7,c
  2595  0013E8  8E1B               	bsf	___ftmul@f2+1,7,c
  2596  0013EA  0EFF               	movlw	255
  2597  0013EC  161A               	andwf	___ftmul@f2,f,c
  2598  0013EE  0EFF               	movlw	255
  2599  0013F0  161B               	andwf	___ftmul@f2+1,f,c
  2600  0013F2  0E00               	movlw	0
  2601  0013F4  161C               	andwf	___ftmul@f2+2,f,c
  2602  0013F6  0E00               	movlw	0
  2603  0013F8  6E21               	movwf	___ftmul@f3_as_product,c
  2604  0013FA  0E00               	movlw	0
  2605  0013FC  6E22               	movwf	___ftmul@f3_as_product+1,c
  2606  0013FE  0E00               	movlw	0
  2607  001400  6E23               	movwf	___ftmul@f3_as_product+2,c
  2608  001402  0E07               	movlw	7
  2609  001404  6E24               	movwf	___ftmul@cntr,c
  2610  001406  D000               	goto	l1981
  2611  001408                     l1981:
  2612  001408  A017               	btfss	___ftmul@f1,0,c
  2613  00140A  D007               	goto	l1985
  2614  00140C  501A               	movf	___ftmul@f2,w,c
  2615  00140E  2621               	addwf	___ftmul@f3_as_product,f,c
  2616  001410  501B               	movf	___ftmul@f2+1,w,c
  2617  001412  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  2618  001414  501C               	movf	___ftmul@f2+2,w,c
  2619  001416  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  2620  001418  D000               	goto	l1985
  2621  00141A                     l1985:
  2622  00141A  90D8               	bcf	status,0,c
  2623  00141C  3219               	rrcf	___ftmul@f1+2,f,c
  2624  00141E  3218               	rrcf	___ftmul@f1+1,f,c
  2625  001420  3217               	rrcf	___ftmul@f1,f,c
  2626  001422  90D8               	bcf	status,0,c
  2627  001424  361A               	rlcf	___ftmul@f2,f,c
  2628  001426  361B               	rlcf	___ftmul@f2+1,f,c
  2629  001428  361C               	rlcf	___ftmul@f2+2,f,c
  2630  00142A  2E24               	decfsz	___ftmul@cntr,f,c
  2631  00142C  D7ED               	goto	l1981
  2632  00142E  D000               	goto	l1989
  2633  001430                     l1989:
  2634  001430  0E09               	movlw	9
  2635  001432  6E24               	movwf	___ftmul@cntr,c
  2636  001434  D000               	goto	l1991
  2637  001436                     l1991:
  2638  001436  A017               	btfss	___ftmul@f1,0,c
  2639  001438  D007               	goto	l1995
  2640  00143A  501A               	movf	___ftmul@f2,w,c
  2641  00143C  2621               	addwf	___ftmul@f3_as_product,f,c
  2642  00143E  501B               	movf	___ftmul@f2+1,w,c
  2643  001440  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  2644  001442  501C               	movf	___ftmul@f2+2,w,c
  2645  001444  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  2646  001446  D000               	goto	l1995
  2647  001448                     l1995:
  2648  001448  90D8               	bcf	status,0,c
  2649  00144A  3219               	rrcf	___ftmul@f1+2,f,c
  2650  00144C  3218               	rrcf	___ftmul@f1+1,f,c
  2651  00144E  3217               	rrcf	___ftmul@f1,f,c
  2652  001450  90D8               	bcf	status,0,c
  2653  001452  3223               	rrcf	___ftmul@f3_as_product+2,f,c
  2654  001454  3222               	rrcf	___ftmul@f3_as_product+1,f,c
  2655  001456  3221               	rrcf	___ftmul@f3_as_product,f,c
  2656  001458  2E24               	decfsz	___ftmul@cntr,f,c
  2657  00145A  D7ED               	goto	l1991
  2658  00145C  D000               	goto	l1999
  2659  00145E                     l1999:
  2660  00145E  C021  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  2661  001462  C022  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2662  001466  C023  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2663  00146A  C020  F012         	movff	___ftmul@exp,___ftpack@exp
  2664  00146E  C025  F013         	movff	___ftmul@sign,___ftpack@sign
  2665  001472  ECB6  F00A         	call	___ftpack	;wreg free
  2666  001476  C00F  F017         	movff	?___ftpack,?___ftmul
  2667  00147A  C010  F018         	movff	?___ftpack+1,?___ftmul+1
  2668  00147E  C011  F019         	movff	?___ftpack+2,?___ftmul+2
  2669  001482  D000               	goto	l673
  2670  001484                     l673:
  2671  001484  0012               	return		;funcret
  2672  001486                     __end_of___ftmul:
  2673                           	opt stack 0
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           indf2	equ	0xFDF
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function ___ftpack *****************
  2685 ;; Defined at:
  2686 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  arg             3   14[COMRAM] unsigned um
  2689 ;;  exp             1   17[COMRAM] unsigned char 
  2690 ;;  sign            1   18[COMRAM] unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  3   14[COMRAM] float 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2702 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;Total ram usage:        8 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    2
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		___ftmul
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text21
  2717  00156C                     __ptext21:
  2718                           	opt stack 0
  2719  00156C                     ___ftpack:
  2720                           	opt stack 26
  2721                           
  2722                           ;incstack = 0
  2723  00156C  5012               	movf	___ftpack@exp,w,c
  2724  00156E  B4D8               	btfsc	status,2,c
  2725  001570  D005               	goto	l1875
  2726  001572  500F               	movf	___ftpack@arg,w,c
  2727  001574  1010               	iorwf	___ftpack@arg+1,w,c
  2728  001576  1011               	iorwf	___ftpack@arg+2,w,c
  2729  001578  A4D8               	btfss	status,2,c
  2730  00157A  D00E               	goto	l1881
  2731  00157C                     l1875:
  2732  00157C  0E00               	movlw	0
  2733  00157E  6E0F               	movwf	?___ftpack,c
  2734  001580  0E00               	movlw	0
  2735  001582  6E10               	movwf	?___ftpack+1,c
  2736  001584  0E00               	movlw	0
  2737  001586  6E11               	movwf	?___ftpack+2,c
  2738  001588  D053               	goto	l586
  2739  00158A  D006               	goto	l1881
  2740  00158C                     l1879:
  2741  00158C  2A12               	incf	___ftpack@exp,f,c
  2742  00158E  90D8               	bcf	status,0,c
  2743  001590  3211               	rrcf	___ftpack@arg+2,f,c
  2744  001592  3210               	rrcf	___ftpack@arg+1,f,c
  2745  001594  320F               	rrcf	___ftpack@arg,f,c
  2746  001596  D000               	goto	l1881
  2747  001598                     l1881:
  2748  001598  0E00               	movlw	0
  2749  00159A  140F               	andwf	___ftpack@arg,w,c
  2750  00159C  6E14               	movwf	??___ftpack& (0+255),c
  2751  00159E  0E00               	movlw	0
  2752  0015A0  1410               	andwf	___ftpack@arg+1,w,c
  2753  0015A2  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2754  0015A4  0EFE               	movlw	254
  2755  0015A6  1411               	andwf	___ftpack@arg+2,w,c
  2756  0015A8  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2757  0015AA  5014               	movf	??___ftpack,w,c
  2758  0015AC  1015               	iorwf	??___ftpack+1,w,c
  2759  0015AE  1016               	iorwf	??___ftpack+2,w,c
  2760  0015B0  B4D8               	btfsc	status,2,c
  2761  0015B2  D00E               	goto	l1887
  2762  0015B4  D7EB               	goto	l1879
  2763  0015B6  D00C               	goto	l1887
  2764  0015B8                     l1883:
  2765  0015B8  2A12               	incf	___ftpack@exp,f,c
  2766  0015BA  0E01               	movlw	1
  2767  0015BC  260F               	addwf	___ftpack@arg,f,c
  2768  0015BE  0E00               	movlw	0
  2769  0015C0  2210               	addwfc	___ftpack@arg+1,f,c
  2770  0015C2  0E00               	movlw	0
  2771  0015C4  2211               	addwfc	___ftpack@arg+2,f,c
  2772  0015C6  90D8               	bcf	status,0,c
  2773  0015C8  3211               	rrcf	___ftpack@arg+2,f,c
  2774  0015CA  3210               	rrcf	___ftpack@arg+1,f,c
  2775  0015CC  320F               	rrcf	___ftpack@arg,f,c
  2776  0015CE  D000               	goto	l1887
  2777  0015D0                     l1887:
  2778  0015D0  0E00               	movlw	0
  2779  0015D2  140F               	andwf	___ftpack@arg,w,c
  2780  0015D4  6E14               	movwf	??___ftpack& (0+255),c
  2781  0015D6  0E00               	movlw	0
  2782  0015D8  1410               	andwf	___ftpack@arg+1,w,c
  2783  0015DA  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2784  0015DC  0EFF               	movlw	255
  2785  0015DE  1411               	andwf	___ftpack@arg+2,w,c
  2786  0015E0  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2787  0015E2  5014               	movf	??___ftpack,w,c
  2788  0015E4  1015               	iorwf	??___ftpack+1,w,c
  2789  0015E6  1016               	iorwf	??___ftpack+2,w,c
  2790  0015E8  B4D8               	btfsc	status,2,c
  2791  0015EA  D008               	goto	l1891
  2792  0015EC  D7E5               	goto	l1883
  2793  0015EE  D006               	goto	l1891
  2794  0015F0                     l1889:
  2795  0015F0  0612               	decf	___ftpack@exp,f,c
  2796  0015F2  90D8               	bcf	status,0,c
  2797  0015F4  360F               	rlcf	___ftpack@arg,f,c
  2798  0015F6  3610               	rlcf	___ftpack@arg+1,f,c
  2799  0015F8  3611               	rlcf	___ftpack@arg+2,f,c
  2800  0015FA  D000               	goto	l1891
  2801  0015FC                     l1891:
  2802  0015FC  BE10               	btfsc	___ftpack@arg+1,7,c
  2803  0015FE  D004               	goto	l597
  2804  001600  0E02               	movlw	2
  2805  001602  6012               	cpfslt	___ftpack@exp,c
  2806  001604  D7F5               	goto	l1889
  2807  001606  D000               	goto	l597
  2808  001608                     l597:
  2809  001608  B012               	btfsc	___ftpack@exp,0,c
  2810  00160A  D002               	goto	l1897
  2811  00160C  9E10               	bcf	___ftpack@arg+1,7,c
  2812  00160E  D000               	goto	l1897
  2813  001610                     l1897:
  2814  001610  90D8               	bcf	status,0,c
  2815  001612  3212               	rrcf	___ftpack@exp,f,c
  2816  001614  5012               	movf	___ftpack@exp,w,c
  2817  001616  1211               	iorwf	___ftpack@arg+2,f,c
  2818  001618  5013               	movf	___ftpack@sign,w,c
  2819  00161A  B4D8               	btfsc	status,2,c
  2820  00161C  D002               	goto	l1903
  2821  00161E  8E11               	bsf	___ftpack@arg+2,7,c
  2822  001620  D000               	goto	l1903
  2823  001622                     l1903:
  2824  001622  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  2825  001626  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  2826  00162A  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  2827  00162E  D000               	goto	l586
  2828  001630                     l586:
  2829  001630  0012               	return		;funcret
  2830  001632                     __end_of___ftpack:
  2831                           	opt stack 0
  2832                           prodh	equ	0xFF4
  2833                           prodl	equ	0xFF3
  2834                           intcon	equ	0xFF2
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           indf2	equ	0xFDF
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function _ISR *****************
  2843 ;; Defined at:
  2844 ;;		line 87 in file "SPItestSLAVE.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;		None               void
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:       14 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    1
  2865 ;; This function calls:
  2866 ;;		_SPIInt
  2867 ;; This function is called by:
  2868 ;;		Interrupt level 2
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	intcode
  2873  000008                     __pintcode:
  2874                           	opt stack 0
  2875  000008                     _ISR:
  2876                           	opt stack 24
  2877                           
  2878                           ;incstack = 0
  2879  000008  CFFA F001          	movff	pclath,??_ISR
  2880  00000C  CFFB F002          	movff	pclatu,??_ISR+1
  2881  000010  CFE9 F003          	movff	fsr0l,??_ISR+2
  2882  000014  ED19  F00B         	call	int_func,f	;refresh shadow registers
  2883                           pclatu	equ	0xFFB
  2884                           pclath	equ	0xFFA
  2885                           prodh	equ	0xFF4
  2886                           prodl	equ	0xFF3
  2887                           intcon	equ	0xFF2
  2888                           postinc0	equ	0xFEE
  2889                           fsr0l	equ	0xFE9
  2890                           wreg	equ	0xFE8
  2891                           indf2	equ	0xFDF
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896                           	psect	intcode_body
  2897  001632                     __pintcode_body:
  2898                           	opt stack 24
  2899  001632                     int_func:
  2900                           	opt stack 24
  2901  001632  0006               	pop		; remove dummy address from shadow register refresh
  2902  001634  CFEA F004          	movff	fsr0h,??_ISR+3
  2903  001638  CFE1 F005          	movff	fsr1l,??_ISR+4
  2904  00163C  CFE2 F006          	movff	fsr1h,??_ISR+5
  2905  001640  CFD9 F007          	movff	fsr2l,??_ISR+6
  2906  001644  CFDA F008          	movff	fsr2h,??_ISR+7
  2907  001648  CFF3 F009          	movff	prodl,??_ISR+8
  2908  00164C  CFF4 F00A          	movff	prodh,??_ISR+9
  2909  001650  CFF6 F00B          	movff	tblptrl,??_ISR+10
  2910  001654  CFF7 F00C          	movff	tblptrh,??_ISR+11
  2911  001658  CFF8 F00D          	movff	tblptru,??_ISR+12
  2912  00165C  CFF5 F00E          	movff	tablat,??_ISR+13
  2913                           
  2914                           ;SPItestSLAVE.c: 89: if (PIR3bits.SSP2IF == 1)
  2915  001660  AEA4               	btfss	4004,7,c	;volatile
  2916  001662  D003               	goto	i2l124
  2917                           
  2918                           ;SPItestSLAVE.c: 90: {
  2919                           ;SPItestSLAVE.c: 91: SPIInt();
  2920  001664  ECE1  F00C         	call	_SPIInt	;wreg free
  2921  001668  D000               	goto	i2l124
  2922  00166A                     i2l124:
  2923  00166A  C00E  FFF5         	movff	??_ISR+13,tablat
  2924  00166E  C00D  FFF8         	movff	??_ISR+12,tblptru
  2925  001672  C00C  FFF7         	movff	??_ISR+11,tblptrh
  2926  001676  C00B  FFF6         	movff	??_ISR+10,tblptrl
  2927  00167A  C00A  FFF4         	movff	??_ISR+9,prodh
  2928  00167E  C009  FFF3         	movff	??_ISR+8,prodl
  2929  001682  C008  FFDA         	movff	??_ISR+7,fsr2h
  2930  001686  C007  FFD9         	movff	??_ISR+6,fsr2l
  2931  00168A  C006  FFE2         	movff	??_ISR+5,fsr1h
  2932  00168E  C005  FFE1         	movff	??_ISR+4,fsr1l
  2933  001692  C004  FFEA         	movff	??_ISR+3,fsr0h
  2934  001696  C003  FFE9         	movff	??_ISR+2,fsr0l
  2935  00169A  C002  FFFB         	movff	??_ISR+1,pclatu
  2936  00169E  C001  FFFA         	movff	??_ISR,pclath
  2937  0016A2  0011               	retfie		f
  2938  0016A4                     __end_of_ISR:
  2939                           	opt stack 0
  2940                           pclatu	equ	0xFFB
  2941                           pclath	equ	0xFFA
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           prodh	equ	0xFF4
  2947                           prodl	equ	0xFF3
  2948                           intcon	equ	0xFF2
  2949                           postinc0	equ	0xFEE
  2950                           fsr0h	equ	0xFEA
  2951                           fsr0l	equ	0xFE9
  2952                           wreg	equ	0xFE8
  2953                           fsr1h	equ	0xFE2
  2954                           fsr1l	equ	0xFE1
  2955                           indf2	equ	0xFDF
  2956                           fsr2h	equ	0xFDA
  2957                           fsr2l	equ	0xFD9
  2958                           status	equ	0xFD8
  2959                           
  2960 ;; *************** function _SPIInt *****************
  2961 ;; Defined at:
  2962 ;;		line 25 in file "SPISlave.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;		None               void
  2969 ;; Registers used:
  2970 ;;		wreg, status,2
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_ISR
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text23
  2990  0019C2                     __ptext23:
  2991                           	opt stack 0
  2992  0019C2                     _SPIInt:
  2993                           	opt stack 24
  2994                           
  2995                           ;SPISlave.c: 27: Command = SSP2BUF;
  2996                           
  2997                           ;incstack = 0
  2998  0019C2  CF66 F04D          	movff	3942,_Command	;volatile
  2999                           
  3000                           ;SPISlave.c: 28: PORTCbits.RC6 = 0;
  3001  0019C6  9C82               	bcf	3970,6,c	;volatile
  3002                           
  3003                           ;SPISlave.c: 29: PIR3bits.SSP2IF = 0;
  3004  0019C8  9EA4               	bcf	4004,7,c	;volatile
  3005                           
  3006                           ;SPISlave.c: 30: PIE3bits.SSP2IE = 0;
  3007  0019CA  9EA3               	bcf	4003,7,c	;volatile
  3008                           
  3009                           ;SPISlave.c: 31: SPIflag = 1;
  3010  0019CC  0E01               	movlw	1
  3011  0019CE  6E4F               	movwf	_SPIflag,c
  3012  0019D0  0012               	return		;funcret
  3013  0019D2                     __end_of_SPIInt:
  3014                           	opt stack 0
  3015                           pclatu	equ	0xFFB
  3016                           pclath	equ	0xFFA
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           prodh	equ	0xFF4
  3022                           prodl	equ	0xFF3
  3023                           intcon	equ	0xFF2
  3024                           postinc0	equ	0xFEE
  3025                           fsr0h	equ	0xFEA
  3026                           fsr0l	equ	0xFE9
  3027                           wreg	equ	0xFE8
  3028                           fsr1h	equ	0xFE2
  3029                           fsr1l	equ	0xFE1
  3030                           indf2	equ	0xFDF
  3031                           fsr2h	equ	0xFDA
  3032                           fsr2l	equ	0xFD9
  3033                           status	equ	0xFD8
  3034                           pclatu	equ	0xFFB
  3035                           pclath	equ	0xFFA
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           prodh	equ	0xFF4
  3041                           prodl	equ	0xFF3
  3042                           intcon	equ	0xFF2
  3043                           postinc0	equ	0xFEE
  3044                           fsr0h	equ	0xFEA
  3045                           fsr0l	equ	0xFE9
  3046                           wreg	equ	0xFE8
  3047                           fsr1h	equ	0xFE2
  3048                           fsr1l	equ	0xFE1
  3049                           indf2	equ	0xFDF
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054                           	psect	rparam
  3055  0000                     pclatu	equ	0xFFB
  3056                           pclath	equ	0xFFA
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           prodh	equ	0xFF4
  3062                           prodl	equ	0xFF3
  3063                           intcon	equ	0xFF2
  3064                           postinc0	equ	0xFEE
  3065                           fsr0h	equ	0xFEA
  3066                           fsr0l	equ	0xFE9
  3067                           wreg	equ	0xFE8
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           fsr2h	equ	0xFDA
  3072                           fsr2l	equ	0xFD9
  3073                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      80
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DoublePtr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), SPIReassembleDouble@dub(COMRAM[3]), SPIDisassembleDouble@dub(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _SPIDisassembleDouble->_GenerateChecksum
    _LCDbreakDouble->___fttol
    _lcdGoTo->_lcdCommand
    _lcdCommand->_setGPIO
    _lcdChar->_setGPIO
    _setGPIO->_WriteSPI1
    ___fttol->___ftmul
    ___ftmul->___ftpack

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCDbreakDouble

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10246
                                              9 BANK0      2     2      0
                     _LCDbreakDouble
                        _ReceiveSPI1
               _SPIDisassembleDouble
                _SPIReassembleDouble
                           _SendSPI1
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    1862
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1862
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     215
                                             16 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     254
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SendSPI1                                             2     2      0      23
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPIReassembleDouble                                  6     3      3      89
                                             14 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _SPIDisassembleDouble                                 3     0      3     540
                                             16 COMRAM     3     0      3
                   _GenerateChecksum
 ---------------------------------------------------------------------------------
 (2) _GenerateChecksum                                     2     2      0      92
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReceiveSPI1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDbreakDouble                                       9     6      3    7528
                                              0 BANK0      9     6      3
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                            _lcdChar
                         _lcdCommand
                            _lcdGoTo
 ---------------------------------------------------------------------------------
 (2) _lcdGoTo                                              1     1      0     754
                                             19 COMRAM     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     723
                                             18 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0     723
                                             18 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     670
                                             16 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      23
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     752
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     761
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     436
                                             37 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2596
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1888
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
                             _SPIInt
 ---------------------------------------------------------------------------------
 (7) _SPIInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDbreakDouble
     ___ftmul
       ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lwdiv
     ___lwmod
     _lcdChar
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
     _lcdCommand
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
     _lcdGoTo
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
   _ReceiveSPI1
   _SPIDisassembleDouble
     _GenerateChecksum
   _SPIReassembleDouble
   _SendSPI1
   _initialize
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1

 _ISR (ROOT)
   _SPIInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      50       1       84.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      32        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Oct 11 00:27:27 2015

                           _Kd 003F                             _Ki 0042                             _Kp 0045  
           LCDbreakDouble@dubs 0060                            l105 1130                            l202 182E  
                          l220 1718                            l221 171A                            l127 12AA  
                          l240 1940                            l128 12F8                            l224 1734  
                          l225 174E                            l242 1938                            l226 1736  
                          l218 1714                            l227 173A                            l182 1984  
                          l191 19C0                            l188 19B8                            l199 191E  
                          l806 1798                            l496 19B0                            l673 1484  
                          l586 1630                            l597 1608                            l694 156A  
                          l796 16F6                            _ISR 0008              lcdCommand@command 0013  
                          prod 000FF3                            wreg 000FE8            LCDbreakDouble@temp1 0065  
          LCDbreakDouble@temp2 0067                           ?_ISR 0001                   __CFG_WDT$OFF 000000  
                         l2031 150E                           l2033 1514                           l2041 1540  
                         l2009 14A4                           l2027 14FE                           l2211 1092  
                         l2203 105E                           l2045 1558                           l2037 1528  
                         l2039 1536                           l2055 16BA                           l2231 10EC  
                         l2215 10AC                           l2223 10E0                           l2207 1078  
                         l2057 16C4                           l2067 16EA                           l2059 16CC  
                         l2083 178C                           l2075 1764                           l2251 1146  
                         l2235 1108                           l2219 10C6                           l2077 176E  
                         l2237 1112                           l2079 1776                           l2271 11BA  
                         l2247 1138                           l2265 1190                           l2257 1164  
                         l2283 120E                           l2277 11E4                           l2285 1214  
                         l2189 102C                           l1903 1622                           l1827 19A2  
                         l1941 18F6                           l1951 191A                           l1863 171E  
                         l1881 1598                           l1961 13AC                           l1945 1902  
                         l1891 15FC                           l1883 15B8                           l1875 157C  
                         l1963 13C6                           l1867 173E                           l1981 1408  
                         l1887 15D0                           l1879 158C                           l1991 1436  
                         l1967 13D4                           l1897 1610                           l1889 15F0  
                         l1985 141A                           l1995 1448                           l1989 1430  
                         l1999 145E                           STR_1 1008                           STR_2 1001  
                         u1301 13BC                           u1341 1496                           u1360 14C2  
                         u1281 139E                           u1365 14BA                           u1767 19A4  
                         _main 1010                   ___ftpack@arg 000F                   ___ftpack@exp 0012  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0018                   ___ftmul@cntr 0024  
                 ___param_bank 000010                   ___ftmul@sign 0025                          ??_ISR 0001  
                  _Delay10TCYx 19A0                   ___fttol@exp1 0034                   ___fttol@lval 0030  
                        ?_main 0001                __end_of___ftmul 1486                __end_of___fttol 156C  
              __end_of___lwdiv 1700                __end_of___lwmod 17A2                          i2l124 166A  
       ??_SPIDisassembleDouble 0014                __end_of_lcdChar 18B2                __end_of_lcdGoTo 19DE  
              __end_of_lcdInit 17EC                 __CFG_FCMEN$OFF 000000                __end_of_setGPIO 1976  
                ___ftpack@sign 0013                     _DoubleSPIS 0035                          main@x 006A  
                ??_ReceiveSPI1 000F                          tablat 000FF5                          status 000FD8  
          GenerateChecksum@sum 000F        __size_of_LCDbreakDouble 0172                __initialization 198E  
                 __end_of_main 121C          LCDbreakDouble@tempDub 0063                 __CFG_OSC$HSPLL 000000  
             __end_of_SendSPI1 198E               __end_of_OpenSPI1 1756                         ??_main 0035  
                ___fttol@sign1 002F                  __activetblptr 000003               __end_of___ftpack 1632  
                       _SPIInt 19C2            __end_of_ReceiveSPI1 19C2               OpenSPI1@bus_mode 000F  
                    ??___ftmul 001D                      ??___fttol 002A                      ??___lwdiv 0013  
                    ??___lwmod 0013               __end_of_setIODIR 195C                         clear_0 1994  
                  setIODIR@dir 0011                      ??_lcdChar 0013                      ??_lcdGoTo 0014  
                    ??_lcdInit 0014          ___ftmul@f3_as_product 0021                  main@temporary 0069  
                    ??_setGPIO 0012                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8              ?_GenerateChecksum 0001  
                   __accesstop 0060        __end_of__initialization 199A             ??_GenerateChecksum 000F  
           __size_of_WriteSPI1 0022                  ___rparam_used 000001                     ___ftmul@f1 0017  
                   ___ftmul@f2 001A                     ___fttol@f1 0026                 __pcstackCOMRAM 0001  
            GenerateChecksum@y 0010   __size_of_SPIReassembleDouble 0044                    _ReceiveSPI1 19B2  
             WriteSPI1@TempVar 000F                        ?_SPIInt 0001                      ?_SendSPI1 0001  
               _LCDbreakDouble 121C                      ?_OpenSPI1 000F                   ?_Delay10TCYx 0001  
                   _lcdCommand 1830                      ?___ftpack 000F              __end_of_WriteSPI1 1942  
                _PIDEnableFlag 004E                        _SSP1BUF 000FC9                        _SSP2BUF 000F66  
                      _SPIflag 004F         __end_of_LCDbreakDouble 138E                      ?_setIODIR 0011  
                      _Command 004D                __size_of_SPIInt 0010                     ??_SendSPI1 000F  
                   ??_OpenSPI1 0011                        __Hparam 0000                        __Lparam 0000  
                      ___ftmul 138E                        ___fttol 1486                        ___lwdiv 16A4  
                      ___lwmod 1756                   __psmallconst 1000                     _dummy_byte 0050  
                 SendSPI1@data 0010                        __pcinit 198E                     ??___ftpack 0014  
              Delay10TCYx@unit 000F                        _lcdChar 1874                        __ramtop 1000  
                   _initialize 19DE                        _lcdGoTo 19D2                   SendSPI1@temp 000F  
                      _lcdInit 17A2                        __ptext0 1010                        __ptext1 19DE  
                      __ptext2 17A2                        __ptext3 1942                        __ptext4 1700  
                      __ptext5 1976                        __ptext6 17EC                        __ptext7 18B2  
                      __ptext8 18EE                        __ptext9 19B2                   __size_of_ISR 169C  
                      _setGPIO 195C  __size_of_SPIDisassembleDouble 003C                setIODIR@address 0012  
                 setGPIO@value 0011                 __pintcode_body 1632           end_of_initialization 199A  
              ?_LCDbreakDouble 0060                     ??_setIODIR 0012                        int_func 1632  
            OpenSPI1@smp_phase 0010                     lcdGoTo@pos 0014                    ?_lcdCommand 0001  
                      postinc0 000FEE              OpenSPI1@sync_mode 0011                      _PORTAbits 000F80  
                    _PORTCbits 000F82                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISFbits 000F97            _SPIReassembleDouble 17EC                 __end_of_SPIInt 19D2  
                  ___ftmul@exp 0020      __size_of_GenerateChecksum 0032           __size_of_Delay10TCYx 0012  
                  ?_initialize 0001           ?_SPIReassembleDouble 000F                      _DoublePtr 004B  
                lcdChar@letter 0013            start_initialization 198E                _CurrentVelocity 003C  
                 _CurrentAngle 0039                    __end_of_ISR 16A4            __size_of_lcdCommand 0044  
                 ?_ReceiveSPI1 0001                       ??_SPIInt 0001              __size_of_SendSPI1 0018  
            __size_of_OpenSPI1 0056          ??_SPIReassembleDouble 0012              __size_of___ftpack 00C6  
                  __pbssCOMRAM 0035                  __pcstackBANK0 0060                      _WriteSPI1 1920  
          __size_of_initialize 000A              WriteSPI1@data_out 0010         SPIReassembleDouble@dub 0012  
            __size_of_setIODIR 001A               ___lwdiv@dividend 000F                      __pintcode 0008  
                     ?___ftmul 0017                       ?___fttol 0026                       ?___lwdiv 000F  
                     ?___lwmod 000F                       ?_lcdChar 0001                       ?_lcdGoTo 0001  
                     ?_lcdInit 0001                    __smallconst 1000                       ?_setGPIO 0011  
                   ?_WriteSPI1 0001               ??_LCDbreakDouble 0035               ___lwdiv@quotient 0014  
                     _PIE3bits 000FA3   __end_of_SPIDisassembleDouble 18EE                       _PIR1bits 000F9E  
                     _PIR3bits 000FA4                 setGPIO@address 0012                   ??_lcdCommand 0013  
                     _SSP1CON1 000FC6               _GenerateChecksum 18EE                       _SSP1STAT 000FC7  
           __end_of_lcdCommand 1874           __size_of_ReceiveSPI1 0010                       _SendSPI1 1976  
                     _SetAngle 0048                       _OpenSPI1 1700                       __Hrparam 0000  
                     __Lrparam 0000               __size_of___ftmul 00F8               __size_of___fttol 00E6  
             __size_of___lwdiv 005C               __size_of___lwmod 004C                   ??_initialize 0014  
                     ___ftpack 156C               __size_of_lcdChar 003E               __size_of_lcdGoTo 000C  
             __size_of_lcdInit 004A               __size_of_setGPIO 001A                    ??_WriteSPI1 000F  
              ___lwdiv@divisor 0011                ___lwdiv@counter 0013                       __ptext10 121C  
                     __ptext11 19D2                       __ptext20 138E                       __ptext12 1830  
                     __ptext21 156C                       __ptext13 1874                       __ptext14 195C  
                     __ptext23 19C2                       __ptext15 1920                       __ptext16 19A0  
                     __ptext17 1756                       __ptext18 16A4                       __ptext19 1486  
                 _SSP1CON1bits 000FC6                   _SSP2CON1bits 000F63                       _setIODIR 1942  
                __size_of_main 020C             __end_of_initialize 19E8                  ??_Delay10TCYx 000F  
                 _SSP1STATbits 000FC7                   _SSP2STATbits 000F64                     _INTCONbits 000FF2  
         _SPIDisassembleDouble 18B2                       intlevel2 0000               ___lwmod@dividend 000F  
  __end_of_SPIReassembleDouble 1830            __end_of_Delay10TCYx 19B2                ___lwmod@divisor 0011  
              ___lwmod@counter 0013          ?_SPIDisassembleDouble 0011       __end_of_GenerateChecksum 1920  
      SPIDisassembleDouble@dub 0011  
