

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Sep 14 03:43:58 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38  0000                     _PORTAbits	set	3968
    39  0000                     _PORTCbits	set	3970
    40  0000                     _SSP2BUF	set	3942
    41  0000                     _SSP2CON1	set	3939
    42  0000                     _SSP2CON1bits	set	3939
    43  0000                     _SSP2STAT	set	3940
    44  0000                     _SSP2STATbits	set	3940
    45  0000                     _TRISAbits	set	3986
    46  0000                     _TRISCbits	set	3988
    47  0000                     _TRISDbits	set	3989
    48  0000                     _TRISFbits	set	3991
    49  0000                     _PIE3bits	set	4003
    50  0000                     _PIR1bits	set	3998
    51  0000                     _PIR3bits	set	4004
    52  0000                     _SSP1BUF	set	4041
    53  0000                     _SSP1CON1	set	4038
    54  0000                     _SSP1CON1bits	set	4038
    55  0000                     _SSP1STAT	set	4039
    56  0000                     _SSP1STATbits	set	4039
    57  0000                     _INTCONbits	set	4082
    58                           
    59                           	psect	smallconst
    60  001000                     __psmallconst:
    61                           	opt stack 0
    62  001000  00                 	db	0
    63  001001  38                 	db	56	;'8'
    64  001002  36                 	db	54	;'6'
    65  001003  38                 	db	56	;'8'
    66  001004  30                 	db	48	;'0'
    67  001005  3A                 	db	58	;':'
    68  001006  20                 	db	32
    69  001007  00                 	db	0
    70  001008  38                 	db	56	;'8'
    71  001009  37                 	db	55	;'7'
    72  00100A  32                 	db	50	;'2'
    73  00100B  32                 	db	50	;'2'
    74  00100C  3A                 	db	58	;':'
    75  00100D  20                 	db	32
    76  00100E  00                 	db	0
    77                           
    78                           ; #config settings
    79  00100F  00                 	db	0	; dummy byte at the end
    80  0000                     
    81                           	psect	cinit
    82  0019F4                     __pcinit:
    83                           	opt stack 0
    84  0019F4                     start_initialization:
    85                           	opt stack 0
    86  0019F4                     __initialization:
    87                           	opt stack 0
    88                           
    89                           ; Clear objects allocated to COMRAM (22 bytes)
    90  0019F4  EE00  F039         	lfsr	0,__pbssCOMRAM
    91  0019F8  0E16               	movlw	22
    92  0019FA                     clear_0:
    93  0019FA  6AEE               	clrf	postinc0,c
    94  0019FC  06E8               	decf	wreg,f,c
    95  0019FE  E1FD               	bnz	clear_0
    96  001A00                     end_of_initialization:
    97                           	opt stack 0
    98  001A00                     __end_of__initialization:
    99                           	opt stack 0
   100  001A00  0100               	movlb	0
   101  001A02  EF08  F008         	goto	_main	;jump to C main() function
   102                           postinc0	equ	0xFEE
   103                           wreg	equ	0xFE8
   104                           
   105                           	psect	bssCOMRAM
   106  000039                     __pbssCOMRAM:
   107                           	opt stack 0
   108  000039                     _DoubleSPIS:
   109                           	opt stack 0
   110  000039                     	ds	4
   111  00003D                     _Kd:
   112                           	opt stack 0
   113  00003D                     	ds	3
   114  000040                     _Ki:
   115                           	opt stack 0
   116  000040                     	ds	3
   117  000043                     _Kp:
   118                           	opt stack 0
   119  000043                     	ds	3
   120  000046                     _SetAngle:
   121                           	opt stack 0
   122  000046                     	ds	3
   123  000049                     _DoublePtr:
   124                           	opt stack 0
   125  000049                     	ds	2
   126  00004B                     _Command:
   127                           	opt stack 0
   128  00004B                     	ds	1
   129  00004C                     _SPIflag:
   130                           	opt stack 0
   131  00004C                     	ds	1
   132  00004D                     _dummy_byte:
   133                           	opt stack 0
   134  00004D                     	ds	1
   135  00004E                     _x:
   136                           	opt stack 0
   137  00004E                     	ds	1
   138                           postinc0	equ	0xFEE
   139                           wreg	equ	0xFE8
   140                           
   141                           	psect	cstackBANK0
   142  000060                     __pcstackBANK0:
   143                           	opt stack 0
   144  000060                     LCDbreakDouble@tempDub:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x0
   148  000060                     	ds	2
   149  000062                     LCDbreakDouble@temp1:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x2
   153  000062                     	ds	2
   154  000064                     LCDbreakDouble@temp2:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x4
   158  000064                     	ds	2
   159                           postinc0	equ	0xFEE
   160                           wreg	equ	0xFE8
   161                           
   162                           	psect	cstackCOMRAM
   163  000001                     __pcstackCOMRAM:
   164                           	opt stack 0
   165  000001                     ??_ISR:
   166  000001                     
   167                           ; 1 bytes @ 0x0
   168  000001                     	ds	14
   169  00000F                     ?___lwdiv:
   170                           	opt stack 0
   171  00000F                     ?___lwmod:
   172                           	opt stack 0
   173  00000F                     ?_SPIReassembleDouble:
   174                           	opt stack 0
   175  00000F                     ?___ftpack:
   176                           	opt stack 0
   177  00000F                     SendSPI1@temp:
   178                           	opt stack 0
   179  00000F                     GenerateChecksum@sum:
   180                           	opt stack 0
   181  00000F                     OpenSPI1@bus_mode:
   182                           	opt stack 0
   183  00000F                     WriteSPI1@TempVar:
   184                           	opt stack 0
   185  00000F                     OpenSPI2@bus_mode:
   186                           	opt stack 0
   187  00000F                     Delay10TCYx@unit:
   188                           	opt stack 0
   189  00000F                     ___lwdiv@dividend:
   190                           	opt stack 0
   191  00000F                     ___lwmod@dividend:
   192                           	opt stack 0
   193  00000F                     ___ftpack@arg:
   194                           	opt stack 0
   195                           
   196                           ; 3 bytes @ 0xE
   197  00000F                     	ds	1
   198  000010                     SendSPI1@data:
   199                           	opt stack 0
   200  000010                     GenerateChecksum@y:
   201                           	opt stack 0
   202  000010                     OpenSPI1@smp_phase:
   203                           	opt stack 0
   204  000010                     WriteSPI1@data_out:
   205                           	opt stack 0
   206  000010                     OpenSPI2@smp_phase:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0xF
   210  000010                     	ds	1
   211  000011                     setGPIO@value:
   212                           	opt stack 0
   213  000011                     setIODIR@dir:
   214                           	opt stack 0
   215  000011                     OpenSPI1@sync_mode:
   216                           	opt stack 0
   217  000011                     OpenSPI2@sync_mode:
   218                           	opt stack 0
   219  000011                     ___lwdiv@divisor:
   220                           	opt stack 0
   221  000011                     ___lwmod@divisor:
   222                           	opt stack 0
   223  000011                     SPIDisassembleDouble@dub:
   224                           	opt stack 0
   225                           
   226                           ; 3 bytes @ 0x10
   227  000011                     	ds	1
   228  000012                     setGPIO@address:
   229                           	opt stack 0
   230  000012                     setIODIR@address:
   231                           	opt stack 0
   232  000012                     ___ftpack@exp:
   233                           	opt stack 0
   234  000012                     SPIReassembleDouble@dub:
   235                           	opt stack 0
   236                           
   237                           ; 3 bytes @ 0x11
   238  000012                     	ds	1
   239  000013                     lcdCommand@command:
   240                           	opt stack 0
   241  000013                     lcdChar@letter:
   242                           	opt stack 0
   243  000013                     ___ftpack@sign:
   244                           	opt stack 0
   245  000013                     ___lwdiv@counter:
   246                           	opt stack 0
   247  000013                     ___lwmod@counter:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x12
   251  000013                     	ds	1
   252  000014                     ??___ftpack:
   253  000014                     lcdGoTo@pos:
   254                           	opt stack 0
   255  000014                     ___lwdiv@quotient:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x13
   259  000014                     	ds	3
   260  000017                     ?___ftmul:
   261                           	opt stack 0
   262  000017                     ___ftmul@f1:
   263                           	opt stack 0
   264                           
   265                           ; 3 bytes @ 0x16
   266  000017                     	ds	3
   267  00001A                     ___ftmul@f2:
   268                           	opt stack 0
   269                           
   270                           ; 3 bytes @ 0x19
   271  00001A                     	ds	3
   272  00001D                     ??___ftmul:
   273                           
   274                           ; 0 bytes @ 0x1C
   275  00001D                     	ds	3
   276  000020                     ___ftmul@exp:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x1F
   280  000020                     	ds	1
   281  000021                     ___ftmul@f3_as_product:
   282                           	opt stack 0
   283                           
   284                           ; 3 bytes @ 0x20
   285  000021                     	ds	3
   286  000024                     ___ftmul@cntr:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x23
   290  000024                     	ds	1
   291  000025                     ___ftmul@sign:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x24
   295  000025                     	ds	1
   296  000026                     ?___fttol:
   297                           	opt stack 0
   298  000026                     ___fttol@f1:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x25
   302  000026                     	ds	4
   303  00002A                     ??___fttol:
   304                           
   305                           ; 0 bytes @ 0x29
   306  00002A                     	ds	5
   307  00002F                     ___fttol@sign1:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x2E
   311  00002F                     	ds	1
   312  000030                     ___fttol@lval:
   313                           	opt stack 0
   314                           
   315                           ; 4 bytes @ 0x2F
   316  000030                     	ds	4
   317  000034                     ___fttol@exp1:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x33
   321  000034                     	ds	1
   322  000035                     LCDbreakDouble@dubs:
   323                           	opt stack 0
   324                           
   325                           ; 3 bytes @ 0x34
   326  000035                     	ds	3
   327  000038                     main@temporary:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x37
   331  000038                     	ds	1
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 37 in file "SPItestSLAVE.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  temporary       1   55[COMRAM] unsigned char 
   345 ;; Return value:  Size  Location     Type
   346 ;;		None               void
   347 ;; Registers used:
   348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;Total ram usage:        1 bytes
   359 ;; Hardware stack levels required when called:    7
   360 ;; This function calls:
   361 ;;		_LCDbreakDouble
   362 ;;		_ReceiveSPI1
   363 ;;		_SPIDisassembleDouble
   364 ;;		_SPIReassembleDouble
   365 ;;		_SendSPI1
   366 ;;		_initialize
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text0
   373  001010                     __ptext0:
   374                           	opt stack 0
   375  001010                     _main:
   376                           	opt stack 24
   377                           
   378                           ;SPItestSLAVE.c: 39: unsigned char temporary;
   379                           ;SPItestSLAVE.c: 40: initialize();
   380                           
   381                           ;incstack = 0
   382  001010  ECC6  F00C         	call	_initialize	;wreg free
   383                           
   384                           ;SPItestSLAVE.c: 41: SPIDisassembleDouble(355.89);
   385  001014  0EF2               	movlw	242
   386  001016  6E11               	movwf	SPIDisassembleDouble@dub,c
   387  001018  0EB1               	movlw	177
   388  00101A  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   389  00101C  0E43               	movlw	67
   390  00101E  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   391  001020  EC7E  F00C         	call	_SPIDisassembleDouble	;wreg free
   392                           
   393                           ;SPItestSLAVE.c: 43: PORTCbits.RC6 = 0;
   394  001024  9C82               	bcf	3970,6,c	;volatile
   395                           
   396                           ;SPItestSLAVE.c: 44: SSP2BUF = dummy_byte;
   397  001026  C04D  FF66         	movff	_dummy_byte,3942	;volatile
   398  00102A  D000               	goto	l2118
   399  00102C                     l2118:
   400                           
   401                           ;SPItestSLAVE.c: 47: {
   402                           ;SPItestSLAVE.c: 48: if (SPIflag == 1)
   403  00102C  044C               	decf	_SPIflag,w,c
   404  00102E  A4D8               	btfss	status,2,c
   405  001030  D7FD               	goto	l2118
   406                           
   407                           ;SPItestSLAVE.c: 49: {
   408                           ;SPItestSLAVE.c: 50: SPIflag = 0;
   409  001032  0E00               	movlw	0
   410  001034  6E4C               	movwf	_SPIflag,c
   411                           
   412                           ;SPItestSLAVE.c: 51: if ((Command == 0x02) || (Command == 0x03) || (Command == 0x04) || 
      +                          (Command == 0x06) || (Command == 0x08))
   413  001036  0E02               	movlw	2
   414  001038  184B               	xorwf	_Command,w,c
   415  00103A  B4D8               	btfsc	status,2,c
   416  00103C  D010               	goto	l2132
   417  00103E  0E03               	movlw	3
   418  001040  184B               	xorwf	_Command,w,c
   419  001042  B4D8               	btfsc	status,2,c
   420  001044  D00C               	goto	l2132
   421  001046  0E04               	movlw	4
   422  001048  184B               	xorwf	_Command,w,c
   423  00104A  B4D8               	btfsc	status,2,c
   424  00104C  D008               	goto	l2132
   425  00104E  0E06               	movlw	6
   426  001050  184B               	xorwf	_Command,w,c
   427  001052  B4D8               	btfsc	status,2,c
   428  001054  D004               	goto	l2132
   429  001056  0E08               	movlw	8
   430  001058  184B               	xorwf	_Command,w,c
   431  00105A  A4D8               	btfss	status,2,c
   432  00105C  D058               	goto	l2166
   433  00105E                     l2132:
   434                           
   435                           ;SPItestSLAVE.c: 52: {
   436                           ;SPItestSLAVE.c: 53: if (Command == 0x02)
   437  00105E  0E02               	movlw	2
   438  001060  184B               	xorwf	_Command,w,c
   439  001062  A4D8               	btfss	status,2,c
   440  001064  D009               	goto	l2136
   441                           
   442                           ;SPItestSLAVE.c: 54: SPIDisassembleDouble(129.33);
   443  001066  0E54               	movlw	84
   444  001068  6E11               	movwf	SPIDisassembleDouble@dub,c
   445  00106A  0E01               	movlw	1
   446  00106C  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   447  00106E  0E43               	movlw	67
   448  001070  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   449  001072  EC7E  F00C         	call	_SPIDisassembleDouble	;wreg free
   450  001076  D034               	goto	l2152
   451  001078                     l2136:
   452                           
   453                           ;SPItestSLAVE.c: 55: else if (Command == 0x03)
   454  001078  0E03               	movlw	3
   455  00107A  184B               	xorwf	_Command,w,c
   456  00107C  A4D8               	btfss	status,2,c
   457  00107E  D009               	goto	l2140
   458                           
   459                           ;SPItestSLAVE.c: 56: SPIDisassembleDouble(255.32);
   460  001080  0E52               	movlw	82
   461  001082  6E11               	movwf	SPIDisassembleDouble@dub,c
   462  001084  0E7F               	movlw	127
   463  001086  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   464  001088  0E43               	movlw	67
   465  00108A  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   466  00108C  EC7E  F00C         	call	_SPIDisassembleDouble	;wreg free
   467  001090  D027               	goto	l2152
   468  001092                     l2140:
   469                           
   470                           ;SPItestSLAVE.c: 57: else if (Command == 0x04)
   471  001092  0E04               	movlw	4
   472  001094  184B               	xorwf	_Command,w,c
   473  001096  A4D8               	btfss	status,2,c
   474  001098  D009               	goto	l2144
   475                           
   476                           ;SPItestSLAVE.c: 58: SPIDisassembleDouble(314.21);
   477  00109A  0E1B               	movlw	27
   478  00109C  6E11               	movwf	SPIDisassembleDouble@dub,c
   479  00109E  0E9D               	movlw	157
   480  0010A0  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   481  0010A2  0E43               	movlw	67
   482  0010A4  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   483  0010A6  EC7E  F00C         	call	_SPIDisassembleDouble	;wreg free
   484  0010AA  D01A               	goto	l2152
   485  0010AC                     l2144:
   486                           
   487                           ;SPItestSLAVE.c: 59: else if (Command == 0x06)
   488  0010AC  0E06               	movlw	6
   489  0010AE  184B               	xorwf	_Command,w,c
   490  0010B0  A4D8               	btfss	status,2,c
   491  0010B2  D009               	goto	l2148
   492                           
   493                           ;SPItestSLAVE.c: 60: SPIDisassembleDouble(0.40);
   494  0010B4  0ECD               	movlw	205
   495  0010B6  6E11               	movwf	SPIDisassembleDouble@dub,c
   496  0010B8  0ECC               	movlw	204
   497  0010BA  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   498  0010BC  0E3E               	movlw	62
   499  0010BE  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   500  0010C0  EC7E  F00C         	call	_SPIDisassembleDouble	;wreg free
   501  0010C4  D00D               	goto	l2152
   502  0010C6                     l2148:
   503                           
   504                           ;SPItestSLAVE.c: 61: else if (Command == 0x08)
   505  0010C6  0E08               	movlw	8
   506  0010C8  184B               	xorwf	_Command,w,c
   507  0010CA  A4D8               	btfss	status,2,c
   508  0010CC  D009               	goto	l2152
   509                           
   510                           ;SPItestSLAVE.c: 62: SPIDisassembleDouble(1.50);
   511  0010CE  0E00               	movlw	0
   512  0010D0  6E11               	movwf	SPIDisassembleDouble@dub,c
   513  0010D2  0EC0               	movlw	192
   514  0010D4  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   515  0010D6  0E3F               	movlw	63
   516  0010D8  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   517  0010DA  EC7E  F00C         	call	_SPIDisassembleDouble	;wreg free
   518  0010DE  D000               	goto	l2152
   519  0010E0                     l2152:
   520                           
   521                           ;SPItestSLAVE.c: 63: PORTCbits.RC6 = 0;
   522  0010E0  9C82               	bcf	3970,6,c	;volatile
   523                           
   524                           ;SPItestSLAVE.c: 64: for (x = 0; x < 4; x++)
   525  0010E2  0E00               	movlw	0
   526  0010E4  6E4E               	movwf	_x,c
   527  0010E6  D00D               	goto	l2164
   528  0010E8  D00F               	goto	l109
   529  0010EA                     l2160:
   530                           
   531                           ;SPItestSLAVE.c: 65: SendSPI1(DoubleSPIS[x]);
   532  0010EA  504E               	movf	_x,w,c
   533  0010EC  0D01               	mullw	1
   534  0010EE  0E39               	movlw	low _DoubleSPIS
   535  0010F0  24F3               	addwf	prodl,w,c
   536  0010F2  6ED9               	movwf	fsr2l,c
   537  0010F4  0E00               	movlw	high _DoubleSPIS
   538  0010F6  20F4               	addwfc	prodh,w,c
   539  0010F8  6EDA               	movwf	fsr2h,c
   540  0010FA  50DF               	movf	indf2,w,c
   541  0010FC  ECEE  F00C         	call	_SendSPI1
   542  001100  2A4E               	incf	_x,f,c
   543  001102                     l2164:
   544  001102  0E03               	movlw	3
   545  001104  644E               	cpfsgt	_x,c
   546  001106  D7F1               	goto	l2160
   547  001108                     l109:
   548                           
   549                           ;SPItestSLAVE.c: 66: temporary = SSP2BUF;
   550  001108  CF66 F038          	movff	3942,main@temporary	;volatile
   551                           
   552                           ;SPItestSLAVE.c: 67: }
   553  00110C  D07D               	goto	l2214
   554  00110E                     l2166:
   555                           
   556                           ;SPItestSLAVE.c: 68: else if ((Command == 0x01) || (Command == 0x05) || (Command == 0x07
      +                          ) || (Command == 0x09))
   557  00110E  044B               	decf	_Command,w,c
   558  001110  B4D8               	btfsc	status,2,c
   559  001112  D00C               	goto	l113
   560  001114  0E05               	movlw	5
   561  001116  184B               	xorwf	_Command,w,c
   562  001118  B4D8               	btfsc	status,2,c
   563  00111A  D008               	goto	l113
   564  00111C  0E07               	movlw	7
   565  00111E  184B               	xorwf	_Command,w,c
   566  001120  B4D8               	btfsc	status,2,c
   567  001122  D004               	goto	l113
   568  001124  0E09               	movlw	9
   569  001126  184B               	xorwf	_Command,w,c
   570  001128  A4D8               	btfss	status,2,c
   571  00112A  D06E               	goto	l2214
   572  00112C                     l113:
   573                           
   574                           ;SPItestSLAVE.c: 69: {
   575                           ;SPItestSLAVE.c: 70: PORTCbits.RC6 = 0;
   576  00112C  9C82               	bcf	3970,6,c	;volatile
   577                           
   578                           ;SPItestSLAVE.c: 71: for (x = 0; x != 4; x++)
   579  00112E  0E00               	movlw	0
   580  001130  6E4E               	movwf	_x,c
   581  001132                     l2176:
   582  001132  0E04               	movlw	4
   583  001134  184E               	xorwf	_x,w,c
   584  001136  B4D8               	btfsc	status,2,c
   585  001138  D00F               	goto	l2186
   586  00113A  D001               	goto	l2180
   587  00113C  D00D               	goto	l2186
   588  00113E                     l2180:
   589                           
   590                           ;SPItestSLAVE.c: 72: DoubleSPIS[x] = ReceiveSPI1();
   591  00113E  504E               	movf	_x,w,c
   592  001140  0D01               	mullw	1
   593  001142  0E39               	movlw	low _DoubleSPIS
   594  001144  24F3               	addwf	prodl,w,c
   595  001146  6ED9               	movwf	fsr2l,c
   596  001148  0E00               	movlw	high _DoubleSPIS
   597  00114A  20F4               	addwfc	prodh,w,c
   598  00114C  6EDA               	movwf	fsr2h,c
   599  00114E  EC0C  F00D         	call	_ReceiveSPI1	;wreg free
   600  001152  6EDF               	movwf	indf2,c
   601  001154  2A4E               	incf	_x,f,c
   602  001156  D7ED               	goto	l2176
   603  001158                     l2186:
   604                           
   605                           ;SPItestSLAVE.c: 73: if (Command == 0x01)
   606  001158  044B               	decf	_Command,w,c
   607  00115A  A4D8               	btfss	status,2,c
   608  00115C  D011               	goto	l2192
   609                           
   610                           ;SPItestSLAVE.c: 74: {
   611                           ;SPItestSLAVE.c: 75: SetAngle = SPIReassembleDouble();
   612  00115E  EC1B  F00C         	call	_SPIReassembleDouble	;wreg free
   613  001162  C00F  F046         	movff	?_SPIReassembleDouble,_SetAngle
   614  001166  C010  F047         	movff	?_SPIReassembleDouble+1,_SetAngle+1
   615  00116A  C011  F048         	movff	?_SPIReassembleDouble+2,_SetAngle+2
   616                           
   617                           ;SPItestSLAVE.c: 76: LCDbreakDouble(SetAngle);
   618  00116E  C046  F035         	movff	_SetAngle,LCDbreakDouble@dubs
   619  001172  C047  F036         	movff	_SetAngle+1,LCDbreakDouble@dubs+1
   620  001176  C048  F037         	movff	_SetAngle+2,LCDbreakDouble@dubs+2
   621  00117A  EC08  F009         	call	_LCDbreakDouble	;wreg free
   622                           
   623                           ;SPItestSLAVE.c: 77: }
   624  00117E  D03F               	goto	l2210
   625  001180                     l2192:
   626                           
   627                           ;SPItestSLAVE.c: 78: else if (Command == 0x05)
   628  001180  0E05               	movlw	5
   629  001182  184B               	xorwf	_Command,w,c
   630  001184  A4D8               	btfss	status,2,c
   631  001186  D011               	goto	l2198
   632                           
   633                           ;SPItestSLAVE.c: 79: {
   634                           ;SPItestSLAVE.c: 80: Kp = SPIReassembleDouble();
   635  001188  EC1B  F00C         	call	_SPIReassembleDouble	;wreg free
   636  00118C  C00F  F043         	movff	?_SPIReassembleDouble,_Kp
   637  001190  C010  F044         	movff	?_SPIReassembleDouble+1,_Kp+1
   638  001194  C011  F045         	movff	?_SPIReassembleDouble+2,_Kp+2
   639                           
   640                           ;SPItestSLAVE.c: 81: LCDbreakDouble(Kp);
   641  001198  C043  F035         	movff	_Kp,LCDbreakDouble@dubs
   642  00119C  C044  F036         	movff	_Kp+1,LCDbreakDouble@dubs+1
   643  0011A0  C045  F037         	movff	_Kp+2,LCDbreakDouble@dubs+2
   644  0011A4  EC08  F009         	call	_LCDbreakDouble	;wreg free
   645                           
   646                           ;SPItestSLAVE.c: 82: }
   647  0011A8  D02A               	goto	l2210
   648  0011AA                     l2198:
   649                           
   650                           ;SPItestSLAVE.c: 83: else if (Command == 0x07)
   651  0011AA  0E07               	movlw	7
   652  0011AC  184B               	xorwf	_Command,w,c
   653  0011AE  A4D8               	btfss	status,2,c
   654  0011B0  D011               	goto	l2204
   655                           
   656                           ;SPItestSLAVE.c: 84: {
   657                           ;SPItestSLAVE.c: 85: Ki = SPIReassembleDouble();
   658  0011B2  EC1B  F00C         	call	_SPIReassembleDouble	;wreg free
   659  0011B6  C00F  F040         	movff	?_SPIReassembleDouble,_Ki
   660  0011BA  C010  F041         	movff	?_SPIReassembleDouble+1,_Ki+1
   661  0011BE  C011  F042         	movff	?_SPIReassembleDouble+2,_Ki+2
   662                           
   663                           ;SPItestSLAVE.c: 86: LCDbreakDouble(Ki);
   664  0011C2  C040  F035         	movff	_Ki,LCDbreakDouble@dubs
   665  0011C6  C041  F036         	movff	_Ki+1,LCDbreakDouble@dubs+1
   666  0011CA  C042  F037         	movff	_Ki+2,LCDbreakDouble@dubs+2
   667  0011CE  EC08  F009         	call	_LCDbreakDouble	;wreg free
   668                           
   669                           ;SPItestSLAVE.c: 87: }
   670  0011D2  D015               	goto	l2210
   671  0011D4                     l2204:
   672                           
   673                           ;SPItestSLAVE.c: 88: else if (Command == 0x09)
   674  0011D4  0E09               	movlw	9
   675  0011D6  184B               	xorwf	_Command,w,c
   676  0011D8  A4D8               	btfss	status,2,c
   677  0011DA  D011               	goto	l2210
   678                           
   679                           ;SPItestSLAVE.c: 89: {
   680                           ;SPItestSLAVE.c: 90: Kd = SPIReassembleDouble();
   681  0011DC  EC1B  F00C         	call	_SPIReassembleDouble	;wreg free
   682  0011E0  C00F  F03D         	movff	?_SPIReassembleDouble,_Kd
   683  0011E4  C010  F03E         	movff	?_SPIReassembleDouble+1,_Kd+1
   684  0011E8  C011  F03F         	movff	?_SPIReassembleDouble+2,_Kd+2
   685                           
   686                           ;SPItestSLAVE.c: 91: LCDbreakDouble(Kd);
   687  0011EC  C03D  F035         	movff	_Kd,LCDbreakDouble@dubs
   688  0011F0  C03E  F036         	movff	_Kd+1,LCDbreakDouble@dubs+1
   689  0011F4  C03F  F037         	movff	_Kd+2,LCDbreakDouble@dubs+2
   690  0011F8  EC08  F009         	call	_LCDbreakDouble	;wreg free
   691  0011FC  D000               	goto	l2210
   692  0011FE                     l2210:
   693                           
   694                           ;SPItestSLAVE.c: 92: }
   695                           ;SPItestSLAVE.c: 93: temporary = SSP2BUF;
   696  0011FE  CF66 F038          	movff	3942,main@temporary	;volatile
   697                           
   698                           ;SPItestSLAVE.c: 94: SSP2BUF = 0x00;
   699  001202  0E00               	movlw	0
   700  001204  6E66               	movwf	3942,c	;volatile
   701  001206  D000               	goto	l2214
   702  001208                     l2214:
   703                           
   704                           ;SPItestSLAVE.c: 95: }
   705                           ;SPItestSLAVE.c: 96: PIE3bits.SSP2IE = 1;
   706  001208  8EA3               	bsf	4003,7,c	;volatile
   707  00120A  D710               	goto	l2118
   708  00120C  EF0C  F000         	goto	start
   709  001210                     __end_of_main:
   710                           	opt stack 0
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           indf2	equ	0xFDF
   716                           fsr2h	equ	0xFDA
   717                           fsr2l	equ	0xFD9
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _initialize *****************
   721 ;; Defined at:
   722 ;;		line 102 in file "SPItestSLAVE.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;		None               void
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    6
   743 ;; This function calls:
   744 ;;		_OpenSPI2
   745 ;;		_lcdInit
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text1
   752  00198C                     __ptext1:
   753                           	opt stack 0
   754  00198C                     _initialize:
   755                           	opt stack 24
   756                           
   757                           ;SPItestSLAVE.c: 104: OpenSPI2(0b00000100, 0b00000000, 0b00000000);
   758                           
   759                           ;incstack = 0
   760  00198C  0E00               	movlw	0
   761  00198E  6E0F               	movwf	OpenSPI2@bus_mode,c
   762  001990  0E00               	movlw	0
   763  001992  6E10               	movwf	OpenSPI2@smp_phase,c
   764  001994  0E04               	movlw	4
   765  001996  ECA5  F00B         	call	_OpenSPI2
   766                           
   767                           ;SPItestSLAVE.c: 105: lcdInit();
   768  00199A  ECF6  F00B         	call	_lcdInit	;wreg free
   769                           
   770                           ;SPItestSLAVE.c: 106: TRISCbits.RC6 = 0;
   771  00199E  9C94               	bcf	3988,6,c	;volatile
   772                           
   773                           ;SPItestSLAVE.c: 107: INTCONbits.GIE = 1;
   774  0019A0  8EF2               	bsf	intcon,7,c	;volatile
   775                           
   776                           ;SPItestSLAVE.c: 108: INTCONbits.PEIE = 1;
   777  0019A2  8CF2               	bsf	intcon,6,c	;volatile
   778                           
   779                           ;SPItestSLAVE.c: 109: PIE3bits.SSP2IE = 1;
   780  0019A4  8EA3               	bsf	4003,7,c	;volatile
   781  0019A6  0012               	return		;funcret
   782  0019A8                     __end_of_initialize:
   783                           	opt stack 0
   784                           prodh	equ	0xFF4
   785                           prodl	equ	0xFF3
   786                           intcon	equ	0xFF2
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           indf2	equ	0xFDF
   790                           fsr2h	equ	0xFDA
   791                           fsr2l	equ	0xFD9
   792                           status	equ	0xFD8
   793                           
   794 ;; *************** function _lcdInit *****************
   795 ;; Defined at:
   796 ;;		line 110 in file "LCD.h"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;		None               void
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:        0 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    5
   817 ;; This function calls:
   818 ;;		_OpenSPI1
   819 ;;		_lcdCommand
   820 ;;		_setGPIO
   821 ;;		_setIODIR
   822 ;; This function is called by:
   823 ;;		_initialize
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text2
   828  0017EC                     __ptext2:
   829                           	opt stack 0
   830  0017EC                     _lcdInit:
   831                           	opt stack 24
   832                           
   833                           ;LCD.h: 112: TRISAbits.RA2=0;
   834                           
   835                           ;incstack = 0
   836  0017EC  9492               	bcf	3986,2,c	;volatile
   837                           
   838                           ;LCD.h: 113: PORTAbits.RA2=1;
   839  0017EE  8480               	bsf	3968,2,c	;volatile
   840                           
   841                           ;LCD.h: 115: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
   842  0017F0  0E02               	movlw	2
   843  0017F2  6E0F               	movwf	OpenSPI1@bus_mode,c
   844  0017F4  0E80               	movlw	128
   845  0017F6  6E10               	movwf	OpenSPI1@smp_phase,c
   846  0017F8  0E02               	movlw	2
   847  0017FA  EC7A  F00B         	call	_OpenSPI1
   848                           
   849                           ;LCD.h: 117: setIODIR(0x01,0x00);
   850  0017FE  0E00               	movlw	0
   851  001800  6E11               	movwf	setIODIR@dir,c
   852  001802  0E01               	movlw	1
   853  001804  ECD4  F00C         	call	_setIODIR
   854                           
   855                           ;LCD.h: 119: setIODIR(0x00,0x00);
   856  001808  0E00               	movlw	0
   857  00180A  6E11               	movwf	setIODIR@dir,c
   858  00180C  0E00               	movlw	0
   859  00180E  ECD4  F00C         	call	_setIODIR
   860                           
   861                           ;LCD.h: 121: setGPIO(0x00,0x00);
   862  001812  0E00               	movlw	0
   863  001814  6E11               	movwf	setGPIO@value,c
   864  001816  0E00               	movlw	0
   865  001818  ECE1  F00C         	call	_setGPIO
   866                           
   867                           ;LCD.h: 123: lcdCommand(0b00111111);
   868  00181C  0E3F               	movlw	63
   869  00181E  EC3D  F00C         	call	_lcdCommand
   870                           
   871                           ;LCD.h: 125: lcdCommand(0b00001111);
   872  001822  0E0F               	movlw	15
   873  001824  EC3D  F00C         	call	_lcdCommand
   874                           
   875                           ;LCD.h: 127: lcdCommand(0b00000001);
   876  001828  0E01               	movlw	1
   877  00182A  EC3D  F00C         	call	_lcdCommand
   878                           
   879                           ;LCD.h: 129: lcdCommand(0b00000110);
   880  00182E  0E06               	movlw	6
   881  001830  EC3D  F00C         	call	_lcdCommand
   882  001834  0012               	return		;funcret
   883  001836                     __end_of_lcdInit:
   884                           	opt stack 0
   885                           prodh	equ	0xFF4
   886                           prodl	equ	0xFF3
   887                           intcon	equ	0xFF2
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           indf2	equ	0xFDF
   891                           fsr2h	equ	0xFDA
   892                           fsr2l	equ	0xFD9
   893                           status	equ	0xFD8
   894                           
   895 ;; *************** function _setIODIR *****************
   896 ;; Defined at:
   897 ;;		line 43 in file "LCD.h"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  address         1    wreg     unsigned char 
   900 ;;  dir             1   16[COMRAM] unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  address         1   17[COMRAM] unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, status,2, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;Total ram usage:        2 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    3
   919 ;; This function calls:
   920 ;;		_WriteSPI1
   921 ;; This function is called by:
   922 ;;		_lcdInit
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text3
   927  0019A8                     __ptext3:
   928                           	opt stack 0
   929  0019A8                     _setIODIR:
   930                           	opt stack 25
   931                           
   932                           ;incstack = 0
   933                           ;setIODIR@address stored from wreg
   934  0019A8  6E12               	movwf	setIODIR@address,c
   935                           
   936                           ;LCD.h: 45: PORTAbits.RA2=0;
   937  0019AA  9480               	bcf	3968,2,c	;volatile
   938                           
   939                           ;LCD.h: 46: WriteSPI1(0x40);
   940  0019AC  0E40               	movlw	64
   941  0019AE  ECB5  F00C         	call	_WriteSPI1
   942                           
   943                           ;LCD.h: 47: WriteSPI1(address);
   944  0019B2  5012               	movf	setIODIR@address,w,c
   945  0019B4  ECB5  F00C         	call	_WriteSPI1
   946                           
   947                           ;LCD.h: 48: WriteSPI1(dir);
   948  0019B8  5011               	movf	setIODIR@dir,w,c
   949  0019BA  ECB5  F00C         	call	_WriteSPI1
   950                           
   951                           ;LCD.h: 49: PORTAbits.RA2=1;
   952  0019BE  8480               	bsf	3968,2,c	;volatile
   953  0019C0  0012               	return		;funcret
   954  0019C2                     __end_of_setIODIR:
   955                           	opt stack 0
   956                           prodh	equ	0xFF4
   957                           prodl	equ	0xFF3
   958                           intcon	equ	0xFF2
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           indf2	equ	0xFDF
   962                           fsr2h	equ	0xFDA
   963                           fsr2l	equ	0xFD9
   964                           status	equ	0xFD8
   965                           
   966 ;; *************** function _OpenSPI1 *****************
   967 ;; Defined at:
   968 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  sync_mode       1    wreg     unsigned char 
   971 ;;  bus_mode        1   14[COMRAM] unsigned char 
   972 ;;  smp_phase       1   15[COMRAM] unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  sync_mode       1   16[COMRAM] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;		None               void
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;Total ram usage:        3 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    2
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_lcdInit
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text4
   999  0016F4                     __ptext4:
  1000                           	opt stack 0
  1001  0016F4                     _OpenSPI1:
  1002                           	opt stack 26
  1003                           
  1004                           ;incstack = 0
  1005                           ;OpenSPI1@sync_mode stored from wreg
  1006  0016F4  6E11               	movwf	OpenSPI1@sync_mode,c
  1007  0016F6  0E3F               	movlw	63
  1008  0016F8  16C7               	andwf	4039,f,c	;volatile
  1009  0016FA  0E00               	movlw	0
  1010  0016FC  6EC6               	movwf	4038,c	;volatile
  1011  0016FE  5011               	movf	OpenSPI1@sync_mode,w,c
  1012  001700  12C6               	iorwf	4038,f,c	;volatile
  1013  001702  5010               	movf	OpenSPI1@smp_phase,w,c
  1014  001704  12C7               	iorwf	4039,f,c	;volatile
  1015  001706  D005               	goto	l1378
  1016  001708                     l179:
  1017  001708  8CC7               	bsf	4039,6,c	;volatile
  1018  00170A  D013               	goto	l1382
  1019  00170C                     l181:
  1020  00170C  8CC7               	bsf	4039,6,c	;volatile
  1021  00170E                     l182:
  1022  00170E  88C6               	bsf	4038,4,c	;volatile
  1023  001710  D010               	goto	l1382
  1024  001712                     l1378:
  1025  001712  500F               	movf	OpenSPI1@bus_mode,w,c
  1026                           
  1027                           ; Switch size 1, requested type "space"
  1028                           ; Number of cases is 3, Range of values is 0 to 3
  1029                           ; switch strategies available:
  1030                           ; Name         Instructions Cycles
  1031                           ; simple_byte           10     6 (average)
  1032                           ;	Chosen strategy is simple_byte
  1033  001714  0A00               	xorlw	0	; case 0
  1034  001716  B4D8               	btfsc	status,2,c
  1035  001718  D7F7               	goto	l179
  1036  00171A  0A02               	xorlw	2	; case 2
  1037  00171C  B4D8               	btfsc	status,2,c
  1038  00171E  D7F6               	goto	l181
  1039  001720  0A01               	xorlw	1	; case 3
  1040  001722  B4D8               	btfsc	status,2,c
  1041  001724  D7F4               	goto	l182
  1042  001726  D005               	goto	l1382
  1043  001728                     l185:
  1044  001728  8E97               	bsf	3991,7,c	;volatile
  1045  00172A                     l187:
  1046  00172A  8694               	bsf	3988,3,c	;volatile
  1047  00172C  D00A               	goto	l186
  1048  00172E                     l188:
  1049  00172E  9694               	bcf	3988,3,c	;volatile
  1050  001730  D008               	goto	l186
  1051  001732                     l1382:
  1052  001732  5011               	movf	OpenSPI1@sync_mode,w,c
  1053                           
  1054                           ; Switch size 1, requested type "space"
  1055                           ; Number of cases is 2, Range of values is 4 to 5
  1056                           ; switch strategies available:
  1057                           ; Name         Instructions Cycles
  1058                           ; simple_byte            7     4 (average)
  1059                           ;	Chosen strategy is simple_byte
  1060  001734  0A04               	xorlw	4	; case 4
  1061  001736  B4D8               	btfsc	status,2,c
  1062  001738  D7F7               	goto	l185
  1063  00173A  0A01               	xorlw	1	; case 5
  1064  00173C  B4D8               	btfsc	status,2,c
  1065  00173E  D7F5               	goto	l187
  1066  001740  D7F6               	goto	l188
  1067  001742                     l186:
  1068  001742  8894               	bsf	3988,4,c	;volatile
  1069  001744  9A94               	bcf	3988,5,c	;volatile
  1070  001746  8AC6               	bsf	4038,5,c	;volatile
  1071  001748  0012               	return		;funcret
  1072  00174A                     __end_of_OpenSPI1:
  1073                           	opt stack 0
  1074                           prodh	equ	0xFF4
  1075                           prodl	equ	0xFF3
  1076                           intcon	equ	0xFF2
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           indf2	equ	0xFDF
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           status	equ	0xFD8
  1083                           
  1084 ;; *************** function _OpenSPI2 *****************
  1085 ;; Defined at:
  1086 ;;		line 14 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi2open.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  sync_mode       1    wreg     unsigned char 
  1089 ;;  bus_mode        1   14[COMRAM] unsigned char 
  1090 ;;  smp_phase       1   15[COMRAM] unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  sync_mode       1   16[COMRAM] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;		None               void
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;Total ram usage:        3 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    2
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_initialize
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text5
  1117  00174A                     __ptext5:
  1118                           	opt stack 0
  1119  00174A                     _OpenSPI2:
  1120                           	opt stack 27
  1121                           
  1122                           ;incstack = 0
  1123                           ;OpenSPI2@sync_mode stored from wreg
  1124  00174A  6E11               	movwf	OpenSPI2@sync_mode,c
  1125  00174C  0E3F               	movlw	63
  1126  00174E  1664               	andwf	3940,f,c	;volatile
  1127  001750  0E00               	movlw	0
  1128  001752  6E63               	movwf	3939,c	;volatile
  1129  001754  5011               	movf	OpenSPI2@sync_mode,w,c
  1130  001756  1263               	iorwf	3939,f,c	;volatile
  1131  001758  5010               	movf	OpenSPI2@smp_phase,w,c
  1132  00175A  1264               	iorwf	3940,f,c	;volatile
  1133  00175C  D005               	goto	l1464
  1134  00175E                     l219:
  1135  00175E  8C64               	bsf	3940,6,c	;volatile
  1136  001760  D013               	goto	l1468
  1137  001762                     l221:
  1138  001762  8C64               	bsf	3940,6,c	;volatile
  1139  001764                     l222:
  1140  001764  8863               	bsf	3939,4,c	;volatile
  1141  001766  D010               	goto	l1468
  1142  001768                     l1464:
  1143  001768  500F               	movf	OpenSPI2@bus_mode,w,c
  1144                           
  1145                           ; Switch size 1, requested type "space"
  1146                           ; Number of cases is 3, Range of values is 0 to 3
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte           10     6 (average)
  1150                           ;	Chosen strategy is simple_byte
  1151  00176A  0A00               	xorlw	0	; case 0
  1152  00176C  B4D8               	btfsc	status,2,c
  1153  00176E  D7F7               	goto	l219
  1154  001770  0A02               	xorlw	2	; case 2
  1155  001772  B4D8               	btfsc	status,2,c
  1156  001774  D7F6               	goto	l221
  1157  001776  0A01               	xorlw	1	; case 3
  1158  001778  B4D8               	btfsc	status,2,c
  1159  00177A  D7F4               	goto	l222
  1160  00177C  D005               	goto	l1468
  1161  00177E                     l225:
  1162  00177E  8E95               	bsf	3989,7,c	;volatile
  1163  001780                     l227:
  1164  001780  8C95               	bsf	3989,6,c	;volatile
  1165  001782  D00A               	goto	l226
  1166  001784                     l228:
  1167  001784  9C95               	bcf	3989,6,c	;volatile
  1168  001786  D008               	goto	l226
  1169  001788                     l1468:
  1170  001788  5011               	movf	OpenSPI2@sync_mode,w,c
  1171                           
  1172                           ; Switch size 1, requested type "space"
  1173                           ; Number of cases is 2, Range of values is 4 to 5
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            7     4 (average)
  1177                           ;	Chosen strategy is simple_byte
  1178  00178A  0A04               	xorlw	4	; case 4
  1179  00178C  B4D8               	btfsc	status,2,c
  1180  00178E  D7F7               	goto	l225
  1181  001790  0A01               	xorlw	1	; case 5
  1182  001792  B4D8               	btfsc	status,2,c
  1183  001794  D7F5               	goto	l227
  1184  001796  D7F6               	goto	l228
  1185  001798                     l226:
  1186  001798  8A95               	bsf	3989,5,c	;volatile
  1187  00179A  9895               	bcf	3989,4,c	;volatile
  1188  00179C  8A63               	bsf	3939,5,c	;volatile
  1189  00179E  0012               	return		;funcret
  1190  0017A0                     __end_of_OpenSPI2:
  1191                           	opt stack 0
  1192                           prodh	equ	0xFF4
  1193                           prodl	equ	0xFF3
  1194                           intcon	equ	0xFF2
  1195                           postinc0	equ	0xFEE
  1196                           wreg	equ	0xFE8
  1197                           indf2	equ	0xFDF
  1198                           fsr2h	equ	0xFDA
  1199                           fsr2l	equ	0xFD9
  1200                           status	equ	0xFD8
  1201                           
  1202 ;; *************** function _SendSPI1 *****************
  1203 ;; Defined at:
  1204 ;;		line 129 in file "SPItestSLAVE.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  data            1    wreg     unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  data            1   15[COMRAM] unsigned char 
  1209 ;;  temp            1   14[COMRAM] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		wreg
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;Total ram usage:        2 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    2
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text6
  1234  0019DC                     __ptext6:
  1235                           	opt stack 0
  1236  0019DC                     _SendSPI1:
  1237                           	opt stack 28
  1238                           
  1239                           ;incstack = 0
  1240                           ;SendSPI1@data stored from wreg
  1241  0019DC  6E10               	movwf	SendSPI1@data,c
  1242                           
  1243                           ;SPItestSLAVE.c: 131: SSP2BUF = data;
  1244  0019DE  C010  FF66         	movff	SendSPI1@data,3942	;volatile
  1245                           
  1246                           ;SPItestSLAVE.c: 132: unsigned char temp;
  1247                           ;SPItestSLAVE.c: 133: PIR3bits.SSP2IF = 0;
  1248  0019E2  9EA4               	bcf	4004,7,c	;volatile
  1249                           
  1250                           ;SPItestSLAVE.c: 134: temp = SSP2BUF;
  1251  0019E4  CF66 F00F          	movff	3942,SendSPI1@temp	;volatile
  1252                           
  1253                           ;SPItestSLAVE.c: 135: while (!PIR3bits.SSP2IF);
  1254  0019E8  D000               	goto	l138
  1255  0019EA                     l138:
  1256  0019EA  AEA4               	btfss	4004,7,c	;volatile
  1257  0019EC  D7FE               	goto	l138
  1258                           
  1259                           ;SPItestSLAVE.c: 136: SSP2CON1bits.SSPOV2 = 0;
  1260  0019EE  9C63               	bcf	3939,6,c	;volatile
  1261                           
  1262                           ;SPItestSLAVE.c: 137: PIR3bits.SSP2IF = 0;
  1263  0019F0  9EA4               	bcf	4004,7,c	;volatile
  1264  0019F2  0012               	return		;funcret
  1265  0019F4                     __end_of_SendSPI1:
  1266                           	opt stack 0
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           indf2	equ	0xFDF
  1273                           fsr2h	equ	0xFDA
  1274                           fsr2l	equ	0xFD9
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _SPIReassembleDouble *****************
  1278 ;; Defined at:
  1279 ;;		line 164 in file "SPItestSLAVE.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  dub             3   17[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  3   14[COMRAM] unsigned char 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1293 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;Total ram usage:        6 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text7
  1308  001836                     __ptext7:
  1309                           	opt stack 0
  1310  001836                     _SPIReassembleDouble:
  1311                           	opt stack 28
  1312                           
  1313                           ;SPItestSLAVE.c: 166: double dub;
  1314                           ;SPItestSLAVE.c: 167: DoublePtr = (unsigned char*) &dub;
  1315                           
  1316                           ;incstack = 0
  1317  001836  0E12               	movlw	low SPIReassembleDouble@dub
  1318  001838  6E49               	movwf	_DoublePtr,c
  1319  00183A  0E00               	movlw	high SPIReassembleDouble@dub
  1320  00183C  6E4A               	movwf	_DoublePtr+1,c
  1321                           
  1322                           ;SPItestSLAVE.c: 168: DoublePtr[0] = DoubleSPIS[0];
  1323  00183E  C049  FFD9         	movff	_DoublePtr,fsr2l
  1324  001842  C04A  FFDA         	movff	_DoublePtr+1,fsr2h
  1325  001846  C039  FFDF         	movff	_DoubleSPIS,indf2
  1326                           
  1327                           ;SPItestSLAVE.c: 169: DoublePtr[1] = DoubleSPIS[1];
  1328  00184A  EE20 F001          	lfsr	2,1
  1329  00184E  5049               	movf	_DoublePtr,w,c
  1330  001850  26D9               	addwf	fsr2l,f,c
  1331  001852  504A               	movf	_DoublePtr+1,w,c
  1332  001854  22DA               	addwfc	fsr2h,f,c
  1333  001856  C03A  FFDF         	movff	_DoubleSPIS+1,indf2
  1334                           
  1335                           ;SPItestSLAVE.c: 170: DoublePtr[2] = DoubleSPIS[2];
  1336  00185A  EE20 F002          	lfsr	2,2
  1337  00185E  5049               	movf	_DoublePtr,w,c
  1338  001860  26D9               	addwf	fsr2l,f,c
  1339  001862  504A               	movf	_DoublePtr+1,w,c
  1340  001864  22DA               	addwfc	fsr2h,f,c
  1341  001866  C03B  FFDF         	movff	_DoubleSPIS+2,indf2
  1342                           
  1343                           ;SPItestSLAVE.c: 172: return dub;
  1344  00186A  C012  F00F         	movff	SPIReassembleDouble@dub,?_SPIReassembleDouble
  1345  00186E  C013  F010         	movff	SPIReassembleDouble@dub+1,?_SPIReassembleDouble+1
  1346  001872  C014  F011         	movff	SPIReassembleDouble@dub+2,?_SPIReassembleDouble+2
  1347  001876  D000               	goto	l158
  1348  001878                     l158:
  1349  001878  0012               	return		;funcret
  1350  00187A                     __end_of_SPIReassembleDouble:
  1351                           	opt stack 0
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           intcon	equ	0xFF2
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           indf2	equ	0xFDF
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _SPIDisassembleDouble *****************
  1363 ;; Defined at:
  1364 ;;		line 147 in file "SPItestSLAVE.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  dub             3   16[COMRAM] unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1378 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;Total ram usage:        3 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    3
  1385 ;; This function calls:
  1386 ;;		_GenerateChecksum
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text8
  1393  0018FC                     __ptext8:
  1394                           	opt stack 0
  1395  0018FC                     _SPIDisassembleDouble:
  1396                           	opt stack 27
  1397                           
  1398                           ;SPItestSLAVE.c: 149: DoublePtr = (unsigned char*) &dub;
  1399                           
  1400                           ;incstack = 0
  1401  0018FC  0E11               	movlw	low SPIDisassembleDouble@dub
  1402  0018FE  6E49               	movwf	_DoublePtr,c
  1403  001900  0E00               	movlw	high SPIDisassembleDouble@dub
  1404  001902  6E4A               	movwf	_DoublePtr+1,c
  1405                           
  1406                           ;SPItestSLAVE.c: 150: DoubleSPIS[0] = DoublePtr[0];
  1407  001904  C049  FFD9         	movff	_DoublePtr,fsr2l
  1408  001908  C04A  FFDA         	movff	_DoublePtr+1,fsr2h
  1409  00190C  50DF               	movf	indf2,w,c
  1410  00190E  6E39               	movwf	_DoubleSPIS,c
  1411                           
  1412                           ;SPItestSLAVE.c: 151: DoubleSPIS[1] = DoublePtr[1];
  1413  001910  EE20 F001          	lfsr	2,1
  1414  001914  5049               	movf	_DoublePtr,w,c
  1415  001916  26D9               	addwf	fsr2l,f,c
  1416  001918  504A               	movf	_DoublePtr+1,w,c
  1417  00191A  22DA               	addwfc	fsr2h,f,c
  1418  00191C  50DF               	movf	indf2,w,c
  1419  00191E  6E3A               	movwf	_DoubleSPIS+1,c
  1420                           
  1421                           ;SPItestSLAVE.c: 152: DoubleSPIS[2] = DoublePtr[2];
  1422  001920  EE20 F002          	lfsr	2,2
  1423  001924  5049               	movf	_DoublePtr,w,c
  1424  001926  26D9               	addwf	fsr2l,f,c
  1425  001928  504A               	movf	_DoublePtr+1,w,c
  1426  00192A  22DA               	addwfc	fsr2h,f,c
  1427  00192C  50DF               	movf	indf2,w,c
  1428  00192E  6E3B               	movwf	_DoubleSPIS+2,c
  1429                           
  1430                           ;SPItestSLAVE.c: 153: DoubleSPIS[3] = GenerateChecksum();
  1431  001930  EC9C  F00C         	call	_GenerateChecksum	;wreg free
  1432  001934  6E3C               	movwf	_DoubleSPIS+3,c
  1433  001936  0012               	return		;funcret
  1434  001938                     __end_of_SPIDisassembleDouble:
  1435                           	opt stack 0
  1436                           prodh	equ	0xFF4
  1437                           prodl	equ	0xFF3
  1438                           intcon	equ	0xFF2
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           indf2	equ	0xFDF
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _GenerateChecksum *****************
  1447 ;; Defined at:
  1448 ;;		line 156 in file "SPItestSLAVE.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  y               1   15[COMRAM] unsigned char 
  1453 ;;  sum             1   14[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      unsigned char 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;Total ram usage:        2 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    2
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_SPIDisassembleDouble
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text9
  1478  001938                     __ptext9:
  1479                           	opt stack 0
  1480  001938                     _GenerateChecksum:
  1481                           	opt stack 27
  1482                           
  1483                           ;SPItestSLAVE.c: 158: unsigned char y, sum = 0;
  1484                           
  1485                           ;incstack = 0
  1486  001938  0E00               	movlw	0
  1487  00193A  6E0F               	movwf	GenerateChecksum@sum,c
  1488                           
  1489                           ;SPItestSLAVE.c: 159: for (y = 0; y != 3; y++)
  1490  00193C  0E00               	movlw	0
  1491  00193E  6E10               	movwf	GenerateChecksum@y,c
  1492  001940                     l978:
  1493  001940  0E03               	movlw	3
  1494  001942  1810               	xorwf	GenerateChecksum@y,w,c
  1495  001944  B4D8               	btfsc	status,2,c
  1496  001946  D00E               	goto	l988
  1497  001948  D001               	goto	l982
  1498  00194A  D00C               	goto	l988
  1499  00194C                     l982:
  1500                           
  1501                           ;SPItestSLAVE.c: 160: sum += DoubleSPIS[y];
  1502  00194C  5010               	movf	GenerateChecksum@y,w,c
  1503  00194E  0D01               	mullw	1
  1504  001950  0E39               	movlw	low _DoubleSPIS
  1505  001952  24F3               	addwf	prodl,w,c
  1506  001954  6ED9               	movwf	fsr2l,c
  1507  001956  0E00               	movlw	high _DoubleSPIS
  1508  001958  20F4               	addwfc	prodh,w,c
  1509  00195A  6EDA               	movwf	fsr2h,c
  1510  00195C  50DF               	movf	indf2,w,c
  1511  00195E  260F               	addwf	GenerateChecksum@sum,f,c
  1512  001960  2A10               	incf	GenerateChecksum@y,f,c
  1513  001962  D7EE               	goto	l978
  1514  001964                     l988:
  1515                           
  1516                           ;SPItestSLAVE.c: 161: return sum;
  1517  001964  500F               	movf	GenerateChecksum@sum,w,c
  1518  001966  D000               	goto	l155
  1519  001968                     l155:
  1520  001968  0012               	return		;funcret
  1521  00196A                     __end_of_GenerateChecksum:
  1522                           	opt stack 0
  1523                           prodh	equ	0xFF4
  1524                           prodl	equ	0xFF3
  1525                           intcon	equ	0xFF2
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           indf2	equ	0xFDF
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _ReceiveSPI1 *****************
  1534 ;; Defined at:
  1535 ;;		line 140 in file "SPItestSLAVE.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      unsigned char 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    2
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text10
  1564  001A18                     __ptext10:
  1565                           	opt stack 0
  1566  001A18                     _ReceiveSPI1:
  1567                           	opt stack 28
  1568                           
  1569                           ;SPItestSLAVE.c: 142: SSP2BUF = 0x00;
  1570                           
  1571                           ;incstack = 0
  1572  001A18  0E00               	movlw	0
  1573  001A1A  6E66               	movwf	3942,c	;volatile
  1574                           
  1575                           ;SPItestSLAVE.c: 143: while (SSP2STATbits.BF == 0);
  1576  001A1C  D000               	goto	l144
  1577  001A1E                     l144:
  1578  001A1E  A064               	btfss	3940,0,c	;volatile
  1579  001A20  D7FE               	goto	l144
  1580                           
  1581                           ;SPItestSLAVE.c: 144: return SSP2BUF;
  1582  001A22  5066               	movf	3942,w,c	;volatile
  1583  001A24  D000               	goto	l147
  1584  001A26                     l147:
  1585  001A26  0012               	return		;funcret
  1586  001A28                     __end_of_ReceiveSPI1:
  1587                           	opt stack 0
  1588                           prodh	equ	0xFF4
  1589                           prodl	equ	0xFF3
  1590                           intcon	equ	0xFF2
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           indf2	equ	0xFDF
  1594                           fsr2h	equ	0xFDA
  1595                           fsr2l	equ	0xFD9
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function _LCDbreakDouble *****************
  1599 ;; Defined at:
  1600 ;;		line 175 in file "SPItestSLAVE.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  dubs            3   52[COMRAM] unsigned char 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  temp2           2    4[BANK0 ] unsigned int 
  1605 ;;  temp1           2    2[BANK0 ] unsigned int 
  1606 ;;  tempDub         2    0[BANK0 ] unsigned int 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;		None               void
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        9 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    6
  1623 ;; This function calls:
  1624 ;;		___ftmul
  1625 ;;		___fttol
  1626 ;;		___lwdiv
  1627 ;;		___lwmod
  1628 ;;		_lcdChar
  1629 ;;		_lcdCommand
  1630 ;;		_lcdGoTo
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text11
  1637  001210                     __ptext11:
  1638                           	opt stack 0
  1639  001210                     _LCDbreakDouble:
  1640                           	opt stack 24
  1641                           
  1642                           ;SPItestSLAVE.c: 177: unsigned int temp1, temp2;
  1643                           ;SPItestSLAVE.c: 178: unsigned int tempDub;
  1644                           ;SPItestSLAVE.c: 180: lcdCommand(0x01);
  1645                           
  1646                           ;incstack = 0
  1647  001210  0E01               	movlw	1
  1648  001212  EC3D  F00C         	call	_lcdCommand
  1649                           
  1650                           ;SPItestSLAVE.c: 181: lcdGoTo(0x40);
  1651  001216  0E40               	movlw	64
  1652  001218  EC1C  F00D         	call	_lcdGoTo
  1653                           
  1654                           ;SPItestSLAVE.c: 182: tempDub = dubs * 100;
  1655  00121C  0E00               	movlw	0
  1656  00121E  6E1A               	movwf	___ftmul@f2,c
  1657  001220  0EC8               	movlw	200
  1658  001222  6E1B               	movwf	___ftmul@f2+1,c
  1659  001224  0E42               	movlw	66
  1660  001226  6E1C               	movwf	___ftmul@f2+2,c
  1661  001228  C035  F017         	movff	LCDbreakDouble@dubs,___ftmul@f1
  1662  00122C  C036  F018         	movff	LCDbreakDouble@dubs+1,___ftmul@f1+1
  1663  001230  C037  F019         	movff	LCDbreakDouble@dubs+2,___ftmul@f1+2
  1664  001234  ECC1  F009         	call	___ftmul	;wreg free
  1665  001238  C017  F026         	movff	?___ftmul,___fttol@f1
  1666  00123C  C018  F027         	movff	?___ftmul+1,___fttol@f1+1
  1667  001240  C019  F028         	movff	?___ftmul+2,___fttol@f1+2
  1668  001244  EC3D  F00A         	call	___fttol	;wreg free
  1669  001248  C026  F060         	movff	?___fttol,LCDbreakDouble@tempDub
  1670  00124C  C027  F061         	movff	?___fttol+1,LCDbreakDouble@tempDub+1
  1671                           
  1672                           ;SPItestSLAVE.c: 183: temp1 = tempDub / 10000;
  1673  001250  C060  F00F         	movff	LCDbreakDouble@tempDub,___lwdiv@dividend
  1674  001254  C061  F010         	movff	LCDbreakDouble@tempDub+1,___lwdiv@dividend+1
  1675  001258  0E27               	movlw	39
  1676  00125A  6E12               	movwf	___lwdiv@divisor+1,c
  1677  00125C  0E10               	movlw	16
  1678  00125E  6E11               	movwf	___lwdiv@divisor,c
  1679  001260  EC4C  F00B         	call	___lwdiv	;wreg free
  1680  001264  C00F  F062         	movff	?___lwdiv,LCDbreakDouble@temp1
  1681  001268  C010  F063         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1682                           
  1683                           ;SPItestSLAVE.c: 184: temp2 = tempDub % 10000;
  1684  00126C  C060  F00F         	movff	LCDbreakDouble@tempDub,___lwmod@dividend
  1685  001270  C061  F010         	movff	LCDbreakDouble@tempDub+1,___lwmod@dividend+1
  1686  001274  0E27               	movlw	39
  1687  001276  6E12               	movwf	___lwmod@divisor+1,c
  1688  001278  0E10               	movlw	16
  1689  00127A  6E11               	movwf	___lwmod@divisor,c
  1690  00127C  ECD0  F00B         	call	___lwmod	;wreg free
  1691  001280  C00F  F064         	movff	?___lwmod,LCDbreakDouble@temp2
  1692  001284  C010  F065         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1693                           
  1694                           ;SPItestSLAVE.c: 185: if (temp1 != 0)
  1695  001288  0100               	movlb	0	; () banked
  1696  00128A  5162               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1697  00128C  0100               	movlb	0	; () banked
  1698  00128E  1163               	iorwf	(LCDbreakDouble@temp1+1)& (0+255),w,b
  1699  001290  B4D8               	btfsc	status,2,c
  1700  001292  D005               	goto	l161
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;SPItestSLAVE.c: 186: lcdChar(temp1 + 0x30);
  1704  001294  0100               	movlb	0	; () banked
  1705  001296  5162               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1706  001298  0F30               	addlw	48
  1707  00129A  EC5F  F00C         	call	_lcdChar
  1708  00129E                     l161:
  1709                           
  1710                           ;SPItestSLAVE.c: 187: temp1 = temp2 / 1000;
  1711  00129E  C064  F00F         	movff	LCDbreakDouble@temp2,___lwdiv@dividend
  1712  0012A2  C065  F010         	movff	LCDbreakDouble@temp2+1,___lwdiv@dividend+1
  1713  0012A6  0E03               	movlw	3
  1714  0012A8  6E12               	movwf	___lwdiv@divisor+1,c
  1715  0012AA  0EE8               	movlw	232
  1716  0012AC  6E11               	movwf	___lwdiv@divisor,c
  1717  0012AE  EC4C  F00B         	call	___lwdiv	;wreg free
  1718  0012B2  C00F  F062         	movff	?___lwdiv,LCDbreakDouble@temp1
  1719  0012B6  C010  F063         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1720                           
  1721                           ;SPItestSLAVE.c: 188: temp2 = temp2 % 1000;
  1722  0012BA  C064  F00F         	movff	LCDbreakDouble@temp2,___lwmod@dividend
  1723  0012BE  C065  F010         	movff	LCDbreakDouble@temp2+1,___lwmod@dividend+1
  1724  0012C2  0E03               	movlw	3
  1725  0012C4  6E12               	movwf	___lwmod@divisor+1,c
  1726  0012C6  0EE8               	movlw	232
  1727  0012C8  6E11               	movwf	___lwmod@divisor,c
  1728  0012CA  ECD0  F00B         	call	___lwmod	;wreg free
  1729  0012CE  C00F  F064         	movff	?___lwmod,LCDbreakDouble@temp2
  1730  0012D2  C010  F065         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1731                           
  1732                           ;SPItestSLAVE.c: 189: if (temp1 != 0)
  1733  0012D6  0100               	movlb	0	; () banked
  1734  0012D8  5162               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1735  0012DA  0100               	movlb	0	; () banked
  1736  0012DC  1163               	iorwf	(LCDbreakDouble@temp1+1)& (0+255),w,b
  1737  0012DE  B4D8               	btfsc	status,2,c
  1738  0012E0  D005               	goto	l162
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;SPItestSLAVE.c: 190: lcdChar(temp1 + 0x30);
  1742  0012E2  0100               	movlb	0	; () banked
  1743  0012E4  5162               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1744  0012E6  0F30               	addlw	48
  1745  0012E8  EC5F  F00C         	call	_lcdChar
  1746  0012EC                     l162:
  1747                           
  1748                           ;SPItestSLAVE.c: 191: temp1 = temp2 / 100;
  1749  0012EC  C064  F00F         	movff	LCDbreakDouble@temp2,___lwdiv@dividend
  1750  0012F0  C065  F010         	movff	LCDbreakDouble@temp2+1,___lwdiv@dividend+1
  1751  0012F4  0E00               	movlw	0
  1752  0012F6  6E12               	movwf	___lwdiv@divisor+1,c
  1753  0012F8  0E64               	movlw	100
  1754  0012FA  6E11               	movwf	___lwdiv@divisor,c
  1755  0012FC  EC4C  F00B         	call	___lwdiv	;wreg free
  1756  001300  C00F  F062         	movff	?___lwdiv,LCDbreakDouble@temp1
  1757  001304  C010  F063         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1758                           
  1759                           ;SPItestSLAVE.c: 192: temp2 = temp2 % 100;
  1760  001308  C064  F00F         	movff	LCDbreakDouble@temp2,___lwmod@dividend
  1761  00130C  C065  F010         	movff	LCDbreakDouble@temp2+1,___lwmod@dividend+1
  1762  001310  0E00               	movlw	0
  1763  001312  6E12               	movwf	___lwmod@divisor+1,c
  1764  001314  0E64               	movlw	100
  1765  001316  6E11               	movwf	___lwmod@divisor,c
  1766  001318  ECD0  F00B         	call	___lwmod	;wreg free
  1767  00131C  C00F  F064         	movff	?___lwmod,LCDbreakDouble@temp2
  1768  001320  C010  F065         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1769                           
  1770                           ;SPItestSLAVE.c: 193: lcdChar(temp1 + 0x30);
  1771  001324  0100               	movlb	0	; () banked
  1772  001326  5162               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1773  001328  0F30               	addlw	48
  1774  00132A  EC5F  F00C         	call	_lcdChar
  1775                           
  1776                           ;SPItestSLAVE.c: 194: lcdChar('.');
  1777  00132E  0E2E               	movlw	46
  1778  001330  EC5F  F00C         	call	_lcdChar
  1779                           
  1780                           ;SPItestSLAVE.c: 195: temp1 = temp2 / 10;
  1781  001334  C064  F00F         	movff	LCDbreakDouble@temp2,___lwdiv@dividend
  1782  001338  C065  F010         	movff	LCDbreakDouble@temp2+1,___lwdiv@dividend+1
  1783  00133C  0E00               	movlw	0
  1784  00133E  6E12               	movwf	___lwdiv@divisor+1,c
  1785  001340  0E0A               	movlw	10
  1786  001342  6E11               	movwf	___lwdiv@divisor,c
  1787  001344  EC4C  F00B         	call	___lwdiv	;wreg free
  1788  001348  C00F  F062         	movff	?___lwdiv,LCDbreakDouble@temp1
  1789  00134C  C010  F063         	movff	?___lwdiv+1,LCDbreakDouble@temp1+1
  1790                           
  1791                           ;SPItestSLAVE.c: 196: temp2 = temp2 % 10;
  1792  001350  C064  F00F         	movff	LCDbreakDouble@temp2,___lwmod@dividend
  1793  001354  C065  F010         	movff	LCDbreakDouble@temp2+1,___lwmod@dividend+1
  1794  001358  0E00               	movlw	0
  1795  00135A  6E12               	movwf	___lwmod@divisor+1,c
  1796  00135C  0E0A               	movlw	10
  1797  00135E  6E11               	movwf	___lwmod@divisor,c
  1798  001360  ECD0  F00B         	call	___lwmod	;wreg free
  1799  001364  C00F  F064         	movff	?___lwmod,LCDbreakDouble@temp2
  1800  001368  C010  F065         	movff	?___lwmod+1,LCDbreakDouble@temp2+1
  1801                           
  1802                           ;SPItestSLAVE.c: 197: lcdChar(temp1 + 0x30);
  1803  00136C  0100               	movlb	0	; () banked
  1804  00136E  5162               	movf	LCDbreakDouble@temp1& (0+255),w,b
  1805  001370  0F30               	addlw	48
  1806  001372  EC5F  F00C         	call	_lcdChar
  1807                           
  1808                           ;SPItestSLAVE.c: 198: lcdChar(temp2 + 0x30);
  1809  001376  0100               	movlb	0	; () banked
  1810  001378  5164               	movf	LCDbreakDouble@temp2& (0+255),w,b
  1811  00137A  0F30               	addlw	48
  1812  00137C  EC5F  F00C         	call	_lcdChar
  1813  001380  0012               	return		;funcret
  1814  001382                     __end_of_LCDbreakDouble:
  1815                           	opt stack 0
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           intcon	equ	0xFF2
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           indf2	equ	0xFDF
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8
  1825                           
  1826 ;; *************** function _lcdGoTo *****************
  1827 ;; Defined at:
  1828 ;;		line 76 in file "LCD.h"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  pos             1    wreg     unsigned char 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  pos             1   19[COMRAM] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;		None               void
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;Total ram usage:        1 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    5
  1849 ;; This function calls:
  1850 ;;		_lcdCommand
  1851 ;; This function is called by:
  1852 ;;		_LCDbreakDouble
  1853 ;;		_lcdPrint
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text12
  1858  001A38                     __ptext12:
  1859                           	opt stack 0
  1860  001A38                     _lcdGoTo:
  1861                           	opt stack 24
  1862                           
  1863                           ;incstack = 0
  1864                           ;lcdGoTo@pos stored from wreg
  1865  001A38  6E14               	movwf	lcdGoTo@pos,c
  1866                           
  1867                           ;LCD.h: 79: lcdCommand(0x80+pos);
  1868  001A3A  5014               	movf	lcdGoTo@pos,w,c
  1869  001A3C  0F80               	addlw	128
  1870  001A3E  EC3D  F00C         	call	_lcdCommand
  1871  001A42  0012               	return		;funcret
  1872  001A44                     __end_of_lcdGoTo:
  1873                           	opt stack 0
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           intcon	equ	0xFF2
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           indf2	equ	0xFDF
  1880                           fsr2h	equ	0xFDA
  1881                           fsr2l	equ	0xFD9
  1882                           status	equ	0xFD8
  1883                           
  1884 ;; *************** function _lcdCommand *****************
  1885 ;; Defined at:
  1886 ;;		line 52 in file "LCD.h"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  command         1    wreg     unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  command         1   18[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;		None               void
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    4
  1907 ;; This function calls:
  1908 ;;		_Delay10TCYx
  1909 ;;		_setGPIO
  1910 ;; This function is called by:
  1911 ;;		_lcdGoTo
  1912 ;;		_lcdInit
  1913 ;;		_LCDbreakDouble
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text13
  1918  00187A                     __ptext13:
  1919                           	opt stack 0
  1920  00187A                     _lcdCommand:
  1921                           	opt stack 24
  1922                           
  1923                           ;incstack = 0
  1924                           ;lcdCommand@command stored from wreg
  1925  00187A  6E13               	movwf	lcdCommand@command,c
  1926                           
  1927                           ;LCD.h: 54: setGPIO(0x12,0x00);
  1928  00187C  0E00               	movlw	0
  1929  00187E  6E11               	movwf	setGPIO@value,c
  1930  001880  0E12               	movlw	18
  1931  001882  ECE1  F00C         	call	_setGPIO
  1932                           
  1933                           ;LCD.h: 55: Delay10TCYx(0);
  1934  001886  0E00               	movlw	0
  1935  001888  EC03  F00D         	call	_Delay10TCYx
  1936                           
  1937                           ;LCD.h: 56: setGPIO(0x13, command);
  1938  00188C  C013  F011         	movff	lcdCommand@command,setGPIO@value
  1939  001890  0E13               	movlw	19
  1940  001892  ECE1  F00C         	call	_setGPIO
  1941                           
  1942                           ;LCD.h: 57: Delay10TCYx(0);
  1943  001896  0E00               	movlw	0
  1944  001898  EC03  F00D         	call	_Delay10TCYx
  1945                           
  1946                           ;LCD.h: 58: setGPIO(0x12,0x40);
  1947  00189C  0E40               	movlw	64
  1948  00189E  6E11               	movwf	setGPIO@value,c
  1949  0018A0  0E12               	movlw	18
  1950  0018A2  ECE1  F00C         	call	_setGPIO
  1951                           
  1952                           ;LCD.h: 59: Delay10TCYx(0);
  1953  0018A6  0E00               	movlw	0
  1954  0018A8  EC03  F00D         	call	_Delay10TCYx
  1955                           
  1956                           ;LCD.h: 60: setGPIO(0x12,0x00);
  1957  0018AC  0E00               	movlw	0
  1958  0018AE  6E11               	movwf	setGPIO@value,c
  1959  0018B0  0E12               	movlw	18
  1960  0018B2  ECE1  F00C         	call	_setGPIO
  1961                           
  1962                           ;LCD.h: 61: Delay10TCYx(0);
  1963  0018B6  0E00               	movlw	0
  1964  0018B8  EC03  F00D         	call	_Delay10TCYx
  1965  0018BC  0012               	return		;funcret
  1966  0018BE                     __end_of_lcdCommand:
  1967                           	opt stack 0
  1968                           prodh	equ	0xFF4
  1969                           prodl	equ	0xFF3
  1970                           intcon	equ	0xFF2
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           indf2	equ	0xFDF
  1974                           fsr2h	equ	0xFDA
  1975                           fsr2l	equ	0xFD9
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _lcdChar *****************
  1979 ;; Defined at:
  1980 ;;		line 64 in file "LCD.h"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  letter          1    wreg     unsigned char 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  letter          1   18[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;		None               void
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;Total ram usage:        1 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    4
  2001 ;; This function calls:
  2002 ;;		_Delay10TCYx
  2003 ;;		_setGPIO
  2004 ;; This function is called by:
  2005 ;;		_LCDbreakDouble
  2006 ;;		_lcdWriteString
  2007 ;;		_lcdPrint
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text14
  2012  0018BE                     __ptext14:
  2013                           	opt stack 0
  2014  0018BE                     _lcdChar:
  2015                           	opt stack 25
  2016                           
  2017                           ;incstack = 0
  2018                           ;lcdChar@letter stored from wreg
  2019  0018BE  6E13               	movwf	lcdChar@letter,c
  2020                           
  2021                           ;LCD.h: 66: setGPIO(0x12,0x80);
  2022  0018C0  0E80               	movlw	128
  2023  0018C2  6E11               	movwf	setGPIO@value,c
  2024  0018C4  0E12               	movlw	18
  2025  0018C6  ECE1  F00C         	call	_setGPIO
  2026                           
  2027                           ;LCD.h: 67: Delay10TCYx(0);
  2028  0018CA  0E00               	movlw	0
  2029  0018CC  EC03  F00D         	call	_Delay10TCYx
  2030                           
  2031                           ;LCD.h: 68: setGPIO(0x13,letter);
  2032  0018D0  C013  F011         	movff	lcdChar@letter,setGPIO@value
  2033  0018D4  0E13               	movlw	19
  2034  0018D6  ECE1  F00C         	call	_setGPIO
  2035                           
  2036                           ;LCD.h: 70: setGPIO(0x12, 0xc0);
  2037  0018DA  0EC0               	movlw	192
  2038  0018DC  6E11               	movwf	setGPIO@value,c
  2039  0018DE  0E12               	movlw	18
  2040  0018E0  ECE1  F00C         	call	_setGPIO
  2041                           
  2042                           ;LCD.h: 71: Delay10TCYx(0);
  2043  0018E4  0E00               	movlw	0
  2044  0018E6  EC03  F00D         	call	_Delay10TCYx
  2045                           
  2046                           ;LCD.h: 72: setGPIO(0x12,0x00);
  2047  0018EA  0E00               	movlw	0
  2048  0018EC  6E11               	movwf	setGPIO@value,c
  2049  0018EE  0E12               	movlw	18
  2050  0018F0  ECE1  F00C         	call	_setGPIO
  2051                           
  2052                           ;LCD.h: 73: Delay10TCYx(0);
  2053  0018F4  0E00               	movlw	0
  2054  0018F6  EC03  F00D         	call	_Delay10TCYx
  2055  0018FA  0012               	return		;funcret
  2056  0018FC                     __end_of_lcdChar:
  2057                           	opt stack 0
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           intcon	equ	0xFF2
  2061                           postinc0	equ	0xFEE
  2062                           wreg	equ	0xFE8
  2063                           indf2	equ	0xFDF
  2064                           fsr2h	equ	0xFDA
  2065                           fsr2l	equ	0xFD9
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _setGPIO *****************
  2069 ;; Defined at:
  2070 ;;		line 32 in file "LCD.h"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  address         1    wreg     unsigned char 
  2073 ;;  value           1   16[COMRAM] unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  address         1   17[COMRAM] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        2 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    3
  2092 ;; This function calls:
  2093 ;;		_WriteSPI1
  2094 ;; This function is called by:
  2095 ;;		_lcdCommand
  2096 ;;		_lcdChar
  2097 ;;		_lcdInit
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text15
  2102  0019C2                     __ptext15:
  2103                           	opt stack 0
  2104  0019C2                     _setGPIO:
  2105                           	opt stack 25
  2106                           
  2107                           ;incstack = 0
  2108                           ;setGPIO@address stored from wreg
  2109  0019C2  6E12               	movwf	setGPIO@address,c
  2110                           
  2111                           ;LCD.h: 34: PORTAbits.RA2=0;
  2112  0019C4  9480               	bcf	3968,2,c	;volatile
  2113                           
  2114                           ;LCD.h: 37: WriteSPI1(0x40);
  2115  0019C6  0E40               	movlw	64
  2116  0019C8  ECB5  F00C         	call	_WriteSPI1
  2117                           
  2118                           ;LCD.h: 38: WriteSPI1(address);
  2119  0019CC  5012               	movf	setGPIO@address,w,c
  2120  0019CE  ECB5  F00C         	call	_WriteSPI1
  2121                           
  2122                           ;LCD.h: 39: WriteSPI1(value);
  2123  0019D2  5011               	movf	setGPIO@value,w,c
  2124  0019D4  ECB5  F00C         	call	_WriteSPI1
  2125                           
  2126                           ;LCD.h: 40: PORTAbits.RA2=1;
  2127  0019D8  8480               	bsf	3968,2,c	;volatile
  2128  0019DA  0012               	return		;funcret
  2129  0019DC                     __end_of_setGPIO:
  2130                           	opt stack 0
  2131                           prodh	equ	0xFF4
  2132                           prodl	equ	0xFF3
  2133                           intcon	equ	0xFF2
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           indf2	equ	0xFDF
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _WriteSPI1 *****************
  2142 ;; Defined at:
  2143 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  data_out        1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  data_out        1   15[COMRAM] unsigned char 
  2148 ;;  TempVar         1   14[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      char 
  2151 ;; Registers used:
  2152 ;;		wreg
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;Total ram usage:        2 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    2
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_setGPIO
  2169 ;;		_setIODIR
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text16
  2174  00196A                     __ptext16:
  2175                           	opt stack 0
  2176  00196A                     _WriteSPI1:
  2177                           	opt stack 25
  2178                           
  2179                           ;incstack = 0
  2180                           ;WriteSPI1@data_out stored from wreg
  2181  00196A  6E10               	movwf	WriteSPI1@data_out,c
  2182  00196C  CFC9 F00F          	movff	4041,WriteSPI1@TempVar	;volatile
  2183  001970  969E               	bcf	3998,3,c	;volatile
  2184  001972  9EC6               	bcf	4038,7,c	;volatile
  2185  001974  C010  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  2186  001978  BEC6               	btfsc	4038,7,c	;volatile
  2187  00197A  D007               	goto	l201
  2188  00197C  D002               	goto	l203
  2189                           
  2190                           ;	Return value of _WriteSPI1 is never used
  2191  00197E  D005               	goto	l201
  2192  001980  D000               	goto	l203
  2193  001982                     l203:
  2194  001982  B69E               	btfsc	3998,3,c	;volatile
  2195  001984  D002               	goto	l201
  2196  001986  D7FD               	goto	l203
  2197  001988  D000               	goto	l201
  2198  00198A                     l201:
  2199  00198A  0012               	return		;funcret
  2200  00198C                     __end_of_WriteSPI1:
  2201                           	opt stack 0
  2202                           prodh	equ	0xFF4
  2203                           prodl	equ	0xFF3
  2204                           intcon	equ	0xFF2
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           indf2	equ	0xFDF
  2208                           fsr2h	equ	0xFDA
  2209                           fsr2l	equ	0xFD9
  2210                           status	equ	0xFD8
  2211                           
  2212 ;; *************** function _Delay10TCYx *****************
  2213 ;; Defined at:
  2214 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  unit            1    wreg     unsigned char 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  unit            1   14[COMRAM] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;		None               void
  2221 ;; Registers used:
  2222 ;;		wreg
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;Total ram usage:        1 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    2
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_lcdCommand
  2239 ;;		_lcdChar
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text17
  2244  001A06                     __ptext17:
  2245                           	opt stack 0
  2246  001A06                     _Delay10TCYx:
  2247                           	opt stack 25
  2248                           
  2249                           ;incstack = 0
  2250                           ;Delay10TCYx@unit stored from wreg
  2251  001A06  6E0F               	movwf	Delay10TCYx@unit,c
  2252  001A08  0E03               	movlw	3
  2253  001A0A                     u1727:
  2254  001A0A  2EE8               	decfsz	wreg,f,c
  2255  001A0C  D7FE               	goto	u1727
  2256  001A0E  F000               	nop	
  2257  001A10  2E0F               	decfsz	Delay10TCYx@unit,f,c
  2258  001A12  D7FA               	goto	l1816
  2259  001A14  D000               	goto	l457
  2260  001A16                     l457:
  2261  001A16  0012               	return		;funcret
  2262  001A18                     __end_of_Delay10TCYx:
  2263                           	opt stack 0
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           intcon	equ	0xFF2
  2267                           postinc0	equ	0xFEE
  2268                           wreg	equ	0xFE8
  2269                           indf2	equ	0xFDF
  2270                           fsr2h	equ	0xFDA
  2271                           fsr2l	equ	0xFD9
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function ___lwmod *****************
  2275 ;; Defined at:
  2276 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  dividend        2   14[COMRAM] unsigned int 
  2279 ;;  divisor         2   16[COMRAM] unsigned int 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  counter         1   18[COMRAM] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2   14[COMRAM] unsigned int 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;Total ram usage:        5 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_LCDbreakDouble
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text18
  2306  0017A0                     __ptext18:
  2307                           	opt stack 0
  2308  0017A0                     ___lwmod:
  2309                           	opt stack 27
  2310                           
  2311                           ;incstack = 0
  2312  0017A0  5011               	movf	___lwmod@divisor,w,c
  2313  0017A2  1012               	iorwf	___lwmod@divisor+1,w,c
  2314  0017A4  B4D8               	btfsc	status,2,c
  2315  0017A6  D01D               	goto	l767
  2316  0017A8  0E01               	movlw	1
  2317  0017AA  6E13               	movwf	___lwmod@counter,c
  2318  0017AC  D005               	goto	l2032
  2319  0017AE                     l2030:
  2320  0017AE  90D8               	bcf	status,0,c
  2321  0017B0  3611               	rlcf	___lwmod@divisor,f,c
  2322  0017B2  3612               	rlcf	___lwmod@divisor+1,f,c
  2323  0017B4  2A13               	incf	___lwmod@counter,f,c
  2324  0017B6  D000               	goto	l2032
  2325  0017B8                     l2032:
  2326  0017B8  BE12               	btfsc	___lwmod@divisor+1,7,c
  2327  0017BA  D002               	goto	l2034
  2328  0017BC  D7F8               	goto	l2030
  2329  0017BE  D000               	goto	l2034
  2330  0017C0                     l2034:
  2331  0017C0  5011               	movf	___lwmod@divisor,w,c
  2332  0017C2  5C0F               	subwf	___lwmod@dividend,w,c
  2333  0017C4  5012               	movf	___lwmod@divisor+1,w,c
  2334  0017C6  5810               	subwfb	___lwmod@dividend+1,w,c
  2335  0017C8  A0D8               	btfss	status,0,c
  2336  0017CA  D005               	goto	l2038
  2337  0017CC  5011               	movf	___lwmod@divisor,w,c
  2338  0017CE  5E0F               	subwf	___lwmod@dividend,f,c
  2339  0017D0  5012               	movf	___lwmod@divisor+1,w,c
  2340  0017D2  5A10               	subwfb	___lwmod@dividend+1,f,c
  2341  0017D4  D000               	goto	l2038
  2342  0017D6                     l2038:
  2343  0017D6  90D8               	bcf	status,0,c
  2344  0017D8  3212               	rrcf	___lwmod@divisor+1,f,c
  2345  0017DA  3211               	rrcf	___lwmod@divisor,f,c
  2346  0017DC  2E13               	decfsz	___lwmod@counter,f,c
  2347  0017DE  D7F0               	goto	l2034
  2348  0017E0  D000               	goto	l767
  2349  0017E2                     l767:
  2350  0017E2  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2351  0017E6  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2352  0017EA  0012               	return		;funcret
  2353  0017EC                     __end_of___lwmod:
  2354                           	opt stack 0
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           intcon	equ	0xFF2
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           indf2	equ	0xFDF
  2361                           fsr2h	equ	0xFDA
  2362                           fsr2l	equ	0xFD9
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function ___lwdiv *****************
  2366 ;; Defined at:
  2367 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  dividend        2   14[COMRAM] unsigned int 
  2370 ;;  divisor         2   16[COMRAM] unsigned int 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  quotient        2   19[COMRAM] unsigned int 
  2373 ;;  counter         1   18[COMRAM] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  2   14[COMRAM] unsigned int 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;Total ram usage:        7 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    2
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_LCDbreakDouble
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text19
  2398  001698                     __ptext19:
  2399                           	opt stack 0
  2400  001698                     ___lwdiv:
  2401                           	opt stack 27
  2402                           
  2403                           ;incstack = 0
  2404  001698  0E00               	movlw	0
  2405  00169A  6E15               	movwf	___lwdiv@quotient+1,c
  2406  00169C  0E00               	movlw	0
  2407  00169E  6E14               	movwf	___lwdiv@quotient,c
  2408  0016A0  5011               	movf	___lwdiv@divisor,w,c
  2409  0016A2  1012               	iorwf	___lwdiv@divisor+1,w,c
  2410  0016A4  B4D8               	btfsc	status,2,c
  2411  0016A6  D021               	goto	l757
  2412  0016A8  0E01               	movlw	1
  2413  0016AA  6E13               	movwf	___lwdiv@counter,c
  2414  0016AC  D005               	goto	l2012
  2415  0016AE                     l2010:
  2416  0016AE  90D8               	bcf	status,0,c
  2417  0016B0  3611               	rlcf	___lwdiv@divisor,f,c
  2418  0016B2  3612               	rlcf	___lwdiv@divisor+1,f,c
  2419  0016B4  2A13               	incf	___lwdiv@counter,f,c
  2420  0016B6  D000               	goto	l2012
  2421  0016B8                     l2012:
  2422  0016B8  BE12               	btfsc	___lwdiv@divisor+1,7,c
  2423  0016BA  D002               	goto	l2014
  2424  0016BC  D7F8               	goto	l2010
  2425  0016BE  D000               	goto	l2014
  2426  0016C0                     l2014:
  2427  0016C0  90D8               	bcf	status,0,c
  2428  0016C2  3614               	rlcf	___lwdiv@quotient,f,c
  2429  0016C4  3615               	rlcf	___lwdiv@quotient+1,f,c
  2430  0016C6  5011               	movf	___lwdiv@divisor,w,c
  2431  0016C8  5C0F               	subwf	___lwdiv@dividend,w,c
  2432  0016CA  5012               	movf	___lwdiv@divisor+1,w,c
  2433  0016CC  5810               	subwfb	___lwdiv@dividend+1,w,c
  2434  0016CE  A0D8               	btfss	status,0,c
  2435  0016D0  D006               	goto	l2022
  2436  0016D2  5011               	movf	___lwdiv@divisor,w,c
  2437  0016D4  5E0F               	subwf	___lwdiv@dividend,f,c
  2438  0016D6  5012               	movf	___lwdiv@divisor+1,w,c
  2439  0016D8  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2440  0016DA  8014               	bsf	___lwdiv@quotient,0,c
  2441  0016DC  D000               	goto	l2022
  2442  0016DE                     l2022:
  2443  0016DE  90D8               	bcf	status,0,c
  2444  0016E0  3212               	rrcf	___lwdiv@divisor+1,f,c
  2445  0016E2  3211               	rrcf	___lwdiv@divisor,f,c
  2446  0016E4  2E13               	decfsz	___lwdiv@counter,f,c
  2447  0016E6  D7EC               	goto	l2014
  2448  0016E8  D000               	goto	l757
  2449  0016EA                     l757:
  2450  0016EA  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2451  0016EE  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2452  0016F2  0012               	return		;funcret
  2453  0016F4                     __end_of___lwdiv:
  2454                           	opt stack 0
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           intcon	equ	0xFF2
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           indf2	equ	0xFDF
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function ___fttol *****************
  2466 ;; Defined at:
  2467 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  f1              3   37[COMRAM] float 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  lval            4   47[COMRAM] unsigned long 
  2472 ;;  exp1            1   51[COMRAM] unsigned char 
  2473 ;;  sign1           1   46[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  4   37[COMRAM] long 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:       15 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    2
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_LCDbreakDouble
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text20
  2498  00147A                     __ptext20:
  2499                           	opt stack 0
  2500  00147A                     ___fttol:
  2501                           	opt stack 27
  2502                           
  2503                           ;incstack = 0
  2504  00147A  C028  F02A         	movff	___fttol@f1+2,??___fttol
  2505  00147E  6A2B               	clrf	(??___fttol+1)& (0+255),c
  2506  001480  6A2C               	clrf	(??___fttol+2)& (0+255),c
  2507  001482  3427               	rlcf	___fttol@f1+1,w,c
  2508  001484  362A               	rlcf	??___fttol& (0+255),f,c
  2509  001486  E301               	bnc	u1321
  2510  001488  802B               	bsf	(??___fttol+1)& (0+255),0,c
  2511  00148A                     u1321:
  2512  00148A  502A               	movf	??___fttol,w,c
  2513  00148C  6E34               	movwf	___fttol@exp1,c
  2514  00148E  5034               	movf	___fttol@exp1,w,c
  2515  001490  A4D8               	btfss	status,2,c
  2516  001492  D002               	goto	l1964
  2517  001494  D039               	goto	l1988
  2518  001496  D063               	goto	l655
  2519  001498                     l1964:
  2520  001498  0E17               	movlw	23
  2521  00149A  6E2A               	movwf	??___fttol& (0+255),c
  2522  00149C  C026  F02B         	movff	___fttol@f1,??___fttol+1
  2523  0014A0  C027  F02C         	movff	___fttol@f1+1,??___fttol+2
  2524  0014A4  C028  F02D         	movff	___fttol@f1+2,??___fttol+3
  2525  0014A8  282A               	incf	??___fttol,w,c
  2526  0014AA  6E2E               	movwf	(??___fttol+4)& (0+255),c
  2527  0014AC  D004               	goto	u1340
  2528  0014AE                     u1345:
  2529  0014AE  90D8               	bcf	status,0,c
  2530  0014B0  322D               	rrcf	??___fttol+3,f,c
  2531  0014B2  322C               	rrcf	??___fttol+2,f,c
  2532  0014B4  322B               	rrcf	??___fttol+1,f,c
  2533  0014B6                     u1340:
  2534  0014B6  2E2E               	decfsz	(??___fttol+4)& (0+255),f,c
  2535  0014B8  D7FA               	goto	u1345
  2536  0014BA  502B               	movf	??___fttol+1,w,c
  2537  0014BC  6E2F               	movwf	___fttol@sign1,c
  2538  0014BE  8E27               	bsf	___fttol@f1+1,7,c
  2539  0014C0  0EFF               	movlw	255
  2540  0014C2  1626               	andwf	___fttol@f1,f,c
  2541  0014C4  0EFF               	movlw	255
  2542  0014C6  1627               	andwf	___fttol@f1+1,f,c
  2543  0014C8  0E00               	movlw	0
  2544  0014CA  1628               	andwf	___fttol@f1+2,f,c
  2545  0014CC  5026               	movf	___fttol@f1,w,c
  2546  0014CE  6E30               	movwf	___fttol@lval,c
  2547  0014D0  5027               	movf	___fttol@f1+1,w,c
  2548  0014D2  6E31               	movwf	___fttol@lval+1,c
  2549  0014D4  5028               	movf	___fttol@f1+2,w,c
  2550  0014D6  6E32               	movwf	___fttol@lval+2,c
  2551  0014D8  6A33               	clrf	___fttol@lval+3,c
  2552  0014DA  0E8E               	movlw	142
  2553  0014DC  5E34               	subwf	___fttol@exp1,f,c
  2554  0014DE  AE34               	btfss	___fttol@exp1,7,c
  2555  0014E0  D010               	goto	l1986
  2556  0014E2  5034               	movf	___fttol@exp1,w,c
  2557  0014E4  0A80               	xorlw	128
  2558  0014E6  0F8F               	addlw	143
  2559  0014E8  B0D8               	btfsc	status,0,c
  2560  0014EA  D003               	goto	l1982
  2561  0014EC  D00D               	goto	l1988
  2562  0014EE  D037               	goto	l655
  2563  0014F0  D000               	goto	l1982
  2564  0014F2                     l1982:
  2565  0014F2  90D8               	bcf	status,0,c
  2566  0014F4  3233               	rrcf	___fttol@lval+3,f,c
  2567  0014F6  3232               	rrcf	___fttol@lval+2,f,c
  2568  0014F8  3231               	rrcf	___fttol@lval+1,f,c
  2569  0014FA  3230               	rrcf	___fttol@lval,f,c
  2570  0014FC  3E34               	incfsz	___fttol@exp1,f,c
  2571  0014FE  D7F9               	goto	l1982
  2572  001500  D019               	goto	l1996
  2573  001502                     l1986:
  2574  001502  0E17               	movlw	23
  2575  001504  6434               	cpfsgt	___fttol@exp1,c
  2576  001506  D011               	goto	l1994
  2577  001508                     l1988:
  2578  001508  0E00               	movlw	0
  2579  00150A  6E26               	movwf	?___fttol,c
  2580  00150C  0E00               	movlw	0
  2581  00150E  6E27               	movwf	?___fttol+1,c
  2582  001510  0E00               	movlw	0
  2583  001512  6E28               	movwf	?___fttol+2,c
  2584  001514  0E00               	movlw	0
  2585  001516  6E29               	movwf	?___fttol+3,c
  2586  001518  D022               	goto	l655
  2587  00151A  D007               	goto	l1994
  2588  00151C                     l1992:
  2589  00151C  90D8               	bcf	status,0,c
  2590  00151E  3630               	rlcf	___fttol@lval,f,c
  2591  001520  3631               	rlcf	___fttol@lval+1,f,c
  2592  001522  3632               	rlcf	___fttol@lval+2,f,c
  2593  001524  3633               	rlcf	___fttol@lval+3,f,c
  2594  001526  0634               	decf	___fttol@exp1,f,c
  2595  001528  D000               	goto	l1994
  2596  00152A                     l1994:
  2597  00152A  5034               	movf	___fttol@exp1,w,c
  2598  00152C  B4D8               	btfsc	status,2,c
  2599  00152E  D002               	goto	l1996
  2600  001530  D7F5               	goto	l1992
  2601  001532  D000               	goto	l1996
  2602  001534                     l1996:
  2603  001534  502F               	movf	___fttol@sign1,w,c
  2604  001536  B4D8               	btfsc	status,2,c
  2605  001538  D009               	goto	l2000
  2606  00153A  1E33               	comf	___fttol@lval+3,f,c
  2607  00153C  1E32               	comf	___fttol@lval+2,f,c
  2608  00153E  1E31               	comf	___fttol@lval+1,f,c
  2609  001540  6C30               	negf	___fttol@lval,c
  2610  001542  0E00               	movlw	0
  2611  001544  2231               	addwfc	___fttol@lval+1,f,c
  2612  001546  2232               	addwfc	___fttol@lval+2,f,c
  2613  001548  2233               	addwfc	___fttol@lval+3,f,c
  2614  00154A  D000               	goto	l2000
  2615  00154C                     l2000:
  2616  00154C  C030  F026         	movff	___fttol@lval,?___fttol
  2617  001550  C031  F027         	movff	___fttol@lval+1,?___fttol+1
  2618  001554  C032  F028         	movff	___fttol@lval+2,?___fttol+2
  2619  001558  C033  F029         	movff	___fttol@lval+3,?___fttol+3
  2620  00155C  D000               	goto	l655
  2621  00155E                     l655:
  2622  00155E  0012               	return		;funcret
  2623  001560                     __end_of___fttol:
  2624                           	opt stack 0
  2625                           prodh	equ	0xFF4
  2626                           prodl	equ	0xFF3
  2627                           intcon	equ	0xFF2
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           indf2	equ	0xFDF
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function ___ftmul *****************
  2636 ;; Defined at:
  2637 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  f1              3   22[COMRAM] float 
  2640 ;;  f2              3   25[COMRAM] float 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  f3_as_produc    3   32[COMRAM] unsigned um
  2643 ;;  sign            1   36[COMRAM] unsigned char 
  2644 ;;  cntr            1   35[COMRAM] unsigned char 
  2645 ;;  exp             1   31[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  3   22[COMRAM] float 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2655 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;Total ram usage:       15 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    3
  2662 ;; This function calls:
  2663 ;;		___ftpack
  2664 ;; This function is called by:
  2665 ;;		_LCDbreakDouble
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text21
  2670  001382                     __ptext21:
  2671                           	opt stack 0
  2672  001382                     ___ftmul:
  2673                           	opt stack 26
  2674                           
  2675                           ;incstack = 0
  2676  001382  C019  F01D         	movff	___ftmul@f1+2,??___ftmul
  2677  001386  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  2678  001388  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  2679  00138A  3418               	rlcf	___ftmul@f1+1,w,c
  2680  00138C  361D               	rlcf	??___ftmul& (0+255),f,c
  2681  00138E  E301               	bnc	u1261
  2682  001390  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  2683  001392                     u1261:
  2684  001392  501D               	movf	??___ftmul,w,c
  2685  001394  6E20               	movwf	___ftmul@exp,c
  2686  001396  5020               	movf	___ftmul@exp,w,c
  2687  001398  A4D8               	btfss	status,2,c
  2688  00139A  D002               	goto	l1916
  2689  00139C  D00E               	goto	l1918
  2690  00139E  D06C               	goto	l634
  2691  0013A0                     l1916:
  2692  0013A0  C01C  F01D         	movff	___ftmul@f2+2,??___ftmul
  2693  0013A4  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  2694  0013A6  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  2695  0013A8  341B               	rlcf	___ftmul@f2+1,w,c
  2696  0013AA  361D               	rlcf	??___ftmul& (0+255),f,c
  2697  0013AC  E301               	bnc	u1281
  2698  0013AE  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  2699  0013B0                     u1281:
  2700  0013B0  501D               	movf	??___ftmul,w,c
  2701  0013B2  6E25               	movwf	___ftmul@sign,c
  2702  0013B4  5025               	movf	___ftmul@sign,w,c
  2703  0013B6  A4D8               	btfss	status,2,c
  2704  0013B8  D007               	goto	l1922
  2705  0013BA                     l1918:
  2706  0013BA  0E00               	movlw	0
  2707  0013BC  6E17               	movwf	?___ftmul,c
  2708  0013BE  0E00               	movlw	0
  2709  0013C0  6E18               	movwf	?___ftmul+1,c
  2710  0013C2  0E00               	movlw	0
  2711  0013C4  6E19               	movwf	?___ftmul+2,c
  2712  0013C6  D058               	goto	l634
  2713  0013C8                     l1922:
  2714  0013C8  5025               	movf	___ftmul@sign,w,c
  2715  0013CA  0F7B               	addlw	123
  2716  0013CC  2620               	addwf	___ftmul@exp,f,c
  2717  0013CE  C019  F025         	movff	___ftmul@f1+2,___ftmul@sign
  2718  0013D2  501C               	movf	___ftmul@f2+2,w,c
  2719  0013D4  1A25               	xorwf	___ftmul@sign,f,c
  2720  0013D6  0E80               	movlw	128
  2721  0013D8  1625               	andwf	___ftmul@sign,f,c
  2722  0013DA  8E18               	bsf	___ftmul@f1+1,7,c
  2723  0013DC  8E1B               	bsf	___ftmul@f2+1,7,c
  2724  0013DE  0EFF               	movlw	255
  2725  0013E0  161A               	andwf	___ftmul@f2,f,c
  2726  0013E2  0EFF               	movlw	255
  2727  0013E4  161B               	andwf	___ftmul@f2+1,f,c
  2728  0013E6  0E00               	movlw	0
  2729  0013E8  161C               	andwf	___ftmul@f2+2,f,c
  2730  0013EA  0E00               	movlw	0
  2731  0013EC  6E21               	movwf	___ftmul@f3_as_product,c
  2732  0013EE  0E00               	movlw	0
  2733  0013F0  6E22               	movwf	___ftmul@f3_as_product+1,c
  2734  0013F2  0E00               	movlw	0
  2735  0013F4  6E23               	movwf	___ftmul@f3_as_product+2,c
  2736  0013F6  0E07               	movlw	7
  2737  0013F8  6E24               	movwf	___ftmul@cntr,c
  2738  0013FA  D000               	goto	l1936
  2739  0013FC                     l1936:
  2740  0013FC  A017               	btfss	___ftmul@f1,0,c
  2741  0013FE  D007               	goto	l1940
  2742  001400  501A               	movf	___ftmul@f2,w,c
  2743  001402  2621               	addwf	___ftmul@f3_as_product,f,c
  2744  001404  501B               	movf	___ftmul@f2+1,w,c
  2745  001406  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  2746  001408  501C               	movf	___ftmul@f2+2,w,c
  2747  00140A  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  2748  00140C  D000               	goto	l1940
  2749  00140E                     l1940:
  2750  00140E  90D8               	bcf	status,0,c
  2751  001410  3219               	rrcf	___ftmul@f1+2,f,c
  2752  001412  3218               	rrcf	___ftmul@f1+1,f,c
  2753  001414  3217               	rrcf	___ftmul@f1,f,c
  2754  001416  90D8               	bcf	status,0,c
  2755  001418  361A               	rlcf	___ftmul@f2,f,c
  2756  00141A  361B               	rlcf	___ftmul@f2+1,f,c
  2757  00141C  361C               	rlcf	___ftmul@f2+2,f,c
  2758  00141E  2E24               	decfsz	___ftmul@cntr,f,c
  2759  001420  D7ED               	goto	l1936
  2760  001422  D000               	goto	l1944
  2761  001424                     l1944:
  2762  001424  0E09               	movlw	9
  2763  001426  6E24               	movwf	___ftmul@cntr,c
  2764  001428  D000               	goto	l1946
  2765  00142A                     l1946:
  2766  00142A  A017               	btfss	___ftmul@f1,0,c
  2767  00142C  D007               	goto	l1950
  2768  00142E  501A               	movf	___ftmul@f2,w,c
  2769  001430  2621               	addwf	___ftmul@f3_as_product,f,c
  2770  001432  501B               	movf	___ftmul@f2+1,w,c
  2771  001434  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  2772  001436  501C               	movf	___ftmul@f2+2,w,c
  2773  001438  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  2774  00143A  D000               	goto	l1950
  2775  00143C                     l1950:
  2776  00143C  90D8               	bcf	status,0,c
  2777  00143E  3219               	rrcf	___ftmul@f1+2,f,c
  2778  001440  3218               	rrcf	___ftmul@f1+1,f,c
  2779  001442  3217               	rrcf	___ftmul@f1,f,c
  2780  001444  90D8               	bcf	status,0,c
  2781  001446  3223               	rrcf	___ftmul@f3_as_product+2,f,c
  2782  001448  3222               	rrcf	___ftmul@f3_as_product+1,f,c
  2783  00144A  3221               	rrcf	___ftmul@f3_as_product,f,c
  2784  00144C  2E24               	decfsz	___ftmul@cntr,f,c
  2785  00144E  D7ED               	goto	l1946
  2786  001450  D000               	goto	l1954
  2787  001452                     l1954:
  2788  001452  C021  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  2789  001456  C022  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2790  00145A  C023  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2791  00145E  C020  F012         	movff	___ftmul@exp,___ftpack@exp
  2792  001462  C025  F013         	movff	___ftmul@sign,___ftpack@sign
  2793  001466  ECB0  F00A         	call	___ftpack	;wreg free
  2794  00146A  C00F  F017         	movff	?___ftpack,?___ftmul
  2795  00146E  C010  F018         	movff	?___ftpack+1,?___ftmul+1
  2796  001472  C011  F019         	movff	?___ftpack+2,?___ftmul+2
  2797  001476  D000               	goto	l634
  2798  001478                     l634:
  2799  001478  0012               	return		;funcret
  2800  00147A                     __end_of___ftmul:
  2801                           	opt stack 0
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           intcon	equ	0xFF2
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           indf2	equ	0xFDF
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812 ;; *************** function ___ftpack *****************
  2813 ;; Defined at:
  2814 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  arg             3   14[COMRAM] unsigned um
  2817 ;;  exp             1   17[COMRAM] unsigned char 
  2818 ;;  sign            1   18[COMRAM] unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  3   14[COMRAM] float 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        8 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		___ftmul
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text22
  2845  001560                     __ptext22:
  2846                           	opt stack 0
  2847  001560                     ___ftpack:
  2848                           	opt stack 26
  2849                           
  2850                           ;incstack = 0
  2851  001560  5012               	movf	___ftpack@exp,w,c
  2852  001562  B4D8               	btfsc	status,2,c
  2853  001564  D005               	goto	l1846
  2854  001566  500F               	movf	___ftpack@arg,w,c
  2855  001568  1010               	iorwf	___ftpack@arg+1,w,c
  2856  00156A  1011               	iorwf	___ftpack@arg+2,w,c
  2857  00156C  A4D8               	btfss	status,2,c
  2858  00156E  D00E               	goto	l1852
  2859  001570                     l1846:
  2860  001570  0E00               	movlw	0
  2861  001572  6E0F               	movwf	?___ftpack,c
  2862  001574  0E00               	movlw	0
  2863  001576  6E10               	movwf	?___ftpack+1,c
  2864  001578  0E00               	movlw	0
  2865  00157A  6E11               	movwf	?___ftpack+2,c
  2866  00157C  D053               	goto	l547
  2867  00157E  D006               	goto	l1852
  2868  001580                     l1850:
  2869  001580  2A12               	incf	___ftpack@exp,f,c
  2870  001582  90D8               	bcf	status,0,c
  2871  001584  3211               	rrcf	___ftpack@arg+2,f,c
  2872  001586  3210               	rrcf	___ftpack@arg+1,f,c
  2873  001588  320F               	rrcf	___ftpack@arg,f,c
  2874  00158A  D000               	goto	l1852
  2875  00158C                     l1852:
  2876  00158C  0E00               	movlw	0
  2877  00158E  140F               	andwf	___ftpack@arg,w,c
  2878  001590  6E14               	movwf	??___ftpack& (0+255),c
  2879  001592  0E00               	movlw	0
  2880  001594  1410               	andwf	___ftpack@arg+1,w,c
  2881  001596  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2882  001598  0EFE               	movlw	254
  2883  00159A  1411               	andwf	___ftpack@arg+2,w,c
  2884  00159C  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2885  00159E  5014               	movf	??___ftpack,w,c
  2886  0015A0  1015               	iorwf	??___ftpack+1,w,c
  2887  0015A2  1016               	iorwf	??___ftpack+2,w,c
  2888  0015A4  B4D8               	btfsc	status,2,c
  2889  0015A6  D00E               	goto	l1858
  2890  0015A8  D7EB               	goto	l1850
  2891  0015AA  D00C               	goto	l1858
  2892  0015AC                     l1854:
  2893  0015AC  2A12               	incf	___ftpack@exp,f,c
  2894  0015AE  0E01               	movlw	1
  2895  0015B0  260F               	addwf	___ftpack@arg,f,c
  2896  0015B2  0E00               	movlw	0
  2897  0015B4  2210               	addwfc	___ftpack@arg+1,f,c
  2898  0015B6  0E00               	movlw	0
  2899  0015B8  2211               	addwfc	___ftpack@arg+2,f,c
  2900  0015BA  90D8               	bcf	status,0,c
  2901  0015BC  3211               	rrcf	___ftpack@arg+2,f,c
  2902  0015BE  3210               	rrcf	___ftpack@arg+1,f,c
  2903  0015C0  320F               	rrcf	___ftpack@arg,f,c
  2904  0015C2  D000               	goto	l1858
  2905  0015C4                     l1858:
  2906  0015C4  0E00               	movlw	0
  2907  0015C6  140F               	andwf	___ftpack@arg,w,c
  2908  0015C8  6E14               	movwf	??___ftpack& (0+255),c
  2909  0015CA  0E00               	movlw	0
  2910  0015CC  1410               	andwf	___ftpack@arg+1,w,c
  2911  0015CE  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2912  0015D0  0EFF               	movlw	255
  2913  0015D2  1411               	andwf	___ftpack@arg+2,w,c
  2914  0015D4  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2915  0015D6  5014               	movf	??___ftpack,w,c
  2916  0015D8  1015               	iorwf	??___ftpack+1,w,c
  2917  0015DA  1016               	iorwf	??___ftpack+2,w,c
  2918  0015DC  B4D8               	btfsc	status,2,c
  2919  0015DE  D008               	goto	l1862
  2920  0015E0  D7E5               	goto	l1854
  2921  0015E2  D006               	goto	l1862
  2922  0015E4                     l1860:
  2923  0015E4  0612               	decf	___ftpack@exp,f,c
  2924  0015E6  90D8               	bcf	status,0,c
  2925  0015E8  360F               	rlcf	___ftpack@arg,f,c
  2926  0015EA  3610               	rlcf	___ftpack@arg+1,f,c
  2927  0015EC  3611               	rlcf	___ftpack@arg+2,f,c
  2928  0015EE  D000               	goto	l1862
  2929  0015F0                     l1862:
  2930  0015F0  BE10               	btfsc	___ftpack@arg+1,7,c
  2931  0015F2  D004               	goto	l558
  2932  0015F4  0E02               	movlw	2
  2933  0015F6  6012               	cpfslt	___ftpack@exp,c
  2934  0015F8  D7F5               	goto	l1860
  2935  0015FA  D000               	goto	l558
  2936  0015FC                     l558:
  2937  0015FC  B012               	btfsc	___ftpack@exp,0,c
  2938  0015FE  D002               	goto	l1868
  2939  001600  9E10               	bcf	___ftpack@arg+1,7,c
  2940  001602  D000               	goto	l1868
  2941  001604                     l1868:
  2942  001604  90D8               	bcf	status,0,c
  2943  001606  3212               	rrcf	___ftpack@exp,f,c
  2944  001608  5012               	movf	___ftpack@exp,w,c
  2945  00160A  1211               	iorwf	___ftpack@arg+2,f,c
  2946  00160C  5013               	movf	___ftpack@sign,w,c
  2947  00160E  B4D8               	btfsc	status,2,c
  2948  001610  D002               	goto	l1874
  2949  001612  8E11               	bsf	___ftpack@arg+2,7,c
  2950  001614  D000               	goto	l1874
  2951  001616                     l1874:
  2952  001616  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  2953  00161A  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  2954  00161E  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  2955  001622  D000               	goto	l547
  2956  001624                     l547:
  2957  001624  0012               	return		;funcret
  2958  001626                     __end_of___ftpack:
  2959                           	opt stack 0
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           intcon	equ	0xFF2
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           indf2	equ	0xFDF
  2966                           fsr2h	equ	0xFDA
  2967                           fsr2l	equ	0xFD9
  2968                           status	equ	0xFD8
  2969                           
  2970 ;; *************** function _ISR *****************
  2971 ;; Defined at:
  2972 ;;		line 112 in file "SPItestSLAVE.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;		None               void
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:       14 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    1
  2993 ;; This function calls:
  2994 ;;		_SPIInt
  2995 ;; This function is called by:
  2996 ;;		Interrupt level 2
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	intcode
  3001  000008                     __pintcode:
  3002                           	opt stack 0
  3003  000008                     _ISR:
  3004                           	opt stack 24
  3005                           
  3006                           ;incstack = 0
  3007  000008  CFFA F001          	movff	pclath,??_ISR
  3008  00000C  CFFB F002          	movff	pclatu,??_ISR+1
  3009  000010  CFE9 F003          	movff	fsr0l,??_ISR+2
  3010  000014  ED13  F00B         	call	int_func,f	;refresh shadow registers
  3011                           pclatu	equ	0xFFB
  3012                           pclath	equ	0xFFA
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           fsr0l	equ	0xFE9
  3018                           wreg	equ	0xFE8
  3019                           indf2	equ	0xFDF
  3020                           fsr2h	equ	0xFDA
  3021                           fsr2l	equ	0xFD9
  3022                           status	equ	0xFD8
  3023                           
  3024                           	psect	intcode_body
  3025  001626                     __pintcode_body:
  3026                           	opt stack 24
  3027  001626                     int_func:
  3028                           	opt stack 24
  3029  001626  0006               	pop		; remove dummy address from shadow register refresh
  3030  001628  CFEA F004          	movff	fsr0h,??_ISR+3
  3031  00162C  CFE1 F005          	movff	fsr1l,??_ISR+4
  3032  001630  CFE2 F006          	movff	fsr1h,??_ISR+5
  3033  001634  CFD9 F007          	movff	fsr2l,??_ISR+6
  3034  001638  CFDA F008          	movff	fsr2h,??_ISR+7
  3035  00163C  CFF3 F009          	movff	prodl,??_ISR+8
  3036  001640  CFF4 F00A          	movff	prodh,??_ISR+9
  3037  001644  CFF6 F00B          	movff	tblptrl,??_ISR+10
  3038  001648  CFF7 F00C          	movff	tblptrh,??_ISR+11
  3039  00164C  CFF8 F00D          	movff	tblptru,??_ISR+12
  3040  001650  CFF5 F00E          	movff	tablat,??_ISR+13
  3041                           
  3042                           ;SPItestSLAVE.c: 114: if (PIR3bits.SSP2IF == 1)
  3043  001654  AEA4               	btfss	4004,7,c	;volatile
  3044  001656  D003               	goto	i2l132
  3045                           
  3046                           ;SPItestSLAVE.c: 115: {
  3047                           ;SPItestSLAVE.c: 116: SPIInt();
  3048  001658  EC14  F00D         	call	_SPIInt	;wreg free
  3049  00165C  D000               	goto	i2l132
  3050  00165E                     i2l132:
  3051  00165E  C00E  FFF5         	movff	??_ISR+13,tablat
  3052  001662  C00D  FFF8         	movff	??_ISR+12,tblptru
  3053  001666  C00C  FFF7         	movff	??_ISR+11,tblptrh
  3054  00166A  C00B  FFF6         	movff	??_ISR+10,tblptrl
  3055  00166E  C00A  FFF4         	movff	??_ISR+9,prodh
  3056  001672  C009  FFF3         	movff	??_ISR+8,prodl
  3057  001676  C008  FFDA         	movff	??_ISR+7,fsr2h
  3058  00167A  C007  FFD9         	movff	??_ISR+6,fsr2l
  3059  00167E  C006  FFE2         	movff	??_ISR+5,fsr1h
  3060  001682  C005  FFE1         	movff	??_ISR+4,fsr1l
  3061  001686  C004  FFEA         	movff	??_ISR+3,fsr0h
  3062  00168A  C003  FFE9         	movff	??_ISR+2,fsr0l
  3063  00168E  C002  FFFB         	movff	??_ISR+1,pclatu
  3064  001692  C001  FFFA         	movff	??_ISR,pclath
  3065  001696  0011               	retfie		f
  3066  001698                     __end_of_ISR:
  3067                           	opt stack 0
  3068                           pclatu	equ	0xFFB
  3069                           pclath	equ	0xFFA
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           intcon	equ	0xFF2
  3077                           postinc0	equ	0xFEE
  3078                           fsr0h	equ	0xFEA
  3079                           fsr0l	equ	0xFE9
  3080                           wreg	equ	0xFE8
  3081                           fsr1h	equ	0xFE2
  3082                           fsr1l	equ	0xFE1
  3083                           indf2	equ	0xFDF
  3084                           fsr2h	equ	0xFDA
  3085                           fsr2l	equ	0xFD9
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _SPIInt *****************
  3089 ;; Defined at:
  3090 ;;		line 120 in file "SPItestSLAVE.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_ISR
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text24
  3118  001A28                     __ptext24:
  3119                           	opt stack 0
  3120  001A28                     _SPIInt:
  3121                           	opt stack 24
  3122                           
  3123                           ;SPItestSLAVE.c: 122: Command = SSP2BUF;
  3124                           
  3125                           ;incstack = 0
  3126  001A28  CF66 F04B          	movff	3942,_Command	;volatile
  3127                           
  3128                           ;SPItestSLAVE.c: 123: PORTCbits.RC6 = 0;
  3129  001A2C  9C82               	bcf	3970,6,c	;volatile
  3130                           
  3131                           ;SPItestSLAVE.c: 124: PIR3bits.SSP2IF = 0;
  3132  001A2E  9EA4               	bcf	4004,7,c	;volatile
  3133                           
  3134                           ;SPItestSLAVE.c: 125: PIE3bits.SSP2IE = 0;
  3135  001A30  9EA3               	bcf	4003,7,c	;volatile
  3136                           
  3137                           ;SPItestSLAVE.c: 126: SPIflag = 1;
  3138  001A32  0E01               	movlw	1
  3139  001A34  6E4C               	movwf	_SPIflag,c
  3140  001A36  0012               	return		;funcret
  3141  001A38                     __end_of_SPIInt:
  3142                           	opt stack 0
  3143                           pclatu	equ	0xFFB
  3144                           pclath	equ	0xFFA
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           intcon	equ	0xFF2
  3152                           postinc0	equ	0xFEE
  3153                           fsr0h	equ	0xFEA
  3154                           fsr0l	equ	0xFE9
  3155                           wreg	equ	0xFE8
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           indf2	equ	0xFDF
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           pclatu	equ	0xFFB
  3163                           pclath	equ	0xFFA
  3164                           tblptru	equ	0xFF8
  3165                           tblptrh	equ	0xFF7
  3166                           tblptrl	equ	0xFF6
  3167                           tablat	equ	0xFF5
  3168                           prodh	equ	0xFF4
  3169                           prodl	equ	0xFF3
  3170                           intcon	equ	0xFF2
  3171                           postinc0	equ	0xFEE
  3172                           fsr0h	equ	0xFEA
  3173                           fsr0l	equ	0xFE9
  3174                           wreg	equ	0xFE8
  3175                           fsr1h	equ	0xFE2
  3176                           fsr1l	equ	0xFE1
  3177                           indf2	equ	0xFDF
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182                           	psect	rparam
  3183  0000                     pclatu	equ	0xFFB
  3184                           pclath	equ	0xFFA
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           prodh	equ	0xFF4
  3190                           prodl	equ	0xFF3
  3191                           intcon	equ	0xFF2
  3192                           postinc0	equ	0xFEE
  3193                           fsr0h	equ	0xFEA
  3194                           fsr0l	equ	0xFE9
  3195                           wreg	equ	0xFE8
  3196                           fsr1h	equ	0xFE2
  3197                           fsr1l	equ	0xFE1
  3198                           indf2	equ	0xFDF
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      78
    BANK0           160      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DoublePtr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), SPIReassembleDouble@dub(COMRAM[3]), SPIDisassembleDouble@dub(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_LCDbreakDouble
    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _SPIDisassembleDouble->_GenerateChecksum
    _LCDbreakDouble->___fttol
    _lcdGoTo->_lcdCommand
    _lcdCommand->_setGPIO
    _lcdChar->_setGPIO
    _setGPIO->_WriteSPI1
    ___fttol->___ftmul
    ___ftmul->___ftpack

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCDbreakDouble

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10007
                                             55 COMRAM     1     1      0
                     _LCDbreakDouble
                        _ReceiveSPI1
               _SPIDisassembleDouble
                _SPIReassembleDouble
                           _SendSPI1
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    1996
                           _OpenSPI2
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1802
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     215
                                             16 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     194
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _OpenSPI2                                             3     1      2     194
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SendSPI1                                             2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPIReassembleDouble                                  6     3      3      53
                                             14 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _SPIDisassembleDouble                                 3     0      3     409
                                             16 COMRAM     3     0      3
                   _GenerateChecksum
 ---------------------------------------------------------------------------------
 (2) _GenerateChecksum                                     2     2      0      60
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReceiveSPI1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDbreakDouble                                       9     6      3    7528
                                             52 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                            _lcdChar
                         _lcdCommand
                            _lcdGoTo
 ---------------------------------------------------------------------------------
 (2) _lcdGoTo                                              1     1      0     754
                                             19 COMRAM     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     723
                                             18 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0     723
                                             18 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     670
                                             16 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      23
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     752
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     761
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     436
                                             37 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2596
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1888
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
                             _SPIInt
 ---------------------------------------------------------------------------------
 (7) _SPIInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDbreakDouble
     ___ftmul
       ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lwdiv
     ___lwmod
     _lcdChar
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
     _lcdCommand
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
     _lcdGoTo
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
   _ReceiveSPI1
   _SPIDisassembleDouble
     _GenerateChecksum
   _SPIReassembleDouble
   _SendSPI1
   _initialize
     _OpenSPI2
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1

 _ISR (ROOT)
   _SPIInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6       6       5        3.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      4E       1       82.1%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54       6        0.0%
DATA                 0      0      54       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Sep 14 03:43:58 2015

                            _x 004E                             _Kd 003D                             _Ki 0040  
                           _Kp 0043             LCDbreakDouble@dubs 0035                            l201 198A  
                          l113 112C                            l203 1982                            l221 1762  
                          l109 1108                            l222 1764                            l144 1A1E  
                          l161 129E                            l225 177E                            l162 12EC  
                          l138 19EA                            l226 1798                            l147 1A26  
                          l155 1968                            l227 1780                            l219 175E  
                          l228 1784                            l181 170C                            l158 1878  
                          l182 170E                            l185 1728                            l186 1742  
                          l187 172A                            l179 1708                            l188 172E  
                          l457 1A16                            l634 1478                            l547 1624  
                          l558 15FC                            l655 155E                            l757 16EA  
                          l767 17E2                            l982 194C                            l978 1940  
                          l988 1964                            _ISR 0008              lcdCommand@command 0013  
                          prod 000FF3                            wreg 000FE8            LCDbreakDouble@temp1 0062  
          LCDbreakDouble@temp2 0064                           ?_ISR 0001                   __CFG_WDT$OFF 000000  
                         l2000 154C                           l2010 16AE                           l2012 16B8  
                         l2022 16DE                           l2014 16C0                           l2030 17AE  
                         l2032 17B8                           l2034 17C0                           l2210 11FE  
                         l2204 11D4                           l2140 1092                           l2132 105E  
                         l2038 17D6                           l2214 1208                           l2118 102C  
                         l2160 10EA                           l2144 10AC                           l2152 10E0  
                         l2136 1078                           l2180 113E                           l2164 1102  
                         l2148 10C6                           l1382 1732                           l2166 110E  
                         l1464 1768                           l2192 1180                           l2176 1132  
                         l1378 1712                           l2186 1158                           l1468 1788  
                         l2198 11AA                           l1816 1A08                           l1850 1580  
                         l1922 13C8                           l1860 15E4                           l1852 158C  
                         l1940 140E                           l1916 13A0                           l1862 15F0  
                         l1854 15AC                           l1846 1570                           l1950 143C  
                         l1918 13BA                           l1944 1424                           l1936 13FC  
                         l1874 1616                           l1858 15C4                           l1954 1452  
                         l1946 142A                           l1868 1604                           l1964 1498  
                         l1982 14F2                           l1992 151C                           l1994 152A  
                         l1986 1502                           l1988 1508                           l1996 1534  
                         STR_1 1008                           STR_2 1001                           u1321 148A  
                         u1340 14B6                           u1261 1392                           u1281 13B0  
                         u1345 14AE                           u1727 1A0A                           _main 1010  
                 ___ftpack@arg 000F                   ___ftpack@exp 0012                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0018                   ___ftmul@cntr 0024                   ___param_bank 000010  
                 ___ftmul@sign 0025                          ??_ISR 0001                    _Delay10TCYx 1A06  
                 ___fttol@exp1 0034                   ___fttol@lval 0030                          ?_main 0001  
              __end_of___ftmul 147A                __end_of___fttol 1560                __end_of___lwdiv 16F4  
              __end_of___lwmod 17EC                          i2l132 165E         ??_SPIDisassembleDouble 0014  
              __end_of_lcdChar 18FC                __end_of_lcdGoTo 1A44                __end_of_lcdInit 1836  
               __CFG_FCMEN$OFF 000000                __end_of_setGPIO 19DC                  ___ftpack@sign 0013  
                   _DoubleSPIS 0039                  ??_ReceiveSPI1 000F                          tablat 000FF5  
                        status 000FD8            GenerateChecksum@sum 000F        __size_of_LCDbreakDouble 0172  
              __initialization 19F4                   __end_of_main 1210          LCDbreakDouble@tempDub 0060  
               __CFG_OSC$HSPLL 000000               __end_of_SendSPI1 19F4               __end_of_OpenSPI1 174A  
             __end_of_OpenSPI2 17A0                         ??_main 0038                  ___fttol@sign1 002F  
                __activetblptr 000003               __end_of___ftpack 1626                         _SPIInt 1A28  
          __end_of_ReceiveSPI1 1A28               OpenSPI1@bus_mode 000F                      ??___ftmul 001D  
                    ??___fttol 002A               OpenSPI2@bus_mode 000F                      ??___lwdiv 0013  
                    ??___lwmod 0013               __end_of_setIODIR 19C2                         clear_0 19FA  
                  setIODIR@dir 0011                      ??_lcdChar 0013                      ??_lcdGoTo 0014  
                    ??_lcdInit 0014          ___ftmul@f3_as_product 0021                  main@temporary 0038  
                    ??_setGPIO 0012                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8              ?_GenerateChecksum 0001  
                   __accesstop 0060        __end_of__initialization 1A00             ??_GenerateChecksum 000F  
           __size_of_WriteSPI1 0022                  ___rparam_used 000001                     ___ftmul@f1 0017  
                   ___ftmul@f2 001A                     ___fttol@f1 0026                 __pcstackCOMRAM 0001  
            GenerateChecksum@y 0010   __size_of_SPIReassembleDouble 0044                    _ReceiveSPI1 1A18  
             WriteSPI1@TempVar 000F                        ?_SPIInt 0001                      ?_SendSPI1 0001  
               _LCDbreakDouble 1210                      ?_OpenSPI1 000F                      ?_OpenSPI2 000F  
                 ?_Delay10TCYx 0001                     _lcdCommand 187A                      ?___ftpack 000F  
            __end_of_WriteSPI1 198C                        _SSP1BUF 000FC9                        _SSP2BUF 000F66  
                      _SPIflag 004C         __end_of_LCDbreakDouble 1382                      ?_setIODIR 0011  
                      _Command 004B                __size_of_SPIInt 0010                     ??_SendSPI1 000F  
                   ??_OpenSPI1 0011                     ??_OpenSPI2 0011                        __Hparam 0000  
                      __Lparam 0000                        ___ftmul 1382                        ___fttol 147A  
                      ___lwdiv 1698                        ___lwmod 17A0                   __psmallconst 1000  
                   _dummy_byte 004D                   SendSPI1@data 0010                        __pcinit 19F4  
                   ??___ftpack 0014                Delay10TCYx@unit 000F                        _lcdChar 18BE  
                      __ramtop 1000                     _initialize 198C                        _lcdGoTo 1A38  
                 SendSPI1@temp 000F                        _lcdInit 17EC                        __ptext0 1010  
                      __ptext1 198C                        __ptext2 17EC                        __ptext3 19A8  
                      __ptext4 16F4                        __ptext5 174A                        __ptext6 19DC  
                      __ptext7 1836                        __ptext8 18FC                        __ptext9 1938  
                 __size_of_ISR 1690                        _setGPIO 19C2  __size_of_SPIDisassembleDouble 003C  
              setIODIR@address 0012                   setGPIO@value 0011                 __pintcode_body 1626  
         end_of_initialization 1A00                ?_LCDbreakDouble 0035                     ??_setIODIR 0012  
                      int_func 1626              OpenSPI1@smp_phase 0010                     lcdGoTo@pos 0014  
            OpenSPI2@smp_phase 0010                    ?_lcdCommand 0001                        postinc0 000FEE  
            OpenSPI1@sync_mode 0011                      _PORTAbits 000F80                      _PORTCbits 000F82  
            OpenSPI2@sync_mode 0011                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISDbits 000F95                      _TRISFbits 000F97            _SPIReassembleDouble 1836  
               __end_of_SPIInt 1A38                    ___ftmul@exp 0020      __size_of_GenerateChecksum 0032  
         __size_of_Delay10TCYx 0012                    ?_initialize 0001           ?_SPIReassembleDouble 000F  
                    _DoublePtr 0049                  lcdChar@letter 0013            start_initialization 19F4  
                  __end_of_ISR 1698            __size_of_lcdCommand 0044                   ?_ReceiveSPI1 0001  
                     ??_SPIInt 0001              __size_of_SendSPI1 0018              __size_of_OpenSPI1 0056  
            __size_of_OpenSPI2 0056          ??_SPIReassembleDouble 0012              __size_of___ftpack 00C6  
                  __pbssCOMRAM 0039                  __pcstackBANK0 0060                      _WriteSPI1 196A  
          __size_of_initialize 001C              WriteSPI1@data_out 0010         SPIReassembleDouble@dub 0012  
            __size_of_setIODIR 001A               ___lwdiv@dividend 000F                      __pintcode 0008  
                     ?___ftmul 0017                       ?___fttol 0026                       ?___lwdiv 000F  
                     ?___lwmod 000F                       ?_lcdChar 0001                       ?_lcdGoTo 0001  
                     ?_lcdInit 0001                    __smallconst 1000                       ?_setGPIO 0011  
                   ?_WriteSPI1 0001               ??_LCDbreakDouble 0038               ___lwdiv@quotient 0014  
                     _PIE3bits 000FA3   __end_of_SPIDisassembleDouble 1938                       _PIR1bits 000F9E  
                     _PIR3bits 000FA4                 setGPIO@address 0012                   ??_lcdCommand 0013  
                     _SSP1CON1 000FC6                       _SSP2CON1 000F63               _GenerateChecksum 1938  
                     _SSP1STAT 000FC7                       _SSP2STAT 000F64             __end_of_lcdCommand 18BE  
         __size_of_ReceiveSPI1 0010                       _SendSPI1 19DC                       _SetAngle 0046  
                     _OpenSPI1 16F4                       _OpenSPI2 174A                       __Hrparam 0000  
                     __Lrparam 0000               __size_of___ftmul 00F8               __size_of___fttol 00E6  
             __size_of___lwdiv 005C               __size_of___lwmod 004C                   ??_initialize 0014  
                     ___ftpack 1560               __size_of_lcdChar 003E               __size_of_lcdGoTo 000C  
             __size_of_lcdInit 004A               __size_of_setGPIO 001A                    ??_WriteSPI1 000F  
              ___lwdiv@divisor 0011                ___lwdiv@counter 0013                       __ptext10 1A18  
                     __ptext11 1210                       __ptext20 147A                       __ptext12 1A38  
                     __ptext21 1382                       __ptext13 187A                       __ptext22 1560  
                     __ptext14 18BE                       __ptext15 19C2                       __ptext24 1A28  
                     __ptext16 196A                       __ptext17 1A06                       __ptext18 17A0  
                     __ptext19 1698                   _SSP1CON1bits 000FC6                   _SSP2CON1bits 000F63  
                     _setIODIR 19A8                  __size_of_main 0200             __end_of_initialize 19A8  
                ??_Delay10TCYx 000F                   _SSP1STATbits 000FC7                   _SSP2STATbits 000F64  
                   _INTCONbits 000FF2           _SPIDisassembleDouble 18FC                       intlevel2 0000  
             ___lwmod@dividend 000F    __end_of_SPIReassembleDouble 187A            __end_of_Delay10TCYx 1A18  
              ___lwmod@divisor 0011                ___lwmod@counter 0013          ?_SPIDisassembleDouble 0011  
     __end_of_GenerateChecksum 196A        SPIDisassembleDouble@dub 0011  
