

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 29 02:22:56 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     _BAUDCON	set	3966
    34  0000                     _PORTCbits	set	3970
    35  0000                     _TRISCbits	set	3988
    36  0000                     _TRISDbits	set	3989
    37  0000                     _TRISFbits	set	3991
    38  0000                     _IPR1bits	set	3999
    39  0000                     _PIE1bits	set	3997
    40  0000                     _PIR1bits	set	3998
    41  0000                     _RCONbits	set	4048
    42  0000                     _RCREG1	set	4014
    43  0000                     _RCSTA1	set	4011
    44  0000                     _SPBRG	set	4015
    45  0000                     _SSP1BUF	set	4041
    46  0000                     _SSP1CON1	set	4038
    47  0000                     _SSP1CON1bits	set	4038
    48  0000                     _SSP1STAT	set	4039
    49  0000                     _SSP1STATbits	set	4039
    50  0000                     _TXREG1	set	4013
    51  0000                     _TXSTA1	set	4012
    52  0000                     _INTCONbits	set	4082
    53                           
    54                           	psect	smallconst
    55  001000                     __psmallconst:
    56                           	opt stack 0
    57  001000  00                 	db	0
    58  001001                     STR_1:
    59  001001  57                 	db	87	;'W'
    60  001002  65                 	db	101	;'e'
    61  001003  6C                 	db	108	;'l'
    62  001004  63                 	db	99	;'c'
    63  001005  6F                 	db	111	;'o'
    64  001006  6D                 	db	109	;'m'
    65  001007  65                 	db	101	;'e'
    66  001008  20                 	db	32
    67  001009  74                 	db	116	;'t'
    68  00100A  6F                 	db	111	;'o'
    69  00100B  20                 	db	32
    70  00100C  74                 	db	116	;'t'
    71  00100D  68                 	db	104	;'h'
    72  00100E  65                 	db	101	;'e'
    73  00100F  20                 	db	32
    74  001010  77                 	db	119	;'w'
    75  001011  6F                 	db	111	;'o'
    76  001012  72                 	db	114	;'r'
    77  001013  6C                 	db	108	;'l'
    78  001014  64                 	db	100	;'d'
    79  001015  20                 	db	32
    80  001016  6F                 	db	111	;'o'
    81  001017  66                 	db	102	;'f'
    82  001018  20                 	db	32
    83  001019  74                 	db	116	;'t'
    84  00101A  6F                 	db	111	;'o'
    85  00101B  6D                 	db	109	;'m'
    86  00101C  6F                 	db	111	;'o'
    87  00101D  72                 	db	114	;'r'
    88  00101E  72                 	db	114	;'r'
    89  00101F  6F                 	db	111	;'o'
    90  001020  77                 	db	119	;'w'
    91  001021  21                 	db	33
    92  001022  21                 	db	33
    93  001023  21                 	db	33
    94  001024  00                 	db	0
    95                           
    96                           ; #config settings
    97  001025  00                 	db	0	; dummy byte at the end
    98  0000                     
    99                           	psect	cinit
   100  001900                     __pcinit:
   101                           	opt stack 0
   102  001900                     start_initialization:
   103                           	opt stack 0
   104  001900                     __initialization:
   105                           	opt stack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (28 bytes)
   108  001900  EE00  F035         	lfsr	0,__pbssCOMRAM
   109  001904  0E1C               	movlw	28
   110  001906                     clear_0:
   111  001906  6AEE               	clrf	postinc0,c
   112  001908  06E8               	decf	wreg,f,c
   113  00190A  E1FD               	bnz	clear_0
   114  00190C                     end_of_initialization:
   115                           	opt stack 0
   116  00190C                     __end_of__initialization:
   117                           	opt stack 0
   118  00190C  0100               	movlb	0
   119  00190E  EF13  F008         	goto	_main	;jump to C main() function
   120                           postinc0	equ	0xFEE
   121                           wreg	equ	0xFE8
   122                           
   123                           	psect	bssCOMRAM
   124  000035                     __pbssCOMRAM:
   125                           	opt stack 0
   126  000035                     _DoubleSPIS:
   127                           	opt stack 0
   128  000035                     	ds	4
   129  000039                     _CurrentAngle:
   130                           	opt stack 0
   131  000039                     	ds	3
   132  00003C                     _CurrentVelocity:
   133                           	opt stack 0
   134  00003C                     	ds	3
   135  00003F                     _Kd:
   136                           	opt stack 0
   137  00003F                     	ds	3
   138  000042                     _Ki:
   139                           	opt stack 0
   140  000042                     	ds	3
   141  000045                     _Kp:
   142                           	opt stack 0
   143  000045                     	ds	3
   144  000048                     _SetAngle:
   145                           	opt stack 0
   146  000048                     	ds	3
   147  00004B                     _DoublePtr:
   148                           	opt stack 0
   149  00004B                     	ds	2
   150  00004D                     _Command:
   151                           	opt stack 0
   152  00004D                     	ds	1
   153  00004E                     _PIDEnableFlag:
   154                           	opt stack 0
   155  00004E                     	ds	1
   156  00004F                     _SPIflag:
   157                           	opt stack 0
   158  00004F                     	ds	1
   159  000050                     _dummy_byte:
   160                           	opt stack 0
   161  000050                     	ds	1
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           
   165                           	psect	cstackBANK0
   166  000060                     __pcstackBANK0:
   167                           	opt stack 0
   168  000060                     breakDouble@dubs:
   169                           	opt stack 0
   170                           
   171                           ; 3 bytes @ 0x0
   172  000060                     	ds	3
   173  000063                     breakDouble@tempDub:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x3
   177  000063                     	ds	2
   178  000065                     breakDouble@temp1:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x5
   182  000065                     	ds	2
   183  000067                     breakDouble@temp2:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x7
   187  000067                     	ds	2
   188  000069                     main@temporary:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x9
   192  000069                     	ds	1
   193  00006A                     main@x:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0xA
   197  00006A                     	ds	1
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	cstackCOMRAM
   202  000001                     __pcstackCOMRAM:
   203                           	opt stack 0
   204  000001                     ??_ISR:
   205  000001                     
   206                           ; 1 bytes @ 0x0
   207  000001                     	ds	14
   208  00000F                     ?___lwdiv:
   209                           	opt stack 0
   210  00000F                     ?___lwmod:
   211                           	opt stack 0
   212  00000F                     ?___ftpack:
   213                           	opt stack 0
   214  00000F                     ?_SPIReassembleDouble:
   215                           	opt stack 0
   216  00000F                     SendSPI1@temp:
   217                           	opt stack 0
   218  00000F                     GenerateChecksum@sum:
   219                           	opt stack 0
   220  00000F                     SerTx@c:
   221                           	opt stack 0
   222  00000F                     OpenSPI1@bus_mode:
   223                           	opt stack 0
   224  00000F                     ___lwdiv@dividend:
   225                           	opt stack 0
   226  00000F                     ___lwmod@dividend:
   227                           	opt stack 0
   228  00000F                     ___ftpack@arg:
   229                           	opt stack 0
   230                           
   231                           ; 3 bytes @ 0xE
   232  00000F                     	ds	1
   233  000010                     SendSPI1@data:
   234                           	opt stack 0
   235  000010                     GenerateChecksum@y:
   236                           	opt stack 0
   237  000010                     OpenSPI1@smp_phase:
   238                           	opt stack 0
   239  000010                     SerTxStr@string:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0xF
   243  000010                     	ds	1
   244  000011                     OpenSPI1@sync_mode:
   245                           	opt stack 0
   246  000011                     ___lwdiv@divisor:
   247                           	opt stack 0
   248  000011                     ___lwmod@divisor:
   249                           	opt stack 0
   250  000011                     SPIDisassembleDouble@dub:
   251                           	opt stack 0
   252                           
   253                           ; 3 bytes @ 0x10
   254  000011                     	ds	1
   255  000012                     ___ftpack@exp:
   256                           	opt stack 0
   257  000012                     SPIReassembleDouble@dub:
   258                           	opt stack 0
   259                           
   260                           ; 3 bytes @ 0x11
   261  000012                     	ds	1
   262  000013                     ___ftpack@sign:
   263                           	opt stack 0
   264  000013                     ___lwdiv@counter:
   265                           	opt stack 0
   266  000013                     ___lwmod@counter:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x12
   270  000013                     	ds	1
   271  000014                     ??___ftpack:
   272  000014                     ___lwdiv@quotient:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x13
   276  000014                     	ds	3
   277  000017                     ?___ftmul:
   278                           	opt stack 0
   279  000017                     ___ftmul@f1:
   280                           	opt stack 0
   281                           
   282                           ; 3 bytes @ 0x16
   283  000017                     	ds	3
   284  00001A                     ___ftmul@f2:
   285                           	opt stack 0
   286                           
   287                           ; 3 bytes @ 0x19
   288  00001A                     	ds	3
   289  00001D                     ??___ftmul:
   290                           
   291                           ; 0 bytes @ 0x1C
   292  00001D                     	ds	3
   293  000020                     ___ftmul@exp:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x1F
   297  000020                     	ds	1
   298  000021                     ___ftmul@f3_as_product:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x20
   302  000021                     	ds	3
   303  000024                     ___ftmul@cntr:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x23
   307  000024                     	ds	1
   308  000025                     ___ftmul@sign:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x24
   312  000025                     	ds	1
   313  000026                     ?___fttol:
   314                           	opt stack 0
   315  000026                     ___fttol@f1:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0x25
   319  000026                     	ds	4
   320  00002A                     ??___fttol:
   321                           
   322                           ; 0 bytes @ 0x29
   323  00002A                     	ds	5
   324  00002F                     ___fttol@sign1:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x2E
   328  00002F                     	ds	1
   329  000030                     ___fttol@lval:
   330                           	opt stack 0
   331                           
   332                           ; 4 bytes @ 0x2F
   333  000030                     	ds	4
   334  000034                     ___fttol@exp1:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x33
   338  000034                     	ds	1
   339  000035                     postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           ; 0 bytes @ 0x34
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 15 in file "SPItestSLAVE.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  x               1   10[BANK0 ] unsigned char 
   353 ;;  temporary       1    9[BANK0 ] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;		None               void
   356 ;; Registers used:
   357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;Total ram usage:        2 bytes
   368 ;; Hardware stack levels required when called:    6
   369 ;; This function calls:
   370 ;;		_ReceiveSPI1
   371 ;;		_SPIDisassembleDouble
   372 ;;		_SPIReassembleDouble
   373 ;;		_SendSPI1
   374 ;;		_breakDouble
   375 ;;		_initialize
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text0
   382  001026                     __ptext0:
   383                           	opt stack 0
   384  001026                     _main:
   385                           	opt stack 25
   386                           
   387                           ;SPItestSLAVE.c: 17: unsigned char temporary, x;
   388                           ;SPItestSLAVE.c: 18: initialize();
   389                           
   390                           ;incstack = 0
   391  001026  EC99  F00C         	call	_initialize	;wreg free
   392                           
   393                           ;SPItestSLAVE.c: 19: SPIDisassembleDouble(355.89);
   394  00102A  0EF2               	movlw	242
   395  00102C  6E11               	movwf	SPIDisassembleDouble@dub,c
   396  00102E  0EB1               	movlw	177
   397  001030  6E12               	movwf	SPIDisassembleDouble@dub+1,c
   398  001032  0E43               	movlw	67
   399  001034  6E13               	movwf	SPIDisassembleDouble@dub+2,c
   400  001036  EC04  F00C         	call	_SPIDisassembleDouble	;wreg free
   401                           
   402                           ;SPItestSLAVE.c: 20: CurrentAngle = 35.29;
   403  00103A  0E29               	movlw	41
   404  00103C  6E39               	movwf	_CurrentAngle,c
   405  00103E  0E0D               	movlw	13
   406  001040  6E3A               	movwf	_CurrentAngle+1,c
   407  001042  0E42               	movlw	66
   408  001044  6E3B               	movwf	_CurrentAngle+2,c
   409                           
   410                           ;SPItestSLAVE.c: 22: PORTCbits.RC6 = 0;
   411  001046  9C82               	bcf	3970,6,c	;volatile
   412                           
   413                           ;SPItestSLAVE.c: 23: SSP1BUF = dummy_byte;
   414  001048  C050  FFC9         	movff	_dummy_byte,4041	;volatile
   415  00104C  D000               	goto	l1919
   416  00104E                     l1919:
   417                           
   418                           ;SPItestSLAVE.c: 26: {
   419                           ;SPItestSLAVE.c: 27: if (SPIflag == 1)
   420  00104E  044F               	decf	_SPIflag,w,c
   421  001050  A4D8               	btfss	status,2,c
   422  001052  D7FD               	goto	l1919
   423                           
   424                           ;SPItestSLAVE.c: 28: {
   425                           ;SPItestSLAVE.c: 29: SPIflag = 0;
   426  001054  0E00               	movlw	0
   427  001056  6E4F               	movwf	_SPIflag,c
   428                           
   429                           ;SPItestSLAVE.c: 30: if ((Command == 0x02) || (Command == 0x03) || (Command == 0x04) || 
      +                          (Command == 0x06) || (Command == 0x08))
   430  001058  0E02               	movlw	2
   431  00105A  184D               	xorwf	_Command,w,c
   432  00105C  B4D8               	btfsc	status,2,c
   433  00105E  D010               	goto	l1933
   434  001060  0E03               	movlw	3
   435  001062  184D               	xorwf	_Command,w,c
   436  001064  B4D8               	btfsc	status,2,c
   437  001066  D00C               	goto	l1933
   438  001068  0E04               	movlw	4
   439  00106A  184D               	xorwf	_Command,w,c
   440  00106C  B4D8               	btfsc	status,2,c
   441  00106E  D008               	goto	l1933
   442  001070  0E06               	movlw	6
   443  001072  184D               	xorwf	_Command,w,c
   444  001074  B4D8               	btfsc	status,2,c
   445  001076  D004               	goto	l1933
   446  001078  0E08               	movlw	8
   447  00107A  184D               	xorwf	_Command,w,c
   448  00107C  A4D8               	btfss	status,2,c
   449  00107E  D05A               	goto	l1967
   450  001080                     l1933:
   451                           
   452                           ;SPItestSLAVE.c: 31: {
   453                           ;SPItestSLAVE.c: 32: if (Command == 0x02)
   454  001080  0E02               	movlw	2
   455  001082  184D               	xorwf	_Command,w,c
   456  001084  A4D8               	btfss	status,2,c
   457  001086  D009               	goto	l1937
   458                           
   459                           ;SPItestSLAVE.c: 33: SPIDisassembleDouble(CurrentAngle);
   460  001088  C039  F011         	movff	_CurrentAngle,SPIDisassembleDouble@dub
   461  00108C  C03A  F012         	movff	_CurrentAngle+1,SPIDisassembleDouble@dub+1
   462  001090  C03B  F013         	movff	_CurrentAngle+2,SPIDisassembleDouble@dub+2
   463  001094  EC04  F00C         	call	_SPIDisassembleDouble	;wreg free
   464  001098  D034               	goto	l1953
   465  00109A                     l1937:
   466                           
   467                           ;SPItestSLAVE.c: 34: else if (Command == 0x03)
   468  00109A  0E03               	movlw	3
   469  00109C  184D               	xorwf	_Command,w,c
   470  00109E  A4D8               	btfss	status,2,c
   471  0010A0  D009               	goto	l1941
   472                           
   473                           ;SPItestSLAVE.c: 35: SPIDisassembleDouble(CurrentVelocity);
   474  0010A2  C03C  F011         	movff	_CurrentVelocity,SPIDisassembleDouble@dub
   475  0010A6  C03D  F012         	movff	_CurrentVelocity+1,SPIDisassembleDouble@dub+1
   476  0010AA  C03E  F013         	movff	_CurrentVelocity+2,SPIDisassembleDouble@dub+2
   477  0010AE  EC04  F00C         	call	_SPIDisassembleDouble	;wreg free
   478  0010B2  D027               	goto	l1953
   479  0010B4                     l1941:
   480                           
   481                           ;SPItestSLAVE.c: 36: else if (Command == 0x04)
   482  0010B4  0E04               	movlw	4
   483  0010B6  184D               	xorwf	_Command,w,c
   484  0010B8  A4D8               	btfss	status,2,c
   485  0010BA  D009               	goto	l1945
   486                           
   487                           ;SPItestSLAVE.c: 37: SPIDisassembleDouble(Kp);
   488  0010BC  C045  F011         	movff	_Kp,SPIDisassembleDouble@dub
   489  0010C0  C046  F012         	movff	_Kp+1,SPIDisassembleDouble@dub+1
   490  0010C4  C047  F013         	movff	_Kp+2,SPIDisassembleDouble@dub+2
   491  0010C8  EC04  F00C         	call	_SPIDisassembleDouble	;wreg free
   492  0010CC  D01A               	goto	l1953
   493  0010CE                     l1945:
   494                           
   495                           ;SPItestSLAVE.c: 38: else if (Command == 0x06)
   496  0010CE  0E06               	movlw	6
   497  0010D0  184D               	xorwf	_Command,w,c
   498  0010D2  A4D8               	btfss	status,2,c
   499  0010D4  D009               	goto	l1949
   500                           
   501                           ;SPItestSLAVE.c: 39: SPIDisassembleDouble(Ki);
   502  0010D6  C042  F011         	movff	_Ki,SPIDisassembleDouble@dub
   503  0010DA  C043  F012         	movff	_Ki+1,SPIDisassembleDouble@dub+1
   504  0010DE  C044  F013         	movff	_Ki+2,SPIDisassembleDouble@dub+2
   505  0010E2  EC04  F00C         	call	_SPIDisassembleDouble	;wreg free
   506  0010E6  D00D               	goto	l1953
   507  0010E8                     l1949:
   508                           
   509                           ;SPItestSLAVE.c: 40: else if (Command == 0x08)
   510  0010E8  0E08               	movlw	8
   511  0010EA  184D               	xorwf	_Command,w,c
   512  0010EC  A4D8               	btfss	status,2,c
   513  0010EE  D009               	goto	l1953
   514                           
   515                           ;SPItestSLAVE.c: 41: SPIDisassembleDouble(Kd);
   516  0010F0  C03F  F011         	movff	_Kd,SPIDisassembleDouble@dub
   517  0010F4  C040  F012         	movff	_Kd+1,SPIDisassembleDouble@dub+1
   518  0010F8  C041  F013         	movff	_Kd+2,SPIDisassembleDouble@dub+2
   519  0010FC  EC04  F00C         	call	_SPIDisassembleDouble	;wreg free
   520  001100  D000               	goto	l1953
   521  001102                     l1953:
   522                           
   523                           ;SPItestSLAVE.c: 42: PORTCbits.RC6 = 0;
   524  001102  9C82               	bcf	3970,6,c	;volatile
   525                           
   526                           ;SPItestSLAVE.c: 43: for (x = 0; x < 4; x++)
   527  001104  0E00               	movlw	0
   528  001106  0100               	movlb	0	; () banked
   529  001108  6F6A               	movwf	main@x& (0+255),b
   530  00110A  D00F               	goto	l1965
   531                           
   532                           ; BSR set to: 0
   533                           
   534                           ; BSR set to: 0
   535  00110C  D091               	goto	l2013
   536  00110E                     l1961:
   537                           
   538                           ; BSR set to: 0
   539                           ;SPItestSLAVE.c: 44: SendSPI1(DoubleSPIS[x]);
   540  00110E  0100               	movlb	0	; () banked
   541  001110  516A               	movf	main@x& (0+255),w,b
   542  001112  0D01               	mullw	1
   543  001114  0E35               	movlw	low _DoubleSPIS
   544  001116  24F3               	addwf	prodl,w,c
   545  001118  6ED9               	movwf	fsr2l,c
   546  00111A  0E00               	movlw	high _DoubleSPIS
   547  00111C  20F4               	addwfc	prodh,w,c
   548  00111E  6EDA               	movwf	fsr2h,c
   549  001120  50DF               	movf	indf2,w,c
   550  001122  EC74  F00C         	call	_SendSPI1
   551  001126  0100               	movlb	0	; () banked
   552  001128  2B6A               	incf	main@x& (0+255),f,b
   553  00112A                     l1965:
   554                           
   555                           ; BSR set to: 0
   556  00112A  0E03               	movlw	3
   557  00112C  0100               	movlb	0	; () banked
   558  00112E  656A               	cpfsgt	main@x& (0+255),b
   559  001130  D7EE               	goto	l1961
   560  001132  D07E               	goto	l2013
   561  001134                     l1967:
   562                           
   563                           ;SPItestSLAVE.c: 47: else if ((Command == 0x01) || (Command == 0x05) || (Command == 0x07
      +                          ) || (Command == 0x09))
   564  001134  044D               	decf	_Command,w,c
   565  001136  B4D8               	btfsc	status,2,c
   566  001138  D00C               	goto	l145
   567  00113A  0E05               	movlw	5
   568  00113C  184D               	xorwf	_Command,w,c
   569  00113E  B4D8               	btfsc	status,2,c
   570  001140  D008               	goto	l145
   571  001142  0E07               	movlw	7
   572  001144  184D               	xorwf	_Command,w,c
   573  001146  B4D8               	btfsc	status,2,c
   574  001148  D004               	goto	l145
   575  00114A  0E09               	movlw	9
   576  00114C  184D               	xorwf	_Command,w,c
   577  00114E  A4D8               	btfss	status,2,c
   578  001150  D072               	goto	l2015
   579  001152                     l145:
   580                           
   581                           ;SPItestSLAVE.c: 48: {
   582                           ;SPItestSLAVE.c: 49: PORTCbits.RC6 = 0;
   583  001152  9C82               	bcf	3970,6,c	;volatile
   584                           
   585                           ;SPItestSLAVE.c: 50: for (x = 0; x != 4; x++)
   586  001154  0E00               	movlw	0
   587  001156  0100               	movlb	0	; () banked
   588  001158  6F6A               	movwf	main@x& (0+255),b
   589  00115A                     l1977:
   590                           
   591                           ; BSR set to: 0
   592  00115A  0E04               	movlw	4
   593  00115C  0100               	movlb	0	; () banked
   594  00115E  196A               	xorwf	main@x& (0+255),w,b
   595  001160  B4D8               	btfsc	status,2,c
   596  001162  D011               	goto	l1987
   597  001164  D001               	goto	l1981
   598                           
   599                           ; BSR set to: 0
   600  001166  D00F               	goto	l1987
   601  001168                     l1981:
   602                           
   603                           ; BSR set to: 0
   604                           ;SPItestSLAVE.c: 51: DoubleSPIS[x] = ReceiveSPI1();
   605  001168  0100               	movlb	0	; () banked
   606  00116A  516A               	movf	main@x& (0+255),w,b
   607  00116C  0D01               	mullw	1
   608  00116E  0E35               	movlw	low _DoubleSPIS
   609  001170  24F3               	addwf	prodl,w,c
   610  001172  6ED9               	movwf	fsr2l,c
   611  001174  0E00               	movlw	high _DoubleSPIS
   612  001176  20F4               	addwfc	prodh,w,c
   613  001178  6EDA               	movwf	fsr2h,c
   614  00117A  EC89  F00C         	call	_ReceiveSPI1	;wreg free
   615  00117E  6EDF               	movwf	indf2,c
   616  001180  0100               	movlb	0	; () banked
   617  001182  2B6A               	incf	main@x& (0+255),f,b
   618  001184  D7EA               	goto	l1977
   619  001186                     l1987:
   620                           
   621                           ; BSR set to: 0
   622                           ;SPItestSLAVE.c: 52: if (Command == 0x01)
   623  001186  044D               	decf	_Command,w,c
   624  001188  A4D8               	btfss	status,2,c
   625  00118A  D013               	goto	l1995
   626                           
   627                           ; BSR set to: 0
   628                           ;SPItestSLAVE.c: 53: {
   629                           ;SPItestSLAVE.c: 54: CurrentAngle = SPIReassembleDouble();
   630  00118C  ECE2  F00B         	call	_SPIReassembleDouble	;wreg free
   631  001190  C00F  F039         	movff	?_SPIReassembleDouble,_CurrentAngle
   632  001194  C010  F03A         	movff	?_SPIReassembleDouble+1,_CurrentAngle+1
   633  001198  C011  F03B         	movff	?_SPIReassembleDouble+2,_CurrentAngle+2
   634                           
   635                           ;SPItestSLAVE.c: 55: PIDEnableFlag = 0x03;
   636  00119C  0E03               	movlw	3
   637  00119E  6E4E               	movwf	_PIDEnableFlag,c
   638                           
   639                           ;SPItestSLAVE.c: 56: breakDouble(SetAngle);
   640  0011A0  C048  F060         	movff	_SetAngle,breakDouble@dubs
   641  0011A4  C049  F061         	movff	_SetAngle+1,breakDouble@dubs+1
   642  0011A8  C04A  F062         	movff	_SetAngle+2,breakDouble@dubs+2
   643  0011AC  EC1F  F009         	call	_breakDouble	;wreg free
   644                           
   645                           ;SPItestSLAVE.c: 57: }
   646  0011B0  D03F               	goto	l2013
   647  0011B2                     l1995:
   648                           
   649                           ;SPItestSLAVE.c: 58: else if (Command == 0x05)
   650  0011B2  0E05               	movlw	5
   651  0011B4  184D               	xorwf	_Command,w,c
   652  0011B6  A4D8               	btfss	status,2,c
   653  0011B8  D011               	goto	l2001
   654                           
   655                           ;SPItestSLAVE.c: 59: {
   656                           ;SPItestSLAVE.c: 60: Kp = SPIReassembleDouble();
   657  0011BA  ECE2  F00B         	call	_SPIReassembleDouble	;wreg free
   658  0011BE  C00F  F045         	movff	?_SPIReassembleDouble,_Kp
   659  0011C2  C010  F046         	movff	?_SPIReassembleDouble+1,_Kp+1
   660  0011C6  C011  F047         	movff	?_SPIReassembleDouble+2,_Kp+2
   661                           
   662                           ;SPItestSLAVE.c: 61: breakDouble(Kp);
   663  0011CA  C045  F060         	movff	_Kp,breakDouble@dubs
   664  0011CE  C046  F061         	movff	_Kp+1,breakDouble@dubs+1
   665  0011D2  C047  F062         	movff	_Kp+2,breakDouble@dubs+2
   666  0011D6  EC1F  F009         	call	_breakDouble	;wreg free
   667                           
   668                           ;SPItestSLAVE.c: 62: }
   669  0011DA  D02A               	goto	l2013
   670  0011DC                     l2001:
   671                           
   672                           ;SPItestSLAVE.c: 63: else if (Command == 0x07)
   673  0011DC  0E07               	movlw	7
   674  0011DE  184D               	xorwf	_Command,w,c
   675  0011E0  A4D8               	btfss	status,2,c
   676  0011E2  D011               	goto	l2007
   677                           
   678                           ;SPItestSLAVE.c: 64: {
   679                           ;SPItestSLAVE.c: 65: Ki = SPIReassembleDouble();
   680  0011E4  ECE2  F00B         	call	_SPIReassembleDouble	;wreg free
   681  0011E8  C00F  F042         	movff	?_SPIReassembleDouble,_Ki
   682  0011EC  C010  F043         	movff	?_SPIReassembleDouble+1,_Ki+1
   683  0011F0  C011  F044         	movff	?_SPIReassembleDouble+2,_Ki+2
   684                           
   685                           ;SPItestSLAVE.c: 66: breakDouble(Ki);
   686  0011F4  C042  F060         	movff	_Ki,breakDouble@dubs
   687  0011F8  C043  F061         	movff	_Ki+1,breakDouble@dubs+1
   688  0011FC  C044  F062         	movff	_Ki+2,breakDouble@dubs+2
   689  001200  EC1F  F009         	call	_breakDouble	;wreg free
   690                           
   691                           ;SPItestSLAVE.c: 67: }
   692  001204  D015               	goto	l2013
   693  001206                     l2007:
   694                           
   695                           ;SPItestSLAVE.c: 68: else if (Command == 0x09)
   696  001206  0E09               	movlw	9
   697  001208  184D               	xorwf	_Command,w,c
   698  00120A  A4D8               	btfss	status,2,c
   699  00120C  D011               	goto	l2013
   700                           
   701                           ;SPItestSLAVE.c: 69: {
   702                           ;SPItestSLAVE.c: 70: Kd = SPIReassembleDouble();
   703  00120E  ECE2  F00B         	call	_SPIReassembleDouble	;wreg free
   704  001212  C00F  F03F         	movff	?_SPIReassembleDouble,_Kd
   705  001216  C010  F040         	movff	?_SPIReassembleDouble+1,_Kd+1
   706  00121A  C011  F041         	movff	?_SPIReassembleDouble+2,_Kd+2
   707                           
   708                           ;SPItestSLAVE.c: 71: breakDouble(Kd);
   709  00121E  C03F  F060         	movff	_Kd,breakDouble@dubs
   710  001222  C040  F061         	movff	_Kd+1,breakDouble@dubs+1
   711  001226  C041  F062         	movff	_Kd+2,breakDouble@dubs+2
   712  00122A  EC1F  F009         	call	_breakDouble	;wreg free
   713  00122E  D000               	goto	l2013
   714  001230                     l2013:
   715                           
   716                           ;SPItestSLAVE.c: 72: }
   717                           ;SPItestSLAVE.c: 73: temporary = SSP1BUF;
   718  001230  CFC9 F069          	movff	4041,main@temporary	;volatile
   719  001234  D000               	goto	l2015
   720  001236                     l2015:
   721                           
   722                           ;SPItestSLAVE.c: 74: }
   723                           ;SPItestSLAVE.c: 75: PIE1bits.SSP1IE = 1;
   724  001236  869D               	bsf	3997,3,c	;volatile
   725  001238  D70A               	goto	l1919
   726  00123A  EF0C  F000         	goto	start
   727  00123E                     __end_of_main:
   728                           	opt stack 0
   729                           prodh	equ	0xFF4
   730                           prodl	equ	0xFF3
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           indf2	equ	0xFDF
   734                           fsr2h	equ	0xFDA
   735                           fsr2l	equ	0xFD9
   736                           status	equ	0xFD8
   737                           
   738 ;; *************** function _initialize *****************
   739 ;; Defined at:
   740 ;;		line 80 in file "SPItestSLAVE.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;		None               void
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;Total ram usage:        0 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    5
   761 ;; This function calls:
   762 ;;		_SPIInit
   763 ;;		_SerInit
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text1
   770  001932                     __ptext1:
   771                           	opt stack 0
   772  001932                     _initialize:
   773                           	opt stack 25
   774                           
   775                           ;SPItestSLAVE.c: 82: SPIInit();
   776                           
   777                           ;incstack = 0
   778  001932  EC67  F00C         	call	_SPIInit	;wreg free
   779                           
   780                           ;SPItestSLAVE.c: 83: SerInit();
   781  001936  EC55  F00C         	call	_SerInit	;wreg free
   782                           
   783                           ;SPItestSLAVE.c: 84: INTCONbits.GIE = 1;
   784  00193A  8EF2               	bsf	intcon,7,c	;volatile
   785                           
   786                           ;SPItestSLAVE.c: 85: INTCONbits.PEIE = 1;
   787  00193C  8CF2               	bsf	intcon,6,c	;volatile
   788  00193E  0012               	return		;funcret
   789  001940                     __end_of_initialize:
   790                           	opt stack 0
   791                           prodh	equ	0xFF4
   792                           prodl	equ	0xFF3
   793                           intcon	equ	0xFF2
   794                           postinc0	equ	0xFEE
   795                           wreg	equ	0xFE8
   796                           indf2	equ	0xFDF
   797                           fsr2h	equ	0xFDA
   798                           fsr2l	equ	0xFD9
   799                           status	equ	0xFD8
   800                           
   801 ;; *************** function _SerInit *****************
   802 ;; Defined at:
   803 ;;		line 19 in file "SerComm.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;		None               void
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    4
   824 ;; This function calls:
   825 ;;		_SerTxStr
   826 ;; This function is called by:
   827 ;;		_initialize
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text2
   832  0018AA                     __ptext2:
   833                           	opt stack 0
   834  0018AA                     _SerInit:
   835                           	opt stack 25
   836                           
   837                           ;SerComm.c: 26: TXSTA1 = 0x24;
   838                           
   839                           ;incstack = 0
   840  0018AA  0E24               	movlw	36
   841  0018AC  6EAC               	movwf	4012,c	;volatile
   842                           
   843                           ;SerComm.c: 27: RCSTA1 = 0x90;
   844  0018AE  0E90               	movlw	144
   845  0018B0  6EAB               	movwf	4011,c	;volatile
   846                           
   847                           ;SerComm.c: 28: BAUDCON = 0x00;
   848  0018B2  0E00               	movlw	0
   849  0018B4  6E7E               	movwf	3966,c	;volatile
   850                           
   851                           ;SerComm.c: 29: SPBRG = 21;
   852  0018B6  0E15               	movlw	21
   853  0018B8  6EAF               	movwf	4015,c	;volatile
   854                           
   855                           ;SerComm.c: 31: RCONbits.IPEN = 1;
   856  0018BA  8ED0               	bsf	4048,7,c	;volatile
   857                           
   858                           ;SerComm.c: 32: IPR1bits.RCIP = 1;
   859  0018BC  8A9F               	bsf	3999,5,c	;volatile
   860                           
   861                           ;SerComm.c: 33: PIE1bits.RC1IE = 1;
   862  0018BE  8A9D               	bsf	3997,5,c	;volatile
   863                           
   864                           ;SerComm.c: 35: SerTxStr("Welcome to the world of tomorrow!!!");
   865  0018C0  0E01               	movlw	low STR_1
   866  0018C2  6E10               	movwf	SerTxStr@string,c
   867  0018C4  0E10               	movlw	high STR_1
   868  0018C6  6E11               	movwf	SerTxStr@string+1,c
   869  0018C8  EC22  F00C         	call	_SerTxStr	;wreg free
   870  0018CC  0012               	return		;funcret
   871  0018CE                     __end_of_SerInit:
   872                           	opt stack 0
   873                           prodh	equ	0xFF4
   874                           prodl	equ	0xFF3
   875                           intcon	equ	0xFF2
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           indf2	equ	0xFDF
   879                           fsr2h	equ	0xFDA
   880                           fsr2l	equ	0xFD9
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _SerTxStr *****************
   884 ;; Defined at:
   885 ;;		line 50 in file "SerComm.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  string          2   15[COMRAM] PTR unsigned char 
   888 ;;		 -> STR_1(36), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;		None               void
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;Total ram usage:        2 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    3
   907 ;; This function calls:
   908 ;;		_SerTx
   909 ;; This function is called by:
   910 ;;		_SerInit
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text3
   915  001844                     __ptext3:
   916                           	opt stack 0
   917  001844                     _SerTxStr:
   918                           	opt stack 25
   919                           
   920                           ;SerComm.c: 52: while (*string)
   921                           
   922                           ;incstack = 0
   923  001844  D00D               	goto	l1645
   924  001846                     l1641:
   925                           
   926                           ;SerComm.c: 53: SerTx(*string++);
   927  001846  C010  FFF6         	movff	SerTxStr@string,tblptrl
   928  00184A  C011  FFF7         	movff	SerTxStr@string+1,tblptrh
   929  00184E                     	if	0	;tblptru may be non-zero
   930  00184E                     	endif
   931  00184E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   932  00184E  0E00               	movlw	low (__mediumconst shr (0+16))
   933  001850  6EF8               	movwf	tblptru,c
   934  001852                     	endif
   935  001852  0008               	tblrd		*
   936  001854  50F5               	movf	tablat,w,c
   937  001856  ECA0  F00C         	call	_SerTx
   938  00185A  4A10               	infsnz	SerTxStr@string,f,c
   939  00185C  2A11               	incf	SerTxStr@string+1,f,c
   940  00185E  D000               	goto	l1645
   941  001860                     l1645:
   942  001860  C010  FFF6         	movff	SerTxStr@string,tblptrl
   943  001864  C011  FFF7         	movff	SerTxStr@string+1,tblptrh
   944  001868                     	if	0	;tblptru may be non-zero
   945  001868                     	endif
   946  001868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   947  001868  0E00               	movlw	low (__mediumconst shr (0+16))
   948  00186A  6EF8               	movwf	tblptru,c
   949  00186C                     	endif
   950  00186C  0008               	tblrd		*
   951  00186E  50F5               	movf	tablat,w,c
   952  001870  0900               	iorlw	0
   953  001872  A4D8               	btfss	status,2,c
   954  001874  D7E8               	goto	l1641
   955  001876  0012               	return		;funcret
   956  001878                     __end_of_SerTxStr:
   957                           	opt stack 0
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           prodh	equ	0xFF4
   963                           prodl	equ	0xFF3
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           indf2	equ	0xFDF
   968                           fsr2h	equ	0xFDA
   969                           fsr2l	equ	0xFD9
   970                           status	equ	0xFD8
   971                           
   972 ;; *************** function _SPIInit *****************
   973 ;; Defined at:
   974 ;;		line 16 in file "SPISlave.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;		None               void
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    3
   995 ;; This function calls:
   996 ;;		_OpenSPI1
   997 ;; This function is called by:
   998 ;;		_initialize
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text4
  1003  0018CE                     __ptext4:
  1004                           	opt stack 0
  1005  0018CE                     _SPIInit:
  1006                           	opt stack 26
  1007                           
  1008                           ;SPISlave.c: 18: TRISCbits.RC4 = 1;
  1009                           
  1010                           ;incstack = 0
  1011  0018CE  8894               	bsf	3988,4,c	;volatile
  1012                           
  1013                           ;SPISlave.c: 19: TRISCbits.RC5 = 0;
  1014  0018D0  9A94               	bcf	3988,5,c	;volatile
  1015                           
  1016                           ;SPISlave.c: 20: TRISDbits.RD7 = 1;
  1017  0018D2  8E95               	bsf	3989,7,c	;volatile
  1018                           
  1019                           ;SPISlave.c: 21: TRISCbits.RC6 = 0;
  1020  0018D4  9C94               	bcf	3988,6,c	;volatile
  1021                           
  1022                           ;SPISlave.c: 22: OpenSPI1(0b00000100, 0b00000000, 0b00000000);
  1023  0018D6  0E00               	movlw	0
  1024  0018D8  6E0F               	movwf	OpenSPI1@bus_mode,c
  1025  0018DA  0E00               	movlw	0
  1026  0018DC  6E10               	movwf	OpenSPI1@smp_phase,c
  1027  0018DE  0E04               	movlw	4
  1028  0018E0  EC91  F00B         	call	_OpenSPI1
  1029                           
  1030                           ;SPISlave.c: 23: PIE1bits.SSP1IE = 1;
  1031  0018E4  869D               	bsf	3997,3,c	;volatile
  1032  0018E6  0012               	return		;funcret
  1033  0018E8                     __end_of_SPIInit:
  1034                           	opt stack 0
  1035                           tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           prodh	equ	0xFF4
  1040                           prodl	equ	0xFF3
  1041                           intcon	equ	0xFF2
  1042                           postinc0	equ	0xFEE
  1043                           wreg	equ	0xFE8
  1044                           indf2	equ	0xFDF
  1045                           fsr2h	equ	0xFDA
  1046                           fsr2l	equ	0xFD9
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _OpenSPI1 *****************
  1050 ;; Defined at:
  1051 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  sync_mode       1    wreg     unsigned char 
  1054 ;;  bus_mode        1   14[COMRAM] unsigned char 
  1055 ;;  smp_phase       1   15[COMRAM] unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  sync_mode       1   16[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:        3 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_SPIInit
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text5
  1082  001722                     __ptext5:
  1083                           	opt stack 0
  1084  001722                     _OpenSPI1:
  1085                           	opt stack 26
  1086                           
  1087                           ;incstack = 0
  1088                           ;OpenSPI1@sync_mode stored from wreg
  1089  001722  6E11               	movwf	OpenSPI1@sync_mode,c
  1090  001724  0E3F               	movlw	63
  1091  001726  16C7               	andwf	4039,f,c	;volatile
  1092  001728  0E00               	movlw	0
  1093  00172A  6EC6               	movwf	4038,c	;volatile
  1094  00172C  5011               	movf	OpenSPI1@sync_mode,w,c
  1095  00172E  12C6               	iorwf	4038,f,c	;volatile
  1096  001730  5010               	movf	OpenSPI1@smp_phase,w,c
  1097  001732  12C7               	iorwf	4039,f,c	;volatile
  1098  001734  D005               	goto	l1631
  1099  001736                     l231:
  1100  001736  8CC7               	bsf	4039,6,c	;volatile
  1101  001738  D013               	goto	l1635
  1102  00173A                     l233:
  1103  00173A  8CC7               	bsf	4039,6,c	;volatile
  1104  00173C                     l234:
  1105  00173C  88C6               	bsf	4038,4,c	;volatile
  1106  00173E  D010               	goto	l1635
  1107  001740                     l1631:
  1108  001740  500F               	movf	OpenSPI1@bus_mode,w,c
  1109                           
  1110                           ; Switch size 1, requested type "space"
  1111                           ; Number of cases is 3, Range of values is 0 to 3
  1112                           ; switch strategies available:
  1113                           ; Name         Instructions Cycles
  1114                           ; simple_byte           10     6 (average)
  1115                           ;	Chosen strategy is simple_byte
  1116  001742  0A00               	xorlw	0	; case 0
  1117  001744  B4D8               	btfsc	status,2,c
  1118  001746  D7F7               	goto	l231
  1119  001748  0A02               	xorlw	2	; case 2
  1120  00174A  B4D8               	btfsc	status,2,c
  1121  00174C  D7F6               	goto	l233
  1122  00174E  0A01               	xorlw	1	; case 3
  1123  001750  B4D8               	btfsc	status,2,c
  1124  001752  D7F4               	goto	l234
  1125  001754  D005               	goto	l1635
  1126  001756                     l237:
  1127  001756  8E97               	bsf	3991,7,c	;volatile
  1128  001758                     l239:
  1129  001758  8694               	bsf	3988,3,c	;volatile
  1130  00175A  D00A               	goto	l238
  1131  00175C                     l240:
  1132  00175C  9694               	bcf	3988,3,c	;volatile
  1133  00175E  D008               	goto	l238
  1134  001760                     l1635:
  1135  001760  5011               	movf	OpenSPI1@sync_mode,w,c
  1136                           
  1137                           ; Switch size 1, requested type "space"
  1138                           ; Number of cases is 2, Range of values is 4 to 5
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte            7     4 (average)
  1142                           ;	Chosen strategy is simple_byte
  1143  001762  0A04               	xorlw	4	; case 4
  1144  001764  B4D8               	btfsc	status,2,c
  1145  001766  D7F7               	goto	l237
  1146  001768  0A01               	xorlw	1	; case 5
  1147  00176A  B4D8               	btfsc	status,2,c
  1148  00176C  D7F5               	goto	l239
  1149  00176E  D7F6               	goto	l240
  1150  001770                     l238:
  1151  001770  8894               	bsf	3988,4,c	;volatile
  1152  001772  9A94               	bcf	3988,5,c	;volatile
  1153  001774  8AC6               	bsf	4038,5,c	;volatile
  1154  001776  0012               	return		;funcret
  1155  001778                     __end_of_OpenSPI1:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           prodh	equ	0xFF4
  1162                           prodl	equ	0xFF3
  1163                           intcon	equ	0xFF2
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           indf2	equ	0xFDF
  1167                           fsr2h	equ	0xFDA
  1168                           fsr2l	equ	0xFD9
  1169                           status	equ	0xFD8
  1170                           
  1171 ;; *************** function _breakDouble *****************
  1172 ;; Defined at:
  1173 ;;		line 80 in file "SerComm.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  dubs            3    0[BANK0 ] unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  temp2           2    7[BANK0 ] unsigned int 
  1178 ;;  temp1           2    5[BANK0 ] unsigned int 
  1179 ;;  tempDub         2    3[BANK0 ] unsigned int 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;		None               void
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1189 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;Total ram usage:        9 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    4
  1196 ;; This function calls:
  1197 ;;		_SerTx
  1198 ;;		___ftmul
  1199 ;;		___fttol
  1200 ;;		___lwdiv
  1201 ;;		___lwmod
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text6
  1208  00123E                     __ptext6:
  1209                           	opt stack 0
  1210  00123E                     _breakDouble:
  1211                           	opt stack 26
  1212                           
  1213                           ;SerComm.c: 82: unsigned int temp1, temp2;
  1214                           ;SerComm.c: 83: unsigned int tempDub;
  1215                           ;SerComm.c: 85: tempDub = dubs * 100;
  1216                           
  1217                           ;incstack = 0
  1218  00123E  0E00               	movlw	0
  1219  001240  6E1A               	movwf	___ftmul@f2,c
  1220  001242  0EC8               	movlw	200
  1221  001244  6E1B               	movwf	___ftmul@f2+1,c
  1222  001246  0E42               	movlw	66
  1223  001248  6E1C               	movwf	___ftmul@f2+2,c
  1224  00124A  C060  F017         	movff	breakDouble@dubs,___ftmul@f1
  1225  00124E  C061  F018         	movff	breakDouble@dubs+1,___ftmul@f1+1
  1226  001252  C062  F019         	movff	breakDouble@dubs+2,___ftmul@f1+2
  1227  001256  ECD8  F009         	call	___ftmul	;wreg free
  1228  00125A  C017  F026         	movff	?___ftmul,___fttol@f1
  1229  00125E  C018  F027         	movff	?___ftmul+1,___fttol@f1+1
  1230  001262  C019  F028         	movff	?___ftmul+2,___fttol@f1+2
  1231  001266  EC54  F00A         	call	___fttol	;wreg free
  1232  00126A  C026  F063         	movff	?___fttol,breakDouble@tempDub
  1233  00126E  C027  F064         	movff	?___fttol+1,breakDouble@tempDub+1
  1234                           
  1235                           ;SerComm.c: 86: temp1 = tempDub / 10000;
  1236  001272  C063  F00F         	movff	breakDouble@tempDub,___lwdiv@dividend
  1237  001276  C064  F010         	movff	breakDouble@tempDub+1,___lwdiv@dividend+1
  1238  00127A  0E27               	movlw	39
  1239  00127C  6E12               	movwf	___lwdiv@divisor+1,c
  1240  00127E  0E10               	movlw	16
  1241  001280  6E11               	movwf	___lwdiv@divisor,c
  1242  001282  EC63  F00B         	call	___lwdiv	;wreg free
  1243  001286  C00F  F065         	movff	?___lwdiv,breakDouble@temp1
  1244  00128A  C010  F066         	movff	?___lwdiv+1,breakDouble@temp1+1
  1245                           
  1246                           ;SerComm.c: 87: temp2 = tempDub % 10000;
  1247  00128E  C063  F00F         	movff	breakDouble@tempDub,___lwmod@dividend
  1248  001292  C064  F010         	movff	breakDouble@tempDub+1,___lwmod@dividend+1
  1249  001296  0E27               	movlw	39
  1250  001298  6E12               	movwf	___lwmod@divisor+1,c
  1251  00129A  0E10               	movlw	16
  1252  00129C  6E11               	movwf	___lwmod@divisor,c
  1253  00129E  ECBC  F00B         	call	___lwmod	;wreg free
  1254  0012A2  C00F  F067         	movff	?___lwmod,breakDouble@temp2
  1255  0012A6  C010  F068         	movff	?___lwmod+1,breakDouble@temp2+1
  1256                           
  1257                           ;SerComm.c: 88: if (temp1 != 0)
  1258  0012AA  0100               	movlb	0	; () banked
  1259  0012AC  5165               	movf	breakDouble@temp1& (0+255),w,b
  1260  0012AE  0100               	movlb	0	; () banked
  1261  0012B0  1166               	iorwf	(breakDouble@temp1+1)& (0+255),w,b
  1262  0012B2  B4D8               	btfsc	status,2,c
  1263  0012B4  D005               	goto	l213
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;SerComm.c: 89: SerTx(temp1 + 0x30);
  1267  0012B6  0100               	movlb	0	; () banked
  1268  0012B8  5165               	movf	breakDouble@temp1& (0+255),w,b
  1269  0012BA  0F30               	addlw	48
  1270  0012BC  ECA0  F00C         	call	_SerTx
  1271  0012C0                     l213:
  1272                           
  1273                           ;SerComm.c: 90: temp1 = temp2 / 1000;
  1274  0012C0  C067  F00F         	movff	breakDouble@temp2,___lwdiv@dividend
  1275  0012C4  C068  F010         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  1276  0012C8  0E03               	movlw	3
  1277  0012CA  6E12               	movwf	___lwdiv@divisor+1,c
  1278  0012CC  0EE8               	movlw	232
  1279  0012CE  6E11               	movwf	___lwdiv@divisor,c
  1280  0012D0  EC63  F00B         	call	___lwdiv	;wreg free
  1281  0012D4  C00F  F065         	movff	?___lwdiv,breakDouble@temp1
  1282  0012D8  C010  F066         	movff	?___lwdiv+1,breakDouble@temp1+1
  1283                           
  1284                           ;SerComm.c: 91: temp2 = temp2 % 1000;
  1285  0012DC  C067  F00F         	movff	breakDouble@temp2,___lwmod@dividend
  1286  0012E0  C068  F010         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  1287  0012E4  0E03               	movlw	3
  1288  0012E6  6E12               	movwf	___lwmod@divisor+1,c
  1289  0012E8  0EE8               	movlw	232
  1290  0012EA  6E11               	movwf	___lwmod@divisor,c
  1291  0012EC  ECBC  F00B         	call	___lwmod	;wreg free
  1292  0012F0  C00F  F067         	movff	?___lwmod,breakDouble@temp2
  1293  0012F4  C010  F068         	movff	?___lwmod+1,breakDouble@temp2+1
  1294                           
  1295                           ;SerComm.c: 92: if (temp1 != 0)
  1296  0012F8  0100               	movlb	0	; () banked
  1297  0012FA  5165               	movf	breakDouble@temp1& (0+255),w,b
  1298  0012FC  0100               	movlb	0	; () banked
  1299  0012FE  1166               	iorwf	(breakDouble@temp1+1)& (0+255),w,b
  1300  001300  B4D8               	btfsc	status,2,c
  1301  001302  D005               	goto	l214
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;SerComm.c: 93: SerTx(temp1 + 0x30);
  1305  001304  0100               	movlb	0	; () banked
  1306  001306  5165               	movf	breakDouble@temp1& (0+255),w,b
  1307  001308  0F30               	addlw	48
  1308  00130A  ECA0  F00C         	call	_SerTx
  1309  00130E                     l214:
  1310                           
  1311                           ;SerComm.c: 94: temp1 = temp2 / 100;
  1312  00130E  C067  F00F         	movff	breakDouble@temp2,___lwdiv@dividend
  1313  001312  C068  F010         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  1314  001316  0E00               	movlw	0
  1315  001318  6E12               	movwf	___lwdiv@divisor+1,c
  1316  00131A  0E64               	movlw	100
  1317  00131C  6E11               	movwf	___lwdiv@divisor,c
  1318  00131E  EC63  F00B         	call	___lwdiv	;wreg free
  1319  001322  C00F  F065         	movff	?___lwdiv,breakDouble@temp1
  1320  001326  C010  F066         	movff	?___lwdiv+1,breakDouble@temp1+1
  1321                           
  1322                           ;SerComm.c: 95: temp2 = temp2 % 100;
  1323  00132A  C067  F00F         	movff	breakDouble@temp2,___lwmod@dividend
  1324  00132E  C068  F010         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  1325  001332  0E00               	movlw	0
  1326  001334  6E12               	movwf	___lwmod@divisor+1,c
  1327  001336  0E64               	movlw	100
  1328  001338  6E11               	movwf	___lwmod@divisor,c
  1329  00133A  ECBC  F00B         	call	___lwmod	;wreg free
  1330  00133E  C00F  F067         	movff	?___lwmod,breakDouble@temp2
  1331  001342  C010  F068         	movff	?___lwmod+1,breakDouble@temp2+1
  1332                           
  1333                           ;SerComm.c: 96: SerTx(temp1 + 0x30);
  1334  001346  0100               	movlb	0	; () banked
  1335  001348  5165               	movf	breakDouble@temp1& (0+255),w,b
  1336  00134A  0F30               	addlw	48
  1337  00134C  ECA0  F00C         	call	_SerTx
  1338                           
  1339                           ;SerComm.c: 97: SerTx('.');
  1340  001350  0E2E               	movlw	46
  1341  001352  ECA0  F00C         	call	_SerTx
  1342                           
  1343                           ;SerComm.c: 98: temp1 = temp2 / 10;
  1344  001356  C067  F00F         	movff	breakDouble@temp2,___lwdiv@dividend
  1345  00135A  C068  F010         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  1346  00135E  0E00               	movlw	0
  1347  001360  6E12               	movwf	___lwdiv@divisor+1,c
  1348  001362  0E0A               	movlw	10
  1349  001364  6E11               	movwf	___lwdiv@divisor,c
  1350  001366  EC63  F00B         	call	___lwdiv	;wreg free
  1351  00136A  C00F  F065         	movff	?___lwdiv,breakDouble@temp1
  1352  00136E  C010  F066         	movff	?___lwdiv+1,breakDouble@temp1+1
  1353                           
  1354                           ;SerComm.c: 99: temp2 = temp2 % 10;
  1355  001372  C067  F00F         	movff	breakDouble@temp2,___lwmod@dividend
  1356  001376  C068  F010         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  1357  00137A  0E00               	movlw	0
  1358  00137C  6E12               	movwf	___lwmod@divisor+1,c
  1359  00137E  0E0A               	movlw	10
  1360  001380  6E11               	movwf	___lwmod@divisor,c
  1361  001382  ECBC  F00B         	call	___lwmod	;wreg free
  1362  001386  C00F  F067         	movff	?___lwmod,breakDouble@temp2
  1363  00138A  C010  F068         	movff	?___lwmod+1,breakDouble@temp2+1
  1364                           
  1365                           ;SerComm.c: 100: SerTx(temp1 + 0x30);
  1366  00138E  0100               	movlb	0	; () banked
  1367  001390  5165               	movf	breakDouble@temp1& (0+255),w,b
  1368  001392  0F30               	addlw	48
  1369  001394  ECA0  F00C         	call	_SerTx
  1370                           
  1371                           ;SerComm.c: 101: SerTx(temp2 + 0x30);
  1372  001398  0100               	movlb	0	; () banked
  1373  00139A  5167               	movf	breakDouble@temp2& (0+255),w,b
  1374  00139C  0F30               	addlw	48
  1375  00139E  ECA0  F00C         	call	_SerTx
  1376                           
  1377                           ;SerComm.c: 102: SerTx(0x0A);
  1378  0013A2  0E0A               	movlw	10
  1379  0013A4  ECA0  F00C         	call	_SerTx
  1380                           
  1381                           ;SerComm.c: 103: SerTx(0x0D);
  1382  0013A8  0E0D               	movlw	13
  1383  0013AA  ECA0  F00C         	call	_SerTx
  1384  0013AE  0012               	return		;funcret
  1385  0013B0                     __end_of_breakDouble:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           prodh	equ	0xFF4
  1392                           prodl	equ	0xFF3
  1393                           intcon	equ	0xFF2
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           indf2	equ	0xFDF
  1397                           fsr2h	equ	0xFDA
  1398                           fsr2l	equ	0xFD9
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function ___lwmod *****************
  1402 ;; Defined at:
  1403 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  dividend        2   14[COMRAM] unsigned int 
  1406 ;;  divisor         2   16[COMRAM] unsigned int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  counter         1   18[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  2   14[COMRAM] unsigned int 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        5 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_breakDouble
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text7
  1433  001778                     __ptext7:
  1434                           	opt stack 0
  1435  001778                     ___lwmod:
  1436                           	opt stack 27
  1437                           
  1438                           ;incstack = 0
  1439  001778  5011               	movf	___lwmod@divisor,w,c
  1440  00177A  1012               	iorwf	___lwmod@divisor+1,w,c
  1441  00177C  B4D8               	btfsc	status,2,c
  1442  00177E  D01D               	goto	l772
  1443  001780  0E01               	movlw	1
  1444  001782  6E13               	movwf	___lwmod@counter,c
  1445  001784  D005               	goto	l1837
  1446  001786                     l1835:
  1447  001786  90D8               	bcf	status,0,c
  1448  001788  3611               	rlcf	___lwmod@divisor,f,c
  1449  00178A  3612               	rlcf	___lwmod@divisor+1,f,c
  1450  00178C  2A13               	incf	___lwmod@counter,f,c
  1451  00178E  D000               	goto	l1837
  1452  001790                     l1837:
  1453  001790  BE12               	btfsc	___lwmod@divisor+1,7,c
  1454  001792  D002               	goto	l1839
  1455  001794  D7F8               	goto	l1835
  1456  001796  D000               	goto	l1839
  1457  001798                     l1839:
  1458  001798  5011               	movf	___lwmod@divisor,w,c
  1459  00179A  5C0F               	subwf	___lwmod@dividend,w,c
  1460  00179C  5012               	movf	___lwmod@divisor+1,w,c
  1461  00179E  5810               	subwfb	___lwmod@dividend+1,w,c
  1462  0017A0  A0D8               	btfss	status,0,c
  1463  0017A2  D005               	goto	l1843
  1464  0017A4  5011               	movf	___lwmod@divisor,w,c
  1465  0017A6  5E0F               	subwf	___lwmod@dividend,f,c
  1466  0017A8  5012               	movf	___lwmod@divisor+1,w,c
  1467  0017AA  5A10               	subwfb	___lwmod@dividend+1,f,c
  1468  0017AC  D000               	goto	l1843
  1469  0017AE                     l1843:
  1470  0017AE  90D8               	bcf	status,0,c
  1471  0017B0  3212               	rrcf	___lwmod@divisor+1,f,c
  1472  0017B2  3211               	rrcf	___lwmod@divisor,f,c
  1473  0017B4  2E13               	decfsz	___lwmod@counter,f,c
  1474  0017B6  D7F0               	goto	l1839
  1475  0017B8  D000               	goto	l772
  1476  0017BA                     l772:
  1477  0017BA  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1478  0017BE  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1479  0017C2  0012               	return		;funcret
  1480  0017C4                     __end_of___lwmod:
  1481                           	opt stack 0
  1482                           tblptru	equ	0xFF8
  1483                           tblptrh	equ	0xFF7
  1484                           tblptrl	equ	0xFF6
  1485                           tablat	equ	0xFF5
  1486                           prodh	equ	0xFF4
  1487                           prodl	equ	0xFF3
  1488                           intcon	equ	0xFF2
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           indf2	equ	0xFDF
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function ___lwdiv *****************
  1497 ;; Defined at:
  1498 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  dividend        2   14[COMRAM] unsigned int 
  1501 ;;  divisor         2   16[COMRAM] unsigned int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  quotient        2   19[COMRAM] unsigned int 
  1504 ;;  counter         1   18[COMRAM] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2   14[COMRAM] unsigned int 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;Total ram usage:        7 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    2
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_breakDouble
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text8
  1529  0016C6                     __ptext8:
  1530                           	opt stack 0
  1531  0016C6                     ___lwdiv:
  1532                           	opt stack 27
  1533                           
  1534                           ;incstack = 0
  1535  0016C6  0E00               	movlw	0
  1536  0016C8  6E15               	movwf	___lwdiv@quotient+1,c
  1537  0016CA  0E00               	movlw	0
  1538  0016CC  6E14               	movwf	___lwdiv@quotient,c
  1539  0016CE  5011               	movf	___lwdiv@divisor,w,c
  1540  0016D0  1012               	iorwf	___lwdiv@divisor+1,w,c
  1541  0016D2  B4D8               	btfsc	status,2,c
  1542  0016D4  D021               	goto	l762
  1543  0016D6  0E01               	movlw	1
  1544  0016D8  6E13               	movwf	___lwdiv@counter,c
  1545  0016DA  D005               	goto	l1817
  1546  0016DC                     l1815:
  1547  0016DC  90D8               	bcf	status,0,c
  1548  0016DE  3611               	rlcf	___lwdiv@divisor,f,c
  1549  0016E0  3612               	rlcf	___lwdiv@divisor+1,f,c
  1550  0016E2  2A13               	incf	___lwdiv@counter,f,c
  1551  0016E4  D000               	goto	l1817
  1552  0016E6                     l1817:
  1553  0016E6  BE12               	btfsc	___lwdiv@divisor+1,7,c
  1554  0016E8  D002               	goto	l1819
  1555  0016EA  D7F8               	goto	l1815
  1556  0016EC  D000               	goto	l1819
  1557  0016EE                     l1819:
  1558  0016EE  90D8               	bcf	status,0,c
  1559  0016F0  3614               	rlcf	___lwdiv@quotient,f,c
  1560  0016F2  3615               	rlcf	___lwdiv@quotient+1,f,c
  1561  0016F4  5011               	movf	___lwdiv@divisor,w,c
  1562  0016F6  5C0F               	subwf	___lwdiv@dividend,w,c
  1563  0016F8  5012               	movf	___lwdiv@divisor+1,w,c
  1564  0016FA  5810               	subwfb	___lwdiv@dividend+1,w,c
  1565  0016FC  A0D8               	btfss	status,0,c
  1566  0016FE  D006               	goto	l1827
  1567  001700  5011               	movf	___lwdiv@divisor,w,c
  1568  001702  5E0F               	subwf	___lwdiv@dividend,f,c
  1569  001704  5012               	movf	___lwdiv@divisor+1,w,c
  1570  001706  5A10               	subwfb	___lwdiv@dividend+1,f,c
  1571  001708  8014               	bsf	___lwdiv@quotient,0,c
  1572  00170A  D000               	goto	l1827
  1573  00170C                     l1827:
  1574  00170C  90D8               	bcf	status,0,c
  1575  00170E  3212               	rrcf	___lwdiv@divisor+1,f,c
  1576  001710  3211               	rrcf	___lwdiv@divisor,f,c
  1577  001712  2E13               	decfsz	___lwdiv@counter,f,c
  1578  001714  D7EC               	goto	l1819
  1579  001716  D000               	goto	l762
  1580  001718                     l762:
  1581  001718  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  1582  00171C  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1583  001720  0012               	return		;funcret
  1584  001722                     __end_of___lwdiv:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           prodh	equ	0xFF4
  1591                           prodl	equ	0xFF3
  1592                           intcon	equ	0xFF2
  1593                           postinc0	equ	0xFEE
  1594                           wreg	equ	0xFE8
  1595                           indf2	equ	0xFDF
  1596                           fsr2h	equ	0xFDA
  1597                           fsr2l	equ	0xFD9
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function ___fttol *****************
  1601 ;; Defined at:
  1602 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  f1              3   37[COMRAM] float 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  lval            4   47[COMRAM] unsigned long 
  1607 ;;  exp1            1   51[COMRAM] unsigned char 
  1608 ;;  sign1           1   46[COMRAM] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  4   37[COMRAM] long 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;Total ram usage:       15 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    2
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_breakDouble
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text9
  1633  0014A8                     __ptext9:
  1634                           	opt stack 0
  1635  0014A8                     ___fttol:
  1636                           	opt stack 27
  1637                           
  1638                           ;incstack = 0
  1639  0014A8  C028  F02A         	movff	___fttol@f1+2,??___fttol
  1640  0014AC  6A2B               	clrf	(??___fttol+1)& (0+255),c
  1641  0014AE  6A2C               	clrf	(??___fttol+2)& (0+255),c
  1642  0014B0  3427               	rlcf	___fttol@f1+1,w,c
  1643  0014B2  362A               	rlcf	??___fttol& (0+255),f,c
  1644  0014B4  E301               	bnc	u1351
  1645  0014B6  802B               	bsf	(??___fttol+1)& (0+255),0,c
  1646  0014B8                     u1351:
  1647  0014B8  502A               	movf	??___fttol,w,c
  1648  0014BA  6E34               	movwf	___fttol@exp1,c
  1649  0014BC  5034               	movf	___fttol@exp1,w,c
  1650  0014BE  A4D8               	btfss	status,2,c
  1651  0014C0  D002               	goto	l1769
  1652  0014C2  D039               	goto	l1793
  1653  0014C4  D063               	goto	l660
  1654  0014C6                     l1769:
  1655  0014C6  0E17               	movlw	23
  1656  0014C8  6E2A               	movwf	??___fttol& (0+255),c
  1657  0014CA  C026  F02B         	movff	___fttol@f1,??___fttol+1
  1658  0014CE  C027  F02C         	movff	___fttol@f1+1,??___fttol+2
  1659  0014D2  C028  F02D         	movff	___fttol@f1+2,??___fttol+3
  1660  0014D6  282A               	incf	??___fttol,w,c
  1661  0014D8  6E2E               	movwf	(??___fttol+4)& (0+255),c
  1662  0014DA  D004               	goto	u1370
  1663  0014DC                     u1375:
  1664  0014DC  90D8               	bcf	status,0,c
  1665  0014DE  322D               	rrcf	??___fttol+3,f,c
  1666  0014E0  322C               	rrcf	??___fttol+2,f,c
  1667  0014E2  322B               	rrcf	??___fttol+1,f,c
  1668  0014E4                     u1370:
  1669  0014E4  2E2E               	decfsz	(??___fttol+4)& (0+255),f,c
  1670  0014E6  D7FA               	goto	u1375
  1671  0014E8  502B               	movf	??___fttol+1,w,c
  1672  0014EA  6E2F               	movwf	___fttol@sign1,c
  1673  0014EC  8E27               	bsf	___fttol@f1+1,7,c
  1674  0014EE  0EFF               	movlw	255
  1675  0014F0  1626               	andwf	___fttol@f1,f,c
  1676  0014F2  0EFF               	movlw	255
  1677  0014F4  1627               	andwf	___fttol@f1+1,f,c
  1678  0014F6  0E00               	movlw	0
  1679  0014F8  1628               	andwf	___fttol@f1+2,f,c
  1680  0014FA  5026               	movf	___fttol@f1,w,c
  1681  0014FC  6E30               	movwf	___fttol@lval,c
  1682  0014FE  5027               	movf	___fttol@f1+1,w,c
  1683  001500  6E31               	movwf	___fttol@lval+1,c
  1684  001502  5028               	movf	___fttol@f1+2,w,c
  1685  001504  6E32               	movwf	___fttol@lval+2,c
  1686  001506  6A33               	clrf	___fttol@lval+3,c
  1687  001508  0E8E               	movlw	142
  1688  00150A  5E34               	subwf	___fttol@exp1,f,c
  1689  00150C  AE34               	btfss	___fttol@exp1,7,c
  1690  00150E  D010               	goto	l1791
  1691  001510  5034               	movf	___fttol@exp1,w,c
  1692  001512  0A80               	xorlw	128
  1693  001514  0F8F               	addlw	143
  1694  001516  B0D8               	btfsc	status,0,c
  1695  001518  D003               	goto	l1787
  1696  00151A  D00D               	goto	l1793
  1697  00151C  D037               	goto	l660
  1698  00151E  D000               	goto	l1787
  1699  001520                     l1787:
  1700  001520  90D8               	bcf	status,0,c
  1701  001522  3233               	rrcf	___fttol@lval+3,f,c
  1702  001524  3232               	rrcf	___fttol@lval+2,f,c
  1703  001526  3231               	rrcf	___fttol@lval+1,f,c
  1704  001528  3230               	rrcf	___fttol@lval,f,c
  1705  00152A  3E34               	incfsz	___fttol@exp1,f,c
  1706  00152C  D7F9               	goto	l1787
  1707  00152E  D019               	goto	l1801
  1708  001530                     l1791:
  1709  001530  0E17               	movlw	23
  1710  001532  6434               	cpfsgt	___fttol@exp1,c
  1711  001534  D011               	goto	l1799
  1712  001536                     l1793:
  1713  001536  0E00               	movlw	0
  1714  001538  6E26               	movwf	?___fttol,c
  1715  00153A  0E00               	movlw	0
  1716  00153C  6E27               	movwf	?___fttol+1,c
  1717  00153E  0E00               	movlw	0
  1718  001540  6E28               	movwf	?___fttol+2,c
  1719  001542  0E00               	movlw	0
  1720  001544  6E29               	movwf	?___fttol+3,c
  1721  001546  D022               	goto	l660
  1722  001548  D007               	goto	l1799
  1723  00154A                     l1797:
  1724  00154A  90D8               	bcf	status,0,c
  1725  00154C  3630               	rlcf	___fttol@lval,f,c
  1726  00154E  3631               	rlcf	___fttol@lval+1,f,c
  1727  001550  3632               	rlcf	___fttol@lval+2,f,c
  1728  001552  3633               	rlcf	___fttol@lval+3,f,c
  1729  001554  0634               	decf	___fttol@exp1,f,c
  1730  001556  D000               	goto	l1799
  1731  001558                     l1799:
  1732  001558  5034               	movf	___fttol@exp1,w,c
  1733  00155A  B4D8               	btfsc	status,2,c
  1734  00155C  D002               	goto	l1801
  1735  00155E  D7F5               	goto	l1797
  1736  001560  D000               	goto	l1801
  1737  001562                     l1801:
  1738  001562  502F               	movf	___fttol@sign1,w,c
  1739  001564  B4D8               	btfsc	status,2,c
  1740  001566  D009               	goto	l1805
  1741  001568  1E33               	comf	___fttol@lval+3,f,c
  1742  00156A  1E32               	comf	___fttol@lval+2,f,c
  1743  00156C  1E31               	comf	___fttol@lval+1,f,c
  1744  00156E  6C30               	negf	___fttol@lval,c
  1745  001570  0E00               	movlw	0
  1746  001572  2231               	addwfc	___fttol@lval+1,f,c
  1747  001574  2232               	addwfc	___fttol@lval+2,f,c
  1748  001576  2233               	addwfc	___fttol@lval+3,f,c
  1749  001578  D000               	goto	l1805
  1750  00157A                     l1805:
  1751  00157A  C030  F026         	movff	___fttol@lval,?___fttol
  1752  00157E  C031  F027         	movff	___fttol@lval+1,?___fttol+1
  1753  001582  C032  F028         	movff	___fttol@lval+2,?___fttol+2
  1754  001586  C033  F029         	movff	___fttol@lval+3,?___fttol+3
  1755  00158A  D000               	goto	l660
  1756  00158C                     l660:
  1757  00158C  0012               	return		;funcret
  1758  00158E                     __end_of___fttol:
  1759                           	opt stack 0
  1760                           tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           prodh	equ	0xFF4
  1765                           prodl	equ	0xFF3
  1766                           intcon	equ	0xFF2
  1767                           postinc0	equ	0xFEE
  1768                           wreg	equ	0xFE8
  1769                           indf2	equ	0xFDF
  1770                           fsr2h	equ	0xFDA
  1771                           fsr2l	equ	0xFD9
  1772                           status	equ	0xFD8
  1773                           
  1774 ;; *************** function ___ftmul *****************
  1775 ;; Defined at:
  1776 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  f1              3   22[COMRAM] float 
  1779 ;;  f2              3   25[COMRAM] float 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  f3_as_produc    3   32[COMRAM] unsigned um
  1782 ;;  sign            1   36[COMRAM] unsigned char 
  1783 ;;  cntr            1   35[COMRAM] unsigned char 
  1784 ;;  exp             1   31[COMRAM] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  3   22[COMRAM] float 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1794 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;Total ram usage:       15 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    3
  1801 ;; This function calls:
  1802 ;;		___ftpack
  1803 ;; This function is called by:
  1804 ;;		_breakDouble
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text10
  1809  0013B0                     __ptext10:
  1810                           	opt stack 0
  1811  0013B0                     ___ftmul:
  1812                           	opt stack 26
  1813                           
  1814                           ;incstack = 0
  1815  0013B0  C019  F01D         	movff	___ftmul@f1+2,??___ftmul
  1816  0013B4  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  1817  0013B6  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  1818  0013B8  3418               	rlcf	___ftmul@f1+1,w,c
  1819  0013BA  361D               	rlcf	??___ftmul& (0+255),f,c
  1820  0013BC  E301               	bnc	u1291
  1821  0013BE  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  1822  0013C0                     u1291:
  1823  0013C0  501D               	movf	??___ftmul,w,c
  1824  0013C2  6E20               	movwf	___ftmul@exp,c
  1825  0013C4  5020               	movf	___ftmul@exp,w,c
  1826  0013C6  A4D8               	btfss	status,2,c
  1827  0013C8  D002               	goto	l1721
  1828  0013CA  D00E               	goto	l1723
  1829  0013CC  D06C               	goto	l639
  1830  0013CE                     l1721:
  1831  0013CE  C01C  F01D         	movff	___ftmul@f2+2,??___ftmul
  1832  0013D2  6A1E               	clrf	(??___ftmul+1)& (0+255),c
  1833  0013D4  6A1F               	clrf	(??___ftmul+2)& (0+255),c
  1834  0013D6  341B               	rlcf	___ftmul@f2+1,w,c
  1835  0013D8  361D               	rlcf	??___ftmul& (0+255),f,c
  1836  0013DA  E301               	bnc	u1311
  1837  0013DC  801E               	bsf	(??___ftmul+1)& (0+255),0,c
  1838  0013DE                     u1311:
  1839  0013DE  501D               	movf	??___ftmul,w,c
  1840  0013E0  6E25               	movwf	___ftmul@sign,c
  1841  0013E2  5025               	movf	___ftmul@sign,w,c
  1842  0013E4  A4D8               	btfss	status,2,c
  1843  0013E6  D007               	goto	l1727
  1844  0013E8                     l1723:
  1845  0013E8  0E00               	movlw	0
  1846  0013EA  6E17               	movwf	?___ftmul,c
  1847  0013EC  0E00               	movlw	0
  1848  0013EE  6E18               	movwf	?___ftmul+1,c
  1849  0013F0  0E00               	movlw	0
  1850  0013F2  6E19               	movwf	?___ftmul+2,c
  1851  0013F4  D058               	goto	l639
  1852  0013F6                     l1727:
  1853  0013F6  5025               	movf	___ftmul@sign,w,c
  1854  0013F8  0F7B               	addlw	123
  1855  0013FA  2620               	addwf	___ftmul@exp,f,c
  1856  0013FC  C019  F025         	movff	___ftmul@f1+2,___ftmul@sign
  1857  001400  501C               	movf	___ftmul@f2+2,w,c
  1858  001402  1A25               	xorwf	___ftmul@sign,f,c
  1859  001404  0E80               	movlw	128
  1860  001406  1625               	andwf	___ftmul@sign,f,c
  1861  001408  8E18               	bsf	___ftmul@f1+1,7,c
  1862  00140A  8E1B               	bsf	___ftmul@f2+1,7,c
  1863  00140C  0EFF               	movlw	255
  1864  00140E  161A               	andwf	___ftmul@f2,f,c
  1865  001410  0EFF               	movlw	255
  1866  001412  161B               	andwf	___ftmul@f2+1,f,c
  1867  001414  0E00               	movlw	0
  1868  001416  161C               	andwf	___ftmul@f2+2,f,c
  1869  001418  0E00               	movlw	0
  1870  00141A  6E21               	movwf	___ftmul@f3_as_product,c
  1871  00141C  0E00               	movlw	0
  1872  00141E  6E22               	movwf	___ftmul@f3_as_product+1,c
  1873  001420  0E00               	movlw	0
  1874  001422  6E23               	movwf	___ftmul@f3_as_product+2,c
  1875  001424  0E07               	movlw	7
  1876  001426  6E24               	movwf	___ftmul@cntr,c
  1877  001428  D000               	goto	l1741
  1878  00142A                     l1741:
  1879  00142A  A017               	btfss	___ftmul@f1,0,c
  1880  00142C  D007               	goto	l1745
  1881  00142E  501A               	movf	___ftmul@f2,w,c
  1882  001430  2621               	addwf	___ftmul@f3_as_product,f,c
  1883  001432  501B               	movf	___ftmul@f2+1,w,c
  1884  001434  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  1885  001436  501C               	movf	___ftmul@f2+2,w,c
  1886  001438  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  1887  00143A  D000               	goto	l1745
  1888  00143C                     l1745:
  1889  00143C  90D8               	bcf	status,0,c
  1890  00143E  3219               	rrcf	___ftmul@f1+2,f,c
  1891  001440  3218               	rrcf	___ftmul@f1+1,f,c
  1892  001442  3217               	rrcf	___ftmul@f1,f,c
  1893  001444  90D8               	bcf	status,0,c
  1894  001446  361A               	rlcf	___ftmul@f2,f,c
  1895  001448  361B               	rlcf	___ftmul@f2+1,f,c
  1896  00144A  361C               	rlcf	___ftmul@f2+2,f,c
  1897  00144C  2E24               	decfsz	___ftmul@cntr,f,c
  1898  00144E  D7ED               	goto	l1741
  1899  001450  D000               	goto	l1749
  1900  001452                     l1749:
  1901  001452  0E09               	movlw	9
  1902  001454  6E24               	movwf	___ftmul@cntr,c
  1903  001456  D000               	goto	l1751
  1904  001458                     l1751:
  1905  001458  A017               	btfss	___ftmul@f1,0,c
  1906  00145A  D007               	goto	l1755
  1907  00145C  501A               	movf	___ftmul@f2,w,c
  1908  00145E  2621               	addwf	___ftmul@f3_as_product,f,c
  1909  001460  501B               	movf	___ftmul@f2+1,w,c
  1910  001462  2222               	addwfc	___ftmul@f3_as_product+1,f,c
  1911  001464  501C               	movf	___ftmul@f2+2,w,c
  1912  001466  2223               	addwfc	___ftmul@f3_as_product+2,f,c
  1913  001468  D000               	goto	l1755
  1914  00146A                     l1755:
  1915  00146A  90D8               	bcf	status,0,c
  1916  00146C  3219               	rrcf	___ftmul@f1+2,f,c
  1917  00146E  3218               	rrcf	___ftmul@f1+1,f,c
  1918  001470  3217               	rrcf	___ftmul@f1,f,c
  1919  001472  90D8               	bcf	status,0,c
  1920  001474  3223               	rrcf	___ftmul@f3_as_product+2,f,c
  1921  001476  3222               	rrcf	___ftmul@f3_as_product+1,f,c
  1922  001478  3221               	rrcf	___ftmul@f3_as_product,f,c
  1923  00147A  2E24               	decfsz	___ftmul@cntr,f,c
  1924  00147C  D7ED               	goto	l1751
  1925  00147E  D000               	goto	l1759
  1926  001480                     l1759:
  1927  001480  C021  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  1928  001484  C022  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1929  001488  C023  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1930  00148C  C020  F012         	movff	___ftmul@exp,___ftpack@exp
  1931  001490  C025  F013         	movff	___ftmul@sign,___ftpack@sign
  1932  001494  ECC7  F00A         	call	___ftpack	;wreg free
  1933  001498  C00F  F017         	movff	?___ftpack,?___ftmul
  1934  00149C  C010  F018         	movff	?___ftpack+1,?___ftmul+1
  1935  0014A0  C011  F019         	movff	?___ftpack+2,?___ftmul+2
  1936  0014A4  D000               	goto	l639
  1937  0014A6                     l639:
  1938  0014A6  0012               	return		;funcret
  1939  0014A8                     __end_of___ftmul:
  1940                           	opt stack 0
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           intcon	equ	0xFF2
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           indf2	equ	0xFDF
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function ___ftpack *****************
  1956 ;; Defined at:
  1957 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  arg             3   14[COMRAM] unsigned um
  1960 ;;  exp             1   17[COMRAM] unsigned char 
  1961 ;;  sign            1   18[COMRAM] unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  3   14[COMRAM] float 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        8 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    2
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		___ftmul
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text11
  1988  00158E                     __ptext11:
  1989                           	opt stack 0
  1990  00158E                     ___ftpack:
  1991                           	opt stack 26
  1992                           
  1993                           ;incstack = 0
  1994  00158E  5012               	movf	___ftpack@exp,w,c
  1995  001590  B4D8               	btfsc	status,2,c
  1996  001592  D005               	goto	l1651
  1997  001594  500F               	movf	___ftpack@arg,w,c
  1998  001596  1010               	iorwf	___ftpack@arg+1,w,c
  1999  001598  1011               	iorwf	___ftpack@arg+2,w,c
  2000  00159A  A4D8               	btfss	status,2,c
  2001  00159C  D00E               	goto	l1657
  2002  00159E                     l1651:
  2003  00159E  0E00               	movlw	0
  2004  0015A0  6E0F               	movwf	?___ftpack,c
  2005  0015A2  0E00               	movlw	0
  2006  0015A4  6E10               	movwf	?___ftpack+1,c
  2007  0015A6  0E00               	movlw	0
  2008  0015A8  6E11               	movwf	?___ftpack+2,c
  2009  0015AA  D053               	goto	l552
  2010  0015AC  D006               	goto	l1657
  2011  0015AE                     l1655:
  2012  0015AE  2A12               	incf	___ftpack@exp,f,c
  2013  0015B0  90D8               	bcf	status,0,c
  2014  0015B2  3211               	rrcf	___ftpack@arg+2,f,c
  2015  0015B4  3210               	rrcf	___ftpack@arg+1,f,c
  2016  0015B6  320F               	rrcf	___ftpack@arg,f,c
  2017  0015B8  D000               	goto	l1657
  2018  0015BA                     l1657:
  2019  0015BA  0E00               	movlw	0
  2020  0015BC  140F               	andwf	___ftpack@arg,w,c
  2021  0015BE  6E14               	movwf	??___ftpack& (0+255),c
  2022  0015C0  0E00               	movlw	0
  2023  0015C2  1410               	andwf	___ftpack@arg+1,w,c
  2024  0015C4  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2025  0015C6  0EFE               	movlw	254
  2026  0015C8  1411               	andwf	___ftpack@arg+2,w,c
  2027  0015CA  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2028  0015CC  5014               	movf	??___ftpack,w,c
  2029  0015CE  1015               	iorwf	??___ftpack+1,w,c
  2030  0015D0  1016               	iorwf	??___ftpack+2,w,c
  2031  0015D2  B4D8               	btfsc	status,2,c
  2032  0015D4  D00E               	goto	l1663
  2033  0015D6  D7EB               	goto	l1655
  2034  0015D8  D00C               	goto	l1663
  2035  0015DA                     l1659:
  2036  0015DA  2A12               	incf	___ftpack@exp,f,c
  2037  0015DC  0E01               	movlw	1
  2038  0015DE  260F               	addwf	___ftpack@arg,f,c
  2039  0015E0  0E00               	movlw	0
  2040  0015E2  2210               	addwfc	___ftpack@arg+1,f,c
  2041  0015E4  0E00               	movlw	0
  2042  0015E6  2211               	addwfc	___ftpack@arg+2,f,c
  2043  0015E8  90D8               	bcf	status,0,c
  2044  0015EA  3211               	rrcf	___ftpack@arg+2,f,c
  2045  0015EC  3210               	rrcf	___ftpack@arg+1,f,c
  2046  0015EE  320F               	rrcf	___ftpack@arg,f,c
  2047  0015F0  D000               	goto	l1663
  2048  0015F2                     l1663:
  2049  0015F2  0E00               	movlw	0
  2050  0015F4  140F               	andwf	___ftpack@arg,w,c
  2051  0015F6  6E14               	movwf	??___ftpack& (0+255),c
  2052  0015F8  0E00               	movlw	0
  2053  0015FA  1410               	andwf	___ftpack@arg+1,w,c
  2054  0015FC  6E15               	movwf	(??___ftpack+1)& (0+255),c
  2055  0015FE  0EFF               	movlw	255
  2056  001600  1411               	andwf	___ftpack@arg+2,w,c
  2057  001602  6E16               	movwf	(??___ftpack+2)& (0+255),c
  2058  001604  5014               	movf	??___ftpack,w,c
  2059  001606  1015               	iorwf	??___ftpack+1,w,c
  2060  001608  1016               	iorwf	??___ftpack+2,w,c
  2061  00160A  B4D8               	btfsc	status,2,c
  2062  00160C  D008               	goto	l1667
  2063  00160E  D7E5               	goto	l1659
  2064  001610  D006               	goto	l1667
  2065  001612                     l1665:
  2066  001612  0612               	decf	___ftpack@exp,f,c
  2067  001614  90D8               	bcf	status,0,c
  2068  001616  360F               	rlcf	___ftpack@arg,f,c
  2069  001618  3610               	rlcf	___ftpack@arg+1,f,c
  2070  00161A  3611               	rlcf	___ftpack@arg+2,f,c
  2071  00161C  D000               	goto	l1667
  2072  00161E                     l1667:
  2073  00161E  BE10               	btfsc	___ftpack@arg+1,7,c
  2074  001620  D004               	goto	l563
  2075  001622  0E02               	movlw	2
  2076  001624  6012               	cpfslt	___ftpack@exp,c
  2077  001626  D7F5               	goto	l1665
  2078  001628  D000               	goto	l563
  2079  00162A                     l563:
  2080  00162A  B012               	btfsc	___ftpack@exp,0,c
  2081  00162C  D002               	goto	l1673
  2082  00162E  9E10               	bcf	___ftpack@arg+1,7,c
  2083  001630  D000               	goto	l1673
  2084  001632                     l1673:
  2085  001632  90D8               	bcf	status,0,c
  2086  001634  3212               	rrcf	___ftpack@exp,f,c
  2087  001636  5012               	movf	___ftpack@exp,w,c
  2088  001638  1211               	iorwf	___ftpack@arg+2,f,c
  2089  00163A  5013               	movf	___ftpack@sign,w,c
  2090  00163C  B4D8               	btfsc	status,2,c
  2091  00163E  D002               	goto	l1679
  2092  001640  8E11               	bsf	___ftpack@arg+2,7,c
  2093  001642  D000               	goto	l1679
  2094  001644                     l1679:
  2095  001644  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  2096  001648  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  2097  00164C  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  2098  001650  D000               	goto	l552
  2099  001652                     l552:
  2100  001652  0012               	return		;funcret
  2101  001654                     __end_of___ftpack:
  2102                           	opt stack 0
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           prodh	equ	0xFF4
  2108                           prodl	equ	0xFF3
  2109                           intcon	equ	0xFF2
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           indf2	equ	0xFDF
  2113                           fsr2h	equ	0xFDA
  2114                           fsr2l	equ	0xFD9
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function _SerTx *****************
  2118 ;; Defined at:
  2119 ;;		line 41 in file "SerComm.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  c               1    wreg     unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  c               1   14[COMRAM] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;		None               void
  2126 ;; Registers used:
  2127 ;;		wreg
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;Total ram usage:        1 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    2
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_SerTxStr
  2144 ;;		_breakDouble
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text12
  2149  001940                     __ptext12:
  2150                           	opt stack 0
  2151  001940                     _SerTx:
  2152                           	opt stack 25
  2153                           
  2154                           ;incstack = 0
  2155                           ;SerTx@c stored from wreg
  2156  001940  6E0F               	movwf	SerTx@c,c
  2157                           
  2158                           ;SerComm.c: 43: TXREG1 = c;
  2159  001942  C00F  FFAD         	movff	SerTx@c,4013	;volatile
  2160                           
  2161                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  2162  001946  D000               	goto	l192
  2163  001948                     l192:
  2164  001948  A89E               	btfss	3998,4,c	;volatile
  2165  00194A  D7FE               	goto	l192
  2166  00194C  0012               	return		;funcret
  2167  00194E                     __end_of_SerTx:
  2168                           	opt stack 0
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           prodh	equ	0xFF4
  2174                           prodl	equ	0xFF3
  2175                           intcon	equ	0xFF2
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           indf2	equ	0xFDF
  2179                           fsr2h	equ	0xFDA
  2180                           fsr2l	equ	0xFD9
  2181                           status	equ	0xFD8
  2182                           
  2183 ;; *************** function _SendSPI1 *****************
  2184 ;; Defined at:
  2185 ;;		line 35 in file "SPISlave.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  data            1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  data            1   15[COMRAM] unsigned char 
  2190 ;;  temp            1   14[COMRAM] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;		None               void
  2193 ;; Registers used:
  2194 ;;		wreg
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;Total ram usage:        2 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    2
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text13
  2215  0018E8                     __ptext13:
  2216                           	opt stack 0
  2217  0018E8                     _SendSPI1:
  2218                           	opt stack 28
  2219                           
  2220                           ;incstack = 0
  2221                           ;SendSPI1@data stored from wreg
  2222  0018E8  6E10               	movwf	SendSPI1@data,c
  2223                           
  2224                           ;SPISlave.c: 37: SSP1BUF = data;
  2225  0018EA  C010  FFC9         	movff	SendSPI1@data,4041	;volatile
  2226                           
  2227                           ;SPISlave.c: 38: unsigned char temp;
  2228                           ;SPISlave.c: 39: PIR1bits.SSP1IF = 0;
  2229  0018EE  969E               	bcf	3998,3,c	;volatile
  2230                           
  2231                           ;SPISlave.c: 40: temp = SSP1BUF;
  2232  0018F0  CFC9 F00F          	movff	4041,SendSPI1@temp	;volatile
  2233                           
  2234                           ;SPISlave.c: 41: while (!PIR1bits.SSP1IF);
  2235  0018F4  D000               	goto	l53
  2236  0018F6                     l53:
  2237  0018F6  A69E               	btfss	3998,3,c	;volatile
  2238  0018F8  D7FE               	goto	l53
  2239                           
  2240                           ;SPISlave.c: 42: SSP1CON1bits.SSPOV1 = 0;
  2241  0018FA  9CC6               	bcf	4038,6,c	;volatile
  2242                           
  2243                           ;SPISlave.c: 43: PIR1bits.SSP1IF = 0;
  2244  0018FC  969E               	bcf	3998,3,c	;volatile
  2245  0018FE  0012               	return		;funcret
  2246  001900                     __end_of_SendSPI1:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           prodh	equ	0xFF4
  2253                           prodl	equ	0xFF3
  2254                           intcon	equ	0xFF2
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           indf2	equ	0xFDF
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _SPIReassembleDouble *****************
  2263 ;; Defined at:
  2264 ;;		line 70 in file "SPISlave.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  dub             3   17[COMRAM] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  3   14[COMRAM] unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2278 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;Total ram usage:        6 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    2
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text14
  2293  0017C4                     __ptext14:
  2294                           	opt stack 0
  2295  0017C4                     _SPIReassembleDouble:
  2296                           	opt stack 28
  2297                           
  2298                           ;SPISlave.c: 72: double dub;
  2299                           ;SPISlave.c: 73: DoublePtr = (unsigned char*) &dub;
  2300                           
  2301                           ;incstack = 0
  2302  0017C4  0E12               	movlw	low SPIReassembleDouble@dub
  2303  0017C6  6E4B               	movwf	_DoublePtr,c
  2304  0017C8  0E00               	movlw	high SPIReassembleDouble@dub
  2305  0017CA  6E4C               	movwf	_DoublePtr+1,c
  2306                           
  2307                           ;SPISlave.c: 74: DoublePtr[0] = DoubleSPIS[0];
  2308  0017CC  C04B  FFD9         	movff	_DoublePtr,fsr2l
  2309  0017D0  C04C  FFDA         	movff	_DoublePtr+1,fsr2h
  2310  0017D4  C035  FFDF         	movff	_DoubleSPIS,indf2
  2311                           
  2312                           ;SPISlave.c: 75: DoublePtr[1] = DoubleSPIS[1];
  2313  0017D8  EE20 F001          	lfsr	2,1
  2314  0017DC  504B               	movf	_DoublePtr,w,c
  2315  0017DE  26D9               	addwf	fsr2l,f,c
  2316  0017E0  504C               	movf	_DoublePtr+1,w,c
  2317  0017E2  22DA               	addwfc	fsr2h,f,c
  2318  0017E4  C036  FFDF         	movff	_DoubleSPIS+1,indf2
  2319                           
  2320                           ;SPISlave.c: 76: DoublePtr[2] = DoubleSPIS[2];
  2321  0017E8  EE20 F002          	lfsr	2,2
  2322  0017EC  504B               	movf	_DoublePtr,w,c
  2323  0017EE  26D9               	addwf	fsr2l,f,c
  2324  0017F0  504C               	movf	_DoublePtr+1,w,c
  2325  0017F2  22DA               	addwfc	fsr2h,f,c
  2326  0017F4  C037  FFDF         	movff	_DoubleSPIS+2,indf2
  2327                           
  2328                           ;SPISlave.c: 78: return dub;
  2329  0017F8  C012  F00F         	movff	SPIReassembleDouble@dub,?_SPIReassembleDouble
  2330  0017FC  C013  F010         	movff	SPIReassembleDouble@dub+1,?_SPIReassembleDouble+1
  2331  001800  C014  F011         	movff	SPIReassembleDouble@dub+2,?_SPIReassembleDouble+2
  2332  001804  D000               	goto	l73
  2333  001806                     l73:
  2334  001806  0012               	return		;funcret
  2335  001808                     __end_of_SPIReassembleDouble:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           prodh	equ	0xFF4
  2342                           prodl	equ	0xFF3
  2343                           intcon	equ	0xFF2
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           indf2	equ	0xFDF
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _SPIDisassembleDouble *****************
  2352 ;; Defined at:
  2353 ;;		line 53 in file "SPISlave.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  dub             3   16[COMRAM] unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;		None               void
  2360 ;; Registers used:
  2361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:        3 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    3
  2374 ;; This function calls:
  2375 ;;		_GenerateChecksum
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text15
  2382  001808                     __ptext15:
  2383                           	opt stack 0
  2384  001808                     _SPIDisassembleDouble:
  2385                           	opt stack 27
  2386                           
  2387                           ;SPISlave.c: 55: DoublePtr = (unsigned char*) &dub;
  2388                           
  2389                           ;incstack = 0
  2390  001808  0E11               	movlw	low SPIDisassembleDouble@dub
  2391  00180A  6E4B               	movwf	_DoublePtr,c
  2392  00180C  0E00               	movlw	high SPIDisassembleDouble@dub
  2393  00180E  6E4C               	movwf	_DoublePtr+1,c
  2394                           
  2395                           ;SPISlave.c: 56: DoubleSPIS[0] = DoublePtr[0];
  2396  001810  C04B  FFD9         	movff	_DoublePtr,fsr2l
  2397  001814  C04C  FFDA         	movff	_DoublePtr+1,fsr2h
  2398  001818  50DF               	movf	indf2,w,c
  2399  00181A  6E35               	movwf	_DoubleSPIS,c
  2400                           
  2401                           ;SPISlave.c: 57: DoubleSPIS[1] = DoublePtr[1];
  2402  00181C  EE20 F001          	lfsr	2,1
  2403  001820  504B               	movf	_DoublePtr,w,c
  2404  001822  26D9               	addwf	fsr2l,f,c
  2405  001824  504C               	movf	_DoublePtr+1,w,c
  2406  001826  22DA               	addwfc	fsr2h,f,c
  2407  001828  50DF               	movf	indf2,w,c
  2408  00182A  6E36               	movwf	_DoubleSPIS+1,c
  2409                           
  2410                           ;SPISlave.c: 58: DoubleSPIS[2] = DoublePtr[2];
  2411  00182C  EE20 F002          	lfsr	2,2
  2412  001830  504B               	movf	_DoublePtr,w,c
  2413  001832  26D9               	addwf	fsr2l,f,c
  2414  001834  504C               	movf	_DoublePtr+1,w,c
  2415  001836  22DA               	addwfc	fsr2h,f,c
  2416  001838  50DF               	movf	indf2,w,c
  2417  00183A  6E37               	movwf	_DoubleSPIS+2,c
  2418                           
  2419                           ;SPISlave.c: 59: DoubleSPIS[3] = GenerateChecksum();
  2420  00183C  EC3C  F00C         	call	_GenerateChecksum	;wreg free
  2421  001840  6E38               	movwf	_DoubleSPIS+3,c
  2422  001842  0012               	return		;funcret
  2423  001844                     __end_of_SPIDisassembleDouble:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           prodh	equ	0xFF4
  2430                           prodl	equ	0xFF3
  2431                           intcon	equ	0xFF2
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           indf2	equ	0xFDF
  2435                           fsr2h	equ	0xFDA
  2436                           fsr2l	equ	0xFD9
  2437                           status	equ	0xFD8
  2438                           
  2439 ;; *************** function _GenerateChecksum *****************
  2440 ;; Defined at:
  2441 ;;		line 62 in file "SPISlave.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  y               1   15[COMRAM] unsigned char 
  2446 ;;  sum             1   14[COMRAM] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      unsigned char 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;Total ram usage:        2 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    2
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_SPIDisassembleDouble
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text16
  2471  001878                     __ptext16:
  2472                           	opt stack 0
  2473  001878                     _GenerateChecksum:
  2474                           	opt stack 27
  2475                           
  2476                           ;SPISlave.c: 64: unsigned char y, sum = 0;
  2477                           
  2478                           ;incstack = 0
  2479  001878  0E00               	movlw	0
  2480  00187A  6E0F               	movwf	GenerateChecksum@sum,c
  2481                           
  2482                           ;SPISlave.c: 65: for (y = 0; y != 3; y++)
  2483  00187C  0E00               	movlw	0
  2484  00187E  6E10               	movwf	GenerateChecksum@y,c
  2485  001880                     l1691:
  2486  001880  0E03               	movlw	3
  2487  001882  1810               	xorwf	GenerateChecksum@y,w,c
  2488  001884  B4D8               	btfsc	status,2,c
  2489  001886  D00E               	goto	l1701
  2490  001888  D001               	goto	l1695
  2491  00188A  D00C               	goto	l1701
  2492  00188C                     l1695:
  2493                           
  2494                           ;SPISlave.c: 66: sum += DoubleSPIS[y];
  2495  00188C  5010               	movf	GenerateChecksum@y,w,c
  2496  00188E  0D01               	mullw	1
  2497  001890  0E35               	movlw	low _DoubleSPIS
  2498  001892  24F3               	addwf	prodl,w,c
  2499  001894  6ED9               	movwf	fsr2l,c
  2500  001896  0E00               	movlw	high _DoubleSPIS
  2501  001898  20F4               	addwfc	prodh,w,c
  2502  00189A  6EDA               	movwf	fsr2h,c
  2503  00189C  50DF               	movf	indf2,w,c
  2504  00189E  260F               	addwf	GenerateChecksum@sum,f,c
  2505  0018A0  2A10               	incf	GenerateChecksum@y,f,c
  2506  0018A2  D7EE               	goto	l1691
  2507  0018A4                     l1701:
  2508                           
  2509                           ;SPISlave.c: 67: return sum;
  2510  0018A4  500F               	movf	GenerateChecksum@sum,w,c
  2511  0018A6  D000               	goto	l70
  2512  0018A8                     l70:
  2513  0018A8  0012               	return		;funcret
  2514  0018AA                     __end_of_GenerateChecksum:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           prodh	equ	0xFF4
  2521                           prodl	equ	0xFF3
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           indf2	equ	0xFDF
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _ReceiveSPI1 *****************
  2531 ;; Defined at:
  2532 ;;		line 46 in file "SPISlave.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      unsigned char 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    2
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text17
  2561  001912                     __ptext17:
  2562                           	opt stack 0
  2563  001912                     _ReceiveSPI1:
  2564                           	opt stack 28
  2565                           
  2566                           ;SPISlave.c: 48: SSP1BUF = 0x00;
  2567                           
  2568                           ;incstack = 0
  2569  001912  0E00               	movlw	0
  2570  001914  6EC9               	movwf	4041,c	;volatile
  2571                           
  2572                           ;SPISlave.c: 49: while (SSP1STATbits.BF == 0);
  2573  001916  D000               	goto	l59
  2574  001918                     l59:
  2575  001918  A0C7               	btfss	4039,0,c	;volatile
  2576  00191A  D7FE               	goto	l59
  2577                           
  2578                           ;SPISlave.c: 50: return SSP1BUF;
  2579  00191C  50C9               	movf	4041,w,c	;volatile
  2580  00191E  D000               	goto	l62
  2581  001920                     l62:
  2582  001920  0012               	return		;funcret
  2583  001922                     __end_of_ReceiveSPI1:
  2584                           	opt stack 0
  2585                           tblptru	equ	0xFF8
  2586                           tblptrh	equ	0xFF7
  2587                           tblptrl	equ	0xFF6
  2588                           tablat	equ	0xFF5
  2589                           prodh	equ	0xFF4
  2590                           prodl	equ	0xFF3
  2591                           intcon	equ	0xFF2
  2592                           postinc0	equ	0xFEE
  2593                           wreg	equ	0xFE8
  2594                           indf2	equ	0xFDF
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _ISR *****************
  2600 ;; Defined at:
  2601 ;;		line 88 in file "SPItestSLAVE.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:       14 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    1
  2622 ;; This function calls:
  2623 ;;		_SPIInt
  2624 ;; This function is called by:
  2625 ;;		Interrupt level 2
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	intcode
  2630  000008                     __pintcode:
  2631                           	opt stack 0
  2632  000008                     _ISR:
  2633                           	opt stack 25
  2634                           
  2635                           ;incstack = 0
  2636  000008  CFFA F001          	movff	pclath,??_ISR
  2637  00000C  CFFB F002          	movff	pclatu,??_ISR+1
  2638  000010  CFE9 F003          	movff	fsr0l,??_ISR+2
  2639  000014  ED2A  F00B         	call	int_func,f	;refresh shadow registers
  2640                           pclatu	equ	0xFFB
  2641                           pclath	equ	0xFFA
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           intcon	equ	0xFF2
  2649                           postinc0	equ	0xFEE
  2650                           fsr0l	equ	0xFE9
  2651                           wreg	equ	0xFE8
  2652                           indf2	equ	0xFDF
  2653                           fsr2h	equ	0xFDA
  2654                           fsr2l	equ	0xFD9
  2655                           status	equ	0xFD8
  2656                           
  2657                           	psect	intcode_body
  2658  001654                     __pintcode_body:
  2659                           	opt stack 25
  2660  001654                     int_func:
  2661                           	opt stack 25
  2662  001654  0006               	pop		; remove dummy address from shadow register refresh
  2663  001656  CFEA F004          	movff	fsr0h,??_ISR+3
  2664  00165A  CFE1 F005          	movff	fsr1l,??_ISR+4
  2665  00165E  CFE2 F006          	movff	fsr1h,??_ISR+5
  2666  001662  CFD9 F007          	movff	fsr2l,??_ISR+6
  2667  001666  CFDA F008          	movff	fsr2h,??_ISR+7
  2668  00166A  CFF3 F009          	movff	prodl,??_ISR+8
  2669  00166E  CFF4 F00A          	movff	prodh,??_ISR+9
  2670  001672  CFF6 F00B          	movff	tblptrl,??_ISR+10
  2671  001676  CFF7 F00C          	movff	tblptrh,??_ISR+11
  2672  00167A  CFF8 F00D          	movff	tblptru,??_ISR+12
  2673  00167E  CFF5 F00E          	movff	tablat,??_ISR+13
  2674                           
  2675                           ;SPItestSLAVE.c: 90: if (PIR1bits.SSP1IF == 1)
  2676  001682  A69E               	btfss	3998,3,c	;volatile
  2677  001684  D003               	goto	i2l164
  2678                           
  2679                           ;SPItestSLAVE.c: 91: {
  2680                           ;SPItestSLAVE.c: 92: SPIInt();
  2681  001686  EC91  F00C         	call	_SPIInt	;wreg free
  2682  00168A  D000               	goto	i2l164
  2683  00168C                     i2l164:
  2684  00168C  C00E  FFF5         	movff	??_ISR+13,tablat
  2685  001690  C00D  FFF8         	movff	??_ISR+12,tblptru
  2686  001694  C00C  FFF7         	movff	??_ISR+11,tblptrh
  2687  001698  C00B  FFF6         	movff	??_ISR+10,tblptrl
  2688  00169C  C00A  FFF4         	movff	??_ISR+9,prodh
  2689  0016A0  C009  FFF3         	movff	??_ISR+8,prodl
  2690  0016A4  C008  FFDA         	movff	??_ISR+7,fsr2h
  2691  0016A8  C007  FFD9         	movff	??_ISR+6,fsr2l
  2692  0016AC  C006  FFE2         	movff	??_ISR+5,fsr1h
  2693  0016B0  C005  FFE1         	movff	??_ISR+4,fsr1l
  2694  0016B4  C004  FFEA         	movff	??_ISR+3,fsr0h
  2695  0016B8  C003  FFE9         	movff	??_ISR+2,fsr0l
  2696  0016BC  C002  FFFB         	movff	??_ISR+1,pclatu
  2697  0016C0  C001  FFFA         	movff	??_ISR,pclath
  2698  0016C4  0011               	retfie		f
  2699  0016C6                     __end_of_ISR:
  2700                           	opt stack 0
  2701                           pclatu	equ	0xFFB
  2702                           pclath	equ	0xFFA
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           fsr0h	equ	0xFEA
  2712                           fsr0l	equ	0xFE9
  2713                           wreg	equ	0xFE8
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           indf2	equ	0xFDF
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _SPIInt *****************
  2722 ;; Defined at:
  2723 ;;		line 26 in file "SPISlave.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;		None               void
  2730 ;; Registers used:
  2731 ;;		wreg, status,2
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_ISR
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text19
  2751  001922                     __ptext19:
  2752                           	opt stack 0
  2753  001922                     _SPIInt:
  2754                           	opt stack 25
  2755                           
  2756                           ;SPISlave.c: 28: Command = SSP1BUF;
  2757                           
  2758                           ;incstack = 0
  2759  001922  CFC9 F04D          	movff	4041,_Command	;volatile
  2760                           
  2761                           ;SPISlave.c: 29: PORTCbits.RC6 = 1;
  2762  001926  8C82               	bsf	3970,6,c	;volatile
  2763                           
  2764                           ;SPISlave.c: 30: PIR1bits.SSP1IF = 0;
  2765  001928  969E               	bcf	3998,3,c	;volatile
  2766                           
  2767                           ;SPISlave.c: 31: PIE1bits.SSP1IE = 0;
  2768  00192A  969D               	bcf	3997,3,c	;volatile
  2769                           
  2770                           ;SPISlave.c: 32: SPIflag = 1;
  2771  00192C  0E01               	movlw	1
  2772  00192E  6E4F               	movwf	_SPIflag,c
  2773  001930  0012               	return		;funcret
  2774  001932                     __end_of_SPIInt:
  2775                           	opt stack 0
  2776                           pclatu	equ	0xFFB
  2777                           pclath	equ	0xFFA
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           prodh	equ	0xFF4
  2783                           prodl	equ	0xFF3
  2784                           intcon	equ	0xFF2
  2785                           postinc0	equ	0xFEE
  2786                           fsr0h	equ	0xFEA
  2787                           fsr0l	equ	0xFE9
  2788                           wreg	equ	0xFE8
  2789                           fsr1h	equ	0xFE2
  2790                           fsr1l	equ	0xFE1
  2791                           indf2	equ	0xFDF
  2792                           fsr2h	equ	0xFDA
  2793                           fsr2l	equ	0xFD9
  2794                           status	equ	0xFD8
  2795                           pclatu	equ	0xFFB
  2796                           pclath	equ	0xFFA
  2797                           tblptru	equ	0xFF8
  2798                           tblptrh	equ	0xFF7
  2799                           tblptrl	equ	0xFF6
  2800                           tablat	equ	0xFF5
  2801                           prodh	equ	0xFF4
  2802                           prodl	equ	0xFF3
  2803                           intcon	equ	0xFF2
  2804                           postinc0	equ	0xFEE
  2805                           fsr0h	equ	0xFEA
  2806                           fsr0l	equ	0xFE9
  2807                           wreg	equ	0xFE8
  2808                           fsr1h	equ	0xFE2
  2809                           fsr1l	equ	0xFE1
  2810                           indf2	equ	0xFDF
  2811                           fsr2h	equ	0xFDA
  2812                           fsr2l	equ	0xFD9
  2813                           status	equ	0xFD8
  2814                           
  2815                           	psect	rparam
  2816  0000                     pclatu	equ	0xFFB
  2817                           pclath	equ	0xFFA
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           fsr0h	equ	0xFEA
  2827                           fsr0l	equ	0xFE9
  2828                           wreg	equ	0xFE8
  2829                           fsr1h	equ	0xFE2
  2830                           fsr1l	equ	0xFE1
  2831                           indf2	equ	0xFDF
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8


Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      80
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    DoublePtr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), SPIReassembleDouble@dub(COMRAM[3]), SPIDisassembleDouble@dub(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _SerInit->_SerTxStr
    _SerTxStr->_SerTx
    _SPIInit->_OpenSPI1
    _breakDouble->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftpack
    _SPIDisassembleDouble->_GenerateChecksum

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_breakDouble

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6612
                                              9 BANK0      2     2      0
                        _ReceiveSPI1
               _SPIDisassembleDouble
                _SPIReassembleDouble
                           _SendSPI1
                        _breakDouble
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     406
                            _SPIInit
                            _SerInit
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0     152
                           _SerTxStr
 ---------------------------------------------------------------------------------
 (3) _SerTxStr                                             2     0      2     152
                                             15 COMRAM     2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0     254
                           _OpenSPI1
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     254
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _breakDouble                                          9     6      3    5350
                                              0 BANK0      9     6      3
                              _SerTx
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     752
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     761
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     436
                                             37 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2596
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1888
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) _SerTx                                                1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SendSPI1                                             2     2      0      23
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPIReassembleDouble                                  6     3      3      89
                                             14 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _SPIDisassembleDouble                                 3     0      3     540
                                             16 COMRAM     3     0      3
                   _GenerateChecksum
 ---------------------------------------------------------------------------------
 (2) _GenerateChecksum                                     2     2      0      92
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReceiveSPI1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
                             _SPIInt
 ---------------------------------------------------------------------------------
 (6) _SPIInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReceiveSPI1
   _SPIDisassembleDouble
     _GenerateChecksum
   _SPIReassembleDouble
   _SendSPI1
   _breakDouble
     _SerTx
     ___ftmul
       ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lwdiv
     ___lwmod
   _initialize
     _SPIInit
       _OpenSPI1
     _SerInit
       _SerTxStr
         _SerTx

 _ISR (ROOT)
   _SPIInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      50       1       84.2%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B       6        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 29 02:22:56 2015

                           l53 18F6                             l62 1920                             l70 18A8  
                           l73 1806                             l59 1918                             _Kd 003F  
                           _Ki 0042                             _Kp 0045                            l213 12C0  
                          l214 130E                            l231 1736                            l240 175C  
                          l233 173A                            l145 1152                            l234 173C  
                          l237 1756                            l238 1770                            l239 1758  
                          l192 1948                            l552 1652                            l563 162A  
                          l660 158C                            l639 14A6                            l762 1718  
                          l772 17BA                            _ISR 0008                            prod 000FF3  
                          wreg 000FE8                           ?_ISR 0001                   __CFG_WDT$OFF 000000  
                         l2001 11DC                           l2013 1230                           l2007 1206  
                         l2015 1236                           l1701 18A4                           l1631 1740  
                         l1721 13CE                           l1801 1562                           l1641 1846  
                         l1651 159E                           l1723 13E8                           l1635 1760  
                         l1741 142A                           l1805 157A                           l1645 1860  
                         l1663 15F2                           l1655 15AE                           l1751 1458  
                         l1727 13F6                           l1815 16DC                           l1673 1632  
                         l1665 1612                           l1657 15BA                           l1745 143C  
                         l1817 16E6                           l1691 1880                           l1667 161E  
                         l1659 15DA                           l1755 146A                           l1827 170C  
                         l1819 16EE                           l1843 17AE                           l1835 1786  
                         l1749 1452                           l1837 1790                           l1941 10B4  
                         l1933 1080                           l1695 188C                           l1679 1644  
                         l1759 1480                           l1791 1530                           l1839 1798  
                         l1919 104E                           l1793 1536                           l1769 14C6  
                         l1961 110E                           l1945 10CE                           l1953 1102  
                         l1937 109A                           l1787 1520                           l1797 154A  
                         l1981 1168                           l1965 112A                           l1949 10E8  
                         l1799 1558                           l1967 1134                           l1977 115A  
                         l1995 11B2                           l1987 1186                           STR_1 1001  
                         u1311 13DE                           u1351 14B8                           u1370 14E4  
                         u1291 13C0                           u1375 14DC                           _main 1026  
                 ___ftpack@arg 000F                   ___ftpack@exp 0012                __end_of_SPIInit 18E8  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0018                   ___ftmul@cntr 0024  
                 ___param_bank 000010                   ___ftmul@sign 0025                          ??_ISR 0001  
                 ___fttol@exp1 0034                __end_of_SerInit 18CE                   ___fttol@lval 0030  
                        ?_main 0001                __end_of___ftmul 14A8                __end_of___fttol 158E  
              __end_of___lwdiv 1722                __end_of___lwmod 17C4                          i2l164 168C  
                        _SPBRG 000FAF         ??_SPIDisassembleDouble 0014                 __CFG_FCMEN$OFF 000000  
                        _SerTx 1940                  ___ftpack@sign 0013                     _DoubleSPIS 0035  
                        main@x 006A                  ??_ReceiveSPI1 000F                          tablat 000FF5  
                        status 000FD8            GenerateChecksum@sum 000F                __initialization 1900  
                 __end_of_main 123E                 __CFG_OSC$HSPLL 000000               __end_of_SendSPI1 1900  
             __end_of_OpenSPI1 1778                         ??_main 0035                  ___fttol@sign1 002F  
         __size_of_breakDouble 0172               __end_of_SerTxStr 1878                  __activetblptr 000003  
                       ?_SerTx 0001                      ??_SPIInit 0012               __end_of___ftpack 1654  
                       _RCREG1 000FAE                         _RCSTA1 000FAB                         _SPIInt 1922  
                       _TXREG1 000FAD                         _TXSTA1 000FAC            __end_of_ReceiveSPI1 1922  
                       SerTx@c 000F                      ??_SerInit 0012               OpenSPI1@bus_mode 000F  
                    ??___ftmul 001D                      ??___fttol 002A                      ??___lwdiv 0013  
                    ??___lwmod 0013                         clear_0 1906          ___ftmul@f3_as_product 0021  
                main@temporary 0069                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8              ?_GenerateChecksum 0001  
                   __accesstop 0060        __end_of__initialization 190C             ??_GenerateChecksum 000F  
                ___rparam_used 000001                     ___ftmul@f1 0017                     ___ftmul@f2 001A  
                   ___fttol@f1 0026                 __pcstackCOMRAM 0001                  __end_of_SerTx 194E  
            GenerateChecksum@y 0010   __size_of_SPIReassembleDouble 0044                        ??_SerTx 000F  
                  _ReceiveSPI1 1912                        ?_SPIInt 0001                      ?_SendSPI1 0001  
                    ?_OpenSPI1 000F                      ?_SerTxStr 0010                        _BAUDCON 000F7E  
                    ?___ftpack 000F                  _PIDEnableFlag 004E                        _SSP1BUF 000FC9  
               SerTxStr@string 0010                        _SPIInit 18CE                        _SPIflag 004F  
                      _Command 004D                __size_of_SPIInt 0010                     ??_SendSPI1 000F  
                   ??_OpenSPI1 0011                     ??_SerTxStr 0012                        __Hparam 0000  
                      _SerInit 18AA                        __Lparam 0000                        ___ftmul 13B0  
                      ___fttol 14A8                        ___lwdiv 16C6                        ___lwmod 1778  
                 __psmallconst 1000                     _dummy_byte 0050                   SendSPI1@data 0010  
                      __pcinit 1900                     ??___ftpack 0014                        __ramtop 1000  
                   _initialize 1932                   SendSPI1@temp 000F                        __ptext0 1026  
                      __ptext1 1932                        __ptext2 18AA                        __ptext3 1844  
                      __ptext4 18CE                        __ptext5 1722                        __ptext6 123E  
                      __ptext7 1778                        __ptext8 16C6                        __ptext9 14A8  
                 __size_of_ISR 16BE  __size_of_SPIDisassembleDouble 003C                 __pintcode_body 1654  
         end_of_initialization 190C                        int_func 1654              OpenSPI1@smp_phase 0010  
                      postinc0 000FEE              OpenSPI1@sync_mode 0011                  ??_breakDouble 0035  
                    _PORTCbits 000F82                      _TRISCbits 000F94                      _TRISDbits 000F95  
                    _TRISFbits 000F97            _SPIReassembleDouble 17C4                 __end_of_SPIInt 1932  
                  ___ftmul@exp 0020      __size_of_GenerateChecksum 0032                    ?_initialize 0001  
         ?_SPIReassembleDouble 000F                      _DoublePtr 004B            __end_of_breakDouble 13B0  
          start_initialization 1900                _CurrentVelocity 003C                   _CurrentAngle 0039  
                  __end_of_ISR 16C6                   ?_ReceiveSPI1 0001                       ??_SPIInt 0001  
            __size_of_SendSPI1 0018              __size_of_OpenSPI1 0056              __size_of_SerTxStr 0034  
        ??_SPIReassembleDouble 0012              __size_of___ftpack 00C6                    __pbssCOMRAM 0035  
                __pcstackBANK0 0060                       ?_SPIInit 0001            __size_of_initialize 000E  
       SPIReassembleDouble@dub 0012                       ?_SerInit 0001               ___lwdiv@dividend 000F  
                    __pintcode 0008               breakDouble@temp1 0065               breakDouble@temp2 0067  
                     ?___ftmul 0017                       ?___fttol 0026                       ?___lwdiv 000F  
                     ?___lwmod 000F                    _breakDouble 123E             breakDouble@tempDub 0063  
                  __smallconst 1000                 __size_of_SerTx 000E               ___lwdiv@quotient 0014  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D   __end_of_SPIDisassembleDouble 1844  
                     _PIR1bits 000F9E                       _RCONbits 000FD0                       _SSP1CON1 000FC6  
             _GenerateChecksum 1878                       _SSP1STAT 000FC7               __size_of_SPIInit 001A  
         __size_of_ReceiveSPI1 0010                       _SendSPI1 18E8                       _SetAngle 0048  
                     _OpenSPI1 1722                       _SerTxStr 1844                       __Hrparam 0000  
                     __Lrparam 0000               __size_of_SerInit 0024               __size_of___ftmul 00F8  
             __size_of___fttol 00E6               __size_of___lwdiv 005C               __size_of___lwmod 004C  
                 ??_initialize 0012                       ___ftpack 158E                ___lwdiv@divisor 0011  
              breakDouble@dubs 0060                ___lwdiv@counter 0013                       __ptext10 13B0  
                     __ptext11 158E                       __ptext12 1940                       __ptext13 18E8  
                     __ptext14 17C4                       __ptext15 1808                       __ptext16 1878  
                     __ptext17 1912                       __ptext19 1922                   _SSP1CON1bits 000FC6  
                __size_of_main 0218             __end_of_initialize 1940                   _SSP1STATbits 000FC7  
                   _INTCONbits 000FF2           _SPIDisassembleDouble 1808                       intlevel2 0000  
             ___lwmod@dividend 000F    __end_of_SPIReassembleDouble 1808                   ?_breakDouble 0060  
              ___lwmod@divisor 0011                ___lwmod@counter 0013          ?_SPIDisassembleDouble 0011  
     __end_of_GenerateChecksum 18AA        SPIDisassembleDouble@dub 0011  
