

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Oct 24 03:26:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	param0,global,class=BANK0,space=1,delta=1
    77  0000                     
    78                           	psect	idataCOMRAM
    79  0034BF                     __pidataCOMRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _AZEL
    83  0034BF  01                 	db	1
    84                           
    85                           	psect	idataBANK0
    86  0034BC                     __pidataBANK0:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _loopTime
    90                           ;PID.c: 6: unsigned char PIDEnableFlag;
    91                           ;PID.c: 7: double Ki;
    92                           ;PID.c: 8: double Kp;
    93                           ;PID.c: 9: double Kd;
    94                           ;PID.c: 10: double SetAngle;
    95                           ;PID.c: 11: double CurrentAngle;
    96                           ;PID.c: 12: double error;
    97                           ;PID.c: 13: double prevErr;
    98                           ;PID.c: 14: double intErr;
    99                           ;PID.c: 15: double StartAngle;
   100                           ;PID.c: 16: int motorInput;
   101  0034BC  C3                 	db	195
   102  0034BD  F5                 	db	245
   103  0034BE  3C                 	db	60
   104  0000                     _BAUDCON	set	3966
   105  0000                     _CCP3CON	set	4023
   106  0000                     _CCP3CONbits	set	4023
   107  0000                     _CCPR3L	set	4024
   108  0000                     _INTCON2bits	set	4081
   109  0000                     _INTCONbits	set	4082
   110  0000                     _IPR1bits	set	3999
   111  0000                     _PIE1bits	set	3997
   112  0000                     _PIR1bits	set	3998
   113  0000                     _PORTAbits	set	3968
   114  0000                     _PORTD	set	3971
   115  0000                     _PORTEbits	set	3972
   116  0000                     _PORTH	set	3975
   117  0000                     _PORTJbits	set	3976
   118  0000                     _PR2	set	4043
   119  0000                     _RCONbits	set	4048
   120  0000                     _RCREG	set	4014
   121  0000                     _RCREG1	set	4014
   122  0000                     _RCSTA1	set	4011
   123  0000                     _SPBRG	set	4015
   124  0000                     _SSP1BUF	set	4041
   125  0000                     _SSP1CON1	set	4038
   126  0000                     _SSP1CON1bits	set	4038
   127  0000                     _SSP1STAT	set	4039
   128  0000                     _SSP1STATbits	set	4039
   129  0000                     _T0CON	set	4053
   130  0000                     _T0CONbits	set	4053
   131  0000                     _T2CON	set	4042
   132  0000                     _T3CON	set	4017
   133  0000                     _TMR0H	set	4055
   134  0000                     _TMR0L	set	4054
   135  0000                     _TRISAbits	set	3986
   136  0000                     _TRISBbits	set	3987
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISEbits	set	3990
   140  0000                     _TRISFbits	set	3991
   141  0000                     _TRISGbits	set	3992
   142  0000                     _TRISH	set	3993
   143  0000                     _TRISJbits	set	3994
   144  0000                     _TXREG1	set	4013
   145  0000                     _TXSTA1	set	4012
   146                           
   147                           	psect	smallconst
   148  001000                     __psmallconst:
   149                           	opt stack 0
   150  001000  00                 	db	0
   151  001001                     STR_30:
   152  001001  57                 	db	87	;'W'
   153  001002  65                 	db	101	;'e'
   154  001003  6C                 	db	108	;'l'
   155  001004  63                 	db	99	;'c'
   156  001005  6F                 	db	111	;'o'
   157  001006  6D                 	db	109	;'m'
   158  001007  65                 	db	101	;'e'
   159  001008  20                 	db	32
   160  001009  74                 	db	116	;'t'
   161  00100A  6F                 	db	111	;'o'
   162  00100B  20                 	db	32
   163  00100C  74                 	db	116	;'t'
   164  00100D  68                 	db	104	;'h'
   165  00100E  65                 	db	101	;'e'
   166  00100F  20                 	db	32
   167  001010  77                 	db	119	;'w'
   168  001011  6F                 	db	111	;'o'
   169  001012  72                 	db	114	;'r'
   170  001013  6C                 	db	108	;'l'
   171  001014  64                 	db	100	;'d'
   172  001015  20                 	db	32
   173  001016  6F                 	db	111	;'o'
   174  001017  66                 	db	102	;'f'
   175  001018  20                 	db	32
   176  001019  74                 	db	116	;'t'
   177  00101A  6F                 	db	111	;'o'
   178  00101B  6D                 	db	109	;'m'
   179  00101C  6F                 	db	111	;'o'
   180  00101D  72                 	db	114	;'r'
   181  00101E  72                 	db	114	;'r'
   182  00101F  6F                 	db	111	;'o'
   183  001020  77                 	db	119	;'w'
   184  001021  21                 	db	33
   185  001022  21                 	db	33
   186  001023  21                 	db	33
   187  001024  00                 	db	0
   188  001025                     STR_4:
   189  001025  20                 	db	32
   190  001026  20                 	db	32
   191  001027  20                 	db	32
   192  001028  56                 	db	86	;'V'
   193  001029  61                 	db	97	;'a'
   194  00102A  6C                 	db	108	;'l'
   195  00102B  75                 	db	117	;'u'
   196  00102C  65                 	db	101	;'e'
   197  00102D  3A                 	db	58	;':'
   198  00102E  20                 	db	32
   199  00102F  00                 	db	0
   200  001030  38                 	db	56	;'8'
   201  001031  36                 	db	54	;'6'
   202  001032  38                 	db	56	;'8'
   203  001033  30                 	db	48	;'0'
   204  001034  3A                 	db	58	;':'
   205  001035  20                 	db	32
   206  001036  00                 	db	0
   207  001037  38                 	db	56	;'8'
   208  001038  37                 	db	55	;'7'
   209  001039  32                 	db	50	;'2'
   210  00103A  32                 	db	50	;'2'
   211  00103B  3A                 	db	58	;':'
   212  00103C  20                 	db	32
   213  00103D  00                 	db	0
   214  00103E                     STR_3:
   215  00103E  4B                 	db	75	;'K'
   216  00103F  65                 	db	101	;'e'
   217  001040  79                 	db	121	;'y'
   218  001041  3A                 	db	58	;':'
   219  001042  20                 	db	32
   220  001043  00                 	db	0
   221  001044                     STR_13:
   222  001044  3F                 	db	63	;'?'
   223  001045  3F                 	db	63	;'?'
   224  001046  3F                 	db	63	;'?'
   225  001047  00                 	db	0
   226  001048                     STR_21:
   227  001048  56                 	db	86	;'V'
   228  001049  45                 	db	69	;'E'
   229  00104A  4C                 	db	76	;'L'
   230  00104B  00                 	db	0
   231  00104C                     STR_5:
   232  00104C  50                 	db	80	;'P'
   233  00104D  4F                 	db	79	;'O'
   234  00104E  53                 	db	83	;'S'
   235  00104F  00                 	db	0
   236  001050                     STR_22:
   237  001050  76                 	db	118	;'v'
   238  001051  65                 	db	101	;'e'
   239  001052  6C                 	db	108	;'l'
   240  001053  00                 	db	0
   241  001054                     STR_6:
   242  001054  70                 	db	112	;'p'
   243  001055  6F                 	db	111	;'o'
   244  001056  73                 	db	115	;'s'
   245  001057  00                 	db	0
   246  001058                     STR_11:
   247  001058  4B                 	db	75	;'K'
   248  001059  44                 	db	68	;'D'
   249  00105A  00                 	db	0
   250  00105B                     STR_9:
   251  00105B  4B                 	db	75	;'K'
   252  00105C  49                 	db	73	;'I'
   253  00105D  00                 	db	0
   254  00105E                     STR_7:
   255  00105E  4B                 	db	75	;'K'
   256  00105F  50                 	db	80	;'P'
   257  001060  00                 	db	0
   258  001061                     STR_15:
   259  001061  41                 	db	65	;'A'
   260  001062  5A                 	db	90	;'Z'
   261  001063  00                 	db	0
   262  001064                     STR_12:
   263  001064  6B                 	db	107	;'k'
   264  001065  64                 	db	100	;'d'
   265  001066  00                 	db	0
   266  001067                     STR_10:
   267  001067  6B                 	db	107	;'k'
   268  001068  69                 	db	105	;'i'
   269  001069  00                 	db	0
   270  00106A                     STR_8:
   271  00106A  6B                 	db	107	;'k'
   272  00106B  70                 	db	112	;'p'
   273  00106C  00                 	db	0
   274  00106D                     STR_16:
   275  00106D  61                 	db	97	;'a'
   276  00106E  7A                 	db	122	;'z'
   277  00106F  00                 	db	0
   278  0000                     
   279                           ; #config settings
   280  001070  00                 	db	0	; dummy byte at the end
   281  0000                     
   282                           	psect	cinit
   283  003028                     __pcinit:
   284                           	opt stack 0
   285  003028                     start_initialization:
   286                           	opt stack 0
   287  003028                     __initialization:
   288                           	opt stack 0
   289                           
   290                           ; Clear objects allocated to BANK0 (60 bytes)
   291  003028  EE00  F0BE         	lfsr	0,__pbssBANK0
   292  00302C  0E3C               	movlw	60
   293  00302E                     clear_0:
   294  00302E  6AEE               	clrf	postinc0,c
   295  003030  06E8               	decf	wreg,f,c
   296  003032  E1FD               	bnz	clear_0
   297                           
   298                           ; Clear objects allocated to COMRAM (23 bytes)
   299  003034  EE00  F042         	lfsr	0,__pbssCOMRAM
   300  003038  0E17               	movlw	23
   301  00303A                     clear_1:
   302  00303A  6AEE               	clrf	postinc0,c
   303  00303C  06E8               	decf	wreg,f,c
   304  00303E  E1FD               	bnz	clear_1
   305                           
   306                           ; Initialize objects allocated to BANK0 (3 bytes)
   307                           ; load TBLPTR registers with __pidataBANK0
   308  003040  0EBC               	movlw	low __pidataBANK0
   309  003042  6EF6               	movwf	tblptrl,c
   310  003044  0E34               	movlw	high __pidataBANK0
   311  003046  6EF7               	movwf	tblptrh,c
   312  003048  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   313  00304A  6EF8               	movwf	tblptru,c
   314  00304C  0009               	tblrd		*+	;fetch initializer
   315  00304E  CFF5 F0FA          	movff	tablat,__pdataBANK0
   316  003052  0009               	tblrd		*+	;fetch initializer
   317  003054  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   318  003058  0009               	tblrd		*+	;fetch initializer
   319  00305A  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
   320                           
   321                           ; Initialize objects allocated to COMRAM (1 bytes)
   322                           ; load TBLPTR registers with __pidataCOMRAM
   323  00305E  0EBF               	movlw	low __pidataCOMRAM
   324  003060  6EF6               	movwf	tblptrl,c
   325  003062  0E34               	movlw	high __pidataCOMRAM
   326  003064  6EF7               	movwf	tblptrh,c
   327  003066  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   328  003068  6EF8               	movwf	tblptru,c
   329  00306A  0009               	tblrd		*+	;fetch initializer
   330  00306C  CFF5 F059          	movff	tablat,__pdataCOMRAM
   331  003070                     end_of_initialization:
   332                           	opt stack 0
   333  003070                     __end_of__initialization:
   334                           	opt stack 0
   335  003070  0100               	movlb	0
   336  003072  EFEC  F018         	goto	_main	;jump to C main() function
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           
   344                           	psect	bssCOMRAM
   345  000042                     __pbssCOMRAM:
   346                           	opt stack 0
   347  000042                     _CurrentVelocity:
   348                           	opt stack 0
   349  000042                     	ds	3
   350  000045                     _StrippedValue:
   351                           	opt stack 0
   352  000045                     	ds	3
   353  000048                     _RCflag:
   354                           	opt stack 0
   355  000048                     	ds	1
   356  000049                     _StrippedKey:
   357                           	opt stack 0
   358  000049                     	ds	1
   359  00004A                     _value:
   360                           	opt stack 0
   361  00004A                     	ds	10
   362  000054                     _key:
   363                           	opt stack 0
   364  000054                     	ds	5
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           
   372                           	psect	dataCOMRAM
   373  000059                     __pdataCOMRAM:
   374                           	opt stack 0
   375  000059                     _AZEL:
   376                           	opt stack 0
   377  000059                     	ds	1
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           
   385                           	psect	bssBANK0
   386  0000BE                     __pbssBANK0:
   387                           	opt stack 0
   388  0000BE                     _CurrentAngle:
   389                           	opt stack 0
   390  0000BE                     	ds	3
   391  0000C1                     _Kd:
   392                           	opt stack 0
   393  0000C1                     	ds	3
   394  0000C4                     _Ki:
   395                           	opt stack 0
   396  0000C4                     	ds	3
   397  0000C7                     _Kp:
   398                           	opt stack 0
   399  0000C7                     	ds	3
   400  0000CA                     _SetAngle:
   401                           	opt stack 0
   402  0000CA                     	ds	3
   403  0000CD                     _StartAngle:
   404                           	opt stack 0
   405  0000CD                     	ds	3
   406  0000D0                     _error:
   407                           	opt stack 0
   408  0000D0                     	ds	3
   409  0000D3                     _intErr:
   410                           	opt stack 0
   411  0000D3                     	ds	3
   412  0000D6                     _prevErr:
   413                           	opt stack 0
   414  0000D6                     	ds	3
   415  0000D9                     _motorInput:
   416                           	opt stack 0
   417  0000D9                     	ds	2
   418  0000DB                     _PIDEnableFlag:
   419                           	opt stack 0
   420  0000DB                     	ds	1
   421  0000DC                     _received:
   422                           	opt stack 0
   423  0000DC                     	ds	30
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           
   431                           	psect	dataBANK0
   432  0000FA                     __pdataBANK0:
   433                           	opt stack 0
   434  0000FA                     _loopTime:
   435                           	opt stack 0
   436  0000FA                     	ds	3
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           
   444                           	psect	cstackBANK1
   445  000100                     __pcstackBANK1:
   446                           	opt stack 0
   447  000100                     SerTx@c:
   448                           	opt stack 0
   449  000100                     OpenSPI1@bus_mode:
   450                           	opt stack 0
   451  000100                     WriteSPI1@TempVar:
   452                           	opt stack 0
   453  000100                     Delay10TCYx@unit:
   454                           	opt stack 0
   455  000100                     Delay1KTCYx@unit:
   456                           	opt stack 0
   457  000100                     Delay1TCYx@unit:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x0
   461  000100                     	ds	1
   462  000101                     OpenSPI1@smp_phase:
   463                           	opt stack 0
   464  000101                     WriteSPI1@data_out:
   465                           	opt stack 0
   466  000101                     SerTxStr@string:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x1
   470  000101                     	ds	1
   471  000102                     setGPIO@value:
   472                           	opt stack 0
   473  000102                     setIODIR@dir:
   474                           	opt stack 0
   475  000102                     OpenSPI1@sync_mode:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x2
   479  000102                     	ds	1
   480  000103                     setGPIO@address:
   481                           	opt stack 0
   482  000103                     setIODIR@address:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x3
   486  000103                     	ds	1
   487  000104                     lcdCommand@command:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x4
   491  000104                     	ds	1
   492  000105                     tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           
   499                           ; 0 bytes @ 0x5
   500                           
   501                           	psect	cstackBANK0
   502  000060                     __pcstackBANK0:
   503                           	opt stack 0
   504  000060                     ?_abs:
   505                           	opt stack 0
   506  000060                     ?___lwdiv:
   507                           	opt stack 0
   508  000060                     ?___lwmod:
   509                           	opt stack 0
   510  000060                     ?i2___ftpack:
   511                           	opt stack 0
   512  000060                     ?i2___ftneg:
   513                           	opt stack 0
   514  000060                     i2WriteSPI1@TempVar:
   515                           	opt stack 0
   516  000060                     i2Delay10TCYx@unit:
   517                           	opt stack 0
   518  000060                     abs@a:
   519                           	opt stack 0
   520  000060                     ___lwdiv@dividend:
   521                           	opt stack 0
   522  000060                     ___lwmod@dividend:
   523                           	opt stack 0
   524  000060                     i2___ftpack@arg:
   525                           	opt stack 0
   526  000060                     i2___ftge@ff1:
   527                           	opt stack 0
   528  000060                     i2___ftneg@f1:
   529                           	opt stack 0
   530                           
   531                           ; 3 bytes @ 0x0
   532  000060                     	ds	1
   533  000061                     ?_ReadRTDpos:
   534                           	opt stack 0
   535  000061                     i2WriteSPI1@data_out:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x1
   539  000061                     	ds	1
   540  000062                     ??_abs:
   541  000062                     i2setGPIO@value:
   542                           	opt stack 0
   543  000062                     ___lwdiv@divisor:
   544                           	opt stack 0
   545  000062                     ___lwmod@divisor:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x2
   549  000062                     	ds	1
   550  000063                     ??_ReadRTDpos:
   551  000063                     i2setGPIO@address:
   552                           	opt stack 0
   553  000063                     i2___ftpack@exp:
   554                           	opt stack 0
   555  000063                     i2___ftge@ff2:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0x3
   559  000063                     	ds	1
   560  000064                     lcdChar@letter:
   561                           	opt stack 0
   562  000064                     ___lwmod@counter:
   563                           	opt stack 0
   564  000064                     i2lcdCommand@command:
   565                           	opt stack 0
   566  000064                     i2___ftpack@sign:
   567                           	opt stack 0
   568  000064                     ImplementPIDMotion@PIDValue:
   569                           	opt stack 0
   570  000064                     ___lwdiv@quotient:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x4
   574  000064                     	ds	1
   575  000065                     ??i2___ftpack:
   576  000065                     lcdGoTo@pos:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x5
   580  000065                     	ds	1
   581  000066                     ??_ImplementPIDMotion:
   582  000066                     ??i2___ftge:
   583  000066                     ReadRTDpos@HighPosition:
   584                           	opt stack 0
   585  000066                     ___lwdiv@counter:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x6
   589  000066                     	ds	1
   590  000067                     ReadRTDpos@LowPosition:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x7
   594  000067                     	ds	1
   595  000068                     ?___lwtoft:
   596                           	opt stack 0
   597  000068                     ?i2___ftdiv:
   598                           	opt stack 0
   599  000068                     ReadRTDpos@FullPosition:
   600                           	opt stack 0
   601  000068                     ___lwtoft@c:
   602                           	opt stack 0
   603  000068                     i2___ftdiv@f1:
   604                           	opt stack 0
   605                           
   606                           ; 3 bytes @ 0x8
   607  000068                     	ds	2
   608  00006A                     ReadRTDpos@x:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0xA
   612  00006A                     	ds	1
   613  00006B                     i2___ftdiv@f2:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0xB
   617  00006B                     	ds	3
   618  00006E                     ??i2___ftdiv:
   619                           
   620                           ; 0 bytes @ 0xE
   621  00006E                     	ds	3
   622  000071                     i2___ftdiv@cntr:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x11
   626  000071                     	ds	1
   627  000072                     i2___ftdiv@f3:
   628                           	opt stack 0
   629                           
   630                           ; 3 bytes @ 0x12
   631  000072                     	ds	3
   632  000075                     i2___ftdiv@exp:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x15
   636  000075                     	ds	1
   637  000076                     i2___ftdiv@sign:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x16
   641  000076                     	ds	1
   642  000077                     ?i2___ftmul:
   643                           	opt stack 0
   644  000077                     i2___ftmul@f1:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x17
   648  000077                     	ds	3
   649  00007A                     i2___ftmul@f2:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x1A
   653  00007A                     	ds	3
   654  00007D                     ??i2___ftmul:
   655                           
   656                           ; 0 bytes @ 0x1D
   657  00007D                     	ds	3
   658  000080                     i2___ftmul@exp:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x20
   662  000080                     	ds	1
   663  000081                     i2___ftmul@f3_as_product:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0x21
   667  000081                     	ds	3
   668  000084                     i2___ftmul@cntr:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0x24
   672  000084                     	ds	1
   673  000085                     i2___ftmul@sign:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x25
   677  000085                     	ds	1
   678  000086                     ?_RTD2Angle:
   679                           	opt stack 0
   680  000086                     ?___ftadd:
   681                           	opt stack 0
   682  000086                     RTD2Angle@RTDAngle:
   683                           	opt stack 0
   684  000086                     ___ftadd@f1:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0x26
   688  000086                     	ds	3
   689  000089                     ___ftadd@f2:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x29
   693  000089                     	ds	3
   694  00008C                     ??___ftadd:
   695                           
   696                           ; 0 bytes @ 0x2C
   697  00008C                     	ds	3
   698  00008F                     ___ftadd@sign:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x2F
   702  00008F                     	ds	1
   703  000090                     ___ftadd@exp2:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x30
   707  000090                     	ds	1
   708  000091                     ___ftadd@exp1:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x31
   712  000091                     	ds	1
   713  000092                     ?___ftsub:
   714                           	opt stack 0
   715  000092                     ?___fttol:
   716                           	opt stack 0
   717  000092                     ___ftsub@f1:
   718                           	opt stack 0
   719  000092                     ___fttol@f1:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x32
   723  000092                     	ds	3
   724  000095                     ___ftsub@f2:
   725                           	opt stack 0
   726                           
   727                           ; 3 bytes @ 0x35
   728  000095                     	ds	1
   729  000096                     ??___fttol:
   730                           
   731                           ; 0 bytes @ 0x36
   732  000096                     	ds	2
   733  000098                     
   734                           ; 0 bytes @ 0x38
   735  000098                     	ds	3
   736  00009B                     ___fttol@sign1:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x3B
   740  00009B                     	ds	1
   741  00009C                     ___fttol@lval:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x3C
   745  00009C                     	ds	4
   746  0000A0                     ___fttol@exp1:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x40
   750  0000A0                     	ds	1
   751  0000A1                     LCDBreakDouble@dubs:
   752                           	opt stack 0
   753  0000A1                     calculatePID@angle:
   754                           	opt stack 0
   755                           
   756                           ; 3 bytes @ 0x41
   757  0000A1                     	ds	3
   758  0000A4                     LCDBreakDouble@tempDub:
   759                           	opt stack 0
   760  0000A4                     calculatePID@setpoint:
   761                           	opt stack 0
   762                           
   763                           ; 3 bytes @ 0x44
   764  0000A4                     	ds	2
   765  0000A6                     LCDBreakDouble@temp1:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x46
   769  0000A6                     	ds	1
   770  0000A7                     calculatePID@derErr:
   771                           	opt stack 0
   772                           
   773                           ; 3 bytes @ 0x47
   774  0000A7                     	ds	1
   775  0000A8                     LCDBreakDouble@temp2:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x48
   779  0000A8                     	ds	2
   780  0000AA                     _calculatePID$2645:
   781                           	opt stack 0
   782                           
   783                           ; 3 bytes @ 0x4A
   784  0000AA                     	ds	3
   785  0000AD                     _calculatePID$2716:
   786                           	opt stack 0
   787                           
   788                           ; 3 bytes @ 0x4D
   789  0000AD                     	ds	3
   790  0000B0                     ??_hISR:
   791                           
   792                           ; 0 bytes @ 0x50
   793  0000B0                     	ds	14
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           postinc0	equ	0xFEE
   799                           wreg	equ	0xFE8
   800                           
   801                           	psect	cstackCOMRAM
   802  000001                     __pcstackCOMRAM:
   803                           	opt stack 0
   804  000001                     ??_isspace:
   805  000001                     ??_isdigit:
   806  000001                     ?_strcmp:
   807                           	opt stack 0
   808  000001                     ?___ftpack:
   809                           	opt stack 0
   810  000001                     ?___ftneg:
   811                           	opt stack 0
   812  000001                     ?___lmul:
   813                           	opt stack 0
   814  000001                     i1SerTx@c:
   815                           	opt stack 0
   816  000001                     strcmp@s1:
   817                           	opt stack 0
   818  000001                     ___ftpack@arg:
   819                           	opt stack 0
   820  000001                     ___ftge@ff1:
   821                           	opt stack 0
   822  000001                     ___ftneg@f1:
   823                           	opt stack 0
   824  000001                     ___lmul@multiplier:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x0
   828  000001                     	ds	1
   829  000002                     _isdigit$2356:
   830                           	opt stack 0
   831  000002                     _isspace$2359:
   832                           	opt stack 0
   833  000002                     i1SerTxStr@string:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x1
   837  000002                     	ds	1
   838  000003                     isdigit@c:
   839                           	opt stack 0
   840  000003                     isspace@c:
   841                           	opt stack 0
   842  000003                     strcmp@s2:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x2
   846  000003                     	ds	1
   847  000004                     ___ftpack@exp:
   848                           	opt stack 0
   849  000004                     ___ftge@ff2:
   850                           	opt stack 0
   851                           
   852                           ; 3 bytes @ 0x3
   853  000004                     	ds	1
   854  000005                     ??_strcmp:
   855  000005                     ___ftpack@sign:
   856                           	opt stack 0
   857  000005                     ___lmul@multiplicand:
   858                           	opt stack 0
   859                           
   860                           ; 4 bytes @ 0x4
   861  000005                     	ds	1
   862  000006                     ??___ftpack:
   863  000006                     strcmp@r:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x5
   867  000006                     	ds	1
   868  000007                     ??___ftge:
   869                           
   870                           ; 0 bytes @ 0x6
   871  000007                     	ds	2
   872  000009                     ?___ftdiv:
   873                           	opt stack 0
   874  000009                     ?___ftmul:
   875                           	opt stack 0
   876  000009                     ?___altoft:
   877                           	opt stack 0
   878  000009                     ___ftdiv@f1:
   879                           	opt stack 0
   880  000009                     ___ftmul@f1:
   881                           	opt stack 0
   882  000009                     ___lmul@product:
   883                           	opt stack 0
   884  000009                     ___altoft@c:
   885                           	opt stack 0
   886                           
   887                           ; 4 bytes @ 0x8
   888  000009                     	ds	3
   889  00000C                     ___ftdiv@f2:
   890                           	opt stack 0
   891  00000C                     ___ftmul@f2:
   892                           	opt stack 0
   893                           
   894                           ; 3 bytes @ 0xB
   895  00000C                     	ds	1
   896  00000D                     ??___altoft:
   897                           
   898                           ; 0 bytes @ 0xC
   899  00000D                     	ds	2
   900  00000F                     ??___ftdiv:
   901  00000F                     ??___ftmul:
   902                           
   903                           ; 0 bytes @ 0xE
   904  00000F                     	ds	2
   905  000011                     ___altoft@exp:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x10
   909  000011                     	ds	1
   910  000012                     ___altoft@sign:
   911                           	opt stack 0
   912  000012                     ___ftdiv@cntr:
   913                           	opt stack 0
   914  000012                     ___ftmul@exp:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x11
   918  000012                     	ds	1
   919  000013                     ___ftdiv@f3:
   920                           	opt stack 0
   921  000013                     ___ftmul@f3_as_product:
   922                           	opt stack 0
   923                           
   924                           ; 3 bytes @ 0x12
   925  000013                     	ds	3
   926  000016                     ___ftdiv@exp:
   927                           	opt stack 0
   928  000016                     ___ftmul@cntr:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x15
   932  000016                     	ds	1
   933  000017                     ___ftdiv@sign:
   934                           	opt stack 0
   935  000017                     ___ftmul@sign:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0x16
   939  000017                     	ds	1
   940  000018                     ?_strtod:
   941                           	opt stack 0
   942  000018                     strtod@s:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x17
   946  000018                     	ds	2
   947  00001A                     strtod@res:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x19
   951  00001A                     	ds	2
   952  00001C                     ??_strtod:
   953                           
   954                           ; 0 bytes @ 0x1B
   955  00001C                     	ds	1
   956  00001D                     strtod@eexp:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x1C
   960  00001D                     	ds	1
   961  00001E                     strtod@flags:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x1D
   965  00001E                     	ds	1
   966  00001F                     strtod@expon:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x1E
   970  00001F                     	ds	1
   971  000020                     strtod@_u:
   972                           	opt stack 0
   973                           
   974                           ; 4 bytes @ 0x1F
   975  000020                     	ds	4
   976  000024                     keyValue@str:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x23
   980  000024                     	ds	2
   981  000026                     keyValue@length:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x25
   985  000026                     	ds	2
   986  000028                     ??_keyValue:
   987                           
   988                           ; 0 bytes @ 0x27
   989  000028                     	ds	2
   990  00002A                     keyValue@str_end:
   991                           	opt stack 0
   992                           
   993                           ; 2 bytes @ 0x29
   994  00002A                     	ds	2
   995  00002C                     keyValue@flag:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x2B
   999  00002C                     	ds	1
  1000  00002D                     keyValue@y:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x2C
  1004  00002D                     	ds	1
  1005  00002E                     keyValue@x:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x2D
  1009  00002E                     	ds	1
  1010  00002F                     
  1011                           ; 0 bytes @ 0x2E
  1012  00002F                     	ds	1
  1013  000030                     RCInt@counter:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x2F
  1017  000030                     	ds	1
  1018  000031                     ??_lISR:
  1019                           
  1020                           ; 0 bytes @ 0x30
  1021  000031                     	ds	17
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           
  1029 ;;
  1030 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1031 ;;
  1032 ;; *************** function _main *****************
  1033 ;; Defined at:
  1034 ;;		line 16 in file "PIDLoop.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels required when called:   18
  1054 ;; This function calls:
  1055 ;;		_initialize
  1056 ;; This function is called by:
  1057 ;;		Startup code after reset
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text0
  1062  0031D8                     __ptext0:
  1063                           	opt stack 0
  1064  0031D8                     _main:
  1065                           	opt stack 13
  1066                           
  1067                           ;PIDLoop.c: 18: initialize();
  1068                           
  1069                           ;incstack = 0
  1070  0031D8  EC02  F01A         	call	_initialize	;wreg free
  1071  0031DC  D000               	goto	l3988
  1072  0031DE                     l3988:
  1073                           
  1074                           ;PIDLoop.c: 21: {
  1075                           ;PIDLoop.c: 22: if (PIDEnableFlag == 3)
  1076  0031DE  0E03               	movlw	3
  1077  0031E0  0100               	movlb	0	; () banked
  1078  0031E2  19DB               	xorwf	_PIDEnableFlag& (0+255),w,b
  1079  0031E4  A4D8               	btfss	status,2,c
  1080  0031E6  D007               	goto	l3996
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;PIDLoop.c: 23: {
  1084                           ;PIDLoop.c: 24: TMR0H = 0xDB;
  1085  0031E8  0EDB               	movlw	219
  1086  0031EA  6ED7               	movwf	4055,c	;volatile
  1087                           
  1088                           ;PIDLoop.c: 25: TMR0L = 0x60;
  1089  0031EC  0E60               	movlw	96
  1090  0031EE  6ED6               	movwf	4054,c	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;PIDLoop.c: 26: INTCONbits.TMR0IE = 1;
  1094  0031F0  8AF2               	bsf	intcon,5,c	;volatile
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;PIDLoop.c: 27: T0CONbits.TMR0ON = 1;
  1098  0031F2  8ED5               	bsf	4053,7,c	;volatile
  1099                           
  1100                           ;PIDLoop.c: 28: }
  1101  0031F4  D7F4               	goto	l3988
  1102  0031F6                     l3996:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;PIDLoop.c: 29: else if (PIDEnableFlag == 0)
  1106  0031F6  0100               	movlb	0	; () banked
  1107  0031F8  51DB               	movf	_PIDEnableFlag& (0+255),w,b
  1108  0031FA  A4D8               	btfss	status,2,c
  1109  0031FC  D7F0               	goto	l3988
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;PIDLoop.c: 30: PIDEnableFlag = 0;
  1113  0031FE  0E00               	movlw	0
  1114  003200  0100               	movlb	0	; () banked
  1115  003202  6FDB               	movwf	_PIDEnableFlag& (0+255),b
  1116                           
  1117                           ; BSR set to: 0
  1118                           
  1119                           ; BSR set to: 0
  1120                           
  1121                           ; BSR set to: 0
  1122  003204  D7EC               	goto	l3988
  1123                           
  1124                           ; BSR set to: 0
  1125                           
  1126                           ; BSR set to: 0
  1127  003206  EF56  F000         	goto	start
  1128  00320A                     __end_of_main:
  1129                           	opt stack 0
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           intcon	equ	0xFF2
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           status	equ	0xFD8
  1138                           
  1139 ;; *************** function _initialize *****************
  1140 ;; Defined at:
  1141 ;;		line 34 in file "PIDLoop.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;		None               void
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:   17
  1162 ;; This function calls:
  1163 ;;		_MotorDriverInit
  1164 ;;		_PIDInit
  1165 ;;		_RTDInit
  1166 ;;		_SerInit
  1167 ;;		_lcdInit
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text1
  1174  003404                     __ptext1:
  1175                           	opt stack 0
  1176  003404                     _initialize:
  1177                           	opt stack 13
  1178                           
  1179                           ;PIDLoop.c: 36: RTDInit();
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;incstack = 0
  1183  003404  EC05  F019         	call	_RTDInit	;wreg free
  1184                           
  1185                           ;PIDLoop.c: 37: PIDInit();
  1186  003408  EC87  F018         	call	_PIDInit	;wreg free
  1187                           
  1188                           ;PIDLoop.c: 38: MotorDriverInit();
  1189  00340C  EC10  F01A         	call	_MotorDriverInit	;wreg free
  1190                           
  1191                           ;PIDLoop.c: 39: SerInit();
  1192  003410  EC77  F019         	call	_SerInit	;wreg free
  1193                           
  1194                           ;PIDLoop.c: 40: lcdInit();
  1195  003414  EC98  F017         	call	_lcdInit	;wreg free
  1196                           
  1197                           ;PIDLoop.c: 42: INTCONbits.GIE = 1;
  1198  003418  8EF2               	bsf	intcon,7,c	;volatile
  1199                           
  1200                           ;PIDLoop.c: 43: INTCONbits.PEIE = 1;
  1201  00341A  8CF2               	bsf	intcon,6,c	;volatile
  1202                           
  1203                           ;PIDLoop.c: 44: RCONbits.IPEN = 1;
  1204  00341C  8ED0               	bsf	4048,7,c	;volatile
  1205  00341E  0012               	return		;funcret
  1206  003420                     __end_of_initialize:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           intcon	equ	0xFF2
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           status	equ	0xFD8
  1216                           
  1217 ;; *************** function _lcdInit *****************
  1218 ;; Defined at:
  1219 ;;		line 112 in file "LCD.h"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:   16
  1240 ;; This function calls:
  1241 ;;		_OpenSPI1
  1242 ;;		_lcdCommand
  1243 ;;		_setGPIO
  1244 ;;		_setIODIR
  1245 ;; This function is called by:
  1246 ;;		_initialize
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text2
  1251  002F30                     __ptext2:
  1252                           	opt stack 0
  1253  002F30                     _lcdInit:
  1254                           	opt stack 13
  1255                           
  1256                           ;LCD.h: 114: TRISAbits.RA2=0;
  1257                           
  1258                           ;incstack = 0
  1259  002F30  9492               	bcf	3986,2,c	;volatile
  1260                           
  1261                           ;LCD.h: 115: PORTAbits.RA2=1;
  1262  002F32  8480               	bsf	3968,2,c	;volatile
  1263                           
  1264                           ;LCD.h: 117: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
  1265  002F34  0E02               	movlw	2
  1266  002F36  0101               	movlb	1	; () banked
  1267  002F38  6F00               	movwf	OpenSPI1@bus_mode& (0+255),b
  1268  002F3A  0E80               	movlw	128
  1269  002F3C  0101               	movlb	1	; () banked
  1270  002F3E  6F01               	movwf	OpenSPI1@smp_phase& (0+255),b
  1271  002F40  0E02               	movlw	2
  1272  002F42  ECB2  F016         	call	_OpenSPI1
  1273                           
  1274                           ;LCD.h: 119: setIODIR(0x01,0x00);
  1275  002F46  0E00               	movlw	0
  1276  002F48  0101               	movlb	1	; () banked
  1277  002F4A  6F02               	movwf	setIODIR@dir& (0+255),b
  1278  002F4C  0E01               	movlw	1
  1279  002F4E  ECD2  F019         	call	_setIODIR
  1280                           
  1281                           ;LCD.h: 121: setIODIR(0x00,0x00);
  1282  002F52  0E00               	movlw	0
  1283  002F54  0101               	movlb	1	; () banked
  1284  002F56  6F02               	movwf	setIODIR@dir& (0+255),b
  1285  002F58  0E00               	movlw	0
  1286  002F5A  ECD2  F019         	call	_setIODIR
  1287                           
  1288                           ;LCD.h: 123: setGPIO(0x00,0x00);
  1289  002F5E  0E00               	movlw	0
  1290  002F60  0101               	movlb	1	; () banked
  1291  002F62  6F02               	movwf	setGPIO@value& (0+255),b
  1292  002F64  0E00               	movlw	0
  1293  002F66  ECE2  F019         	call	_setGPIO
  1294                           
  1295                           ;LCD.h: 125: lcdCommand(0b00111111);
  1296  002F6A  0E3F               	movlw	63
  1297  002F6C  EC3B  F018         	call	_lcdCommand
  1298                           
  1299                           ;LCD.h: 127: lcdCommand(0b00001111);
  1300  002F70  0E0F               	movlw	15
  1301  002F72  EC3B  F018         	call	_lcdCommand
  1302                           
  1303                           ;LCD.h: 129: lcdCommand(0b00000001);
  1304  002F76  0E01               	movlw	1
  1305  002F78  EC3B  F018         	call	_lcdCommand
  1306                           
  1307                           ;LCD.h: 131: lcdCommand(0b00000110);
  1308  002F7C  0E06               	movlw	6
  1309  002F7E  EC3B  F018         	call	_lcdCommand
  1310  002F82  0012               	return		;funcret
  1311  002F84                     __end_of_lcdInit:
  1312                           	opt stack 0
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           intcon	equ	0xFF2
  1318                           postinc0	equ	0xFEE
  1319                           wreg	equ	0xFE8
  1320                           status	equ	0xFD8
  1321                           
  1322 ;; *************** function _setIODIR *****************
  1323 ;; Defined at:
  1324 ;;		line 45 in file "LCD.h"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  address         1    wreg     unsigned char 
  1327 ;;  dir             1    2[BANK1 ] unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  address         1    3[BANK1 ] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;		None               void
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1339 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:   14
  1346 ;; This function calls:
  1347 ;;		_WriteSPI1
  1348 ;; This function is called by:
  1349 ;;		_lcdInit
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text3
  1354  0033A4                     __ptext3:
  1355                           	opt stack 0
  1356  0033A4                     _setIODIR:
  1357                           	opt stack 14
  1358                           
  1359                           ;incstack = 0
  1360                           ;setIODIR@address stored from wreg
  1361  0033A4  0101               	movlb	1	; () banked
  1362  0033A6  6F03               	movwf	setIODIR@address& (0+255),b
  1363                           
  1364                           ; BSR set to: 1
  1365                           ;LCD.h: 47: PORTAbits.RA2=0;
  1366  0033A8  9480               	bcf	3968,2,c	;volatile
  1367                           
  1368                           ; BSR set to: 1
  1369                           ;LCD.h: 48: WriteSPI1(0x40);
  1370  0033AA  0E40               	movlw	64
  1371  0033AC  EC8B  F019         	call	_WriteSPI1
  1372                           
  1373                           ;LCD.h: 49: WriteSPI1(address);
  1374  0033B0  0101               	movlb	1	; () banked
  1375  0033B2  5103               	movf	setIODIR@address& (0+255),w,b
  1376  0033B4  EC8B  F019         	call	_WriteSPI1
  1377                           
  1378                           ;LCD.h: 50: WriteSPI1(dir);
  1379  0033B8  0101               	movlb	1	; () banked
  1380  0033BA  5102               	movf	setIODIR@dir& (0+255),w,b
  1381  0033BC  EC8B  F019         	call	_WriteSPI1
  1382                           
  1383                           ;LCD.h: 51: PORTAbits.RA2=1;
  1384  0033C0  8480               	bsf	3968,2,c	;volatile
  1385  0033C2  0012               	return		;funcret
  1386  0033C4                     __end_of_setIODIR:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           intcon	equ	0xFF2
  1393                           postinc0	equ	0xFEE
  1394                           wreg	equ	0xFE8
  1395                           status	equ	0xFD8
  1396                           
  1397 ;; *************** function _lcdCommand *****************
  1398 ;; Defined at:
  1399 ;;		line 54 in file "LCD.h"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  command         1    wreg     unsigned char 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  command         1    4[BANK1 ] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;		None               void
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;Total ram usage:        1 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:   15
  1420 ;; This function calls:
  1421 ;;		_Delay10TCYx
  1422 ;;		_setGPIO
  1423 ;; This function is called by:
  1424 ;;		_lcdInit
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text4
  1429  003076                     __ptext4:
  1430                           	opt stack 0
  1431  003076                     _lcdCommand:
  1432                           	opt stack 13
  1433                           
  1434                           ;incstack = 0
  1435                           ;lcdCommand@command stored from wreg
  1436  003076  0101               	movlb	1	; () banked
  1437  003078  6F04               	movwf	lcdCommand@command& (0+255),b
  1438                           
  1439                           ; BSR set to: 1
  1440                           ;LCD.h: 56: setGPIO(0x12,0x00);
  1441  00307A  0E00               	movlw	0
  1442  00307C  0101               	movlb	1	; () banked
  1443  00307E  6F02               	movwf	setGPIO@value& (0+255),b
  1444  003080  0E12               	movlw	18
  1445  003082  ECE2  F019         	call	_setGPIO
  1446                           
  1447                           ;LCD.h: 57: Delay10TCYx(0);
  1448  003086  0E00               	movlw	0
  1449  003088  EC29  F01A         	call	_Delay10TCYx
  1450                           
  1451                           ;LCD.h: 58: setGPIO(0x13, command);
  1452  00308C  C104  F102         	movff	lcdCommand@command,setGPIO@value
  1453  003090  0E13               	movlw	19
  1454  003092  ECE2  F019         	call	_setGPIO
  1455                           
  1456                           ;LCD.h: 59: Delay10TCYx(0);
  1457  003096  0E00               	movlw	0
  1458  003098  EC29  F01A         	call	_Delay10TCYx
  1459                           
  1460                           ;LCD.h: 60: setGPIO(0x12,0x40);
  1461  00309C  0E40               	movlw	64
  1462  00309E  0101               	movlb	1	; () banked
  1463  0030A0  6F02               	movwf	setGPIO@value& (0+255),b
  1464  0030A2  0E12               	movlw	18
  1465  0030A4  ECE2  F019         	call	_setGPIO
  1466                           
  1467                           ;LCD.h: 61: Delay10TCYx(0);
  1468  0030A8  0E00               	movlw	0
  1469  0030AA  EC29  F01A         	call	_Delay10TCYx
  1470                           
  1471                           ;LCD.h: 62: setGPIO(0x12,0x00);
  1472  0030AE  0E00               	movlw	0
  1473  0030B0  0101               	movlb	1	; () banked
  1474  0030B2  6F02               	movwf	setGPIO@value& (0+255),b
  1475  0030B4  0E12               	movlw	18
  1476  0030B6  ECE2  F019         	call	_setGPIO
  1477                           
  1478                           ;LCD.h: 63: Delay10TCYx(0);
  1479  0030BA  0E00               	movlw	0
  1480  0030BC  EC29  F01A         	call	_Delay10TCYx
  1481  0030C0  0012               	return		;funcret
  1482  0030C2                     __end_of_lcdCommand:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           intcon	equ	0xFF2
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           status	equ	0xFD8
  1492                           
  1493 ;; *************** function _setGPIO *****************
  1494 ;; Defined at:
  1495 ;;		line 34 in file "LCD.h"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  address         1    wreg     unsigned char 
  1498 ;;  value           1    2[BANK1 ] unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  address         1    3[BANK1 ] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;		None               void
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1510 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;Total ram usage:        2 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:   14
  1517 ;; This function calls:
  1518 ;;		_WriteSPI1
  1519 ;; This function is called by:
  1520 ;;		_lcdCommand
  1521 ;;		_lcdInit
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text5
  1526  0033C4                     __ptext5:
  1527                           	opt stack 0
  1528  0033C4                     _setGPIO:
  1529                           	opt stack 14
  1530                           
  1531                           ;incstack = 0
  1532                           ;setGPIO@address stored from wreg
  1533  0033C4  0101               	movlb	1	; () banked
  1534  0033C6  6F03               	movwf	setGPIO@address& (0+255),b
  1535                           
  1536                           ; BSR set to: 1
  1537                           ;LCD.h: 36: PORTAbits.RA2=0;
  1538  0033C8  9480               	bcf	3968,2,c	;volatile
  1539                           
  1540                           ; BSR set to: 1
  1541                           ;LCD.h: 39: WriteSPI1(0x40);
  1542  0033CA  0E40               	movlw	64
  1543  0033CC  EC8B  F019         	call	_WriteSPI1
  1544                           
  1545                           ;LCD.h: 40: WriteSPI1(address);
  1546  0033D0  0101               	movlb	1	; () banked
  1547  0033D2  5103               	movf	setGPIO@address& (0+255),w,b
  1548  0033D4  EC8B  F019         	call	_WriteSPI1
  1549                           
  1550                           ;LCD.h: 41: WriteSPI1(value);
  1551  0033D8  0101               	movlb	1	; () banked
  1552  0033DA  5102               	movf	setGPIO@value& (0+255),w,b
  1553  0033DC  EC8B  F019         	call	_WriteSPI1
  1554                           
  1555                           ;LCD.h: 42: PORTAbits.RA2=1;
  1556  0033E0  8480               	bsf	3968,2,c	;volatile
  1557  0033E2  0012               	return		;funcret
  1558  0033E4                     __end_of_setGPIO:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           intcon	equ	0xFF2
  1565                           postinc0	equ	0xFEE
  1566                           wreg	equ	0xFE8
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _WriteSPI1 *****************
  1570 ;; Defined at:
  1571 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  data_out        1    wreg     unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  data_out        1    1[BANK1 ] unsigned char 
  1576 ;;  TempVar         1    0[BANK1 ] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      char 
  1579 ;; Registers used:
  1580 ;;		wreg
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        2 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:   13
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_setGPIO
  1597 ;;		_setIODIR
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text6
  1602  003316                     __ptext6:
  1603                           	opt stack 0
  1604  003316                     _WriteSPI1:
  1605                           	opt stack 14
  1606                           
  1607                           ;incstack = 0
  1608                           ;WriteSPI1@data_out stored from wreg
  1609  003316  0101               	movlb	1	; () banked
  1610  003318  6F01               	movwf	WriteSPI1@data_out& (0+255),b
  1611                           
  1612                           ; BSR set to: 1
  1613  00331A  CFC9 F100          	movff	4041,WriteSPI1@TempVar	;volatile
  1614  00331E  969E               	bcf	3998,3,c	;volatile
  1615  003320  9EC6               	bcf	4038,7,c	;volatile
  1616                           
  1617                           ; BSR set to: 1
  1618  003322  C101  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  1619                           
  1620                           ; BSR set to: 1
  1621  003326  BEC6               	btfsc	4038,7,c	;volatile
  1622  003328  D007               	goto	l468
  1623  00332A  D002               	goto	l470
  1624                           
  1625                           ; BSR set to: 1
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;	Return value of _WriteSPI1 is never used
  1629  00332C  D005               	goto	l468
  1630                           
  1631                           ; BSR set to: 1
  1632  00332E  D000               	goto	l470
  1633  003330                     l470:
  1634  003330  B69E               	btfsc	3998,3,c	;volatile
  1635  003332  D002               	goto	l468
  1636  003334  D7FD               	goto	l470
  1637  003336  D000               	goto	l468
  1638  003338                     l468:
  1639  003338  0012               	return		;funcret
  1640  00333A                     __end_of_WriteSPI1:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           intcon	equ	0xFF2
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _OpenSPI1 *****************
  1652 ;; Defined at:
  1653 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  sync_mode       1    wreg     unsigned char 
  1656 ;;  bus_mode        1    0[BANK1 ] unsigned char 
  1657 ;;  smp_phase       1    1[BANK1 ] unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  sync_mode       1    2[BANK1 ] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:        3 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:   13
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_lcdInit
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text7
  1684  002D64                     __ptext7:
  1685                           	opt stack 0
  1686  002D64                     _OpenSPI1:
  1687                           	opt stack 15
  1688                           
  1689                           ;incstack = 0
  1690                           ;OpenSPI1@sync_mode stored from wreg
  1691  002D64  0101               	movlb	1	; () banked
  1692  002D66  6F02               	movwf	OpenSPI1@sync_mode& (0+255),b
  1693                           
  1694                           ; BSR set to: 1
  1695  002D68  0E3F               	movlw	63
  1696  002D6A  16C7               	andwf	4039,f,c	;volatile
  1697                           
  1698                           ; BSR set to: 1
  1699  002D6C  0E00               	movlw	0
  1700  002D6E  6EC6               	movwf	4038,c	;volatile
  1701                           
  1702                           ; BSR set to: 1
  1703  002D70  0101               	movlb	1	; () banked
  1704  002D72  5102               	movf	OpenSPI1@sync_mode& (0+255),w,b
  1705  002D74  12C6               	iorwf	4038,f,c	;volatile
  1706                           
  1707                           ; BSR set to: 1
  1708  002D76  0101               	movlb	1	; () banked
  1709  002D78  5101               	movf	OpenSPI1@smp_phase& (0+255),w,b
  1710  002D7A  12C7               	iorwf	4039,f,c	;volatile
  1711  002D7C  D005               	goto	l3066
  1712  002D7E                     l446:
  1713                           
  1714                           ; BSR set to: 1
  1715  002D7E  8CC7               	bsf	4039,6,c	;volatile
  1716  002D80  D014               	goto	l3070
  1717  002D82                     l448:
  1718                           
  1719                           ; BSR set to: 1
  1720  002D82  8CC7               	bsf	4039,6,c	;volatile
  1721  002D84                     l449:
  1722                           
  1723                           ; BSR set to: 1
  1724  002D84  88C6               	bsf	4038,4,c	;volatile
  1725                           
  1726                           ; BSR set to: 1
  1727                           
  1728                           ; BSR set to: 1
  1729  002D86  D011               	goto	l3070
  1730  002D88                     l3066:
  1731                           
  1732                           ; BSR set to: 1
  1733  002D88  0101               	movlb	1	; () banked
  1734  002D8A  5100               	movf	OpenSPI1@bus_mode& (0+255),w,b
  1735                           
  1736                           ; Switch size 1, requested type "space"
  1737                           ; Number of cases is 3, Range of values is 0 to 3
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte           10     6 (average)
  1741                           ;	Chosen strategy is simple_byte
  1742  002D8C  0A00               	xorlw	0	; case 0
  1743  002D8E  B4D8               	btfsc	status,2,c
  1744  002D90  D7F6               	goto	l446
  1745  002D92  0A02               	xorlw	2	; case 2
  1746  002D94  B4D8               	btfsc	status,2,c
  1747  002D96  D7F5               	goto	l448
  1748  002D98  0A01               	xorlw	1	; case 3
  1749  002D9A  B4D8               	btfsc	status,2,c
  1750  002D9C  D7F3               	goto	l449
  1751                           
  1752                           ; BSR set to: 1
  1753  002D9E  D005               	goto	l3070
  1754  002DA0                     l452:
  1755                           
  1756                           ; BSR set to: 1
  1757  002DA0  8E97               	bsf	3991,7,c	;volatile
  1758  002DA2                     l454:
  1759                           
  1760                           ; BSR set to: 1
  1761  002DA2  8694               	bsf	3988,3,c	;volatile
  1762  002DA4  D00B               	goto	l453
  1763  002DA6                     l455:
  1764                           
  1765                           ; BSR set to: 1
  1766  002DA6  9694               	bcf	3988,3,c	;volatile
  1767                           
  1768                           ; BSR set to: 1
  1769  002DA8  D009               	goto	l453
  1770  002DAA                     l3070:
  1771                           
  1772                           ; BSR set to: 1
  1773  002DAA  0101               	movlb	1	; () banked
  1774  002DAC  5102               	movf	OpenSPI1@sync_mode& (0+255),w,b
  1775                           
  1776                           ; Switch size 1, requested type "space"
  1777                           ; Number of cases is 2, Range of values is 4 to 5
  1778                           ; switch strategies available:
  1779                           ; Name         Instructions Cycles
  1780                           ; simple_byte            7     4 (average)
  1781                           ;	Chosen strategy is simple_byte
  1782  002DAE  0A04               	xorlw	4	; case 4
  1783  002DB0  B4D8               	btfsc	status,2,c
  1784  002DB2  D7F6               	goto	l452
  1785  002DB4  0A01               	xorlw	1	; case 5
  1786  002DB6  B4D8               	btfsc	status,2,c
  1787  002DB8  D7F4               	goto	l454
  1788  002DBA  D7F5               	goto	l455
  1789  002DBC                     l453:
  1790                           
  1791                           ; BSR set to: 1
  1792  002DBC  8894               	bsf	3988,4,c	;volatile
  1793  002DBE  9A94               	bcf	3988,5,c	;volatile
  1794                           
  1795                           ; BSR set to: 1
  1796  002DC0  8AC6               	bsf	4038,5,c	;volatile
  1797                           
  1798                           ; BSR set to: 1
  1799  002DC2  0012               	return		;funcret
  1800  002DC4                     __end_of_OpenSPI1:
  1801                           	opt stack 0
  1802                           tblptru	equ	0xFF8
  1803                           tblptrh	equ	0xFF7
  1804                           tblptrl	equ	0xFF6
  1805                           tablat	equ	0xFF5
  1806                           intcon	equ	0xFF2
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           status	equ	0xFD8
  1810                           
  1811 ;; *************** function _SerInit *****************
  1812 ;; Defined at:
  1813 ;;		line 19 in file "SerComm.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;		None               void
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:   15
  1834 ;; This function calls:
  1835 ;;		_SerTxStr
  1836 ;; This function is called by:
  1837 ;;		_initialize
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text8
  1842  0032EE                     __ptext8:
  1843                           	opt stack 0
  1844  0032EE                     _SerInit:
  1845                           	opt stack 14
  1846                           
  1847                           ;SerComm.c: 26: TXSTA1 = 0x24;
  1848                           
  1849                           ; BSR set to: 1
  1850                           ;incstack = 0
  1851  0032EE  0E24               	movlw	36
  1852  0032F0  6EAC               	movwf	4012,c	;volatile
  1853                           
  1854                           ;SerComm.c: 27: RCSTA1 = 0x90;
  1855  0032F2  0E90               	movlw	144
  1856  0032F4  6EAB               	movwf	4011,c	;volatile
  1857                           
  1858                           ;SerComm.c: 28: BAUDCON = 0x00;
  1859  0032F6  0E00               	movlw	0
  1860  0032F8  6E7E               	movwf	3966,c	;volatile
  1861                           
  1862                           ;SerComm.c: 29: SPBRG = 21;
  1863  0032FA  0E15               	movlw	21
  1864  0032FC  6EAF               	movwf	4015,c	;volatile
  1865                           
  1866                           ;SerComm.c: 31: RCONbits.IPEN = 1;
  1867  0032FE  8ED0               	bsf	4048,7,c	;volatile
  1868                           
  1869                           ;SerComm.c: 32: IPR1bits.RCIP = 0;
  1870  003300  9A9F               	bcf	3999,5,c	;volatile
  1871                           
  1872                           ;SerComm.c: 33: PIE1bits.RC1IE = 1;
  1873  003302  8A9D               	bsf	3997,5,c	;volatile
  1874                           
  1875                           ;SerComm.c: 35: SerTxStr("Welcome to the world of tomorrow!!!");
  1876  003304  0E01               	movlw	low STR_30
  1877  003306  0101               	movlb	1	; () banked
  1878  003308  6F01               	movwf	SerTxStr@string& (0+255),b
  1879  00330A  0E10               	movlw	high STR_30
  1880  00330C  0101               	movlb	1	; () banked
  1881  00330E  6F02               	movwf	(SerTxStr@string+1)& (0+255),b
  1882  003310  EC12  F017         	call	_SerTxStr	;wreg free
  1883  003314  0012               	return		;funcret
  1884  003316                     __end_of_SerInit:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           intcon	equ	0xFF2
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _SerTxStr *****************
  1896 ;; Defined at:
  1897 ;;		line 50 in file "SerComm.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  string          2    1[BANK1 ] PTR unsigned char 
  1900 ;;		 -> STR_30(36), STR_29(4), STR_14(6), STR_13(4), 
  1901 ;;		 -> STR_4(11), value(10), STR_3(6), key(5), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;		None               void
  1906 ;; Registers used:
  1907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1913 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;Total ram usage:        2 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:   14
  1920 ;; This function calls:
  1921 ;;		_SerTx
  1922 ;; This function is called by:
  1923 ;;		_SerInit
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text9
  1928  002E24                     __ptext9:
  1929                           	opt stack 0
  1930  002E24                     _SerTxStr:
  1931                           	opt stack 14
  1932                           
  1933                           ;SerComm.c: 52: while (*string)
  1934                           
  1935                           ;incstack = 0
  1936  002E24  D017               	goto	l3084
  1937  002E26                     l3080:
  1938                           
  1939                           ;SerComm.c: 53: SerTx(*string++);
  1940  002E26  C101  FFF6         	movff	SerTxStr@string,tblptrl
  1941  002E2A  C102  FFF7         	movff	SerTxStr@string+1,tblptrh
  1942  002E2E  0E00               	movlw	low (__smallconst shr (0+16))
  1943  002E30  6EF8               	movwf	tblptru,c
  1944  002E32  0E0F               	movlw	(high __ramtop+-1)
  1945  002E34  64F7               	cpfsgt	tblptrh,c
  1946  002E36  D003               	bra	u2877
  1947  002E38  0008               	tblrd		*
  1948  002E3A  50F5               	movf	tablat,w,c
  1949  002E3C  D005               	bra	u2870
  1950  002E3E                     u2877:
  1951  002E3E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1952  002E42  CFF7 FFEA          	movff	tblptrh,fsr0h
  1953  002E46  50EF               	movf	indf0,w,c
  1954  002E48                     u2870:
  1955  002E48  EC3F  F01A         	call	_SerTx
  1956  002E4C  0101               	movlb	1	; () banked
  1957  002E4E  4B01               	infsnz	SerTxStr@string& (0+255),f,b
  1958  002E50  2B02               	incf	(SerTxStr@string+1)& (0+255),f,b
  1959  002E52  D000               	goto	l3084
  1960  002E54                     l3084:
  1961  002E54  C101  FFF6         	movff	SerTxStr@string,tblptrl
  1962  002E58  C102  FFF7         	movff	SerTxStr@string+1,tblptrh
  1963  002E5C  0E00               	movlw	low (__smallconst shr (0+16))
  1964  002E5E  6EF8               	movwf	tblptru,c
  1965  002E60  0E0F               	movlw	(high __ramtop+-1)
  1966  002E62  64F7               	cpfsgt	tblptrh,c
  1967  002E64  D003               	bra	u2887
  1968  002E66  0008               	tblrd		*
  1969  002E68  50F5               	movf	tablat,w,c
  1970  002E6A  D005               	bra	u2880
  1971  002E6C                     u2887:
  1972  002E6C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1973  002E70  CFF7 FFEA          	movff	tblptrh,fsr0h
  1974  002E74  50EF               	movf	indf0,w,c
  1975  002E76                     u2880:
  1976  002E76  0900               	iorlw	0
  1977  002E78  A4D8               	btfss	status,2,c
  1978  002E7A  D7D5               	goto	l3080
  1979  002E7C  0012               	return		;funcret
  1980  002E7E                     __end_of_SerTxStr:
  1981                           	opt stack 0
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           intcon	equ	0xFF2
  1987                           indf0	equ	0xFEF
  1988                           postinc0	equ	0xFEE
  1989                           fsr0h	equ	0xFEA
  1990                           fsr0l	equ	0xFE9
  1991                           wreg	equ	0xFE8
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _SerTx *****************
  1995 ;; Defined at:
  1996 ;;		line 41 in file "SerComm.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  c               1    wreg     unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  c               1    0[BANK1 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;		None               void
  2003 ;; Registers used:
  2004 ;;		wreg
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        1 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:   13
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_SerTxStr
  2021 ;;		_breakDouble
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text10
  2026  00347E                     __ptext10:
  2027                           	opt stack 0
  2028  00347E                     _SerTx:
  2029                           	opt stack 14
  2030                           
  2031                           ;incstack = 0
  2032                           ;SerTx@c stored from wreg
  2033  00347E  0101               	movlb	1	; () banked
  2034  003480  6F00               	movwf	SerTx@c& (0+255),b
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;SerComm.c: 43: TXREG1 = c;
  2038  003482  C100  FFAD         	movff	SerTx@c,4013	;volatile
  2039                           
  2040                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  2041  003486  D000               	goto	l310
  2042  003488                     l310:
  2043  003488  A89E               	btfss	3998,4,c	;volatile
  2044  00348A  D7FE               	goto	l310
  2045  00348C  0012               	return		;funcret
  2046  00348E                     __end_of_SerTx:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           intcon	equ	0xFF2
  2053                           indf0	equ	0xFEF
  2054                           postinc0	equ	0xFEE
  2055                           fsr0h	equ	0xFEA
  2056                           fsr0l	equ	0xFE9
  2057                           wreg	equ	0xFE8
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function _RTDInit *****************
  2061 ;; Defined at:
  2062 ;;		line 3 in file "ResolverToDigital.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		wreg, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:   14
  2083 ;; This function calls:
  2084 ;;		_Delay10TCYx
  2085 ;;		_Delay1KTCYx
  2086 ;;		_Delay1TCYx
  2087 ;; This function is called by:
  2088 ;;		_initialize
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text11
  2093  00320A                     __ptext11:
  2094                           	opt stack 0
  2095  00320A                     _RTDInit:
  2096                           	opt stack 15
  2097                           
  2098                           ;ResolverToDigital.c: 5: TRISD = 0xFF;
  2099                           
  2100                           ;incstack = 0
  2101  00320A  6895               	setf	3989,c	;volatile
  2102                           
  2103                           ;ResolverToDigital.c: 6: TRISH = 0xFF;
  2104  00320C  6899               	setf	3993,c	;volatile
  2105                           
  2106                           ;ResolverToDigital.c: 7: TRISEbits.RE0 = 0;
  2107  00320E  9096               	bcf	3990,0,c	;volatile
  2108                           
  2109                           ;ResolverToDigital.c: 8: TRISEbits.RE1 = 0;
  2110  003210  9296               	bcf	3990,1,c	;volatile
  2111                           
  2112                           ;ResolverToDigital.c: 9: TRISEbits.RE2 = 0;
  2113  003212  9496               	bcf	3990,2,c	;volatile
  2114                           
  2115                           ;ResolverToDigital.c: 10: TRISJbits.RJ0 = 0;
  2116  003214  909A               	bcf	3994,0,c	;volatile
  2117                           
  2118                           ;ResolverToDigital.c: 11: TRISEbits.RE5 = 1;
  2119  003216  8A96               	bsf	3990,5,c	;volatile
  2120                           
  2121                           ;ResolverToDigital.c: 12: TRISEbits.RE6 = 1;
  2122  003218  8C96               	bsf	3990,6,c	;volatile
  2123                           
  2124                           ;ResolverToDigital.c: 13: TRISEbits.RE7 = 1;
  2125  00321A  8E96               	bsf	3990,7,c	;volatile
  2126                           
  2127                           ;ResolverToDigital.c: 17: PORTJbits.RJ0 = 0;
  2128  00321C  9088               	bcf	3976,0,c	;volatile
  2129                           
  2130                           ;ResolverToDigital.c: 18: Delay10TCYx(10);
  2131  00321E  0E0A               	movlw	10
  2132  003220  EC29  F01A         	call	_Delay10TCYx
  2133                           
  2134                           ;ResolverToDigital.c: 19: PORTJbits.RJ0 = 1;
  2135  003224  8088               	bsf	3976,0,c	;volatile
  2136                           
  2137                           ;ResolverToDigital.c: 20: Delay1KTCYx(20);
  2138  003226  0E14               	movlw	20
  2139  003228  EC1E  F01A         	call	_Delay1KTCYx
  2140                           
  2141                           ;ResolverToDigital.c: 21: PORTEbits.RE0 = 0;
  2142  00322C  9084               	bcf	3972,0,c	;volatile
  2143                           
  2144                           ;ResolverToDigital.c: 22: Delay1TCYx(1);
  2145  00322E  0E01               	movlw	1
  2146  003230  EC47  F01A         	call	_Delay1TCYx
  2147                           
  2148                           ;ResolverToDigital.c: 23: PORTEbits.RE0 = 1;
  2149  003234  8084               	bsf	3972,0,c	;volatile
  2150                           
  2151                           ;ResolverToDigital.c: 25: PORTEbits.RE2 = 0;
  2152  003236  9484               	bcf	3972,2,c	;volatile
  2153  003238  0012               	return		;funcret
  2154  00323A                     __end_of_RTDInit:
  2155                           	opt stack 0
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           intcon	equ	0xFF2
  2161                           indf0	equ	0xFEF
  2162                           postinc0	equ	0xFEE
  2163                           fsr0h	equ	0xFEA
  2164                           fsr0l	equ	0xFE9
  2165                           wreg	equ	0xFE8
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _Delay1TCYx *****************
  2169 ;; Defined at:
  2170 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1tcyx.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  unit            1    wreg     unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  unit            1    0[BANK1 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;Total ram usage:        1 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:   13
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_RTDInit
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text12
  2199  00348E                     __ptext12:
  2200                           	opt stack 0
  2201  00348E                     _Delay1TCYx:
  2202                           	opt stack 15
  2203                           
  2204                           ;incstack = 0
  2205                           ;Delay1TCYx@unit stored from wreg
  2206  00348E  0101               	movlb	1	; () banked
  2207  003490  6F00               	movwf	Delay1TCYx@unit& (0+255),b
  2208  003492                     l777:
  2209                           
  2210                           ; BSR set to: 1
  2211  003492  F000               	nop	
  2212  003494  0101               	movlb	1	; () banked
  2213  003496  2F00               	decfsz	Delay1TCYx@unit& (0+255),f,b
  2214  003498  D7FC               	goto	l777
  2215  00349A  D000               	goto	l779
  2216  00349C                     l779:
  2217                           
  2218                           ; BSR set to: 1
  2219  00349C  0012               	return		;funcret
  2220  00349E                     __end_of_Delay1TCYx:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           intcon	equ	0xFF2
  2227                           indf0	equ	0xFEF
  2228                           postinc0	equ	0xFEE
  2229                           fsr0h	equ	0xFEA
  2230                           fsr0l	equ	0xFE9
  2231                           wreg	equ	0xFE8
  2232                           status	equ	0xFD8
  2233                           
  2234 ;; *************** function _Delay1KTCYx *****************
  2235 ;; Defined at:
  2236 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1ktcyx.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  unit            1    wreg     unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  unit            1    0[BANK1 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;		None               void
  2243 ;; Registers used:
  2244 ;;		wreg
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;Total ram usage:        1 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:   13
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_RTDInit
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text13
  2265  00343C                     __ptext13:
  2266                           	opt stack 0
  2267  00343C                     _Delay1KTCYx:
  2268                           	opt stack 15
  2269                           
  2270                           ; BSR set to: 1
  2271                           ;incstack = 0
  2272                           ;Delay1KTCYx@unit stored from wreg
  2273  00343C  0101               	movlb	1	; () banked
  2274  00343E  6F00               	movwf	Delay1KTCYx@unit& (0+255),b
  2275  003440                     
  2276                           ; BSR set to: 1
  2277  003440  0EFA               	movlw	250
  2278  003442                     u4317:
  2279  003442  F000               	nop	
  2280  003444  2EE8               	decfsz	wreg,f,c
  2281  003446  D7FD               	goto	u4317
  2282  003448  0101               	movlb	1	; () banked
  2283  00344A  2F00               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2284  00344C  D7F9               	goto	l3264
  2285  00344E  D000               	goto	l772
  2286  003450                     l772:
  2287                           
  2288                           ; BSR set to: 1
  2289  003450  0012               	return		;funcret
  2290  003452                     __end_of_Delay1KTCYx:
  2291                           	opt stack 0
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           intcon	equ	0xFF2
  2297                           indf0	equ	0xFEF
  2298                           postinc0	equ	0xFEE
  2299                           fsr0h	equ	0xFEA
  2300                           fsr0l	equ	0xFE9
  2301                           wreg	equ	0xFE8
  2302                           status	equ	0xFD8
  2303                           
  2304 ;; *************** function _Delay10TCYx *****************
  2305 ;; Defined at:
  2306 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  unit            1    wreg     unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  unit            1    0[BANK1 ] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;		None               void
  2313 ;; Registers used:
  2314 ;;		wreg
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;Total ram usage:        1 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:   13
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_lcdCommand
  2331 ;;		_RTDInit
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text14
  2336  003452                     __ptext14:
  2337                           	opt stack 0
  2338  003452                     _Delay10TCYx:
  2339                           	opt stack 14
  2340                           
  2341                           ; BSR set to: 1
  2342                           ;incstack = 0
  2343                           ;Delay10TCYx@unit stored from wreg
  2344  003452  0101               	movlb	1	; () banked
  2345  003454  6F00               	movwf	Delay10TCYx@unit& (0+255),b
  2346  003456                     
  2347                           ; BSR set to: 1
  2348  003456  0E03               	movlw	3
  2349  003458                     u4327:
  2350  003458  2EE8               	decfsz	wreg,f,c
  2351  00345A  D7FE               	goto	u4327
  2352  00345C  F000               	nop	
  2353  00345E  0101               	movlb	1	; () banked
  2354  003460  2F00               	decfsz	Delay10TCYx@unit& (0+255),f,b
  2355  003462  D7F9               	goto	l2762
  2356  003464  D000               	goto	l765
  2357  003466                     l765:
  2358                           
  2359                           ; BSR set to: 1
  2360  003466  0012               	return		;funcret
  2361  003468                     __end_of_Delay10TCYx:
  2362                           	opt stack 0
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           intcon	equ	0xFF2
  2368                           indf0	equ	0xFEF
  2369                           postinc0	equ	0xFEE
  2370                           fsr0h	equ	0xFEA
  2371                           fsr0l	equ	0xFE9
  2372                           wreg	equ	0xFE8
  2373                           status	equ	0xFD8
  2374                           
  2375 ;; *************** function _PIDInit *****************
  2376 ;; Defined at:
  2377 ;;		line 19 in file "PID.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:   13
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_initialize
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text15
  2406  00310E                     __ptext15:
  2407                           	opt stack 0
  2408  00310E                     _PIDInit:
  2409                           	opt stack 16
  2410                           
  2411                           ;PID.c: 22: error = 0;
  2412                           
  2413                           ; BSR set to: 1
  2414                           ;incstack = 0
  2415  00310E  0E00               	movlw	0
  2416  003110  0100               	movlb	0	; () banked
  2417  003112  6FD0               	movwf	_error& (0+255),b
  2418  003114  0E00               	movlw	0
  2419  003116  0100               	movlb	0	; () banked
  2420  003118  6FD1               	movwf	(_error+1)& (0+255),b
  2421  00311A  0E00               	movlw	0
  2422  00311C  0100               	movlb	0	; () banked
  2423  00311E  6FD2               	movwf	(_error+2)& (0+255),b
  2424                           
  2425                           ;PID.c: 23: prevErr = 0;
  2426  003120  0E00               	movlw	0
  2427  003122  0100               	movlb	0	; () banked
  2428  003124  6FD6               	movwf	_prevErr& (0+255),b
  2429  003126  0E00               	movlw	0
  2430  003128  0100               	movlb	0	; () banked
  2431  00312A  6FD7               	movwf	(_prevErr+1)& (0+255),b
  2432  00312C  0E00               	movlw	0
  2433  00312E  0100               	movlb	0	; () banked
  2434  003130  6FD8               	movwf	(_prevErr+2)& (0+255),b
  2435                           
  2436                           ;PID.c: 24: intErr = 0;
  2437  003132  0E00               	movlw	0
  2438  003134  0100               	movlb	0	; () banked
  2439  003136  6FD3               	movwf	_intErr& (0+255),b
  2440  003138  0E00               	movlw	0
  2441  00313A  0100               	movlb	0	; () banked
  2442  00313C  6FD4               	movwf	(_intErr+1)& (0+255),b
  2443  00313E  0E00               	movlw	0
  2444  003140  0100               	movlb	0	; () banked
  2445  003142  6FD5               	movwf	(_intErr+2)& (0+255),b
  2446                           
  2447                           ;PID.c: 28: T0CON = 0x04;
  2448  003144  0E04               	movlw	4
  2449  003146  6ED5               	movwf	4053,c	;volatile
  2450                           
  2451                           ;PID.c: 29: TMR0H = 0xDB;
  2452  003148  0EDB               	movlw	219
  2453  00314A  6ED7               	movwf	4055,c	;volatile
  2454                           
  2455                           ;PID.c: 30: TMR0L = 0x60;
  2456  00314C  0E60               	movlw	96
  2457  00314E  6ED6               	movwf	4054,c	;volatile
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;PID.c: 31: INTCON2bits.TMR0IP = 1;
  2461  003150  84F1               	bsf	intcon2,2,c	;volatile
  2462                           
  2463                           ; BSR set to: 0
  2464  003152  0012               	return		;funcret
  2465  003154                     __end_of_PIDInit:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           intcon	equ	0xFF2
  2472                           intcon2	equ	0xFF1
  2473                           indf0	equ	0xFEF
  2474                           postinc0	equ	0xFEE
  2475                           fsr0h	equ	0xFEA
  2476                           fsr0l	equ	0xFE9
  2477                           wreg	equ	0xFE8
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _MotorDriverInit *****************
  2481 ;; Defined at:
  2482 ;;		line 5 in file "MotorControl.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:   13
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_initialize
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text16
  2511  003420                     __ptext16:
  2512                           	opt stack 0
  2513  003420                     _MotorDriverInit:
  2514                           	opt stack 16
  2515                           
  2516                           ;MotorControl.c: 7: TRISGbits.RG0 = 0;
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;incstack = 0
  2520  003420  9098               	bcf	3992,0,c	;volatile
  2521                           
  2522                           ;MotorControl.c: 8: TRISEbits.RE4 = 0;
  2523  003422  9896               	bcf	3990,4,c	;volatile
  2524                           
  2525                           ;MotorControl.c: 9: TRISEbits.RE3 = 0;
  2526  003424  9696               	bcf	3990,3,c	;volatile
  2527                           
  2528                           ;MotorControl.c: 10: TRISGbits.RG3 = 0;
  2529  003426  9698               	bcf	3992,3,c	;volatile
  2530                           
  2531                           ;MotorControl.c: 12: TRISBbits.RB0 = 1;
  2532  003428  8093               	bsf	3987,0,c	;volatile
  2533                           
  2534                           ;MotorControl.c: 14: TRISAbits.RA4 = 0;
  2535  00342A  9892               	bcf	3986,4,c	;volatile
  2536                           
  2537                           ;MotorControl.c: 16: CCP3CON = 0x4C;
  2538  00342C  0E4C               	movlw	76
  2539  00342E  6EB7               	movwf	4023,c	;volatile
  2540                           
  2541                           ;MotorControl.c: 17: PR2 = 0xFF;
  2542  003430  68CB               	setf	4043,c	;volatile
  2543                           
  2544                           ;MotorControl.c: 18: T3CON = 0x00;
  2545  003432  0E00               	movlw	0
  2546  003434  6EB1               	movwf	4017,c	;volatile
  2547                           
  2548                           ;MotorControl.c: 19: T2CON = 0x04;
  2549  003436  0E04               	movlw	4
  2550  003438  6ECA               	movwf	4042,c	;volatile
  2551  00343A  0012               	return		;funcret
  2552  00343C                     __end_of_MotorDriverInit:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           intcon	equ	0xFF2
  2559                           intcon2	equ	0xFF1
  2560                           indf0	equ	0xFEF
  2561                           postinc0	equ	0xFEE
  2562                           fsr0h	equ	0xFEA
  2563                           fsr0l	equ	0xFE9
  2564                           wreg	equ	0xFE8
  2565                           status	equ	0xFD8
  2566                           
  2567 ;; *************** function _lISR *****************
  2568 ;; Defined at:
  2569 ;;		line 53 in file "PIDLoop.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;		None               void
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;Total ram usage:       17 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:   12
  2590 ;; This function calls:
  2591 ;;		_RCInt
  2592 ;; This function is called by:
  2593 ;;		Interrupt level 1
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	intcodelo
  2598  000018                     __pintcodelo:
  2599                           	opt stack 0
  2600  000018                     _lISR:
  2601                           	opt stack 13
  2602                           
  2603                           ;incstack = 0
  2604  000018  CFD8 F031          	movff	status,??_lISR
  2605  00001C  CFE8 F032          	movff	wreg,??_lISR+1
  2606  000020  CFE0 F033          	movff	bsr,??_lISR+2
  2607  000024  CFFA F034          	movff	pclath,??_lISR+3
  2608  000028  CFFB F035          	movff	pclatu,??_lISR+4
  2609  00002C  CFE9 F036          	movff	fsr0l,??_lISR+5
  2610  000030  CFEA F037          	movff	fsr0h,??_lISR+6
  2611  000034  CFE1 F038          	movff	fsr1l,??_lISR+7
  2612  000038  CFE2 F039          	movff	fsr1h,??_lISR+8
  2613  00003C  CFD9 F03A          	movff	fsr2l,??_lISR+9
  2614  000040  CFDA F03B          	movff	fsr2h,??_lISR+10
  2615  000044  CFF3 F03C          	movff	prodl,??_lISR+11
  2616  000048  CFF4 F03D          	movff	prodh,??_lISR+12
  2617  00004C  CFF6 F03E          	movff	tblptrl,??_lISR+13
  2618  000050  CFF7 F03F          	movff	tblptrh,??_lISR+14
  2619  000054  CFF8 F040          	movff	tblptru,??_lISR+15
  2620  000058  CFF5 F041          	movff	tablat,??_lISR+16
  2621                           
  2622                           ;PIDLoop.c: 55: if (PIR1bits.RC1IF == 1)
  2623  00005C  AA9E               	btfss	3998,5,c	;volatile
  2624  00005E  D003               	goto	i1l430
  2625                           
  2626                           ;PIDLoop.c: 56: RCInt();
  2627  000060  EC80  F011         	call	_RCInt	;wreg free
  2628  000064  D000               	goto	i1l430
  2629  000066                     i1l430:
  2630  000066  C041  FFF5         	movff	??_lISR+16,tablat
  2631  00006A  C040  FFF8         	movff	??_lISR+15,tblptru
  2632  00006E  C03F  FFF7         	movff	??_lISR+14,tblptrh
  2633  000072  C03E  FFF6         	movff	??_lISR+13,tblptrl
  2634  000076  C03D  FFF4         	movff	??_lISR+12,prodh
  2635  00007A  C03C  FFF3         	movff	??_lISR+11,prodl
  2636  00007E  C03B  FFDA         	movff	??_lISR+10,fsr2h
  2637  000082  C03A  FFD9         	movff	??_lISR+9,fsr2l
  2638  000086  C039  FFE2         	movff	??_lISR+8,fsr1h
  2639  00008A  C038  FFE1         	movff	??_lISR+7,fsr1l
  2640  00008E  C037  FFEA         	movff	??_lISR+6,fsr0h
  2641  000092  C036  FFE9         	movff	??_lISR+5,fsr0l
  2642  000096  C035  FFFB         	movff	??_lISR+4,pclatu
  2643  00009A  C034  FFFA         	movff	??_lISR+3,pclath
  2644  00009E  C033  FFE0         	movff	??_lISR+2,bsr
  2645  0000A2  C032  FFE8         	movff	??_lISR+1,wreg
  2646  0000A6  C031  FFD8         	movff	??_lISR,status
  2647  0000AA  0010               	retfie	
  2648  0000AC                     __end_of_lISR:
  2649                           	opt stack 0
  2650                           pclatu	equ	0xFFB
  2651                           pclath	equ	0xFFA
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           prodh	equ	0xFF4
  2657                           prodl	equ	0xFF3
  2658                           intcon	equ	0xFF2
  2659                           intcon2	equ	0xFF1
  2660                           indf0	equ	0xFEF
  2661                           postinc0	equ	0xFEE
  2662                           fsr0h	equ	0xFEA
  2663                           fsr0l	equ	0xFE9
  2664                           wreg	equ	0xFE8
  2665                           fsr1h	equ	0xFE2
  2666                           fsr1l	equ	0xFE1
  2667                           bsr	equ	0xFE0
  2668                           fsr2h	equ	0xFDA
  2669                           fsr2l	equ	0xFD9
  2670                           status	equ	0xFD8
  2671                           
  2672 ;; *************** function _RCInt *****************
  2673 ;; Defined at:
  2674 ;;		line 19 in file "KeyValue.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  counter         1   47[COMRAM] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;Total ram usage:        2 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:   11
  2695 ;; This function calls:
  2696 ;;		_keyValue
  2697 ;;		i1_SerTx
  2698 ;; This function is called by:
  2699 ;;		_lISR
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text18
  2704  002300                     __ptext18:
  2705                           	opt stack 0
  2706  002300                     _RCInt:
  2707                           	opt stack 13
  2708                           
  2709                           ;KeyValue.c: 21: unsigned char counter = 0;
  2710                           
  2711                           ;incstack = 0
  2712  002300  0E00               	movlw	0
  2713  002302  6E30               	movwf	RCInt@counter,c
  2714                           
  2715                           ;KeyValue.c: 23: {
  2716                           ;KeyValue.c: 24: while (PIR1bits.RCIF == 0);
  2717                           
  2718                           ;KeyValue.c: 22: do
  2719  002304  D000               	goto	i1l190
  2720  002306                     i1l190:
  2721  002306  AA9E               	btfss	3998,5,c	;volatile
  2722  002308  D7FE               	goto	i1l190
  2723                           
  2724                           ;KeyValue.c: 25: received[counter] = RCREG;
  2725  00230A  5030               	movf	RCInt@counter,w,c
  2726  00230C  0D01               	mullw	1
  2727  00230E  0EDC               	movlw	low _received
  2728  002310  24F3               	addwf	prodl,w,c
  2729  002312  6ED9               	movwf	fsr2l,c
  2730  002314  0E00               	movlw	high _received
  2731  002316  20F4               	addwfc	prodh,w,c
  2732  002318  6EDA               	movwf	fsr2h,c
  2733  00231A  CFAE FFDF          	movff	4014,indf2	;volatile
  2734                           
  2735                           ;KeyValue.c: 26: SerTx(RCREG);
  2736  00231E  50AE               	movf	4014,w,c	;volatile
  2737  002320  EC57  F01A         	call	i1_SerTx
  2738                           
  2739                           ;KeyValue.c: 27: if ((received[counter] == 0x08) || received[counter] == 0x7F)
  2740  002324  5030               	movf	RCInt@counter,w,c
  2741  002326  0D01               	mullw	1
  2742  002328  0EDC               	movlw	low _received
  2743  00232A  24F3               	addwf	prodl,w,c
  2744  00232C  6ED9               	movwf	fsr2l,c
  2745  00232E  0E00               	movlw	high _received
  2746  002330  20F4               	addwfc	prodh,w,c
  2747  002332  6EDA               	movwf	fsr2h,c
  2748  002334  0E08               	movlw	8
  2749  002336  18DE               	xorwf	postinc2,w,c
  2750  002338  B4D8               	btfsc	status,2,c
  2751  00233A  D00C               	goto	i1l3858
  2752  00233C  5030               	movf	RCInt@counter,w,c
  2753  00233E  0D01               	mullw	1
  2754  002340  0EDC               	movlw	low _received
  2755  002342  24F3               	addwf	prodl,w,c
  2756  002344  6ED9               	movwf	fsr2l,c
  2757  002346  0E00               	movlw	high _received
  2758  002348  20F4               	addwfc	prodh,w,c
  2759  00234A  6EDA               	movwf	fsr2h,c
  2760  00234C  0E7F               	movlw	127
  2761  00234E  18DE               	xorwf	postinc2,w,c
  2762  002350  A4D8               	btfss	status,2,c
  2763  002352  D010               	goto	i1l3864
  2764  002354                     i1l3858:
  2765                           
  2766                           ;KeyValue.c: 28: {
  2767                           ;KeyValue.c: 29: if (counter != 0)
  2768  002354  5030               	movf	RCInt@counter,w,c
  2769  002356  B4D8               	btfsc	status,2,c
  2770  002358  D002               	goto	i1l3862
  2771                           
  2772                           ;KeyValue.c: 30: counter--;
  2773  00235A  0630               	decf	RCInt@counter,f,c
  2774  00235C  D000               	goto	i1l3862
  2775  00235E                     i1l3862:
  2776                           
  2777                           ;KeyValue.c: 31: received[counter] = '\0';
  2778  00235E  5030               	movf	RCInt@counter,w,c
  2779  002360  0D01               	mullw	1
  2780  002362  0EDC               	movlw	low _received
  2781  002364  24F3               	addwf	prodl,w,c
  2782  002366  6ED9               	movwf	fsr2l,c
  2783  002368  0E00               	movlw	high _received
  2784  00236A  20F4               	addwfc	prodh,w,c
  2785  00236C  6EDA               	movwf	fsr2h,c
  2786  00236E  0E00               	movlw	0
  2787  002370  6EDF               	movwf	indf2,c
  2788                           
  2789                           ;KeyValue.c: 32: }
  2790  002372  D01A               	goto	i1l3870
  2791  002374                     i1l3864:
  2792                           
  2793                           ;KeyValue.c: 33: else if ((received[counter] != 0x08) && (received[counter] != 0x0D))
  2794  002374  5030               	movf	RCInt@counter,w,c
  2795  002376  0D01               	mullw	1
  2796  002378  0EDC               	movlw	low _received
  2797  00237A  24F3               	addwf	prodl,w,c
  2798  00237C  6ED9               	movwf	fsr2l,c
  2799  00237E  0E00               	movlw	high _received
  2800  002380  20F4               	addwfc	prodh,w,c
  2801  002382  6EDA               	movwf	fsr2h,c
  2802  002384  0E08               	movlw	8
  2803  002386  18DE               	xorwf	postinc2,w,c
  2804  002388  B4D8               	btfsc	status,2,c
  2805  00238A  D00E               	goto	i1l3870
  2806  00238C  5030               	movf	RCInt@counter,w,c
  2807  00238E  0D01               	mullw	1
  2808  002390  0EDC               	movlw	low _received
  2809  002392  24F3               	addwf	prodl,w,c
  2810  002394  6ED9               	movwf	fsr2l,c
  2811  002396  0E00               	movlw	high _received
  2812  002398  20F4               	addwfc	prodh,w,c
  2813  00239A  6EDA               	movwf	fsr2h,c
  2814  00239C  0E0D               	movlw	13
  2815  00239E  18DE               	xorwf	postinc2,w,c
  2816  0023A0  B4D8               	btfsc	status,2,c
  2817  0023A2  D002               	goto	i1l3870
  2818                           
  2819                           ;KeyValue.c: 34: counter++;
  2820  0023A4  2A30               	incf	RCInt@counter,f,c
  2821  0023A6  D000               	goto	i1l3870
  2822  0023A8                     i1l3870:
  2823                           
  2824                           ;KeyValue.c: 35: }
  2825                           ;KeyValue.c: 36: while (RCREG != 0x0D);
  2826  0023A8  0E0D               	movlw	13
  2827  0023AA  18AE               	xorwf	4014,w,c	;volatile
  2828  0023AC  A4D8               	btfss	status,2,c
  2829  0023AE  D7AB               	goto	i1l190
  2830                           
  2831                           ;KeyValue.c: 38: SerTx(0x0A);
  2832  0023B0  0E0A               	movlw	10
  2833  0023B2  EC57  F01A         	call	i1_SerTx
  2834                           
  2835                           ;KeyValue.c: 39: SerTx(0x0D);
  2836  0023B6  0E0D               	movlw	13
  2837  0023B8  EC57  F01A         	call	i1_SerTx
  2838                           
  2839                           ;KeyValue.c: 40: keyValue(received, 30);
  2840  0023BC  0EDC               	movlw	low _received
  2841  0023BE  6E24               	movwf	keyValue@str,c
  2842  0023C0  0E00               	movlw	high _received
  2843  0023C2  6E25               	movwf	keyValue@str+1,c
  2844  0023C4  0E00               	movlw	0
  2845  0023C6  6E27               	movwf	keyValue@length+1,c
  2846  0023C8  0E1E               	movlw	30
  2847  0023CA  6E26               	movwf	keyValue@length,c
  2848  0023CC  EC39  F008         	call	_keyValue	;wreg free
  2849                           
  2850                           ;KeyValue.c: 41: SerTx(0x0A);
  2851  0023D0  0E0A               	movlw	10
  2852  0023D2  EC57  F01A         	call	i1_SerTx
  2853                           
  2854                           ;KeyValue.c: 42: SerTx(0x0D);
  2855  0023D6  0E0D               	movlw	13
  2856  0023D8  EC57  F01A         	call	i1_SerTx
  2857                           
  2858                           ;KeyValue.c: 43: PIR1bits.RCIF = 0;
  2859  0023DC  9A9E               	bcf	3998,5,c	;volatile
  2860                           
  2861                           ;KeyValue.c: 45: if (StrippedKey == 0x01)
  2862  0023DE  0449               	decf	_StrippedKey,w,c
  2863  0023E0  A4D8               	btfss	status,2,c
  2864  0023E2  D00A               	goto	i1l3888
  2865                           
  2866                           ;KeyValue.c: 46: {
  2867                           ;KeyValue.c: 47: SetAngle = StrippedValue;
  2868  0023E4  C045  F0CA         	movff	_StrippedValue,_SetAngle
  2869  0023E8  C046  F0CB         	movff	_StrippedValue+1,_SetAngle+1
  2870  0023EC  C047  F0CC         	movff	_StrippedValue+2,_SetAngle+2
  2871                           
  2872                           ;KeyValue.c: 48: PIDEnableFlag = 3;
  2873  0023F0  0E03               	movlw	3
  2874  0023F2  0100               	movlb	0	; () banked
  2875  0023F4  6FDB               	movwf	_PIDEnableFlag& (0+255),b
  2876                           
  2877                           ;KeyValue.c: 49: }
  2878  0023F6  D021               	goto	i1l207
  2879  0023F8                     i1l3888:
  2880                           
  2881                           ;KeyValue.c: 51: else if (StrippedKey == 0x05)
  2882  0023F8  0E05               	movlw	5
  2883  0023FA  1849               	xorwf	_StrippedKey,w,c
  2884  0023FC  A4D8               	btfss	status,2,c
  2885  0023FE  D007               	goto	i1l3892
  2886                           
  2887                           ;KeyValue.c: 52: {
  2888                           ;KeyValue.c: 53: Kp = StrippedValue;
  2889  002400  C045  F0C7         	movff	_StrippedValue,_Kp
  2890  002404  C046  F0C8         	movff	_StrippedValue+1,_Kp+1
  2891  002408  C047  F0C9         	movff	_StrippedValue+2,_Kp+2
  2892                           
  2893                           ;KeyValue.c: 54: }
  2894  00240C  D016               	goto	i1l207
  2895  00240E                     i1l3892:
  2896                           
  2897                           ;KeyValue.c: 56: else if (StrippedKey == 0x07)
  2898  00240E  0E07               	movlw	7
  2899  002410  1849               	xorwf	_StrippedKey,w,c
  2900  002412  A4D8               	btfss	status,2,c
  2901  002414  D007               	goto	i1l3896
  2902                           
  2903                           ;KeyValue.c: 57: {
  2904                           ;KeyValue.c: 58: Ki = StrippedValue;
  2905  002416  C045  F0C4         	movff	_StrippedValue,_Ki
  2906  00241A  C046  F0C5         	movff	_StrippedValue+1,_Ki+1
  2907  00241E  C047  F0C6         	movff	_StrippedValue+2,_Ki+2
  2908                           
  2909                           ;KeyValue.c: 59: }
  2910  002422  D00B               	goto	i1l207
  2911  002424                     i1l3896:
  2912                           
  2913                           ;KeyValue.c: 61: else if (StrippedKey == 0x09)
  2914  002424  0E09               	movlw	9
  2915  002426  1849               	xorwf	_StrippedKey,w,c
  2916  002428  A4D8               	btfss	status,2,c
  2917  00242A  D007               	goto	i1l207
  2918                           
  2919                           ;KeyValue.c: 62: {
  2920                           ;KeyValue.c: 63: Kd = StrippedValue;
  2921  00242C  C045  F0C1         	movff	_StrippedValue,_Kd
  2922  002430  C046  F0C2         	movff	_StrippedValue+1,_Kd+1
  2923  002434  C047  F0C3         	movff	_StrippedValue+2,_Kd+2
  2924  002438  D000               	goto	i1l207
  2925  00243A                     i1l207:
  2926  00243A  0012               	return		;funcret
  2927  00243C                     __end_of_RCInt:
  2928                           	opt stack 0
  2929                           pclatu	equ	0xFFB
  2930                           pclath	equ	0xFFA
  2931                           tblptru	equ	0xFF8
  2932                           tblptrh	equ	0xFF7
  2933                           tblptrl	equ	0xFF6
  2934                           tablat	equ	0xFF5
  2935                           prodh	equ	0xFF4
  2936                           prodl	equ	0xFF3
  2937                           intcon	equ	0xFF2
  2938                           intcon2	equ	0xFF1
  2939                           indf0	equ	0xFEF
  2940                           postinc0	equ	0xFEE
  2941                           fsr0h	equ	0xFEA
  2942                           fsr0l	equ	0xFE9
  2943                           wreg	equ	0xFE8
  2944                           fsr1h	equ	0xFE2
  2945                           fsr1l	equ	0xFE1
  2946                           bsr	equ	0xFE0
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           fsr2h	equ	0xFDA
  2950                           fsr2l	equ	0xFD9
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function _keyValue *****************
  2954 ;; Defined at:
  2955 ;;		line 67 in file "KeyValue.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  str             2   35[COMRAM] PTR unsigned char 
  2958 ;;		 -> received(30), 
  2959 ;;  length          2   37[COMRAM] unsigned short 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  str_end         2   41[COMRAM] PTR unsigned char 
  2962 ;;		 -> value(10), 
  2963 ;;  x               1   45[COMRAM] unsigned char 
  2964 ;;  y               1   44[COMRAM] unsigned char 
  2965 ;;  flag            1   43[COMRAM] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;		None               void
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;Total ram usage:       11 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:   10
  2982 ;; This function calls:
  2983 ;;		_isspace
  2984 ;;		_strcmp
  2985 ;;		_strtod
  2986 ;;		i1_SerTx
  2987 ;;		i1_SerTxStr
  2988 ;; This function is called by:
  2989 ;;		_RCInt
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text19
  2994  001072                     __ptext19:
  2995                           	opt stack 0
  2996  001072                     _keyValue:
  2997                           	opt stack 13
  2998                           
  2999                           ;KeyValue.c: 69: unsigned char x = 0;
  3000                           
  3001                           ;incstack = 0
  3002  001072  0E00               	movlw	0
  3003  001074  6E2E               	movwf	keyValue@x,c
  3004                           
  3005                           ;KeyValue.c: 70: unsigned char y = 0;
  3006  001076  0E00               	movlw	0
  3007  001078  6E2D               	movwf	keyValue@y,c
  3008  00107A  D00F               	goto	i1l3626
  3009  00107C                     i1l3620:
  3010                           
  3011                           ;KeyValue.c: 75: {
  3012                           ;KeyValue.c: 76: x++;
  3013  00107C  2A2E               	incf	keyValue@x,f,c
  3014                           
  3015                           ;KeyValue.c: 77: if (str[x] == '=')
  3016  00107E  502E               	movf	keyValue@x,w,c
  3017  001080  0D01               	mullw	1
  3018  001082  50F3               	movf	prodl,w,c
  3019  001084  2424               	addwf	keyValue@str,w,c
  3020  001086  6ED9               	movwf	fsr2l,c
  3021  001088  50F4               	movf	prodh,w,c
  3022  00108A  2025               	addwfc	keyValue@str+1,w,c
  3023  00108C  6EDA               	movwf	fsr2h,c
  3024  00108E  0E3D               	movlw	61
  3025  001090  18DE               	xorwf	postinc2,w,c
  3026  001092  A4D8               	btfss	status,2,c
  3027  001094  D002               	goto	i1l3626
  3028                           
  3029                           ;KeyValue.c: 78: {
  3030                           ;KeyValue.c: 79: flag = 1;
  3031  001096  0E01               	movlw	1
  3032  001098  D001               	goto	L2
  3033  00109A                     i1l3626:
  3034                           
  3035                           ;KeyValue.c: 81: else
  3036                           ;KeyValue.c: 82: flag = 0;
  3037  00109A  0E00               	movlw	0
  3038  00109C                     L2:
  3039  00109C  6E2C               	movwf	keyValue@flag,c
  3040  00109E  D000               	goto	i1l3628
  3041  0010A0                     i1l3628:
  3042  0010A0  502E               	movf	keyValue@x,w,c
  3043  0010A2  0D01               	mullw	1
  3044  0010A4  50F3               	movf	prodl,w,c
  3045  0010A6  2424               	addwf	keyValue@str,w,c
  3046  0010A8  6ED9               	movwf	fsr2l,c
  3047  0010AA  50F4               	movf	prodh,w,c
  3048  0010AC  2025               	addwfc	keyValue@str+1,w,c
  3049  0010AE  6EDA               	movwf	fsr2h,c
  3050  0010B0  0E3D               	movlw	61
  3051  0010B2  18DE               	xorwf	postinc2,w,c
  3052  0010B4  B4D8               	btfsc	status,2,c
  3053  0010B6  D00B               	goto	i1l3632
  3054  0010B8  502E               	movf	keyValue@x,w,c
  3055  0010BA  6E28               	movwf	??_keyValue& (0+255),c
  3056  0010BC  6A29               	clrf	(??_keyValue+1)& (0+255),c
  3057  0010BE  5026               	movf	keyValue@length,w,c
  3058  0010C0  5C28               	subwf	??_keyValue,w,c
  3059  0010C2  5027               	movf	keyValue@length+1,w,c
  3060  0010C4  5829               	subwfb	??_keyValue+1,w,c
  3061  0010C6  B0D8               	btfsc	status,0,c
  3062  0010C8  D002               	goto	i1l3632
  3063  0010CA  D7D8               	goto	i1l3620
  3064  0010CC  D000               	goto	i1l3632
  3065  0010CE                     i1l3632:
  3066                           
  3067                           ;KeyValue.c: 83: }
  3068                           ;KeyValue.c: 84: if ((x < length) && flag)
  3069  0010CE  502E               	movf	keyValue@x,w,c
  3070  0010D0  6E28               	movwf	??_keyValue& (0+255),c
  3071  0010D2  6A29               	clrf	(??_keyValue+1)& (0+255),c
  3072  0010D4  5026               	movf	keyValue@length,w,c
  3073  0010D6  5C28               	subwf	??_keyValue,w,c
  3074  0010D8  5027               	movf	keyValue@length+1,w,c
  3075  0010DA  5829               	subwfb	??_keyValue+1,w,c
  3076  0010DC  B0D8               	btfsc	status,0,c
  3077  0010DE  D100               	goto	i1l3698
  3078  0010E0  502C               	movf	keyValue@flag,w,c
  3079  0010E2  B4D8               	btfsc	status,2,c
  3080  0010E4  D0FD               	goto	i1l3698
  3081                           
  3082                           ;KeyValue.c: 85: {
  3083                           ;KeyValue.c: 86: for (y = 0; y < x && y < 5; y++)
  3084  0010E6  0E00               	movlw	0
  3085  0010E8  6E2D               	movwf	keyValue@y,c
  3086  0010EA  D022               	goto	i1l3644
  3087  0010EC                     i1l3638:
  3088                           
  3089                           ;KeyValue.c: 87: {
  3090                           ;KeyValue.c: 88: if (isspace(str[y]) == 0)
  3091  0010EC  502D               	movf	keyValue@y,w,c
  3092  0010EE  0D01               	mullw	1
  3093  0010F0  50F3               	movf	prodl,w,c
  3094  0010F2  2424               	addwf	keyValue@str,w,c
  3095  0010F4  6ED9               	movwf	fsr2l,c
  3096  0010F6  50F4               	movf	prodh,w,c
  3097  0010F8  2025               	addwfc	keyValue@str+1,w,c
  3098  0010FA  6EDA               	movwf	fsr2h,c
  3099  0010FC  50DF               	movf	indf2,w,c
  3100  0010FE  EC35  F019         	call	_isspace
  3101  001102  B0D8               	btfsc	status,0,c
  3102  001104  D013               	goto	i1l3642
  3103                           
  3104                           ;KeyValue.c: 89: key[y] = str[y];
  3105  001106  502D               	movf	keyValue@y,w,c
  3106  001108  0D01               	mullw	1
  3107  00110A  50F3               	movf	prodl,w,c
  3108  00110C  2424               	addwf	keyValue@str,w,c
  3109  00110E  6ED9               	movwf	fsr2l,c
  3110  001110  50F4               	movf	prodh,w,c
  3111  001112  2025               	addwfc	keyValue@str+1,w,c
  3112  001114  6EDA               	movwf	fsr2h,c
  3113  001116  502D               	movf	keyValue@y,w,c
  3114  001118  0D01               	mullw	1
  3115  00111A  0E54               	movlw	low _key
  3116  00111C  24F3               	addwf	prodl,w,c
  3117  00111E  6EE1               	movwf	fsr1l,c
  3118  001120  0E00               	movlw	high _key
  3119  001122  20F4               	addwfc	prodh,w,c
  3120  001124  6EE2               	movwf	fsr1h,c
  3121  001126  CFDF FFE7          	movff	indf2,indf1
  3122  00112A  D000               	goto	i1l3642
  3123  00112C                     i1l3642:
  3124  00112C  2A2D               	incf	keyValue@y,f,c
  3125  00112E  D000               	goto	i1l3644
  3126  001130                     i1l3644:
  3127  001130  502E               	movf	keyValue@x,w,c
  3128  001132  5C2D               	subwf	keyValue@y,w,c
  3129  001134  B0D8               	btfsc	status,0,c
  3130  001136  D004               	goto	i1l3648
  3131  001138  0E04               	movlw	4
  3132  00113A  642D               	cpfsgt	keyValue@y,c
  3133  00113C  D7D7               	goto	i1l3638
  3134  00113E  D000               	goto	i1l3648
  3135  001140                     i1l3648:
  3136                           
  3137                           ;KeyValue.c: 90: }
  3138                           ;KeyValue.c: 92: SerTxStr("Key: ");
  3139  001140  0E3E               	movlw	low STR_3
  3140  001142  6E02               	movwf	i1SerTxStr@string,c
  3141  001144  0E10               	movlw	high STR_3
  3142  001146  6E03               	movwf	i1SerTxStr@string+1,c
  3143  001148  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3144                           
  3145                           ;KeyValue.c: 93: SerTxStr(key);
  3146  00114C  0E54               	movlw	low _key
  3147  00114E  6E02               	movwf	i1SerTxStr@string,c
  3148  001150  0E00               	movlw	high _key
  3149  001152  6E03               	movwf	i1SerTxStr@string+1,c
  3150  001154  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3151                           
  3152                           ;KeyValue.c: 95: for (y = 0; str[x + 1] != (0); y++)
  3153  001158  0E00               	movlw	0
  3154  00115A  6E2D               	movwf	keyValue@y,c
  3155  00115C  D015               	goto	i1l3658
  3156  00115E                     i1l3652:
  3157                           
  3158                           ;KeyValue.c: 96: {
  3159                           ;KeyValue.c: 97: x++;
  3160  00115E  2A2E               	incf	keyValue@x,f,c
  3161                           
  3162                           ;KeyValue.c: 99: value[y] = str[x];
  3163  001160  502E               	movf	keyValue@x,w,c
  3164  001162  0D01               	mullw	1
  3165  001164  50F3               	movf	prodl,w,c
  3166  001166  2424               	addwf	keyValue@str,w,c
  3167  001168  6ED9               	movwf	fsr2l,c
  3168  00116A  50F4               	movf	prodh,w,c
  3169  00116C  2025               	addwfc	keyValue@str+1,w,c
  3170  00116E  6EDA               	movwf	fsr2h,c
  3171  001170  502D               	movf	keyValue@y,w,c
  3172  001172  0D01               	mullw	1
  3173  001174  0E4A               	movlw	low _value
  3174  001176  24F3               	addwf	prodl,w,c
  3175  001178  6EE1               	movwf	fsr1l,c
  3176  00117A  0E00               	movlw	high _value
  3177  00117C  20F4               	addwfc	prodh,w,c
  3178  00117E  6EE2               	movwf	fsr1h,c
  3179  001180  CFDF FFE7          	movff	indf2,indf1
  3180  001184  2A2D               	incf	keyValue@y,f,c
  3181  001186  D000               	goto	i1l3658
  3182  001188                     i1l3658:
  3183  001188  502E               	movf	keyValue@x,w,c
  3184  00118A  6E28               	movwf	??_keyValue& (0+255),c
  3185  00118C  6A29               	clrf	(??_keyValue+1)& (0+255),c
  3186  00118E  0E01               	movlw	1
  3187  001190  2628               	addwf	??_keyValue,f,c
  3188  001192  0E00               	movlw	0
  3189  001194  2229               	addwfc	??_keyValue+1,f,c
  3190  001196  5028               	movf	??_keyValue,w,c
  3191  001198  2424               	addwf	keyValue@str,w,c
  3192  00119A  6ED9               	movwf	fsr2l,c
  3193  00119C  5029               	movf	??_keyValue+1,w,c
  3194  00119E  2025               	addwfc	keyValue@str+1,w,c
  3195  0011A0  6EDA               	movwf	fsr2h,c
  3196  0011A2  50DF               	movf	indf2,w,c
  3197  0011A4  A4D8               	btfss	status,2,c
  3198  0011A6  D7DB               	goto	i1l3652
  3199                           
  3200                           ;KeyValue.c: 100: }
  3201                           ;KeyValue.c: 101: SerTxStr("   Value: ");
  3202  0011A8  0E25               	movlw	low STR_4
  3203  0011AA  6E02               	movwf	i1SerTxStr@string,c
  3204  0011AC  0E10               	movlw	high STR_4
  3205  0011AE  6E03               	movwf	i1SerTxStr@string+1,c
  3206  0011B0  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3207                           
  3208                           ;KeyValue.c: 102: SerTxStr(value);
  3209  0011B4  0E4A               	movlw	low _value
  3210  0011B6  6E02               	movwf	i1SerTxStr@string,c
  3211  0011B8  0E00               	movlw	high _value
  3212  0011BA  6E03               	movwf	i1SerTxStr@string+1,c
  3213  0011BC  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3214                           
  3215                           ;KeyValue.c: 104: if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  3216  0011C0  0E54               	movlw	low _key
  3217  0011C2  6E01               	movwf	strcmp@s1,c
  3218  0011C4  0E00               	movlw	high _key
  3219  0011C6  6E02               	movwf	strcmp@s1+1,c
  3220  0011C8  0E4C               	movlw	low STR_5
  3221  0011CA  6E03               	movwf	strcmp@s2,c
  3222  0011CC  0E10               	movlw	high STR_5
  3223  0011CE  6E04               	movwf	strcmp@s2+1,c
  3224  0011D0  ECC2  F017         	call	_strcmp	;wreg free
  3225  0011D4  5001               	movf	?_strcmp,w,c
  3226  0011D6  1002               	iorwf	?_strcmp+1,w,c
  3227  0011D8  B4D8               	btfsc	status,2,c
  3228  0011DA  D00E               	goto	i1l3666
  3229  0011DC  0E54               	movlw	low _key
  3230  0011DE  6E01               	movwf	strcmp@s1,c
  3231  0011E0  0E00               	movlw	high _key
  3232  0011E2  6E02               	movwf	strcmp@s1+1,c
  3233  0011E4  0E54               	movlw	low STR_6
  3234  0011E6  6E03               	movwf	strcmp@s2,c
  3235  0011E8  0E10               	movlw	high STR_6
  3236  0011EA  6E04               	movwf	strcmp@s2+1,c
  3237  0011EC  ECC2  F017         	call	_strcmp	;wreg free
  3238  0011F0  5001               	movf	?_strcmp,w,c
  3239  0011F2  1002               	iorwf	?_strcmp+1,w,c
  3240  0011F4  A4D8               	btfss	status,2,c
  3241  0011F6  D006               	goto	i1l3670
  3242  0011F8                     i1l3666:
  3243                           
  3244                           ;KeyValue.c: 105: {
  3245                           ;KeyValue.c: 106: StrippedKey = 0x01;
  3246  0011F8  0E01               	movlw	1
  3247  0011FA  6E49               	movwf	_StrippedKey,c
  3248                           
  3249                           ;KeyValue.c: 107: SerTx(';');
  3250  0011FC  0E3B               	movlw	59
  3251  0011FE  EC57  F01A         	call	i1_SerTx
  3252                           
  3253                           ;KeyValue.c: 108: }
  3254  001202  D197               	goto	i1l3770
  3255  001204                     i1l3670:
  3256                           
  3257                           ;KeyValue.c: 110: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  3258  001204  0E54               	movlw	low _key
  3259  001206  6E01               	movwf	strcmp@s1,c
  3260  001208  0E00               	movlw	high _key
  3261  00120A  6E02               	movwf	strcmp@s1+1,c
  3262  00120C  0E5E               	movlw	low STR_7
  3263  00120E  6E03               	movwf	strcmp@s2,c
  3264  001210  0E10               	movlw	high STR_7
  3265  001212  6E04               	movwf	strcmp@s2+1,c
  3266  001214  ECC2  F017         	call	_strcmp	;wreg free
  3267  001218  5001               	movf	?_strcmp,w,c
  3268  00121A  1002               	iorwf	?_strcmp+1,w,c
  3269  00121C  B4D8               	btfsc	status,2,c
  3270  00121E  D00E               	goto	i1l3674
  3271  001220  0E54               	movlw	low _key
  3272  001222  6E01               	movwf	strcmp@s1,c
  3273  001224  0E00               	movlw	high _key
  3274  001226  6E02               	movwf	strcmp@s1+1,c
  3275  001228  0E6A               	movlw	low STR_8
  3276  00122A  6E03               	movwf	strcmp@s2,c
  3277  00122C  0E10               	movlw	high STR_8
  3278  00122E  6E04               	movwf	strcmp@s2+1,c
  3279  001230  ECC2  F017         	call	_strcmp	;wreg free
  3280  001234  5001               	movf	?_strcmp,w,c
  3281  001236  1002               	iorwf	?_strcmp+1,w,c
  3282  001238  A4D8               	btfss	status,2,c
  3283  00123A  D006               	goto	i1l3678
  3284  00123C                     i1l3674:
  3285                           
  3286                           ;KeyValue.c: 111: {
  3287                           ;KeyValue.c: 112: StrippedKey = 0x05;
  3288  00123C  0E05               	movlw	5
  3289  00123E  6E49               	movwf	_StrippedKey,c
  3290                           
  3291                           ;KeyValue.c: 113: SerTx(';');
  3292  001240  0E3B               	movlw	59
  3293  001242  EC57  F01A         	call	i1_SerTx
  3294                           
  3295                           ;KeyValue.c: 114: }
  3296  001246  D175               	goto	i1l3770
  3297  001248                     i1l3678:
  3298                           
  3299                           ;KeyValue.c: 116: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  3300  001248  0E54               	movlw	low _key
  3301  00124A  6E01               	movwf	strcmp@s1,c
  3302  00124C  0E00               	movlw	high _key
  3303  00124E  6E02               	movwf	strcmp@s1+1,c
  3304  001250  0E5B               	movlw	low STR_9
  3305  001252  6E03               	movwf	strcmp@s2,c
  3306  001254  0E10               	movlw	high STR_9
  3307  001256  6E04               	movwf	strcmp@s2+1,c
  3308  001258  ECC2  F017         	call	_strcmp	;wreg free
  3309  00125C  5001               	movf	?_strcmp,w,c
  3310  00125E  1002               	iorwf	?_strcmp+1,w,c
  3311  001260  B4D8               	btfsc	status,2,c
  3312  001262  D00E               	goto	i1l3682
  3313  001264  0E54               	movlw	low _key
  3314  001266  6E01               	movwf	strcmp@s1,c
  3315  001268  0E00               	movlw	high _key
  3316  00126A  6E02               	movwf	strcmp@s1+1,c
  3317  00126C  0E67               	movlw	low STR_10
  3318  00126E  6E03               	movwf	strcmp@s2,c
  3319  001270  0E10               	movlw	high STR_10
  3320  001272  6E04               	movwf	strcmp@s2+1,c
  3321  001274  ECC2  F017         	call	_strcmp	;wreg free
  3322  001278  5001               	movf	?_strcmp,w,c
  3323  00127A  1002               	iorwf	?_strcmp+1,w,c
  3324  00127C  A4D8               	btfss	status,2,c
  3325  00127E  D006               	goto	i1l3686
  3326  001280                     i1l3682:
  3327                           
  3328                           ;KeyValue.c: 117: {
  3329                           ;KeyValue.c: 118: StrippedKey = 0x07;
  3330  001280  0E07               	movlw	7
  3331  001282  6E49               	movwf	_StrippedKey,c
  3332                           
  3333                           ;KeyValue.c: 119: SerTx(';');
  3334  001284  0E3B               	movlw	59
  3335  001286  EC57  F01A         	call	i1_SerTx
  3336                           
  3337                           ;KeyValue.c: 120: }
  3338  00128A  D153               	goto	i1l3770
  3339  00128C                     i1l3686:
  3340                           
  3341                           ;KeyValue.c: 122: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  3342  00128C  0E54               	movlw	low _key
  3343  00128E  6E01               	movwf	strcmp@s1,c
  3344  001290  0E00               	movlw	high _key
  3345  001292  6E02               	movwf	strcmp@s1+1,c
  3346  001294  0E58               	movlw	low STR_11
  3347  001296  6E03               	movwf	strcmp@s2,c
  3348  001298  0E10               	movlw	high STR_11
  3349  00129A  6E04               	movwf	strcmp@s2+1,c
  3350  00129C  ECC2  F017         	call	_strcmp	;wreg free
  3351  0012A0  5001               	movf	?_strcmp,w,c
  3352  0012A2  1002               	iorwf	?_strcmp+1,w,c
  3353  0012A4  B4D8               	btfsc	status,2,c
  3354  0012A6  D00E               	goto	i1l3690
  3355  0012A8  0E54               	movlw	low _key
  3356  0012AA  6E01               	movwf	strcmp@s1,c
  3357  0012AC  0E00               	movlw	high _key
  3358  0012AE  6E02               	movwf	strcmp@s1+1,c
  3359  0012B0  0E64               	movlw	low STR_12
  3360  0012B2  6E03               	movwf	strcmp@s2,c
  3361  0012B4  0E10               	movlw	high STR_12
  3362  0012B6  6E04               	movwf	strcmp@s2+1,c
  3363  0012B8  ECC2  F017         	call	_strcmp	;wreg free
  3364  0012BC  5001               	movf	?_strcmp,w,c
  3365  0012BE  1002               	iorwf	?_strcmp+1,w,c
  3366  0012C0  A4D8               	btfss	status,2,c
  3367  0012C2  D006               	goto	i1l3694
  3368  0012C4                     i1l3690:
  3369                           
  3370                           ;KeyValue.c: 123: {
  3371                           ;KeyValue.c: 124: StrippedKey = 0x09;
  3372  0012C4  0E09               	movlw	9
  3373  0012C6  6E49               	movwf	_StrippedKey,c
  3374                           
  3375                           ;KeyValue.c: 125: SerTx(';');
  3376  0012C8  0E3B               	movlw	59
  3377  0012CA  EC57  F01A         	call	i1_SerTx
  3378                           
  3379                           ;KeyValue.c: 126: }
  3380  0012CE  D131               	goto	i1l3770
  3381  0012D0                     i1l3694:
  3382                           
  3383                           ;KeyValue.c: 128: else
  3384                           ;KeyValue.c: 129: {
  3385                           ;KeyValue.c: 130: SerTxStr("???");
  3386  0012D0  0E44               	movlw	low STR_13
  3387  0012D2  6E02               	movwf	i1SerTxStr@string,c
  3388  0012D4  0E10               	movlw	high STR_13
  3389  0012D6  6E03               	movwf	i1SerTxStr@string+1,c
  3390  0012D8  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3391  0012DC  D127               	goto	i1l3768
  3392                           
  3393                           ;KeyValue.c: 132: }
  3394                           ;KeyValue.c: 133: }
  3395                           
  3396                           ;KeyValue.c: 131: StrippedKey = 0;
  3397  0012DE  D129               	goto	i1l3770
  3398  0012E0                     i1l3698:
  3399                           
  3400                           ;KeyValue.c: 135: else if (flag == 0)
  3401  0012E0  502C               	movf	keyValue@flag,w,c
  3402  0012E2  A4D8               	btfss	status,2,c
  3403  0012E4  D126               	goto	i1l3770
  3404                           
  3405                           ;KeyValue.c: 136: {
  3406                           ;KeyValue.c: 137: y = 0;
  3407  0012E6  0E00               	movlw	0
  3408  0012E8  6E2D               	movwf	keyValue@y,c
  3409                           
  3410                           ;KeyValue.c: 138: while (str[y] != 0x0D)
  3411  0012EA  D014               	goto	i1l3706
  3412  0012EC                     i1l3702:
  3413                           
  3414                           ;KeyValue.c: 139: {
  3415                           ;KeyValue.c: 141: key[y] = str[y];
  3416  0012EC  502D               	movf	keyValue@y,w,c
  3417  0012EE  0D01               	mullw	1
  3418  0012F0  50F3               	movf	prodl,w,c
  3419  0012F2  2424               	addwf	keyValue@str,w,c
  3420  0012F4  6ED9               	movwf	fsr2l,c
  3421  0012F6  50F4               	movf	prodh,w,c
  3422  0012F8  2025               	addwfc	keyValue@str+1,w,c
  3423  0012FA  6EDA               	movwf	fsr2h,c
  3424  0012FC  502D               	movf	keyValue@y,w,c
  3425  0012FE  0D01               	mullw	1
  3426  001300  0E54               	movlw	low _key
  3427  001302  24F3               	addwf	prodl,w,c
  3428  001304  6EE1               	movwf	fsr1l,c
  3429  001306  0E00               	movlw	high _key
  3430  001308  20F4               	addwfc	prodh,w,c
  3431  00130A  6EE2               	movwf	fsr1h,c
  3432  00130C  CFDF FFE7          	movff	indf2,indf1
  3433                           
  3434                           ;KeyValue.c: 142: y++;
  3435  001310  2A2D               	incf	keyValue@y,f,c
  3436  001312  D000               	goto	i1l3706
  3437  001314                     i1l3706:
  3438  001314  502D               	movf	keyValue@y,w,c
  3439  001316  0D01               	mullw	1
  3440  001318  50F3               	movf	prodl,w,c
  3441  00131A  2424               	addwf	keyValue@str,w,c
  3442  00131C  6ED9               	movwf	fsr2l,c
  3443  00131E  50F4               	movf	prodh,w,c
  3444  001320  2025               	addwfc	keyValue@str+1,w,c
  3445  001322  6EDA               	movwf	fsr2h,c
  3446  001324  0E0D               	movlw	13
  3447  001326  18DE               	xorwf	postinc2,w,c
  3448  001328  A4D8               	btfss	status,2,c
  3449  00132A  D7E0               	goto	i1l3702
  3450                           
  3451                           ;KeyValue.c: 143: }
  3452                           ;KeyValue.c: 145: SerTxStr("Key: ");
  3453  00132C  0E3E               	movlw	low STR_3
  3454  00132E  6E02               	movwf	i1SerTxStr@string,c
  3455  001330  0E10               	movlw	high STR_3
  3456  001332  6E03               	movwf	i1SerTxStr@string+1,c
  3457  001334  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3458                           
  3459                           ;KeyValue.c: 146: SerTxStr(key);
  3460  001338  0E54               	movlw	low _key
  3461  00133A  6E02               	movwf	i1SerTxStr@string,c
  3462  00133C  0E00               	movlw	high _key
  3463  00133E  6E03               	movwf	i1SerTxStr@string+1,c
  3464  001340  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3465                           
  3466                           ;KeyValue.c: 148: if ((strcmp(key, "AZ") == 0) || (strcmp(key, "az") == 0))
  3467  001344  0E54               	movlw	low _key
  3468  001346  6E01               	movwf	strcmp@s1,c
  3469  001348  0E00               	movlw	high _key
  3470  00134A  6E02               	movwf	strcmp@s1+1,c
  3471  00134C  0E61               	movlw	low STR_15
  3472  00134E  6E03               	movwf	strcmp@s2,c
  3473  001350  0E10               	movlw	high STR_15
  3474  001352  6E04               	movwf	strcmp@s2+1,c
  3475  001354  ECC2  F017         	call	_strcmp	;wreg free
  3476  001358  5001               	movf	?_strcmp,w,c
  3477  00135A  1002               	iorwf	?_strcmp+1,w,c
  3478  00135C  B4D8               	btfsc	status,2,c
  3479  00135E  D00E               	goto	i1l3714
  3480  001360  0E54               	movlw	low _key
  3481  001362  6E01               	movwf	strcmp@s1,c
  3482  001364  0E00               	movlw	high _key
  3483  001366  6E02               	movwf	strcmp@s1+1,c
  3484  001368  0E6D               	movlw	low STR_16
  3485  00136A  6E03               	movwf	strcmp@s2,c
  3486  00136C  0E10               	movlw	high STR_16
  3487  00136E  6E04               	movwf	strcmp@s2+1,c
  3488  001370  ECC2  F017         	call	_strcmp	;wreg free
  3489  001374  5001               	movf	?_strcmp,w,c
  3490  001376  1002               	iorwf	?_strcmp+1,w,c
  3491  001378  A4D8               	btfss	status,2,c
  3492  00137A  D006               	goto	i1l3718
  3493  00137C                     i1l3714:
  3494                           
  3495                           ;KeyValue.c: 149: {
  3496                           ;KeyValue.c: 150: AZEL = 1;
  3497  00137C  0E01               	movlw	1
  3498  00137E  6E59               	movwf	_AZEL,c
  3499                           
  3500                           ;KeyValue.c: 151: SerTx(';');
  3501  001380  0E3B               	movlw	59
  3502  001382  EC57  F01A         	call	i1_SerTx
  3503                           
  3504                           ;KeyValue.c: 152: }
  3505  001386  D0D5               	goto	i1l3770
  3506  001388                     i1l3718:
  3507                           
  3508                           ;KeyValue.c: 154: else if ((strcmp(key, "EL") == 0) || (strcmp(key, "el") == 0))
  3509  001388  0E54               	movlw	low _key
  3510  00138A  6E01               	movwf	strcmp@s1,c
  3511  00138C  0E00               	movlw	high _key
  3512  00138E  6E02               	movwf	strcmp@s1+1,c
  3513  001390  0E49               	movlw	low (STR_21+1)
  3514  001392  6E03               	movwf	strcmp@s2,c
  3515  001394  0E10               	movlw	high (STR_21+1)
  3516  001396  6E04               	movwf	strcmp@s2+1,c
  3517  001398  ECC2  F017         	call	_strcmp	;wreg free
  3518  00139C  5001               	movf	?_strcmp,w,c
  3519  00139E  1002               	iorwf	?_strcmp+1,w,c
  3520  0013A0  B4D8               	btfsc	status,2,c
  3521  0013A2  D00E               	goto	i1l3722
  3522  0013A4  0E54               	movlw	low _key
  3523  0013A6  6E01               	movwf	strcmp@s1,c
  3524  0013A8  0E00               	movlw	high _key
  3525  0013AA  6E02               	movwf	strcmp@s1+1,c
  3526  0013AC  0E51               	movlw	low (STR_22+1)
  3527  0013AE  6E03               	movwf	strcmp@s2,c
  3528  0013B0  0E10               	movlw	high (STR_22+1)
  3529  0013B2  6E04               	movwf	strcmp@s2+1,c
  3530  0013B4  ECC2  F017         	call	_strcmp	;wreg free
  3531  0013B8  5001               	movf	?_strcmp,w,c
  3532  0013BA  1002               	iorwf	?_strcmp+1,w,c
  3533  0013BC  A4D8               	btfss	status,2,c
  3534  0013BE  D006               	goto	i1l3726
  3535  0013C0                     i1l3722:
  3536                           
  3537                           ;KeyValue.c: 155: {
  3538                           ;KeyValue.c: 156: AZEL = 2;
  3539  0013C0  0E02               	movlw	2
  3540  0013C2  6E59               	movwf	_AZEL,c
  3541                           
  3542                           ;KeyValue.c: 157: SerTx(';');
  3543  0013C4  0E3B               	movlw	59
  3544  0013C6  EC57  F01A         	call	i1_SerTx
  3545                           
  3546                           ;KeyValue.c: 158: }
  3547  0013CA  D0B3               	goto	i1l3770
  3548  0013CC                     i1l3726:
  3549                           
  3550                           ;KeyValue.c: 160: else if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  3551  0013CC  0E54               	movlw	low _key
  3552  0013CE  6E01               	movwf	strcmp@s1,c
  3553  0013D0  0E00               	movlw	high _key
  3554  0013D2  6E02               	movwf	strcmp@s1+1,c
  3555  0013D4  0E4C               	movlw	low STR_5
  3556  0013D6  6E03               	movwf	strcmp@s2,c
  3557  0013D8  0E10               	movlw	high STR_5
  3558  0013DA  6E04               	movwf	strcmp@s2+1,c
  3559  0013DC  ECC2  F017         	call	_strcmp	;wreg free
  3560  0013E0  5001               	movf	?_strcmp,w,c
  3561  0013E2  1002               	iorwf	?_strcmp+1,w,c
  3562  0013E4  B4D8               	btfsc	status,2,c
  3563  0013E6  D00E               	goto	i1l3730
  3564  0013E8  0E54               	movlw	low _key
  3565  0013EA  6E01               	movwf	strcmp@s1,c
  3566  0013EC  0E00               	movlw	high _key
  3567  0013EE  6E02               	movwf	strcmp@s1+1,c
  3568  0013F0  0E54               	movlw	low STR_6
  3569  0013F2  6E03               	movwf	strcmp@s2,c
  3570  0013F4  0E10               	movlw	high STR_6
  3571  0013F6  6E04               	movwf	strcmp@s2+1,c
  3572  0013F8  ECC2  F017         	call	_strcmp	;wreg free
  3573  0013FC  5001               	movf	?_strcmp,w,c
  3574  0013FE  1002               	iorwf	?_strcmp+1,w,c
  3575  001400  A4D8               	btfss	status,2,c
  3576  001402  D006               	goto	i1l3734
  3577  001404                     i1l3730:
  3578                           
  3579                           ;KeyValue.c: 161: {
  3580                           ;KeyValue.c: 162: StrippedKey = 0x02;
  3581  001404  0E02               	movlw	2
  3582  001406  6E49               	movwf	_StrippedKey,c
  3583                           
  3584                           ;KeyValue.c: 163: SerTx(';');
  3585  001408  0E3B               	movlw	59
  3586  00140A  EC57  F01A         	call	i1_SerTx
  3587                           
  3588                           ;KeyValue.c: 164: }
  3589  00140E  D091               	goto	i1l3770
  3590  001410                     i1l3734:
  3591                           
  3592                           ;KeyValue.c: 166: else if ((strcmp(key, "VEL") == 0) || (strcmp(key, "vel") == 0))
  3593  001410  0E54               	movlw	low _key
  3594  001412  6E01               	movwf	strcmp@s1,c
  3595  001414  0E00               	movlw	high _key
  3596  001416  6E02               	movwf	strcmp@s1+1,c
  3597  001418  0E48               	movlw	low STR_21
  3598  00141A  6E03               	movwf	strcmp@s2,c
  3599  00141C  0E10               	movlw	high STR_21
  3600  00141E  6E04               	movwf	strcmp@s2+1,c
  3601  001420  ECC2  F017         	call	_strcmp	;wreg free
  3602  001424  5001               	movf	?_strcmp,w,c
  3603  001426  1002               	iorwf	?_strcmp+1,w,c
  3604  001428  B4D8               	btfsc	status,2,c
  3605  00142A  D00E               	goto	i1l3738
  3606  00142C  0E54               	movlw	low _key
  3607  00142E  6E01               	movwf	strcmp@s1,c
  3608  001430  0E00               	movlw	high _key
  3609  001432  6E02               	movwf	strcmp@s1+1,c
  3610  001434  0E50               	movlw	low STR_22
  3611  001436  6E03               	movwf	strcmp@s2,c
  3612  001438  0E10               	movlw	high STR_22
  3613  00143A  6E04               	movwf	strcmp@s2+1,c
  3614  00143C  ECC2  F017         	call	_strcmp	;wreg free
  3615  001440  5001               	movf	?_strcmp,w,c
  3616  001442  1002               	iorwf	?_strcmp+1,w,c
  3617  001444  A4D8               	btfss	status,2,c
  3618  001446  D006               	goto	i1l3742
  3619  001448                     i1l3738:
  3620                           
  3621                           ;KeyValue.c: 167: {
  3622                           ;KeyValue.c: 168: StrippedKey = 0x03;
  3623  001448  0E03               	movlw	3
  3624  00144A  6E49               	movwf	_StrippedKey,c
  3625                           
  3626                           ;KeyValue.c: 169: SerTx(';');
  3627  00144C  0E3B               	movlw	59
  3628  00144E  EC57  F01A         	call	i1_SerTx
  3629                           
  3630                           ;KeyValue.c: 170: }
  3631  001452  D06F               	goto	i1l3770
  3632  001454                     i1l3742:
  3633                           
  3634                           ;KeyValue.c: 172: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  3635  001454  0E54               	movlw	low _key
  3636  001456  6E01               	movwf	strcmp@s1,c
  3637  001458  0E00               	movlw	high _key
  3638  00145A  6E02               	movwf	strcmp@s1+1,c
  3639  00145C  0E5E               	movlw	low STR_7
  3640  00145E  6E03               	movwf	strcmp@s2,c
  3641  001460  0E10               	movlw	high STR_7
  3642  001462  6E04               	movwf	strcmp@s2+1,c
  3643  001464  ECC2  F017         	call	_strcmp	;wreg free
  3644  001468  5001               	movf	?_strcmp,w,c
  3645  00146A  1002               	iorwf	?_strcmp+1,w,c
  3646  00146C  B4D8               	btfsc	status,2,c
  3647  00146E  D00E               	goto	i1l3746
  3648  001470  0E54               	movlw	low _key
  3649  001472  6E01               	movwf	strcmp@s1,c
  3650  001474  0E00               	movlw	high _key
  3651  001476  6E02               	movwf	strcmp@s1+1,c
  3652  001478  0E6A               	movlw	low STR_8
  3653  00147A  6E03               	movwf	strcmp@s2,c
  3654  00147C  0E10               	movlw	high STR_8
  3655  00147E  6E04               	movwf	strcmp@s2+1,c
  3656  001480  ECC2  F017         	call	_strcmp	;wreg free
  3657  001484  5001               	movf	?_strcmp,w,c
  3658  001486  1002               	iorwf	?_strcmp+1,w,c
  3659  001488  A4D8               	btfss	status,2,c
  3660  00148A  D006               	goto	i1l3750
  3661  00148C                     i1l3746:
  3662                           
  3663                           ;KeyValue.c: 173: {
  3664                           ;KeyValue.c: 174: StrippedKey = 0x04;
  3665  00148C  0E04               	movlw	4
  3666  00148E  6E49               	movwf	_StrippedKey,c
  3667                           
  3668                           ;KeyValue.c: 175: SerTx(';');
  3669  001490  0E3B               	movlw	59
  3670  001492  EC57  F01A         	call	i1_SerTx
  3671                           
  3672                           ;KeyValue.c: 176: }
  3673  001496  D04D               	goto	i1l3770
  3674  001498                     i1l3750:
  3675                           
  3676                           ;KeyValue.c: 178: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  3677  001498  0E54               	movlw	low _key
  3678  00149A  6E01               	movwf	strcmp@s1,c
  3679  00149C  0E00               	movlw	high _key
  3680  00149E  6E02               	movwf	strcmp@s1+1,c
  3681  0014A0  0E5B               	movlw	low STR_9
  3682  0014A2  6E03               	movwf	strcmp@s2,c
  3683  0014A4  0E10               	movlw	high STR_9
  3684  0014A6  6E04               	movwf	strcmp@s2+1,c
  3685  0014A8  ECC2  F017         	call	_strcmp	;wreg free
  3686  0014AC  5001               	movf	?_strcmp,w,c
  3687  0014AE  1002               	iorwf	?_strcmp+1,w,c
  3688  0014B0  B4D8               	btfsc	status,2,c
  3689  0014B2  D00E               	goto	i1l3754
  3690  0014B4  0E54               	movlw	low _key
  3691  0014B6  6E01               	movwf	strcmp@s1,c
  3692  0014B8  0E00               	movlw	high _key
  3693  0014BA  6E02               	movwf	strcmp@s1+1,c
  3694  0014BC  0E67               	movlw	low STR_10
  3695  0014BE  6E03               	movwf	strcmp@s2,c
  3696  0014C0  0E10               	movlw	high STR_10
  3697  0014C2  6E04               	movwf	strcmp@s2+1,c
  3698  0014C4  ECC2  F017         	call	_strcmp	;wreg free
  3699  0014C8  5001               	movf	?_strcmp,w,c
  3700  0014CA  1002               	iorwf	?_strcmp+1,w,c
  3701  0014CC  A4D8               	btfss	status,2,c
  3702  0014CE  D006               	goto	i1l3758
  3703  0014D0                     i1l3754:
  3704                           
  3705                           ;KeyValue.c: 179: {
  3706                           ;KeyValue.c: 180: StrippedKey = 0x06;
  3707  0014D0  0E06               	movlw	6
  3708  0014D2  6E49               	movwf	_StrippedKey,c
  3709                           
  3710                           ;KeyValue.c: 181: SerTx(';');
  3711  0014D4  0E3B               	movlw	59
  3712  0014D6  EC57  F01A         	call	i1_SerTx
  3713                           
  3714                           ;KeyValue.c: 182: }
  3715  0014DA  D02B               	goto	i1l3770
  3716  0014DC                     i1l3758:
  3717                           
  3718                           ;KeyValue.c: 184: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  3719  0014DC  0E54               	movlw	low _key
  3720  0014DE  6E01               	movwf	strcmp@s1,c
  3721  0014E0  0E00               	movlw	high _key
  3722  0014E2  6E02               	movwf	strcmp@s1+1,c
  3723  0014E4  0E58               	movlw	low STR_11
  3724  0014E6  6E03               	movwf	strcmp@s2,c
  3725  0014E8  0E10               	movlw	high STR_11
  3726  0014EA  6E04               	movwf	strcmp@s2+1,c
  3727  0014EC  ECC2  F017         	call	_strcmp	;wreg free
  3728  0014F0  5001               	movf	?_strcmp,w,c
  3729  0014F2  1002               	iorwf	?_strcmp+1,w,c
  3730  0014F4  B4D8               	btfsc	status,2,c
  3731  0014F6  D00E               	goto	i1l3762
  3732  0014F8  0E54               	movlw	low _key
  3733  0014FA  6E01               	movwf	strcmp@s1,c
  3734  0014FC  0E00               	movlw	high _key
  3735  0014FE  6E02               	movwf	strcmp@s1+1,c
  3736  001500  0E64               	movlw	low STR_12
  3737  001502  6E03               	movwf	strcmp@s2,c
  3738  001504  0E10               	movlw	high STR_12
  3739  001506  6E04               	movwf	strcmp@s2+1,c
  3740  001508  ECC2  F017         	call	_strcmp	;wreg free
  3741  00150C  5001               	movf	?_strcmp,w,c
  3742  00150E  1002               	iorwf	?_strcmp+1,w,c
  3743  001510  A4D8               	btfss	status,2,c
  3744  001512  D006               	goto	i1l3766
  3745  001514                     i1l3762:
  3746                           
  3747                           ;KeyValue.c: 185: {
  3748                           ;KeyValue.c: 186: StrippedKey = 0x08;
  3749  001514  0E08               	movlw	8
  3750  001516  6E49               	movwf	_StrippedKey,c
  3751                           
  3752                           ;KeyValue.c: 187: SerTx(';');
  3753  001518  0E3B               	movlw	59
  3754  00151A  EC57  F01A         	call	i1_SerTx
  3755                           
  3756                           ;KeyValue.c: 188: }
  3757  00151E  D009               	goto	i1l3770
  3758  001520                     i1l3766:
  3759                           
  3760                           ;KeyValue.c: 190: else
  3761                           ;KeyValue.c: 191: {
  3762                           ;KeyValue.c: 192: SerTxStr("???");
  3763  001520  0E44               	movlw	low STR_13
  3764  001522  6E02               	movwf	i1SerTxStr@string,c
  3765  001524  0E10               	movlw	high STR_13
  3766  001526  6E03               	movwf	i1SerTxStr@string+1,c
  3767  001528  EC6C  F017         	call	i1_SerTxStr	;wreg free
  3768  00152C                     i1l3768:
  3769                           
  3770                           ;KeyValue.c: 193: StrippedKey = 0;
  3771  00152C  0E00               	movlw	0
  3772  00152E  6E49               	movwf	_StrippedKey,c
  3773  001530  D000               	goto	i1l3770
  3774  001532                     i1l3770:
  3775                           
  3776                           ;KeyValue.c: 194: }
  3777                           ;KeyValue.c: 195: }
  3778                           ;KeyValue.c: 197: StrippedValue = strtod(value, &str_end);
  3779  001532  0E4A               	movlw	low _value
  3780  001534  6E18               	movwf	strtod@s,c
  3781  001536  0E00               	movlw	high _value
  3782  001538  6E19               	movwf	strtod@s+1,c
  3783  00153A  0E2A               	movlw	low keyValue@str_end
  3784  00153C  6E1A               	movwf	strtod@res,c
  3785  00153E  0E00               	movlw	high keyValue@str_end
  3786  001540  6E1B               	movwf	strtod@res+1,c
  3787  001542  ECE4  F00A         	call	_strtod	;wreg free
  3788  001546  C018  F045         	movff	?_strtod,_StrippedValue
  3789  00154A  C019  F046         	movff	?_strtod+1,_StrippedValue+1
  3790  00154E  C01A  F047         	movff	?_strtod+2,_StrippedValue+2
  3791                           
  3792                           ;KeyValue.c: 201: for (x = 0; x < 5; x++)
  3793  001552  0E00               	movlw	0
  3794  001554  6E2E               	movwf	keyValue@x,c
  3795  001556                     i1l3774:
  3796  001556  0E04               	movlw	4
  3797  001558  642E               	cpfsgt	keyValue@x,c
  3798  00155A  D001               	goto	i1l3778
  3799  00155C  D00C               	goto	i1l3784
  3800  00155E                     i1l3778:
  3801                           
  3802                           ;KeyValue.c: 202: {
  3803                           ;KeyValue.c: 203: key[x] = (0);
  3804  00155E  502E               	movf	keyValue@x,w,c
  3805  001560  0D01               	mullw	1
  3806  001562  0E54               	movlw	low _key
  3807  001564  24F3               	addwf	prodl,w,c
  3808  001566  6ED9               	movwf	fsr2l,c
  3809  001568  0E00               	movlw	high _key
  3810  00156A  20F4               	addwfc	prodh,w,c
  3811  00156C  6EDA               	movwf	fsr2h,c
  3812  00156E  0E00               	movlw	0
  3813  001570  6EDF               	movwf	indf2,c
  3814  001572  2A2E               	incf	keyValue@x,f,c
  3815  001574  D7F0               	goto	i1l3774
  3816  001576                     i1l3784:
  3817                           
  3818                           ;KeyValue.c: 204: }
  3819                           ;KeyValue.c: 206: for (x = 0; x < 10; x++)
  3820  001576  0E00               	movlw	0
  3821  001578  6E2E               	movwf	keyValue@x,c
  3822  00157A                     i1l3786:
  3823  00157A  0E09               	movlw	9
  3824  00157C  642E               	cpfsgt	keyValue@x,c
  3825  00157E  D001               	goto	i1l3790
  3826  001580  D00C               	goto	i1l3796
  3827  001582                     i1l3790:
  3828                           
  3829                           ;KeyValue.c: 207: {
  3830                           ;KeyValue.c: 208: value[x] = (0);
  3831  001582  502E               	movf	keyValue@x,w,c
  3832  001584  0D01               	mullw	1
  3833  001586  0E4A               	movlw	low _value
  3834  001588  24F3               	addwf	prodl,w,c
  3835  00158A  6ED9               	movwf	fsr2l,c
  3836  00158C  0E00               	movlw	high _value
  3837  00158E  20F4               	addwfc	prodh,w,c
  3838  001590  6EDA               	movwf	fsr2h,c
  3839  001592  0E00               	movlw	0
  3840  001594  6EDF               	movwf	indf2,c
  3841  001596  2A2E               	incf	keyValue@x,f,c
  3842  001598  D7F0               	goto	i1l3786
  3843  00159A                     i1l3796:
  3844                           
  3845                           ;KeyValue.c: 209: }
  3846                           ;KeyValue.c: 211: for (x = 0; x < 30; x++)
  3847  00159A  0E00               	movlw	0
  3848  00159C  6E2E               	movwf	keyValue@x,c
  3849  00159E                     i1l3798:
  3850  00159E  0E1D               	movlw	29
  3851  0015A0  642E               	cpfsgt	keyValue@x,c
  3852  0015A2  D001               	goto	i1l3802
  3853  0015A4  D00C               	goto	i1l3808
  3854  0015A6                     i1l3802:
  3855                           
  3856                           ;KeyValue.c: 212: {
  3857                           ;KeyValue.c: 213: received[x] = (0);
  3858  0015A6  502E               	movf	keyValue@x,w,c
  3859  0015A8  0D01               	mullw	1
  3860  0015AA  0EDC               	movlw	low _received
  3861  0015AC  24F3               	addwf	prodl,w,c
  3862  0015AE  6ED9               	movwf	fsr2l,c
  3863  0015B0  0E00               	movlw	high _received
  3864  0015B2  20F4               	addwfc	prodh,w,c
  3865  0015B4  6EDA               	movwf	fsr2h,c
  3866  0015B6  0E00               	movlw	0
  3867  0015B8  6EDF               	movwf	indf2,c
  3868  0015BA  2A2E               	incf	keyValue@x,f,c
  3869  0015BC  D7F0               	goto	i1l3798
  3870  0015BE                     i1l3808:
  3871                           
  3872                           ;KeyValue.c: 214: }
  3873                           ;KeyValue.c: 215: flag = 0;
  3874  0015BE  0E00               	movlw	0
  3875  0015C0  6E2C               	movwf	keyValue@flag,c
  3876                           
  3877                           ;KeyValue.c: 216: RCflag = 1;
  3878  0015C2  0E01               	movlw	1
  3879  0015C4  6E48               	movwf	_RCflag,c
  3880  0015C6  0012               	return		;funcret
  3881  0015C8                     __end_of_keyValue:
  3882                           	opt stack 0
  3883                           pclatu	equ	0xFFB
  3884                           pclath	equ	0xFFA
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           intcon	equ	0xFF2
  3892                           intcon2	equ	0xFF1
  3893                           indf0	equ	0xFEF
  3894                           postinc0	equ	0xFEE
  3895                           fsr0h	equ	0xFEA
  3896                           fsr0l	equ	0xFE9
  3897                           wreg	equ	0xFE8
  3898                           indf1	equ	0xFE7
  3899                           fsr1h	equ	0xFE2
  3900                           fsr1l	equ	0xFE1
  3901                           bsr	equ	0xFE0
  3902                           indf2	equ	0xFDF
  3903                           postinc2	equ	0xFDE
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function i1_SerTxStr *****************
  3909 ;; Defined at:
  3910 ;;		line 50 in file "SerComm.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  string          2    1[COMRAM] PTR unsigned char 
  3913 ;;		 -> STR_30(36), STR_29(4), STR_14(6), STR_13(4), 
  3914 ;;		 -> STR_4(11), value(10), STR_3(6), key(5), 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;		None               void
  3919 ;; Registers used:
  3920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        2 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    8
  3933 ;; This function calls:
  3934 ;;		i1_SerTx
  3935 ;; This function is called by:
  3936 ;;		_keyValue
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text20
  3941  002ED8                     __ptext20:
  3942                           	opt stack 0
  3943  002ED8                     i1_SerTxStr:
  3944                           	opt stack 14
  3945                           
  3946                           ;SerComm.c: 52: while (*string)
  3947                           
  3948                           ;incstack = 0
  3949  002ED8  D016               	goto	i1l3372
  3950  002EDA                     i1l3368:
  3951                           
  3952                           ;SerComm.c: 53: SerTx(*string++);
  3953  002EDA  C002  FFF6         	movff	i1SerTxStr@string,tblptrl
  3954  002EDE  C003  FFF7         	movff	i1SerTxStr@string+1,tblptrh
  3955  002EE2  0E00               	movlw	low (__smallconst shr (0+16))
  3956  002EE4  6EF8               	movwf	tblptru,c
  3957  002EE6  0E0F               	movlw	(high __ramtop+-1)
  3958  002EE8  64F7               	cpfsgt	tblptrh,c
  3959  002EEA  D003               	bra	i1u340_27
  3960  002EEC  0008               	tblrd		*
  3961  002EEE  50F5               	movf	tablat,w,c
  3962  002EF0  D005               	bra	i1u340_20
  3963  002EF2                     i1u340_27:
  3964  002EF2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3965  002EF6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3966  002EFA  50EF               	movf	indf0,w,c
  3967  002EFC                     i1u340_20:
  3968  002EFC  EC57  F01A         	call	i1_SerTx
  3969  002F00  4A02               	infsnz	i1SerTxStr@string,f,c
  3970  002F02  2A03               	incf	i1SerTxStr@string+1,f,c
  3971  002F04  D000               	goto	i1l3372
  3972  002F06                     i1l3372:
  3973  002F06  C002  FFF6         	movff	i1SerTxStr@string,tblptrl
  3974  002F0A  C003  FFF7         	movff	i1SerTxStr@string+1,tblptrh
  3975  002F0E  0E00               	movlw	low (__smallconst shr (0+16))
  3976  002F10  6EF8               	movwf	tblptru,c
  3977  002F12  0E0F               	movlw	(high __ramtop+-1)
  3978  002F14  64F7               	cpfsgt	tblptrh,c
  3979  002F16  D003               	bra	i1u341_27
  3980  002F18  0008               	tblrd		*
  3981  002F1A  50F5               	movf	tablat,w,c
  3982  002F1C  D005               	bra	i1u341_20
  3983  002F1E                     i1u341_27:
  3984  002F1E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3985  002F22  CFF7 FFEA          	movff	tblptrh,fsr0h
  3986  002F26  50EF               	movf	indf0,w,c
  3987  002F28                     i1u341_20:
  3988  002F28  0900               	iorlw	0
  3989  002F2A  A4D8               	btfss	status,2,c
  3990  002F2C  D7D6               	goto	i1l3368
  3991  002F2E  0012               	return		;funcret
  3992  002F30                     __end_ofi1_SerTxStr:
  3993                           	opt stack 0
  3994                           pclatu	equ	0xFFB
  3995                           pclath	equ	0xFFA
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           prodh	equ	0xFF4
  4001                           prodl	equ	0xFF3
  4002                           intcon	equ	0xFF2
  4003                           intcon2	equ	0xFF1
  4004                           indf0	equ	0xFEF
  4005                           postinc0	equ	0xFEE
  4006                           fsr0h	equ	0xFEA
  4007                           fsr0l	equ	0xFE9
  4008                           wreg	equ	0xFE8
  4009                           indf1	equ	0xFE7
  4010                           fsr1h	equ	0xFE2
  4011                           fsr1l	equ	0xFE1
  4012                           bsr	equ	0xFE0
  4013                           indf2	equ	0xFDF
  4014                           postinc2	equ	0xFDE
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           
  4019 ;; *************** function i1_SerTx *****************
  4020 ;; Defined at:
  4021 ;;		line 41 in file "SerComm.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  c               1    wreg     unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  c               1    0[COMRAM] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;		None               void
  4028 ;; Registers used:
  4029 ;;		wreg
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;Total ram usage:        1 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    7
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_RCInt
  4046 ;;		_keyValue
  4047 ;;		i1_SerTxStr
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text21
  4052  0034AE                     __ptext21:
  4053                           	opt stack 0
  4054  0034AE                     i1_SerTx:
  4055                           	opt stack 16
  4056                           
  4057                           ;incstack = 0
  4058                           ;i1SerTx@c stored from wreg
  4059  0034AE  6E01               	movwf	i1SerTx@c,c
  4060                           
  4061                           ;SerComm.c: 43: TXREG1 = c;
  4062  0034B0  C001  FFAD         	movff	i1SerTx@c,4013	;volatile
  4063                           
  4064                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  4065  0034B4  D000               	goto	i1l310
  4066  0034B6                     i1l310:
  4067  0034B6  A89E               	btfss	3998,4,c	;volatile
  4068  0034B8  D7FE               	goto	i1l310
  4069  0034BA  0012               	return		;funcret
  4070  0034BC                     __end_ofi1_SerTx:
  4071                           	opt stack 0
  4072                           pclatu	equ	0xFFB
  4073                           pclath	equ	0xFFA
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           prodh	equ	0xFF4
  4079                           prodl	equ	0xFF3
  4080                           intcon	equ	0xFF2
  4081                           intcon2	equ	0xFF1
  4082                           indf0	equ	0xFEF
  4083                           postinc0	equ	0xFEE
  4084                           fsr0h	equ	0xFEA
  4085                           fsr0l	equ	0xFE9
  4086                           wreg	equ	0xFE8
  4087                           indf1	equ	0xFE7
  4088                           fsr1h	equ	0xFE2
  4089                           fsr1l	equ	0xFE1
  4090                           bsr	equ	0xFE0
  4091                           indf2	equ	0xFDF
  4092                           postinc2	equ	0xFDE
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _strtod *****************
  4098 ;; Defined at:
  4099 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/common/atof.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  s               2   23[COMRAM] PTR const unsigned char 
  4102 ;;		 -> value(10), 
  4103 ;;  res             2   25[COMRAM] PTR PTR const unsigned c
  4104 ;;		 -> NULL(0), keyValue@str_end(2), 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  _u              4   31[COMRAM] struct .
  4107 ;;  expon           1   30[COMRAM] char 
  4108 ;;  flags           1   29[COMRAM] unsigned char 
  4109 ;;  eexp            1   28[COMRAM] char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  3   23[COMRAM] char 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:       12 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    9
  4126 ;; This function calls:
  4127 ;;		___altoft
  4128 ;;		___ftdiv
  4129 ;;		___ftge
  4130 ;;		___ftmul
  4131 ;;		___ftneg
  4132 ;;		___lmul
  4133 ;;		_isdigit
  4134 ;;		_isspace
  4135 ;; This function is called by:
  4136 ;;		_keyValue
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text22
  4141  0015C8                     __ptext22:
  4142                           	opt stack 0
  4143  0015C8                     _strtod:
  4144                           	opt stack 13
  4145                           
  4146                           ;incstack = 0
  4147  0015C8  501A               	movf	strtod@res,w,c
  4148  0015CA  101B               	iorwf	strtod@res+1,w,c
  4149  0015CC  B4D8               	btfsc	status,2,c
  4150  0015CE  D00C               	goto	i1l3104
  4151  0015D0  C01A  FFD9         	movff	strtod@res,fsr2l
  4152  0015D4  C01B  FFDA         	movff	strtod@res+1,fsr2h
  4153  0015D8  C018  FFDE         	movff	strtod@s,postinc2
  4154  0015DC  C019  FFDD         	movff	strtod@s+1,postdec2
  4155  0015E0  D003               	goto	i1l3104
  4156  0015E2                     i1l3102:
  4157  0015E2  4A18               	infsnz	strtod@s,f,c
  4158  0015E4  2A19               	incf	strtod@s+1,f,c
  4159  0015E6  D000               	goto	i1l3104
  4160  0015E8                     i1l3104:
  4161  0015E8  C018  FFD9         	movff	strtod@s,fsr2l
  4162  0015EC  C019  FFDA         	movff	strtod@s+1,fsr2h
  4163  0015F0  50DF               	movf	indf2,w,c
  4164  0015F2  6E1D               	movwf	strtod@eexp,c
  4165  0015F4  501D               	movf	strtod@eexp,w,c
  4166  0015F6  EC35  F019         	call	_isspace
  4167  0015FA  B0D8               	btfsc	status,0,c
  4168  0015FC  D7F2               	goto	i1l3102
  4169  0015FE  0E00               	movlw	0
  4170  001600  6E1E               	movwf	strtod@flags,c
  4171  001602  0E2D               	movlw	45
  4172  001604  181D               	xorwf	strtod@eexp,w,c
  4173  001606  A4D8               	btfss	status,2,c
  4174  001608  D003               	goto	i1l3114
  4175  00160A  0E01               	movlw	1
  4176  00160C  6E1E               	movwf	strtod@flags,c
  4177  00160E  D004               	goto	i1l3116
  4178  001610                     i1l3114:
  4179  001610  0E2B               	movlw	43
  4180  001612  181D               	xorwf	strtod@eexp,w,c
  4181  001614  A4D8               	btfss	status,2,c
  4182  001616  D003               	goto	i1l3118
  4183  001618                     i1l3116:
  4184  001618  4A18               	infsnz	strtod@s,f,c
  4185  00161A  2A19               	incf	strtod@s+1,f,c
  4186  00161C  D000               	goto	i1l3118
  4187  00161E                     i1l3118:
  4188  00161E  0E00               	movlw	0
  4189  001620  6E1D               	movwf	strtod@eexp,c
  4190  001622  0E00               	movlw	0
  4191  001624  6E20               	movwf	strtod@_u,c
  4192  001626  0E00               	movlw	0
  4193  001628  6E21               	movwf	strtod@_u+1,c
  4194  00162A  0E00               	movlw	0
  4195  00162C  6E22               	movwf	strtod@_u+2,c
  4196  00162E  0E00               	movlw	0
  4197  001630  6E23               	movwf	strtod@_u+3,c
  4198  001632  0E00               	movlw	0
  4199  001634  6E1F               	movwf	strtod@expon,c
  4200  001636  D000               	goto	i1l3124
  4201  001638                     i1l3124:
  4202  001638  B81E               	btfsc	strtod@flags,4,c
  4203  00163A  D00A               	goto	i1l3130
  4204  00163C  C018  FFD9         	movff	strtod@s,fsr2l
  4205  001640  C019  FFDA         	movff	strtod@s+1,fsr2h
  4206  001644  0E2E               	movlw	46
  4207  001646  18DE               	xorwf	postinc2,w,c
  4208  001648  A4D8               	btfss	status,2,c
  4209  00164A  D002               	goto	i1l3130
  4210  00164C  881E               	bsf	strtod@flags,4,c
  4211  00164E  D040               	goto	i1l668
  4212  001650                     i1l3130:
  4213  001650  C018  FFD9         	movff	strtod@s,fsr2l
  4214  001654  C019  FFDA         	movff	strtod@s+1,fsr2h
  4215  001658  50DF               	movf	indf2,w,c
  4216  00165A  ECC1  F019         	call	_isdigit
  4217  00165E  A0D8               	btfss	status,0,c
  4218  001660  D03A               	goto	i1l3148
  4219  001662  D001               	goto	i1l3134
  4220  001664  D038               	goto	i1l3148
  4221  001666                     i1l3134:
  4222  001666  821E               	bsf	strtod@flags,1,c
  4223  001668  0E08               	movlw	8
  4224  00166A  181D               	xorwf	strtod@eexp,w,c
  4225  00166C  B4D8               	btfsc	status,2,c
  4226  00166E  D02C               	goto	i1l666
  4227  001670  B81E               	btfsc	strtod@flags,4,c
  4228  001672  061F               	decf	strtod@expon,f,c
  4229  001674  2A1D               	incf	strtod@eexp,f,c
  4230  001676  C020  F001         	movff	strtod@_u,___lmul@multiplier
  4231  00167A  C021  F002         	movff	strtod@_u+1,___lmul@multiplier+1
  4232  00167E  C022  F003         	movff	strtod@_u+2,___lmul@multiplier+2
  4233  001682  C023  F004         	movff	strtod@_u+3,___lmul@multiplier+3
  4234  001686  0E0A               	movlw	10
  4235  001688  6E05               	movwf	___lmul@multiplicand,c
  4236  00168A  0E00               	movlw	0
  4237  00168C  6E06               	movwf	___lmul@multiplicand+1,c
  4238  00168E  0E00               	movlw	0
  4239  001690  6E07               	movwf	___lmul@multiplicand+2,c
  4240  001692  0E00               	movlw	0
  4241  001694  6E08               	movwf	___lmul@multiplicand+3,c
  4242  001696  EC3F  F017         	call	___lmul	;wreg free
  4243  00169A  C001  F020         	movff	?___lmul,strtod@_u
  4244  00169E  C002  F021         	movff	?___lmul+1,strtod@_u+1
  4245  0016A2  C003  F022         	movff	?___lmul+2,strtod@_u+2
  4246  0016A6  C004  F023         	movff	?___lmul+3,strtod@_u+3
  4247  0016AA  C018  FFD9         	movff	strtod@s,fsr2l
  4248  0016AE  C019  FFDA         	movff	strtod@s+1,fsr2h
  4249  0016B2  50DF               	movf	indf2,w,c
  4250  0016B4  6E1C               	movwf	??_strtod& (0+255),c
  4251  0016B6  0ED0               	movlw	208
  4252  0016B8  261C               	addwf	??_strtod,f,c
  4253  0016BA  501C               	movf	??_strtod,w,c
  4254  0016BC  2620               	addwf	strtod@_u,f,c
  4255  0016BE  0E00               	movlw	0
  4256  0016C0  2221               	addwfc	strtod@_u+1,f,c
  4257  0016C2  2222               	addwfc	strtod@_u+2,f,c
  4258  0016C4  2223               	addwfc	strtod@_u+3,f,c
  4259  0016C6  D004               	goto	i1l668
  4260  0016C8                     i1l666:
  4261  0016C8  B81E               	btfsc	strtod@flags,4,c
  4262  0016CA  D002               	goto	i1l668
  4263  0016CC  2A1F               	incf	strtod@expon,f,c
  4264  0016CE  D000               	goto	i1l668
  4265  0016D0                     i1l668:
  4266  0016D0  4A18               	infsnz	strtod@s,f,c
  4267  0016D2  2A19               	incf	strtod@s+1,f,c
  4268  0016D4  D7B1               	goto	i1l3124
  4269  0016D6                     i1l3148:
  4270  0016D6  0E00               	movlw	0
  4271  0016D8  6E1D               	movwf	strtod@eexp,c
  4272  0016DA  C018  FFD9         	movff	strtod@s,fsr2l
  4273  0016DE  C019  FFDA         	movff	strtod@s+1,fsr2h
  4274  0016E2  0E65               	movlw	101
  4275  0016E4  18DE               	xorwf	postinc2,w,c
  4276  0016E6  B4D8               	btfsc	status,2,c
  4277  0016E8  D008               	goto	i1l3154
  4278  0016EA  C018  FFD9         	movff	strtod@s,fsr2l
  4279  0016EE  C019  FFDA         	movff	strtod@s+1,fsr2h
  4280  0016F2  0E45               	movlw	69
  4281  0016F4  18DE               	xorwf	postinc2,w,c
  4282  0016F6  A4D8               	btfss	status,2,c
  4283  0016F8  D065               	goto	i1l3186
  4284  0016FA                     i1l3154:
  4285  0016FA  4A18               	infsnz	strtod@s,f,c
  4286  0016FC  2A19               	incf	strtod@s+1,f,c
  4287  0016FE  C018  FFD9         	movff	strtod@s,fsr2l
  4288  001702  C019  FFDA         	movff	strtod@s+1,fsr2h
  4289  001706  0E2D               	movlw	45
  4290  001708  18DE               	xorwf	postinc2,w,c
  4291  00170A  A4D8               	btfss	status,2,c
  4292  00170C  D002               	goto	i1l3158
  4293  00170E  861E               	bsf	strtod@flags,3,c
  4294  001710  D008               	goto	i1l3160
  4295  001712                     i1l3158:
  4296  001712  C018  FFD9         	movff	strtod@s,fsr2l
  4297  001716  C019  FFDA         	movff	strtod@s+1,fsr2h
  4298  00171A  0E2B               	movlw	43
  4299  00171C  18DE               	xorwf	postinc2,w,c
  4300  00171E  A4D8               	btfss	status,2,c
  4301  001720  D006               	goto	i1l3164
  4302  001722                     i1l3160:
  4303  001722  4A18               	infsnz	strtod@s,f,c
  4304  001724  2A19               	incf	strtod@s+1,f,c
  4305  001726  D003               	goto	i1l3164
  4306  001728                     i1l3162:
  4307  001728  4A18               	infsnz	strtod@s,f,c
  4308  00172A  2A19               	incf	strtod@s+1,f,c
  4309  00172C  D000               	goto	i1l3164
  4310  00172E                     i1l3164:
  4311  00172E  C018  FFD9         	movff	strtod@s,fsr2l
  4312  001732  C019  FFDA         	movff	strtod@s+1,fsr2h
  4313  001736  0E30               	movlw	48
  4314  001738  18DE               	xorwf	postinc2,w,c
  4315  00173A  B4D8               	btfsc	status,2,c
  4316  00173C  D7F5               	goto	i1l3162
  4317  00173E  C018  FFD9         	movff	strtod@s,fsr2l
  4318  001742  C019  FFDA         	movff	strtod@s+1,fsr2h
  4319  001746  50DF               	movf	indf2,w,c
  4320  001748  ECC1  F019         	call	_isdigit
  4321  00174C  A0D8               	btfss	status,0,c
  4322  00174E  D036               	goto	i1l3182
  4323  001750  C018  FFD9         	movff	strtod@s,fsr2l
  4324  001754  C019  FFDA         	movff	strtod@s+1,fsr2h
  4325  001758  50DF               	movf	indf2,w,c
  4326  00175A  0FD0               	addlw	208
  4327  00175C  6E1D               	movwf	strtod@eexp,c
  4328  00175E  4A18               	infsnz	strtod@s,f,c
  4329  001760  2A19               	incf	strtod@s+1,f,c
  4330  001762  C018  FFD9         	movff	strtod@s,fsr2l
  4331  001766  C019  FFDA         	movff	strtod@s+1,fsr2h
  4332  00176A  50DF               	movf	indf2,w,c
  4333  00176C  ECC1  F019         	call	_isdigit
  4334  001770  A0D8               	btfss	status,0,c
  4335  001772  D024               	goto	i1l3182
  4336  001774  C018  FFD9         	movff	strtod@s,fsr2l
  4337  001778  C019  FFDA         	movff	strtod@s+1,fsr2h
  4338  00177C  50DF               	movf	indf2,w,c
  4339  00177E  6E1C               	movwf	??_strtod& (0+255),c
  4340  001780  501D               	movf	strtod@eexp,w,c
  4341  001782  0D0A               	mullw	10
  4342  001784  50F3               	movf	prodl,w,c
  4343  001786  241C               	addwf	??_strtod,w,c
  4344  001788  0FD0               	addlw	208
  4345  00178A  6E1D               	movwf	strtod@eexp,c
  4346  00178C  4A18               	infsnz	strtod@s,f,c
  4347  00178E  2A19               	incf	strtod@s+1,f,c
  4348  001790  C018  FFD9         	movff	strtod@s,fsr2l
  4349  001794  C019  FFDA         	movff	strtod@s+1,fsr2h
  4350  001798  50DF               	movf	indf2,w,c
  4351  00179A  ECC1  F019         	call	_isdigit
  4352  00179E  A0D8               	btfss	status,0,c
  4353  0017A0  D00D               	goto	i1l3182
  4354  0017A2  C018  FFD9         	movff	strtod@s,fsr2l
  4355  0017A6  C019  FFDA         	movff	strtod@s+1,fsr2h
  4356  0017AA  50DF               	movf	indf2,w,c
  4357  0017AC  6E1C               	movwf	??_strtod& (0+255),c
  4358  0017AE  501D               	movf	strtod@eexp,w,c
  4359  0017B0  0D0A               	mullw	10
  4360  0017B2  50F3               	movf	prodl,w,c
  4361  0017B4  241C               	addwf	??_strtod,w,c
  4362  0017B6  0FD0               	addlw	208
  4363  0017B8  6E1D               	movwf	strtod@eexp,c
  4364  0017BA  D000               	goto	i1l3182
  4365  0017BC                     i1l3182:
  4366  0017BC  A61E               	btfss	strtod@flags,3,c
  4367  0017BE  D002               	goto	i1l3186
  4368  0017C0  6C1D               	negf	strtod@eexp,c
  4369  0017C2  D000               	goto	i1l3186
  4370  0017C4                     i1l3186:
  4371  0017C4  501D               	movf	strtod@eexp,w,c
  4372  0017C6  261F               	addwf	strtod@expon,f,c
  4373  0017C8  501A               	movf	strtod@res,w,c
  4374  0017CA  101B               	iorwf	strtod@res+1,w,c
  4375  0017CC  A4D8               	btfss	status,2,c
  4376  0017CE  A21E               	btfss	strtod@flags,1,c
  4377  0017D0  D009               	goto	i1l3194
  4378  0017D2  C01A  FFD9         	movff	strtod@res,fsr2l
  4379  0017D6  C01B  FFDA         	movff	strtod@res+1,fsr2h
  4380  0017DA  C018  FFDE         	movff	strtod@s,postinc2
  4381  0017DE  C019  FFDD         	movff	strtod@s+1,postdec2
  4382  0017E2  D000               	goto	i1l3194
  4383  0017E4                     i1l3194:
  4384  0017E4  C020  F009         	movff	strtod@_u,___altoft@c
  4385  0017E8  C021  F00A         	movff	strtod@_u+1,___altoft@c+1
  4386  0017EC  C022  F00B         	movff	strtod@_u+2,___altoft@c+2
  4387  0017F0  C023  F00C         	movff	strtod@_u+3,___altoft@c+3
  4388  0017F4  ECCD  F015         	call	___altoft	;wreg free
  4389  0017F8  C009  F020         	movff	?___altoft,strtod@_u
  4390  0017FC  C00A  F021         	movff	?___altoft+1,strtod@_u+1
  4391  001800  C00B  F022         	movff	?___altoft+2,strtod@_u+2
  4392  001804  5020               	movf	strtod@_u,w,c
  4393  001806  1021               	iorwf	strtod@_u+1,w,c
  4394  001808  1022               	iorwf	strtod@_u+2,w,c
  4395  00180A  A4D8               	btfss	status,2,c
  4396  00180C  D005               	goto	i1l3202
  4397  00180E  0E00               	movlw	0
  4398  001810  6E18               	movwf	?_strtod,c
  4399  001812  0E00               	movlw	0
  4400  001814  D0A6               	goto	L9
  4401  001816  D0C2               	goto	i1l685
  4402  001818                     i1l3202:
  4403  001818  AE1F               	btfss	strtod@expon,7,c
  4404  00181A  D04C               	goto	i1l3230
  4405  00181C  6C1F               	negf	strtod@expon,c
  4406  00181E  D017               	goto	i1l3210
  4407  001820                     i1l3206:
  4408  001820  C020  F009         	movff	strtod@_u,___ftdiv@f1
  4409  001824  C021  F00A         	movff	strtod@_u+1,___ftdiv@f1+1
  4410  001828  C022  F00B         	movff	strtod@_u+2,___ftdiv@f1+2
  4411  00182C  0E03               	movlw	3
  4412  00182E  6E0C               	movwf	___ftdiv@f2,c
  4413  001830  0E15               	movlw	21
  4414  001832  6E0D               	movwf	___ftdiv@f2+1,c
  4415  001834  0E50               	movlw	80
  4416  001836  6E0E               	movwf	___ftdiv@f2+2,c
  4417  001838  ECC3  F013         	call	___ftdiv	;wreg free
  4418  00183C  C009  F020         	movff	?___ftdiv,strtod@_u
  4419  001840  C00A  F021         	movff	?___ftdiv+1,strtod@_u+1
  4420  001844  C00B  F022         	movff	?___ftdiv+2,strtod@_u+2
  4421  001848  0EF6               	movlw	246
  4422  00184A  261F               	addwf	strtod@expon,f,c
  4423  00184C  D000               	goto	i1l3210
  4424  00184E                     i1l3210:
  4425  00184E  501F               	movf	strtod@expon,w,c
  4426  001850  0A80               	xorlw	128
  4427  001852  0F76               	addlw	-138
  4428  001854  A0D8               	btfss	status,0,c
  4429  001856  D018               	goto	i1l3216
  4430  001858  D7E3               	goto	i1l3206
  4431  00185A  D016               	goto	i1l3216
  4432  00185C                     i1l3212:
  4433  00185C  C020  F009         	movff	strtod@_u,___ftdiv@f1
  4434  001860  C021  F00A         	movff	strtod@_u+1,___ftdiv@f1+1
  4435  001864  C022  F00B         	movff	strtod@_u+2,___ftdiv@f1+2
  4436  001868  0E00               	movlw	0
  4437  00186A  6E0C               	movwf	___ftdiv@f2,c
  4438  00186C  0E20               	movlw	32
  4439  00186E  6E0D               	movwf	___ftdiv@f2+1,c
  4440  001870  0E41               	movlw	65
  4441  001872  6E0E               	movwf	___ftdiv@f2+2,c
  4442  001874  ECC3  F013         	call	___ftdiv	;wreg free
  4443  001878  C009  F020         	movff	?___ftdiv,strtod@_u
  4444  00187C  C00A  F021         	movff	?___ftdiv+1,strtod@_u+1
  4445  001880  C00B  F022         	movff	?___ftdiv+2,strtod@_u+2
  4446  001884  061F               	decf	strtod@expon,f,c
  4447  001886  D000               	goto	i1l3216
  4448  001888                     i1l3216:
  4449  001888  501F               	movf	strtod@expon,w,c
  4450  00188A  A4D8               	btfss	status,2,c
  4451  00188C  D7E7               	goto	i1l3212
  4452  00188E  C020  F001         	movff	strtod@_u,___ftge@ff1
  4453  001892  C021  F002         	movff	strtod@_u+1,___ftge@ff1+1
  4454  001896  C022  F003         	movff	strtod@_u+2,___ftge@ff1+2
  4455  00189A  0E00               	movlw	0
  4456  00189C  6E04               	movwf	___ftge@ff2,c
  4457  00189E  0E80               	movlw	128
  4458  0018A0  6E05               	movwf	___ftge@ff2+1,c
  4459  0018A2  0E00               	movlw	0
  4460  0018A4  6E06               	movwf	___ftge@ff2+2,c
  4461  0018A6  ECFE  F014         	call	___ftge	;wreg free
  4462  0018AA  D04D               	goto	L10
  4463  0018AC  D077               	goto	i1l685
  4464  0018AE  D056               	goto	i1l3254
  4465  0018B0  D075               	goto	i1l685
  4466  0018B2  D05C               	goto	i1l695
  4467  0018B4                     i1l3230:
  4468  0018B4  501F               	movf	strtod@expon,w,c
  4469  0018B6  0A80               	xorlw	128
  4470  0018B8  0F7F               	addlw	-129
  4471  0018BA  B0D8               	btfsc	status,0,c
  4472  0018BC  D019               	goto	i1l3238
  4473  0018BE  D056               	goto	i1l695
  4474  0018C0  D017               	goto	i1l3238
  4475  0018C2                     i1l3234:
  4476  0018C2  C020  F009         	movff	strtod@_u,___ftmul@f1
  4477  0018C6  C021  F00A         	movff	strtod@_u+1,___ftmul@f1+1
  4478  0018CA  C022  F00B         	movff	strtod@_u+2,___ftmul@f1+2
  4479  0018CE  0E03               	movlw	3
  4480  0018D0  6E0C               	movwf	___ftmul@f2,c
  4481  0018D2  0E15               	movlw	21
  4482  0018D4  6E0D               	movwf	___ftmul@f2+1,c
  4483  0018D6  0E50               	movlw	80
  4484  0018D8  6E0E               	movwf	___ftmul@f2+2,c
  4485  0018DA  EC47  F013         	call	___ftmul	;wreg free
  4486  0018DE  C009  F020         	movff	?___ftmul,strtod@_u
  4487  0018E2  C00A  F021         	movff	?___ftmul+1,strtod@_u+1
  4488  0018E6  C00B  F022         	movff	?___ftmul+2,strtod@_u+2
  4489  0018EA  0EF6               	movlw	246
  4490  0018EC  261F               	addwf	strtod@expon,f,c
  4491  0018EE  D000               	goto	i1l3238
  4492  0018F0                     i1l3238:
  4493  0018F0  0E0A               	movlw	10
  4494  0018F2  601F               	cpfslt	strtod@expon,c
  4495  0018F4  D7E6               	goto	i1l3234
  4496  0018F6  D016               	goto	i1l3244
  4497  0018F8                     i1l3240:
  4498  0018F8  C020  F009         	movff	strtod@_u,___ftmul@f1
  4499  0018FC  C021  F00A         	movff	strtod@_u+1,___ftmul@f1+1
  4500  001900  C022  F00B         	movff	strtod@_u+2,___ftmul@f1+2
  4501  001904  0E00               	movlw	0
  4502  001906  6E0C               	movwf	___ftmul@f2,c
  4503  001908  0E20               	movlw	32
  4504  00190A  6E0D               	movwf	___ftmul@f2+1,c
  4505  00190C  0E41               	movlw	65
  4506  00190E  6E0E               	movwf	___ftmul@f2+2,c
  4507  001910  EC47  F013         	call	___ftmul	;wreg free
  4508  001914  C009  F020         	movff	?___ftmul,strtod@_u
  4509  001918  C00A  F021         	movff	?___ftmul+1,strtod@_u+1
  4510  00191C  C00B  F022         	movff	?___ftmul+2,strtod@_u+2
  4511  001920  061F               	decf	strtod@expon,f,c
  4512  001922  D000               	goto	i1l3244
  4513  001924                     i1l3244:
  4514  001924  501F               	movf	strtod@expon,w,c
  4515  001926  A4D8               	btfss	status,2,c
  4516  001928  D7E7               	goto	i1l3240
  4517  00192A  0EFF               	movlw	255
  4518  00192C  6E01               	movwf	___ftge@ff1,c
  4519  00192E  0E7F               	movlw	127
  4520  001930  6E02               	movwf	___ftge@ff1+1,c
  4521  001932  0E7F               	movlw	127
  4522  001934  6E03               	movwf	___ftge@ff1+2,c
  4523  001936  C020  F004         	movff	strtod@_u,___ftge@ff2
  4524  00193A  C021  F005         	movff	strtod@_u+1,___ftge@ff2+1
  4525  00193E  C022  F006         	movff	strtod@_u+2,___ftge@ff2+2
  4526  001942  ECFE  F014         	call	___ftge	;wreg free
  4527  001946                     L10:
  4528  001946  B0D8               	btfsc	status,0,c
  4529  001948  D011               	goto	i1l695
  4530  00194A  A01E               	btfss	strtod@flags,0,c
  4531  00194C  D007               	goto	i1l3254
  4532  00194E  0E00               	movlw	0
  4533  001950  6E18               	movwf	?_strtod,c
  4534  001952  0E80               	movlw	128
  4535  001954  6E19               	movwf	?_strtod+1,c
  4536  001956  0E80               	movlw	128
  4537  001958  D006               	goto	L6
  4538  00195A  D020               	goto	i1l685
  4539  00195C                     i1l3254:
  4540  00195C  0E00               	movlw	0
  4541  00195E  6E18               	movwf	?_strtod,c
  4542  001960  0E80               	movlw	128
  4543  001962                     L9:
  4544  001962  6E19               	movwf	?_strtod+1,c
  4545  001964  0E00               	movlw	0
  4546  001966                     L6:
  4547  001966  6E1A               	movwf	?_strtod+2,c
  4548  001968  D019               	goto	i1l685
  4549  00196A  D000               	goto	i1l695
  4550  00196C                     i1l695:
  4551  00196C  A01E               	btfss	strtod@flags,0,c
  4552  00196E  D00F               	goto	i1l3260
  4553  001970  C020  F001         	movff	strtod@_u,___ftneg@f1
  4554  001974  C021  F002         	movff	strtod@_u+1,___ftneg@f1+1
  4555  001978  C022  F003         	movff	strtod@_u+2,___ftneg@f1+2
  4556  00197C  EC9D  F019         	call	___ftneg	;wreg free
  4557  001980  C001  F020         	movff	?___ftneg,strtod@_u
  4558  001984  C002  F021         	movff	?___ftneg+1,strtod@_u+1
  4559  001988  C003  F022         	movff	?___ftneg+2,strtod@_u+2
  4560  00198C  D000               	goto	i1l3260
  4561  00198E                     i1l3260:
  4562  00198E  C020  F018         	movff	strtod@_u,?_strtod
  4563  001992  C021  F019         	movff	strtod@_u+1,?_strtod+1
  4564  001996  C022  F01A         	movff	strtod@_u+2,?_strtod+2
  4565  00199A  D000               	goto	i1l685
  4566  00199C                     i1l685:
  4567  00199C  0012               	return		;funcret
  4568  00199E                     __end_of_strtod:
  4569                           	opt stack 0
  4570                           pclatu	equ	0xFFB
  4571                           pclath	equ	0xFFA
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           intcon2	equ	0xFF1
  4580                           indf0	equ	0xFEF
  4581                           postinc0	equ	0xFEE
  4582                           fsr0h	equ	0xFEA
  4583                           fsr0l	equ	0xFE9
  4584                           wreg	equ	0xFE8
  4585                           indf1	equ	0xFE7
  4586                           fsr1h	equ	0xFE2
  4587                           fsr1l	equ	0xFE1
  4588                           bsr	equ	0xFE0
  4589                           indf2	equ	0xFDF
  4590                           postinc2	equ	0xFDE
  4591                           postdec2	equ	0xFDD
  4592                           fsr2h	equ	0xFDA
  4593                           fsr2l	equ	0xFD9
  4594                           status	equ	0xFD8
  4595                           
  4596 ;; *************** function _isspace *****************
  4597 ;; Defined at:
  4598 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isspace.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  c               1    wreg     unsigned char 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  c               1    2[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;		None               void
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;Total ram usage:        3 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    7
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_keyValue
  4623 ;;		_strtod
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text23
  4628  00326A                     __ptext23:
  4629                           	opt stack 0
  4630  00326A                     _isspace:
  4631                           	opt stack 14
  4632                           
  4633                           ;incstack = 0
  4634                           ;isspace@c stored from wreg
  4635  00326A  6E03               	movwf	isspace@c,c
  4636  00326C  0E01               	movlw	1
  4637  00326E  6E02               	movwf	_isspace$2359,c
  4638  003270  0E20               	movlw	32
  4639  003272  1803               	xorwf	isspace@c,w,c
  4640  003274  B4D8               	btfsc	status,2,c
  4641  003276  D00A               	goto	i1l2778
  4642  003278  0E0E               	movlw	14
  4643  00327A  6003               	cpfslt	isspace@c,c
  4644  00327C  D004               	goto	i1l2776
  4645  00327E  0E09               	movlw	9
  4646  003280  6003               	cpfslt	isspace@c,c
  4647  003282  D004               	goto	i1l2778
  4648  003284  D000               	goto	i1l2776
  4649  003286                     i1l2776:
  4650  003286  0E00               	movlw	0
  4651  003288  6E02               	movwf	_isspace$2359,c
  4652  00328A  D000               	goto	i1l2778
  4653  00328C                     i1l2778:
  4654  00328C  C002  F001         	movff	_isspace$2359,??_isspace
  4655  003290  3001               	rrcf	??_isspace,w,c
  4656  003292  D000               	goto	i1l997
  4657  003294                     i1l997:
  4658  003294  0012               	return		;funcret
  4659  003296                     __end_of_isspace:
  4660                           	opt stack 0
  4661                           pclatu	equ	0xFFB
  4662                           pclath	equ	0xFFA
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           prodh	equ	0xFF4
  4668                           prodl	equ	0xFF3
  4669                           intcon	equ	0xFF2
  4670                           intcon2	equ	0xFF1
  4671                           indf0	equ	0xFEF
  4672                           postinc0	equ	0xFEE
  4673                           fsr0h	equ	0xFEA
  4674                           fsr0l	equ	0xFE9
  4675                           wreg	equ	0xFE8
  4676                           indf1	equ	0xFE7
  4677                           fsr1h	equ	0xFE2
  4678                           fsr1l	equ	0xFE1
  4679                           bsr	equ	0xFE0
  4680                           indf2	equ	0xFDF
  4681                           postinc2	equ	0xFDE
  4682                           postdec2	equ	0xFDD
  4683                           fsr2h	equ	0xFDA
  4684                           fsr2l	equ	0xFD9
  4685                           status	equ	0xFD8
  4686                           
  4687 ;; *************** function _isdigit *****************
  4688 ;; Defined at:
  4689 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  c               1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  c               1    2[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;		None               void
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;Total ram usage:        3 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    7
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_strtod
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text24
  4718  003382                     __ptext24:
  4719                           	opt stack 0
  4720  003382                     _isdigit:
  4721                           	opt stack 14
  4722                           
  4723                           ;incstack = 0
  4724                           ;isdigit@c stored from wreg
  4725  003382  6E03               	movwf	isdigit@c,c
  4726  003384  0E00               	movlw	0
  4727  003386  6E02               	movwf	_isdigit$2356,c
  4728  003388  0E3A               	movlw	58
  4729  00338A  6003               	cpfslt	isdigit@c,c
  4730  00338C  D006               	goto	i1l2980
  4731  00338E  0E2F               	movlw	47
  4732  003390  6403               	cpfsgt	isdigit@c,c
  4733  003392  D003               	goto	i1l2980
  4734  003394  0E01               	movlw	1
  4735  003396  6E02               	movwf	_isdigit$2356,c
  4736  003398  D000               	goto	i1l2980
  4737  00339A                     i1l2980:
  4738  00339A  C002  F001         	movff	_isdigit$2356,??_isdigit
  4739  00339E  3001               	rrcf	??_isdigit,w,c
  4740  0033A0  D000               	goto	i1l992
  4741  0033A2                     i1l992:
  4742  0033A2  0012               	return		;funcret
  4743  0033A4                     __end_of_isdigit:
  4744                           	opt stack 0
  4745                           pclatu	equ	0xFFB
  4746                           pclath	equ	0xFFA
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           prodh	equ	0xFF4
  4752                           prodl	equ	0xFF3
  4753                           intcon	equ	0xFF2
  4754                           intcon2	equ	0xFF1
  4755                           indf0	equ	0xFEF
  4756                           postinc0	equ	0xFEE
  4757                           fsr0h	equ	0xFEA
  4758                           fsr0l	equ	0xFE9
  4759                           wreg	equ	0xFE8
  4760                           indf1	equ	0xFE7
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           bsr	equ	0xFE0
  4764                           indf2	equ	0xFDF
  4765                           postinc2	equ	0xFDE
  4766                           postdec2	equ	0xFDD
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function ___lmul *****************
  4772 ;; Defined at:
  4773 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul32.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  multiplier      4    0[COMRAM] unsigned long 
  4776 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  product         4    8[COMRAM] unsigned long 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  4    0[COMRAM] unsigned long 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4788 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;Total ram usage:       12 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    7
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_strtod
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text25
  4803  002E7E                     __ptext25:
  4804                           	opt stack 0
  4805  002E7E                     ___lmul:
  4806                           	opt stack 14
  4807                           
  4808                           ;incstack = 0
  4809  002E7E  0E00               	movlw	0
  4810  002E80  6E09               	movwf	___lmul@product,c
  4811  002E82  0E00               	movlw	0
  4812  002E84  6E0A               	movwf	___lmul@product+1,c
  4813  002E86  0E00               	movlw	0
  4814  002E88  6E0B               	movwf	___lmul@product+2,c
  4815  002E8A  0E00               	movlw	0
  4816  002E8C  6E0C               	movwf	___lmul@product+3,c
  4817  002E8E  D000               	goto	i1l2784
  4818  002E90                     i1l2784:
  4819  002E90  A001               	btfss	___lmul@multiplier,0,c
  4820  002E92  D009               	goto	i1l2788
  4821  002E94  5005               	movf	___lmul@multiplicand,w,c
  4822  002E96  2609               	addwf	___lmul@product,f,c
  4823  002E98  5006               	movf	___lmul@multiplicand+1,w,c
  4824  002E9A  220A               	addwfc	___lmul@product+1,f,c
  4825  002E9C  5007               	movf	___lmul@multiplicand+2,w,c
  4826  002E9E  220B               	addwfc	___lmul@product+2,f,c
  4827  002EA0  5008               	movf	___lmul@multiplicand+3,w,c
  4828  002EA2  220C               	addwfc	___lmul@product+3,f,c
  4829  002EA4  D000               	goto	i1l2788
  4830  002EA6                     i1l2788:
  4831  002EA6  90D8               	bcf	status,0,c
  4832  002EA8  3605               	rlcf	___lmul@multiplicand,f,c
  4833  002EAA  3606               	rlcf	___lmul@multiplicand+1,f,c
  4834  002EAC  3607               	rlcf	___lmul@multiplicand+2,f,c
  4835  002EAE  3608               	rlcf	___lmul@multiplicand+3,f,c
  4836  002EB0  90D8               	bcf	status,0,c
  4837  002EB2  3204               	rrcf	___lmul@multiplier+3,f,c
  4838  002EB4  3203               	rrcf	___lmul@multiplier+2,f,c
  4839  002EB6  3202               	rrcf	___lmul@multiplier+1,f,c
  4840  002EB8  3201               	rrcf	___lmul@multiplier,f,c
  4841  002EBA  5001               	movf	___lmul@multiplier,w,c
  4842  002EBC  1002               	iorwf	___lmul@multiplier+1,w,c
  4843  002EBE  1003               	iorwf	___lmul@multiplier+2,w,c
  4844  002EC0  1004               	iorwf	___lmul@multiplier+3,w,c
  4845  002EC2  A4D8               	btfss	status,2,c
  4846  002EC4  D7E5               	goto	i1l2784
  4847  002EC6  C009  F001         	movff	___lmul@product,?___lmul
  4848  002ECA  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4849  002ECE  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4850  002ED2  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4851  002ED6  0012               	return		;funcret
  4852  002ED8                     __end_of___lmul:
  4853                           	opt stack 0
  4854                           pclatu	equ	0xFFB
  4855                           pclath	equ	0xFFA
  4856                           tblptru	equ	0xFF8
  4857                           tblptrh	equ	0xFF7
  4858                           tblptrl	equ	0xFF6
  4859                           tablat	equ	0xFF5
  4860                           prodh	equ	0xFF4
  4861                           prodl	equ	0xFF3
  4862                           intcon	equ	0xFF2
  4863                           intcon2	equ	0xFF1
  4864                           indf0	equ	0xFEF
  4865                           postinc0	equ	0xFEE
  4866                           fsr0h	equ	0xFEA
  4867                           fsr0l	equ	0xFE9
  4868                           wreg	equ	0xFE8
  4869                           indf1	equ	0xFE7
  4870                           fsr1h	equ	0xFE2
  4871                           fsr1l	equ	0xFE1
  4872                           bsr	equ	0xFE0
  4873                           indf2	equ	0xFDF
  4874                           postinc2	equ	0xFDE
  4875                           postdec2	equ	0xFDD
  4876                           fsr2h	equ	0xFDA
  4877                           fsr2l	equ	0xFD9
  4878                           status	equ	0xFD8
  4879                           
  4880 ;; *************** function ___ftneg *****************
  4881 ;; Defined at:
  4882 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  f1              3    0[COMRAM] float 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  3    0[COMRAM] float 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4896 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;Total ram usage:        3 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    7
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_strtod
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text26
  4911  00333A                     __ptext26:
  4912                           	opt stack 0
  4913  00333A                     ___ftneg:
  4914                           	opt stack 14
  4915                           
  4916                           ;incstack = 0
  4917  00333A  5001               	movf	___ftneg@f1,w,c
  4918  00333C  1002               	iorwf	___ftneg@f1+1,w,c
  4919  00333E  1003               	iorwf	___ftneg@f1+2,w,c
  4920  003340  B4D8               	btfsc	status,2,c
  4921  003342  D006               	goto	i1l966
  4922  003344  0E00               	movlw	0
  4923  003346  1A01               	xorwf	___ftneg@f1,f,c
  4924  003348  0E00               	movlw	0
  4925  00334A  1A02               	xorwf	___ftneg@f1+1,f,c
  4926  00334C  0E80               	movlw	128
  4927  00334E  1A03               	xorwf	___ftneg@f1+2,f,c
  4928  003350                     i1l966:
  4929  003350  C001  F001         	movff	___ftneg@f1,?___ftneg
  4930  003354  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4931  003358  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4932  00335C  0012               	return		;funcret
  4933  00335E                     __end_of___ftneg:
  4934                           	opt stack 0
  4935                           pclatu	equ	0xFFB
  4936                           pclath	equ	0xFFA
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           intcon2	equ	0xFF1
  4945                           indf0	equ	0xFEF
  4946                           postinc0	equ	0xFEE
  4947                           fsr0h	equ	0xFEA
  4948                           fsr0l	equ	0xFE9
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           fsr1h	equ	0xFE2
  4952                           fsr1l	equ	0xFE1
  4953                           bsr	equ	0xFE0
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           postdec2	equ	0xFDD
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function ___ftmul *****************
  4962 ;; Defined at:
  4963 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  f1              3    8[COMRAM] float 
  4966 ;;  f2              3   11[COMRAM] float 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  4969 ;;  sign            1   22[COMRAM] unsigned char 
  4970 ;;  cntr            1   21[COMRAM] unsigned char 
  4971 ;;  exp             1   17[COMRAM] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  3    8[COMRAM] float 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4981 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;Total ram usage:       15 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    8
  4988 ;; This function calls:
  4989 ;;		___ftpack
  4990 ;; This function is called by:
  4991 ;;		_strtod
  4992 ;;		_breakDouble
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text27
  4997  00268E                     __ptext27:
  4998                           	opt stack 0
  4999  00268E                     ___ftmul:
  5000                           	opt stack 13
  5001                           
  5002                           ;incstack = 0
  5003  00268E  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  5004  002692  6A10               	clrf	(??___ftmul+1)& (0+255),c
  5005  002694  6A11               	clrf	(??___ftmul+2)& (0+255),c
  5006  002696  340A               	rlcf	___ftmul@f1+1,w,c
  5007  002698  360F               	rlcf	??___ftmul& (0+255),f,c
  5008  00269A  E301               	bnc	u273_21
  5009  00269C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  5010  00269E                     u273_21:
  5011  00269E  500F               	movf	??___ftmul,w,c
  5012  0026A0  6E12               	movwf	___ftmul@exp,c
  5013  0026A2  5012               	movf	___ftmul@exp,w,c
  5014  0026A4  A4D8               	btfss	status,2,c
  5015  0026A6  D002               	goto	i1l2930
  5016  0026A8  D00E               	goto	i1l2932
  5017  0026AA  D06C               	goto	i1l956
  5018  0026AC                     i1l2930:
  5019  0026AC  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  5020  0026B0  6A10               	clrf	(??___ftmul+1)& (0+255),c
  5021  0026B2  6A11               	clrf	(??___ftmul+2)& (0+255),c
  5022  0026B4  340D               	rlcf	___ftmul@f2+1,w,c
  5023  0026B6  360F               	rlcf	??___ftmul& (0+255),f,c
  5024  0026B8  E301               	bnc	u275_21
  5025  0026BA  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  5026  0026BC                     u275_21:
  5027  0026BC  500F               	movf	??___ftmul,w,c
  5028  0026BE  6E17               	movwf	___ftmul@sign,c
  5029  0026C0  5017               	movf	___ftmul@sign,w,c
  5030  0026C2  A4D8               	btfss	status,2,c
  5031  0026C4  D007               	goto	i1l2936
  5032  0026C6                     i1l2932:
  5033  0026C6  0E00               	movlw	0
  5034  0026C8  6E09               	movwf	?___ftmul,c
  5035  0026CA  0E00               	movlw	0
  5036  0026CC  6E0A               	movwf	?___ftmul+1,c
  5037  0026CE  0E00               	movlw	0
  5038  0026D0  6E0B               	movwf	?___ftmul+2,c
  5039  0026D2  D058               	goto	i1l956
  5040  0026D4                     i1l2936:
  5041  0026D4  5017               	movf	___ftmul@sign,w,c
  5042  0026D6  0F7B               	addlw	123
  5043  0026D8  2612               	addwf	___ftmul@exp,f,c
  5044  0026DA  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  5045  0026DE  500E               	movf	___ftmul@f2+2,w,c
  5046  0026E0  1A17               	xorwf	___ftmul@sign,f,c
  5047  0026E2  0E80               	movlw	128
  5048  0026E4  1617               	andwf	___ftmul@sign,f,c
  5049  0026E6  8E0A               	bsf	___ftmul@f1+1,7,c
  5050  0026E8  8E0D               	bsf	___ftmul@f2+1,7,c
  5051  0026EA  0EFF               	movlw	255
  5052  0026EC  160C               	andwf	___ftmul@f2,f,c
  5053  0026EE  0EFF               	movlw	255
  5054  0026F0  160D               	andwf	___ftmul@f2+1,f,c
  5055  0026F2  0E00               	movlw	0
  5056  0026F4  160E               	andwf	___ftmul@f2+2,f,c
  5057  0026F6  0E00               	movlw	0
  5058  0026F8  6E13               	movwf	___ftmul@f3_as_product,c
  5059  0026FA  0E00               	movlw	0
  5060  0026FC  6E14               	movwf	___ftmul@f3_as_product+1,c
  5061  0026FE  0E00               	movlw	0
  5062  002700  6E15               	movwf	___ftmul@f3_as_product+2,c
  5063  002702  0E07               	movlw	7
  5064  002704  6E16               	movwf	___ftmul@cntr,c
  5065  002706  D000               	goto	i1l2950
  5066  002708                     i1l2950:
  5067  002708  A009               	btfss	___ftmul@f1,0,c
  5068  00270A  D007               	goto	i1l2954
  5069  00270C  500C               	movf	___ftmul@f2,w,c
  5070  00270E  2613               	addwf	___ftmul@f3_as_product,f,c
  5071  002710  500D               	movf	___ftmul@f2+1,w,c
  5072  002712  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  5073  002714  500E               	movf	___ftmul@f2+2,w,c
  5074  002716  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  5075  002718  D000               	goto	i1l2954
  5076  00271A                     i1l2954:
  5077  00271A  90D8               	bcf	status,0,c
  5078  00271C  320B               	rrcf	___ftmul@f1+2,f,c
  5079  00271E  320A               	rrcf	___ftmul@f1+1,f,c
  5080  002720  3209               	rrcf	___ftmul@f1,f,c
  5081  002722  90D8               	bcf	status,0,c
  5082  002724  360C               	rlcf	___ftmul@f2,f,c
  5083  002726  360D               	rlcf	___ftmul@f2+1,f,c
  5084  002728  360E               	rlcf	___ftmul@f2+2,f,c
  5085  00272A  2E16               	decfsz	___ftmul@cntr,f,c
  5086  00272C  D7ED               	goto	i1l2950
  5087  00272E  D000               	goto	i1l2958
  5088  002730                     i1l2958:
  5089  002730  0E09               	movlw	9
  5090  002732  6E16               	movwf	___ftmul@cntr,c
  5091  002734  D000               	goto	i1l2960
  5092  002736                     i1l2960:
  5093  002736  A009               	btfss	___ftmul@f1,0,c
  5094  002738  D007               	goto	i1l2964
  5095  00273A  500C               	movf	___ftmul@f2,w,c
  5096  00273C  2613               	addwf	___ftmul@f3_as_product,f,c
  5097  00273E  500D               	movf	___ftmul@f2+1,w,c
  5098  002740  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  5099  002742  500E               	movf	___ftmul@f2+2,w,c
  5100  002744  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  5101  002746  D000               	goto	i1l2964
  5102  002748                     i1l2964:
  5103  002748  90D8               	bcf	status,0,c
  5104  00274A  320B               	rrcf	___ftmul@f1+2,f,c
  5105  00274C  320A               	rrcf	___ftmul@f1+1,f,c
  5106  00274E  3209               	rrcf	___ftmul@f1,f,c
  5107  002750  90D8               	bcf	status,0,c
  5108  002752  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  5109  002754  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  5110  002756  3213               	rrcf	___ftmul@f3_as_product,f,c
  5111  002758  2E16               	decfsz	___ftmul@cntr,f,c
  5112  00275A  D7ED               	goto	i1l2960
  5113  00275C  D000               	goto	i1l2968
  5114  00275E                     i1l2968:
  5115  00275E  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5116  002762  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5117  002766  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5118  00276A  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  5119  00276E  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  5120  002772  EC9B  F014         	call	___ftpack	;wreg free
  5121  002776  C001  F009         	movff	?___ftpack,?___ftmul
  5122  00277A  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  5123  00277E  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  5124  002782  D000               	goto	i1l956
  5125  002784                     i1l956:
  5126  002784  0012               	return		;funcret
  5127  002786                     __end_of___ftmul:
  5128                           	opt stack 0
  5129                           pclatu	equ	0xFFB
  5130                           pclath	equ	0xFFA
  5131                           tblptru	equ	0xFF8
  5132                           tblptrh	equ	0xFF7
  5133                           tblptrl	equ	0xFF6
  5134                           tablat	equ	0xFF5
  5135                           prodh	equ	0xFF4
  5136                           prodl	equ	0xFF3
  5137                           intcon	equ	0xFF2
  5138                           intcon2	equ	0xFF1
  5139                           indf0	equ	0xFEF
  5140                           postinc0	equ	0xFEE
  5141                           fsr0h	equ	0xFEA
  5142                           fsr0l	equ	0xFE9
  5143                           wreg	equ	0xFE8
  5144                           indf1	equ	0xFE7
  5145                           fsr1h	equ	0xFE2
  5146                           fsr1l	equ	0xFE1
  5147                           bsr	equ	0xFE0
  5148                           indf2	equ	0xFDF
  5149                           postinc2	equ	0xFDE
  5150                           postdec2	equ	0xFDD
  5151                           fsr2h	equ	0xFDA
  5152                           fsr2l	equ	0xFD9
  5153                           status	equ	0xFD8
  5154                           
  5155 ;; *************** function ___ftge *****************
  5156 ;; Defined at:
  5157 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  ff1             3    0[COMRAM] float 
  5160 ;;  ff2             3    3[COMRAM] float 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;		None               void
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5172 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:        9 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    7
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_strtod
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text28
  5187  0029FC                     __ptext28:
  5188                           	opt stack 0
  5189  0029FC                     ___ftge:
  5190                           	opt stack 14
  5191                           
  5192                           ;incstack = 0
  5193  0029FC  AE03               	btfss	___ftge@ff1+2,7,c
  5194  0029FE  D017               	goto	i1l2988
  5195  002A00  C001  F007         	movff	___ftge@ff1,??___ftge
  5196  002A04  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5197  002A08  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5198  002A0C  1E07               	comf	??___ftge,f,c
  5199  002A0E  1E08               	comf	??___ftge+1,f,c
  5200  002A10  1E09               	comf	??___ftge+2,f,c
  5201  002A12  2A07               	incf	??___ftge,f,c
  5202  002A14  0E00               	movlw	0
  5203  002A16  2208               	addwfc	??___ftge+1,f,c
  5204  002A18  2209               	addwfc	??___ftge+2,f,c
  5205  002A1A  0E00               	movlw	0
  5206  002A1C  2407               	addwf	??___ftge,w,c
  5207  002A1E  6E01               	movwf	___ftge@ff1,c
  5208  002A20  0E00               	movlw	0
  5209  002A22  2008               	addwfc	??___ftge+1,w,c
  5210  002A24  6E02               	movwf	___ftge@ff1+1,c
  5211  002A26  0E80               	movlw	128
  5212  002A28  2009               	addwfc	??___ftge+2,w,c
  5213  002A2A  6E03               	movwf	___ftge@ff1+2,c
  5214  002A2C  D000               	goto	i1l2988
  5215  002A2E                     i1l2988:
  5216  002A2E  AE06               	btfss	___ftge@ff2+2,7,c
  5217  002A30  D017               	goto	i1l2992
  5218  002A32  C004  F007         	movff	___ftge@ff2,??___ftge
  5219  002A36  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5220  002A3A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5221  002A3E  1E07               	comf	??___ftge,f,c
  5222  002A40  1E08               	comf	??___ftge+1,f,c
  5223  002A42  1E09               	comf	??___ftge+2,f,c
  5224  002A44  2A07               	incf	??___ftge,f,c
  5225  002A46  0E00               	movlw	0
  5226  002A48  2208               	addwfc	??___ftge+1,f,c
  5227  002A4A  2209               	addwfc	??___ftge+2,f,c
  5228  002A4C  0E00               	movlw	0
  5229  002A4E  2407               	addwf	??___ftge,w,c
  5230  002A50  6E04               	movwf	___ftge@ff2,c
  5231  002A52  0E00               	movlw	0
  5232  002A54  2008               	addwfc	??___ftge+1,w,c
  5233  002A56  6E05               	movwf	___ftge@ff2+1,c
  5234  002A58  0E80               	movlw	128
  5235  002A5A  2009               	addwfc	??___ftge+2,w,c
  5236  002A5C  6E06               	movwf	___ftge@ff2+2,c
  5237  002A5E  D000               	goto	i1l2992
  5238  002A60                     i1l2992:
  5239  002A60  0E00               	movlw	0
  5240  002A62  1A01               	xorwf	___ftge@ff1,f,c
  5241  002A64  0E00               	movlw	0
  5242  002A66  1A02               	xorwf	___ftge@ff1+1,f,c
  5243  002A68  0E80               	movlw	128
  5244  002A6A  1A03               	xorwf	___ftge@ff1+2,f,c
  5245  002A6C  0E00               	movlw	0
  5246  002A6E  1A04               	xorwf	___ftge@ff2,f,c
  5247  002A70  0E00               	movlw	0
  5248  002A72  1A05               	xorwf	___ftge@ff2+1,f,c
  5249  002A74  0E80               	movlw	128
  5250  002A76  1A06               	xorwf	___ftge@ff2+2,f,c
  5251  002A78  5004               	movf	___ftge@ff2,w,c
  5252  002A7A  5C01               	subwf	___ftge@ff1,w,c
  5253  002A7C  5005               	movf	___ftge@ff2+1,w,c
  5254  002A7E  5802               	subwfb	___ftge@ff1+1,w,c
  5255  002A80  5006               	movf	___ftge@ff2+2,w,c
  5256  002A82  5803               	subwfb	___ftge@ff1+2,w,c
  5257  002A84  B0D8               	btfsc	status,0,c
  5258  002A86  D002               	goto	i1l2998
  5259  002A88  90D8               	bcf	status,0,c
  5260  002A8A  D002               	goto	i1l950
  5261  002A8C                     i1l2998:
  5262  002A8C  80D8               	bsf	status,0,c
  5263  002A8E  D000               	goto	i1l950
  5264  002A90                     i1l950:
  5265  002A90  0012               	return		;funcret
  5266  002A92                     __end_of___ftge:
  5267                           	opt stack 0
  5268                           pclatu	equ	0xFFB
  5269                           pclath	equ	0xFFA
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           prodh	equ	0xFF4
  5275                           prodl	equ	0xFF3
  5276                           intcon	equ	0xFF2
  5277                           intcon2	equ	0xFF1
  5278                           indf0	equ	0xFEF
  5279                           postinc0	equ	0xFEE
  5280                           fsr0h	equ	0xFEA
  5281                           fsr0l	equ	0xFE9
  5282                           wreg	equ	0xFE8
  5283                           indf1	equ	0xFE7
  5284                           fsr1h	equ	0xFE2
  5285                           fsr1l	equ	0xFE1
  5286                           bsr	equ	0xFE0
  5287                           indf2	equ	0xFDF
  5288                           postinc2	equ	0xFDE
  5289                           postdec2	equ	0xFDD
  5290                           fsr2h	equ	0xFDA
  5291                           fsr2l	equ	0xFD9
  5292                           status	equ	0xFD8
  5293                           
  5294 ;; *************** function ___ftdiv *****************
  5295 ;; Defined at:
  5296 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  f1              3    8[COMRAM] float 
  5299 ;;  f2              3   11[COMRAM] float 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  f3              3   18[COMRAM] float 
  5302 ;;  sign            1   22[COMRAM] unsigned char 
  5303 ;;  exp             1   21[COMRAM] unsigned char 
  5304 ;;  cntr            1   17[COMRAM] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  3    8[COMRAM] float 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5314 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5318 ;;Total ram usage:       15 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    8
  5321 ;; This function calls:
  5322 ;;		___ftpack
  5323 ;; This function is called by:
  5324 ;;		_strtod
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text29
  5329  002786                     __ptext29:
  5330                           	opt stack 0
  5331  002786                     ___ftdiv:
  5332                           	opt stack 13
  5333                           
  5334                           ;incstack = 0
  5335  002786  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  5336  00278A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  5337  00278C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  5338  00278E  340A               	rlcf	___ftdiv@f1+1,w,c
  5339  002790  360F               	rlcf	??___ftdiv& (0+255),f,c
  5340  002792  E301               	bnc	u268_21
  5341  002794  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  5342  002796                     u268_21:
  5343  002796  500F               	movf	??___ftdiv,w,c
  5344  002798  6E16               	movwf	___ftdiv@exp,c
  5345  00279A  5016               	movf	___ftdiv@exp,w,c
  5346  00279C  A4D8               	btfss	status,2,c
  5347  00279E  D002               	goto	i1l2884
  5348  0027A0  D00E               	goto	i1l2886
  5349  0027A2  D061               	goto	i1l941
  5350  0027A4                     i1l2884:
  5351  0027A4  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  5352  0027A8  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  5353  0027AA  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  5354  0027AC  340D               	rlcf	___ftdiv@f2+1,w,c
  5355  0027AE  360F               	rlcf	??___ftdiv& (0+255),f,c
  5356  0027B0  E301               	bnc	u270_21
  5357  0027B2  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  5358  0027B4                     u270_21:
  5359  0027B4  500F               	movf	??___ftdiv,w,c
  5360  0027B6  6E17               	movwf	___ftdiv@sign,c
  5361  0027B8  5017               	movf	___ftdiv@sign,w,c
  5362  0027BA  A4D8               	btfss	status,2,c
  5363  0027BC  D007               	goto	i1l2890
  5364  0027BE                     i1l2886:
  5365  0027BE  0E00               	movlw	0
  5366  0027C0  6E09               	movwf	?___ftdiv,c
  5367  0027C2  0E00               	movlw	0
  5368  0027C4  6E0A               	movwf	?___ftdiv+1,c
  5369  0027C6  0E00               	movlw	0
  5370  0027C8  6E0B               	movwf	?___ftdiv+2,c
  5371  0027CA  D04D               	goto	i1l941
  5372  0027CC                     i1l2890:
  5373  0027CC  0E00               	movlw	0
  5374  0027CE  6E13               	movwf	___ftdiv@f3,c
  5375  0027D0  0E00               	movlw	0
  5376  0027D2  6E14               	movwf	___ftdiv@f3+1,c
  5377  0027D4  0E00               	movlw	0
  5378  0027D6  6E15               	movwf	___ftdiv@f3+2,c
  5379  0027D8  5017               	movf	___ftdiv@sign,w,c
  5380  0027DA  0F89               	addlw	137
  5381  0027DC  5E16               	subwf	___ftdiv@exp,f,c
  5382  0027DE  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  5383  0027E2  500E               	movf	___ftdiv@f2+2,w,c
  5384  0027E4  1A17               	xorwf	___ftdiv@sign,f,c
  5385  0027E6  0E80               	movlw	128
  5386  0027E8  1617               	andwf	___ftdiv@sign,f,c
  5387  0027EA  8E0A               	bsf	___ftdiv@f1+1,7,c
  5388  0027EC  0EFF               	movlw	255
  5389  0027EE  1609               	andwf	___ftdiv@f1,f,c
  5390  0027F0  0EFF               	movlw	255
  5391  0027F2  160A               	andwf	___ftdiv@f1+1,f,c
  5392  0027F4  0E00               	movlw	0
  5393  0027F6  160B               	andwf	___ftdiv@f1+2,f,c
  5394  0027F8  8E0D               	bsf	___ftdiv@f2+1,7,c
  5395  0027FA  0EFF               	movlw	255
  5396  0027FC  160C               	andwf	___ftdiv@f2,f,c
  5397  0027FE  0EFF               	movlw	255
  5398  002800  160D               	andwf	___ftdiv@f2+1,f,c
  5399  002802  0E00               	movlw	0
  5400  002804  160E               	andwf	___ftdiv@f2+2,f,c
  5401  002806  0E18               	movlw	24
  5402  002808  6E12               	movwf	___ftdiv@cntr,c
  5403  00280A  D000               	goto	i1l2910
  5404  00280C                     i1l2910:
  5405  00280C  90D8               	bcf	status,0,c
  5406  00280E  3613               	rlcf	___ftdiv@f3,f,c
  5407  002810  3614               	rlcf	___ftdiv@f3+1,f,c
  5408  002812  3615               	rlcf	___ftdiv@f3+2,f,c
  5409  002814  500C               	movf	___ftdiv@f2,w,c
  5410  002816  5C09               	subwf	___ftdiv@f1,w,c
  5411  002818  500D               	movf	___ftdiv@f2+1,w,c
  5412  00281A  580A               	subwfb	___ftdiv@f1+1,w,c
  5413  00281C  500E               	movf	___ftdiv@f2+2,w,c
  5414  00281E  580B               	subwfb	___ftdiv@f1+2,w,c
  5415  002820  A0D8               	btfss	status,0,c
  5416  002822  D007               	goto	i1l944
  5417  002824  500C               	movf	___ftdiv@f2,w,c
  5418  002826  5E09               	subwf	___ftdiv@f1,f,c
  5419  002828  500D               	movf	___ftdiv@f2+1,w,c
  5420  00282A  5A0A               	subwfb	___ftdiv@f1+1,f,c
  5421  00282C  500E               	movf	___ftdiv@f2+2,w,c
  5422  00282E  5A0B               	subwfb	___ftdiv@f1+2,f,c
  5423  002830  8013               	bsf	___ftdiv@f3,0,c
  5424  002832                     i1l944:
  5425  002832  90D8               	bcf	status,0,c
  5426  002834  3609               	rlcf	___ftdiv@f1,f,c
  5427  002836  360A               	rlcf	___ftdiv@f1+1,f,c
  5428  002838  360B               	rlcf	___ftdiv@f1+2,f,c
  5429  00283A  2E12               	decfsz	___ftdiv@cntr,f,c
  5430  00283C  D7E7               	goto	i1l2910
  5431  00283E  D000               	goto	i1l2920
  5432  002840                     i1l2920:
  5433  002840  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  5434  002844  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5435  002848  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5436  00284C  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  5437  002850  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  5438  002854  EC9B  F014         	call	___ftpack	;wreg free
  5439  002858  C001  F009         	movff	?___ftpack,?___ftdiv
  5440  00285C  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  5441  002860  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  5442  002864  D000               	goto	i1l941
  5443  002866                     i1l941:
  5444  002866  0012               	return		;funcret
  5445  002868                     __end_of___ftdiv:
  5446                           	opt stack 0
  5447                           pclatu	equ	0xFFB
  5448                           pclath	equ	0xFFA
  5449                           tblptru	equ	0xFF8
  5450                           tblptrh	equ	0xFF7
  5451                           tblptrl	equ	0xFF6
  5452                           tablat	equ	0xFF5
  5453                           prodh	equ	0xFF4
  5454                           prodl	equ	0xFF3
  5455                           intcon	equ	0xFF2
  5456                           intcon2	equ	0xFF1
  5457                           indf0	equ	0xFEF
  5458                           postinc0	equ	0xFEE
  5459                           fsr0h	equ	0xFEA
  5460                           fsr0l	equ	0xFE9
  5461                           wreg	equ	0xFE8
  5462                           indf1	equ	0xFE7
  5463                           fsr1h	equ	0xFE2
  5464                           fsr1l	equ	0xFE1
  5465                           bsr	equ	0xFE0
  5466                           indf2	equ	0xFDF
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function ___altoft *****************
  5474 ;; Defined at:
  5475 ;;		line 42 in file "/opt/microchip/xc8/v1.34/sources/common/altoft.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  c               4    8[COMRAM] long 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  sign            1   17[COMRAM] unsigned char 
  5480 ;;  exp             1   16[COMRAM] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  3    8[COMRAM] float 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;Total ram usage:       10 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    8
  5497 ;; This function calls:
  5498 ;;		___ftpack
  5499 ;; This function is called by:
  5500 ;;		_strtod
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text30
  5505  002B9A                     __ptext30:
  5506                           	opt stack 0
  5507  002B9A                     ___altoft:
  5508                           	opt stack 13
  5509                           
  5510                           ;incstack = 0
  5511  002B9A  0E00               	movlw	0
  5512  002B9C  6E12               	movwf	___altoft@sign,c
  5513  002B9E  0E8E               	movlw	142
  5514  002BA0  6E11               	movwf	___altoft@exp,c
  5515  002BA2  AE0C               	btfss	___altoft@c+3,7,c
  5516  002BA4  D012               	goto	i1l2802
  5517  002BA6  1E0C               	comf	___altoft@c+3,f,c
  5518  002BA8  1E0B               	comf	___altoft@c+2,f,c
  5519  002BAA  1E0A               	comf	___altoft@c+1,f,c
  5520  002BAC  6C09               	negf	___altoft@c,c
  5521  002BAE  0E00               	movlw	0
  5522  002BB0  220A               	addwfc	___altoft@c+1,f,c
  5523  002BB2  220B               	addwfc	___altoft@c+2,f,c
  5524  002BB4  220C               	addwfc	___altoft@c+3,f,c
  5525  002BB6  0E01               	movlw	1
  5526  002BB8  6E12               	movwf	___altoft@sign,c
  5527  002BBA  D007               	goto	i1l2802
  5528  002BBC                     i1l2800:
  5529  002BBC  90D8               	bcf	status,0,c
  5530  002BBE  320C               	rrcf	___altoft@c+3,f,c
  5531  002BC0  320B               	rrcf	___altoft@c+2,f,c
  5532  002BC2  320A               	rrcf	___altoft@c+1,f,c
  5533  002BC4  3209               	rrcf	___altoft@c,f,c
  5534  002BC6  2A11               	incf	___altoft@exp,f,c
  5535  002BC8  D000               	goto	i1l2802
  5536  002BCA                     i1l2802:
  5537  002BCA  0E00               	movlw	0
  5538  002BCC  1409               	andwf	___altoft@c,w,c
  5539  002BCE  6E0D               	movwf	??___altoft& (0+255),c
  5540  002BD0  0E00               	movlw	0
  5541  002BD2  140A               	andwf	___altoft@c+1,w,c
  5542  002BD4  6E0E               	movwf	(??___altoft+1)& (0+255),c
  5543  002BD6  0E00               	movlw	0
  5544  002BD8  140B               	andwf	___altoft@c+2,w,c
  5545  002BDA  6E0F               	movwf	(??___altoft+2)& (0+255),c
  5546  002BDC  0EFF               	movlw	255
  5547  002BDE  140C               	andwf	___altoft@c+3,w,c
  5548  002BE0  6E10               	movwf	(??___altoft+3)& (0+255),c
  5549  002BE2  500D               	movf	??___altoft,w,c
  5550  002BE4  100E               	iorwf	??___altoft+1,w,c
  5551  002BE6  100F               	iorwf	??___altoft+2,w,c
  5552  002BE8  1010               	iorwf	??___altoft+3,w,c
  5553  002BEA  A4D8               	btfss	status,2,c
  5554  002BEC  D7E7               	goto	i1l2800
  5555  002BEE  C009  F001         	movff	___altoft@c,___ftpack@arg
  5556  002BF2  C00A  F002         	movff	___altoft@c+1,___ftpack@arg+1
  5557  002BF6  C00B  F003         	movff	___altoft@c+2,___ftpack@arg+2
  5558  002BFA  C011  F004         	movff	___altoft@exp,___ftpack@exp
  5559  002BFE  C012  F005         	movff	___altoft@sign,___ftpack@sign
  5560  002C02  EC9B  F014         	call	___ftpack	;wreg free
  5561  002C06  C001  F009         	movff	?___ftpack,?___altoft
  5562  002C0A  C002  F00A         	movff	?___ftpack+1,?___altoft+1
  5563  002C0E  C003  F00B         	movff	?___ftpack+2,?___altoft+2
  5564  002C12  D000               	goto	i1l576
  5565  002C14                     i1l576:
  5566  002C14  0012               	return		;funcret
  5567  002C16                     __end_of___altoft:
  5568                           	opt stack 0
  5569                           pclatu	equ	0xFFB
  5570                           pclath	equ	0xFFA
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           intcon2	equ	0xFF1
  5579                           indf0	equ	0xFEF
  5580                           postinc0	equ	0xFEE
  5581                           fsr0h	equ	0xFEA
  5582                           fsr0l	equ	0xFE9
  5583                           wreg	equ	0xFE8
  5584                           indf1	equ	0xFE7
  5585                           fsr1h	equ	0xFE2
  5586                           fsr1l	equ	0xFE1
  5587                           bsr	equ	0xFE0
  5588                           indf2	equ	0xFDF
  5589                           postinc2	equ	0xFDE
  5590                           postdec2	equ	0xFDD
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function ___ftpack *****************
  5596 ;; Defined at:
  5597 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  arg             3    0[COMRAM] unsigned um
  5600 ;;  exp             1    3[COMRAM] unsigned char 
  5601 ;;  sign            1    4[COMRAM] unsigned char 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  3    0[COMRAM] float 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5613 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;Total ram usage:        8 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    7
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		___altoft
  5624 ;;		___ftdiv
  5625 ;;		___ftmul
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text31
  5630  002936                     __ptext31:
  5631                           	opt stack 0
  5632  002936                     ___ftpack:
  5633                           	opt stack 13
  5634                           
  5635                           ;incstack = 0
  5636  002936  5004               	movf	___ftpack@exp,w,c
  5637  002938  B4D8               	btfsc	status,2,c
  5638  00293A  D005               	goto	i1l2670
  5639  00293C  5001               	movf	___ftpack@arg,w,c
  5640  00293E  1002               	iorwf	___ftpack@arg+1,w,c
  5641  002940  1003               	iorwf	___ftpack@arg+2,w,c
  5642  002942  A4D8               	btfss	status,2,c
  5643  002944  D00E               	goto	i1l2676
  5644  002946                     i1l2670:
  5645  002946  0E00               	movlw	0
  5646  002948  6E01               	movwf	?___ftpack,c
  5647  00294A  0E00               	movlw	0
  5648  00294C  6E02               	movwf	?___ftpack+1,c
  5649  00294E  0E00               	movlw	0
  5650  002950  6E03               	movwf	?___ftpack+2,c
  5651  002952  D053               	goto	i1l869
  5652  002954  D006               	goto	i1l2676
  5653  002956                     i1l2674:
  5654  002956  2A04               	incf	___ftpack@exp,f,c
  5655  002958  90D8               	bcf	status,0,c
  5656  00295A  3203               	rrcf	___ftpack@arg+2,f,c
  5657  00295C  3202               	rrcf	___ftpack@arg+1,f,c
  5658  00295E  3201               	rrcf	___ftpack@arg,f,c
  5659  002960  D000               	goto	i1l2676
  5660  002962                     i1l2676:
  5661  002962  0E00               	movlw	0
  5662  002964  1401               	andwf	___ftpack@arg,w,c
  5663  002966  6E06               	movwf	??___ftpack& (0+255),c
  5664  002968  0E00               	movlw	0
  5665  00296A  1402               	andwf	___ftpack@arg+1,w,c
  5666  00296C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5667  00296E  0EFE               	movlw	254
  5668  002970  1403               	andwf	___ftpack@arg+2,w,c
  5669  002972  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5670  002974  5006               	movf	??___ftpack,w,c
  5671  002976  1007               	iorwf	??___ftpack+1,w,c
  5672  002978  1008               	iorwf	??___ftpack+2,w,c
  5673  00297A  B4D8               	btfsc	status,2,c
  5674  00297C  D00E               	goto	i1l2682
  5675  00297E  D7EB               	goto	i1l2674
  5676  002980  D00C               	goto	i1l2682
  5677  002982                     i1l2678:
  5678  002982  2A04               	incf	___ftpack@exp,f,c
  5679  002984  0E01               	movlw	1
  5680  002986  2601               	addwf	___ftpack@arg,f,c
  5681  002988  0E00               	movlw	0
  5682  00298A  2202               	addwfc	___ftpack@arg+1,f,c
  5683  00298C  0E00               	movlw	0
  5684  00298E  2203               	addwfc	___ftpack@arg+2,f,c
  5685  002990  90D8               	bcf	status,0,c
  5686  002992  3203               	rrcf	___ftpack@arg+2,f,c
  5687  002994  3202               	rrcf	___ftpack@arg+1,f,c
  5688  002996  3201               	rrcf	___ftpack@arg,f,c
  5689  002998  D000               	goto	i1l2682
  5690  00299A                     i1l2682:
  5691  00299A  0E00               	movlw	0
  5692  00299C  1401               	andwf	___ftpack@arg,w,c
  5693  00299E  6E06               	movwf	??___ftpack& (0+255),c
  5694  0029A0  0E00               	movlw	0
  5695  0029A2  1402               	andwf	___ftpack@arg+1,w,c
  5696  0029A4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5697  0029A6  0EFF               	movlw	255
  5698  0029A8  1403               	andwf	___ftpack@arg+2,w,c
  5699  0029AA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5700  0029AC  5006               	movf	??___ftpack,w,c
  5701  0029AE  1007               	iorwf	??___ftpack+1,w,c
  5702  0029B0  1008               	iorwf	??___ftpack+2,w,c
  5703  0029B2  B4D8               	btfsc	status,2,c
  5704  0029B4  D008               	goto	i1l2686
  5705  0029B6  D7E5               	goto	i1l2678
  5706  0029B8  D006               	goto	i1l2686
  5707  0029BA                     i1l2684:
  5708  0029BA  0604               	decf	___ftpack@exp,f,c
  5709  0029BC  90D8               	bcf	status,0,c
  5710  0029BE  3601               	rlcf	___ftpack@arg,f,c
  5711  0029C0  3602               	rlcf	___ftpack@arg+1,f,c
  5712  0029C2  3603               	rlcf	___ftpack@arg+2,f,c
  5713  0029C4  D000               	goto	i1l2686
  5714  0029C6                     i1l2686:
  5715  0029C6  BE02               	btfsc	___ftpack@arg+1,7,c
  5716  0029C8  D004               	goto	i1l880
  5717  0029CA  0E02               	movlw	2
  5718  0029CC  6004               	cpfslt	___ftpack@exp,c
  5719  0029CE  D7F5               	goto	i1l2684
  5720  0029D0  D000               	goto	i1l880
  5721  0029D2                     i1l880:
  5722  0029D2  B004               	btfsc	___ftpack@exp,0,c
  5723  0029D4  D002               	goto	i1l2692
  5724  0029D6  9E02               	bcf	___ftpack@arg+1,7,c
  5725  0029D8  D000               	goto	i1l2692
  5726  0029DA                     i1l2692:
  5727  0029DA  90D8               	bcf	status,0,c
  5728  0029DC  3204               	rrcf	___ftpack@exp,f,c
  5729  0029DE  5004               	movf	___ftpack@exp,w,c
  5730  0029E0  1203               	iorwf	___ftpack@arg+2,f,c
  5731  0029E2  5005               	movf	___ftpack@sign,w,c
  5732  0029E4  B4D8               	btfsc	status,2,c
  5733  0029E6  D002               	goto	i1l2698
  5734  0029E8  8E03               	bsf	___ftpack@arg+2,7,c
  5735  0029EA  D000               	goto	i1l2698
  5736  0029EC                     i1l2698:
  5737  0029EC  C001  F001         	movff	___ftpack@arg,?___ftpack
  5738  0029F0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5739  0029F4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5740  0029F8  D000               	goto	i1l869
  5741  0029FA                     i1l869:
  5742  0029FA  0012               	return		;funcret
  5743  0029FC                     __end_of___ftpack:
  5744                           	opt stack 0
  5745                           pclatu	equ	0xFFB
  5746                           pclath	equ	0xFFA
  5747                           tblptru	equ	0xFF8
  5748                           tblptrh	equ	0xFF7
  5749                           tblptrl	equ	0xFF6
  5750                           tablat	equ	0xFF5
  5751                           prodh	equ	0xFF4
  5752                           prodl	equ	0xFF3
  5753                           intcon	equ	0xFF2
  5754                           intcon2	equ	0xFF1
  5755                           indf0	equ	0xFEF
  5756                           postinc0	equ	0xFEE
  5757                           fsr0h	equ	0xFEA
  5758                           fsr0l	equ	0xFE9
  5759                           wreg	equ	0xFE8
  5760                           indf1	equ	0xFE7
  5761                           fsr1h	equ	0xFE2
  5762                           fsr1l	equ	0xFE1
  5763                           bsr	equ	0xFE0
  5764                           indf2	equ	0xFDF
  5765                           postinc2	equ	0xFDE
  5766                           postdec2	equ	0xFDD
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _strcmp *****************
  5772 ;; Defined at:
  5773 ;;		line 33 in file "/opt/microchip/xc8/v1.34/sources/common/strcmp.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  5776 ;;		 -> key(5), 
  5777 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  5778 ;;		 -> STR_28(3), STR_27(3), STR_26(3), STR_25(3), 
  5779 ;;		 -> STR_24(3), STR_23(3), STR_22(4), STR_21(4), 
  5780 ;;		 -> STR_20(4), STR_19(4), STR_18(3), STR_17(3), 
  5781 ;;		 -> STR_16(3), STR_15(3), STR_12(3), STR_11(3), 
  5782 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  5783 ;;		 -> STR_6(4), STR_5(4), 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  r               1    5[COMRAM] char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  2    0[COMRAM] int 
  5788 ;; Registers used:
  5789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;Total ram usage:        6 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:    7
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_keyValue
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text32
  5810  002F84                     __ptext32:
  5811                           	opt stack 0
  5812  002F84                     _strcmp:
  5813                           	opt stack 15
  5814                           
  5815                           ;incstack = 0
  5816  002F84  D005               	goto	i1l3090
  5817  002F86                     i1l3088:
  5818  002F86  4A01               	infsnz	strcmp@s1,f,c
  5819  002F88  2A02               	incf	strcmp@s1+1,f,c
  5820  002F8A  4A03               	infsnz	strcmp@s2,f,c
  5821  002F8C  2A04               	incf	strcmp@s2+1,f,c
  5822  002F8E  D000               	goto	i1l3090
  5823  002F90                     i1l3090:
  5824  002F90  C001  FFD9         	movff	strcmp@s1,fsr2l
  5825  002F94  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  5826  002F98  50DF               	movf	indf2,w,c
  5827  002F9A  6E05               	movwf	??_strcmp& (0+255),c
  5828  002F9C  C003  FFF6         	movff	strcmp@s2,tblptrl
  5829  002FA0  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  5830  002FA4                     	if	0	;tblptru may be non-zero
  5831  002FA4                     	endif
  5832  002FA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5833  002FA4  0E00               	movlw	low (__mediumconst shr (0+16))
  5834  002FA6  6EF8               	movwf	tblptru,c
  5835  002FA8                     	endif
  5836  002FA8  0008               	tblrd		*
  5837  002FAA  50F5               	movf	tablat,w,c
  5838  002FAC  0800               	sublw	0
  5839  002FAE  2405               	addwf	??_strcmp,w,c
  5840  002FB0  6E06               	movwf	strcmp@r,c
  5841  002FB2  5006               	movf	strcmp@r,w,c
  5842  002FB4  A4D8               	btfss	status,2,c
  5843  002FB6  D009               	goto	i1l3094
  5844  002FB8  C001  FFD9         	movff	strcmp@s1,fsr2l
  5845  002FBC  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  5846  002FC0  50DF               	movf	indf2,w,c
  5847  002FC2  B4D8               	btfsc	status,2,c
  5848  002FC4  D002               	goto	i1l3094
  5849  002FC6  D7DF               	goto	i1l3088
  5850  002FC8  D000               	goto	i1l3094
  5851  002FCA                     i1l3094:
  5852  002FCA  5006               	movf	strcmp@r,w,c
  5853  002FCC  6E01               	movwf	?_strcmp,c
  5854  002FCE  6A02               	clrf	?_strcmp+1,c
  5855  002FD0  BE01               	btfsc	?_strcmp,7,c
  5856  002FD2  0602               	decf	?_strcmp+1,f,c
  5857  002FD4  D000               	goto	i1l1124
  5858  002FD6                     i1l1124:
  5859  002FD6  0012               	return		;funcret
  5860  002FD8                     __end_of_strcmp:
  5861                           	opt stack 0
  5862                           pclatu	equ	0xFFB
  5863                           pclath	equ	0xFFA
  5864                           tblptru	equ	0xFF8
  5865                           tblptrh	equ	0xFF7
  5866                           tblptrl	equ	0xFF6
  5867                           tablat	equ	0xFF5
  5868                           prodh	equ	0xFF4
  5869                           prodl	equ	0xFF3
  5870                           intcon	equ	0xFF2
  5871                           intcon2	equ	0xFF1
  5872                           indf0	equ	0xFEF
  5873                           postinc0	equ	0xFEE
  5874                           fsr0h	equ	0xFEA
  5875                           fsr0l	equ	0xFE9
  5876                           wreg	equ	0xFE8
  5877                           indf1	equ	0xFE7
  5878                           fsr1h	equ	0xFE2
  5879                           fsr1l	equ	0xFE1
  5880                           bsr	equ	0xFE0
  5881                           indf2	equ	0xFDF
  5882                           postinc2	equ	0xFDE
  5883                           postdec2	equ	0xFDD
  5884                           fsr2h	equ	0xFDA
  5885                           fsr2l	equ	0xFD9
  5886                           status	equ	0xFD8
  5887                           
  5888 ;; *************** function _hISR *****************
  5889 ;; Defined at:
  5890 ;;		line 47 in file "PIDLoop.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;		None               void
  5897 ;; Registers used:
  5898 ;;		wreg, status,2, status,0, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;Total ram usage:       14 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    6
  5911 ;; This function calls:
  5912 ;;		_TMR0Int
  5913 ;; This function is called by:
  5914 ;;		Interrupt level 2
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	intcode
  5919  000008                     __pintcode:
  5920                           	opt stack 0
  5921  000008                     _hISR:
  5922                           	opt stack 13
  5923                           
  5924                           ;incstack = 0
  5925  000008  CFFA F0B0          	movff	pclath,??_hISR
  5926  00000C  CFFB F0B1          	movff	pclatu,??_hISR+1
  5927  000010  CFE9 F0B2          	movff	fsr0l,??_hISR+2
  5928  000014  ED49  F015         	call	int_func,f	;refresh shadow registers
  5929                           pclatu	equ	0xFFB
  5930                           pclath	equ	0xFFA
  5931                           tblptru	equ	0xFF8
  5932                           tblptrh	equ	0xFF7
  5933                           tblptrl	equ	0xFF6
  5934                           tablat	equ	0xFF5
  5935                           prodh	equ	0xFF4
  5936                           prodl	equ	0xFF3
  5937                           intcon	equ	0xFF2
  5938                           intcon2	equ	0xFF1
  5939                           indf0	equ	0xFEF
  5940                           postinc0	equ	0xFEE
  5941                           fsr0h	equ	0xFEA
  5942                           fsr0l	equ	0xFE9
  5943                           wreg	equ	0xFE8
  5944                           indf1	equ	0xFE7
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           bsr	equ	0xFE0
  5948                           indf2	equ	0xFDF
  5949                           postinc2	equ	0xFDE
  5950                           postdec2	equ	0xFDD
  5951                           fsr2h	equ	0xFDA
  5952                           fsr2l	equ	0xFD9
  5953                           status	equ	0xFD8
  5954                           
  5955                           	psect	intcode_body
  5956  002A92                     __pintcode_body:
  5957                           	opt stack 13
  5958  002A92                     int_func:
  5959                           	opt stack 13
  5960  002A92  0006               	pop		; remove dummy address from shadow register refresh
  5961  002A94  CFEA F0B3          	movff	fsr0h,??_hISR+3
  5962  002A98  CFE1 F0B4          	movff	fsr1l,??_hISR+4
  5963  002A9C  CFE2 F0B5          	movff	fsr1h,??_hISR+5
  5964  002AA0  CFD9 F0B6          	movff	fsr2l,??_hISR+6
  5965  002AA4  CFDA F0B7          	movff	fsr2h,??_hISR+7
  5966  002AA8  CFF3 F0B8          	movff	prodl,??_hISR+8
  5967  002AAC  CFF4 F0B9          	movff	prodh,??_hISR+9
  5968  002AB0  CFF6 F0BA          	movff	tblptrl,??_hISR+10
  5969  002AB4  CFF7 F0BB          	movff	tblptrh,??_hISR+11
  5970  002AB8  CFF8 F0BC          	movff	tblptru,??_hISR+12
  5971  002ABC  CFF5 F0BD          	movff	tablat,??_hISR+13
  5972                           
  5973                           ;PIDLoop.c: 49: if ((INTCONbits.TMR0IF == 1) && (INTCONbits.TMR0IE == 1) && ((PIDEnableF
      +                          lag == 1) || (PIDEnableFlag == 3)))
  5974  002AC0  B4F2               	btfsc	intcon,2,c	;volatile
  5975  002AC2  AAF2               	btfss	intcon,5,c	;volatile
  5976  002AC4  D00C               	goto	i2l426
  5977  002AC6  0100               	movlb	0	; () banked
  5978  002AC8  05DB               	decf	_PIDEnableFlag& (0+255),w,b
  5979  002ACA  B4D8               	btfsc	status,2,c
  5980  002ACC  D005               	goto	i2l4008
  5981                           
  5982                           ; BSR set to: 0
  5983  002ACE  0E03               	movlw	3
  5984  002AD0  0100               	movlb	0	; () banked
  5985  002AD2  19DB               	xorwf	_PIDEnableFlag& (0+255),w,b
  5986  002AD4  A4D8               	btfss	status,2,c
  5987  002AD6  D003               	goto	i2l426
  5988  002AD8                     i2l4008:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;PIDLoop.c: 50: TMR0Int();
  5992  002AD8  ECE2  F016         	call	_TMR0Int	;wreg free
  5993  002ADC  D000               	goto	i2l426
  5994  002ADE                     i2l426:
  5995  002ADE  C0BD  FFF5         	movff	??_hISR+13,tablat
  5996  002AE2  C0BC  FFF8         	movff	??_hISR+12,tblptru
  5997  002AE6  C0BB  FFF7         	movff	??_hISR+11,tblptrh
  5998  002AEA  C0BA  FFF6         	movff	??_hISR+10,tblptrl
  5999  002AEE  C0B9  FFF4         	movff	??_hISR+9,prodh
  6000  002AF2  C0B8  FFF3         	movff	??_hISR+8,prodl
  6001  002AF6  C0B7  FFDA         	movff	??_hISR+7,fsr2h
  6002  002AFA  C0B6  FFD9         	movff	??_hISR+6,fsr2l
  6003  002AFE  C0B5  FFE2         	movff	??_hISR+5,fsr1h
  6004  002B02  C0B4  FFE1         	movff	??_hISR+4,fsr1l
  6005  002B06  C0B3  FFEA         	movff	??_hISR+3,fsr0h
  6006  002B0A  C0B2  FFE9         	movff	??_hISR+2,fsr0l
  6007  002B0E  C0B1  FFFB         	movff	??_hISR+1,pclatu
  6008  002B12  C0B0  FFFA         	movff	??_hISR,pclath
  6009  002B16  0011               	retfie		f
  6010  002B18                     __end_of_hISR:
  6011                           	opt stack 0
  6012                           pclatu	equ	0xFFB
  6013                           pclath	equ	0xFFA
  6014                           tblptru	equ	0xFF8
  6015                           tblptrh	equ	0xFF7
  6016                           tblptrl	equ	0xFF6
  6017                           tablat	equ	0xFF5
  6018                           prodh	equ	0xFF4
  6019                           prodl	equ	0xFF3
  6020                           intcon	equ	0xFF2
  6021                           intcon2	equ	0xFF1
  6022                           indf0	equ	0xFEF
  6023                           postinc0	equ	0xFEE
  6024                           fsr0h	equ	0xFEA
  6025                           fsr0l	equ	0xFE9
  6026                           wreg	equ	0xFE8
  6027                           indf1	equ	0xFE7
  6028                           fsr1h	equ	0xFE2
  6029                           fsr1l	equ	0xFE1
  6030                           bsr	equ	0xFE0
  6031                           indf2	equ	0xFDF
  6032                           postinc2	equ	0xFDE
  6033                           postdec2	equ	0xFDD
  6034                           fsr2h	equ	0xFDA
  6035                           fsr2l	equ	0xFD9
  6036                           status	equ	0xFD8
  6037                           
  6038 ;; *************** function _TMR0Int *****************
  6039 ;; Defined at:
  6040 ;;		line 65 in file "PID.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;		None               void
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    5
  6061 ;; This function calls:
  6062 ;;		_ImplementPIDMotion
  6063 ;;		_LCDBreakDouble
  6064 ;;		_RTD2Angle
  6065 ;;		_ReadRTDpos
  6066 ;;		_calculatePID
  6067 ;; This function is called by:
  6068 ;;		_hISR
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text34
  6073  002DC4                     __ptext34:
  6074                           	opt stack 0
  6075  002DC4                     _TMR0Int:
  6076                           	opt stack 13
  6077                           
  6078                           ;PID.c: 67: CurrentAngle = RTD2Angle(ReadRTDpos());
  6079                           
  6080                           ;incstack = 0
  6081  002DC4  EC0B  F016         	call	_ReadRTDpos	;wreg free
  6082  002DC8  C061  F086         	movff	?_ReadRTDpos,RTD2Angle@RTDAngle
  6083  002DCC  C062  F087         	movff	?_ReadRTDpos+1,RTD2Angle@RTDAngle+1
  6084  002DD0  ECCD  F018         	call	_RTD2Angle	;wreg free
  6085  002DD4  C086  F0BE         	movff	?_RTD2Angle,_CurrentAngle
  6086  002DD8  C087  F0BF         	movff	?_RTD2Angle+1,_CurrentAngle+1
  6087  002DDC  C088  F0C0         	movff	?_RTD2Angle+2,_CurrentAngle+2
  6088                           
  6089                           ;PID.c: 68: calculatePID(CurrentAngle, SetAngle);
  6090  002DE0  C0BE  F0A1         	movff	_CurrentAngle,calculatePID@angle
  6091  002DE4  C0BF  F0A2         	movff	_CurrentAngle+1,calculatePID@angle+1
  6092  002DE8  C0C0  F0A3         	movff	_CurrentAngle+2,calculatePID@angle+2
  6093  002DEC  C0CA  F0A4         	movff	_SetAngle,calculatePID@setpoint
  6094  002DF0  C0CB  F0A5         	movff	_SetAngle+1,calculatePID@setpoint+1
  6095  002DF4  C0CC  F0A6         	movff	_SetAngle+2,calculatePID@setpoint+2
  6096  002DF8  ECCF  F00C         	call	_calculatePID	;wreg free
  6097                           
  6098                           ;PID.c: 69: ImplementPIDMotion(motorInput);
  6099  002DFC  C0D9  F064         	movff	_motorInput,ImplementPIDMotion@PIDValue
  6100  002E00  C0DA  F065         	movff	_motorInput+1,ImplementPIDMotion@PIDValue+1
  6101  002E04  EC44  F016         	call	_ImplementPIDMotion	;wreg free
  6102                           
  6103                           ;PID.c: 70: TMR0H = 0xDB;
  6104  002E08  0EDB               	movlw	219
  6105  002E0A  6ED7               	movwf	4055,c	;volatile
  6106                           
  6107                           ;PID.c: 71: TMR0L = 0x60;
  6108  002E0C  0E60               	movlw	96
  6109  002E0E  6ED6               	movwf	4054,c	;volatile
  6110                           
  6111                           ;PID.c: 72: LCDBreakDouble(CurrentAngle);
  6112  002E10  C0BE  F0A1         	movff	_CurrentAngle,LCDBreakDouble@dubs
  6113  002E14  C0BF  F0A2         	movff	_CurrentAngle+1,LCDBreakDouble@dubs+1
  6114  002E18  C0C0  F0A3         	movff	_CurrentAngle+2,LCDBreakDouble@dubs+2
  6115  002E1C  EC79  F00F         	call	_LCDBreakDouble	;wreg free
  6116                           
  6117                           ;PID.c: 74: INTCONbits.TMR0IF = 0;
  6118  002E20  94F2               	bcf	intcon,2,c	;volatile
  6119  002E22  0012               	return		;funcret
  6120  002E24                     __end_of_TMR0Int:
  6121                           	opt stack 0
  6122                           pclatu	equ	0xFFB
  6123                           pclath	equ	0xFFA
  6124                           tblptru	equ	0xFF8
  6125                           tblptrh	equ	0xFF7
  6126                           tblptrl	equ	0xFF6
  6127                           tablat	equ	0xFF5
  6128                           prodh	equ	0xFF4
  6129                           prodl	equ	0xFF3
  6130                           intcon	equ	0xFF2
  6131                           intcon2	equ	0xFF1
  6132                           indf0	equ	0xFEF
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           fsr1h	equ	0xFE2
  6139                           fsr1l	equ	0xFE1
  6140                           bsr	equ	0xFE0
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function _calculatePID *****************
  6149 ;; Defined at:
  6150 ;;		line 34 in file "PID.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  angle           3   65[BANK0 ] int 
  6153 ;;  setpoint        3   68[BANK0 ] int 
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  derErr          3   71[BANK0 ] int 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;		None               void
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0, cstack
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6165 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;Total ram usage:       15 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    3
  6172 ;; This function calls:
  6173 ;;		___ftadd
  6174 ;;		___ftsub
  6175 ;;		___fttol
  6176 ;;		i2___ftdiv
  6177 ;;		i2___ftge
  6178 ;;		i2___ftmul
  6179 ;;		i2___ftneg
  6180 ;; This function is called by:
  6181 ;;		_TMR0Int
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text35
  6186  00199E                     __ptext35:
  6187                           	opt stack 0
  6188  00199E                     _calculatePID:
  6189                           	opt stack 14
  6190                           
  6191                           ;PID.c: 36: double derErr;
  6192                           ;PID.c: 37: if(PIDEnableFlag == 3)
  6193                           
  6194                           ;incstack = 0
  6195  00199E  0E03               	movlw	3
  6196  0019A0  0100               	movlb	0	; () banked
  6197  0019A2  19DB               	xorwf	_PIDEnableFlag& (0+255),w,b
  6198  0019A4  A4D8               	btfss	status,2,c
  6199  0019A6  D025               	goto	i2l3544
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;PID.c: 38: {
  6203                           ;PID.c: 39: StartAngle = angle;
  6204  0019A8  C0A1  F0CD         	movff	calculatePID@angle,_StartAngle
  6205  0019AC  C0A2  F0CE         	movff	calculatePID@angle+1,_StartAngle+1
  6206  0019B0  C0A3  F0CF         	movff	calculatePID@angle+2,_StartAngle+2
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;PID.c: 40: error = 0;
  6210  0019B4  0E00               	movlw	0
  6211  0019B6  0100               	movlb	0	; () banked
  6212  0019B8  6FD0               	movwf	_error& (0+255),b
  6213  0019BA  0E00               	movlw	0
  6214  0019BC  0100               	movlb	0	; () banked
  6215  0019BE  6FD1               	movwf	(_error+1)& (0+255),b
  6216  0019C0  0E00               	movlw	0
  6217  0019C2  0100               	movlb	0	; () banked
  6218  0019C4  6FD2               	movwf	(_error+2)& (0+255),b
  6219                           
  6220                           ;PID.c: 41: prevErr = 0;
  6221  0019C6  0E00               	movlw	0
  6222  0019C8  0100               	movlb	0	; () banked
  6223  0019CA  6FD6               	movwf	_prevErr& (0+255),b
  6224  0019CC  0E00               	movlw	0
  6225  0019CE  0100               	movlb	0	; () banked
  6226  0019D0  6FD7               	movwf	(_prevErr+1)& (0+255),b
  6227  0019D2  0E00               	movlw	0
  6228  0019D4  0100               	movlb	0	; () banked
  6229  0019D6  6FD8               	movwf	(_prevErr+2)& (0+255),b
  6230                           
  6231                           ;PID.c: 42: intErr = 0;
  6232  0019D8  0E00               	movlw	0
  6233  0019DA  0100               	movlb	0	; () banked
  6234  0019DC  6FD3               	movwf	_intErr& (0+255),b
  6235  0019DE  0E00               	movlw	0
  6236  0019E0  0100               	movlb	0	; () banked
  6237  0019E2  6FD4               	movwf	(_intErr+1)& (0+255),b
  6238  0019E4  0E00               	movlw	0
  6239  0019E6  0100               	movlb	0	; () banked
  6240  0019E8  6FD5               	movwf	(_intErr+2)& (0+255),b
  6241                           
  6242                           ;PID.c: 43: PIDEnableFlag = 1;
  6243  0019EA  0E01               	movlw	1
  6244  0019EC  0100               	movlb	0	; () banked
  6245  0019EE  6FDB               	movwf	_PIDEnableFlag& (0+255),b
  6246  0019F0  D000               	goto	i2l3544
  6247  0019F2                     i2l3544:
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;PID.c: 44: }
  6251                           ;PID.c: 46: error = setpoint - angle;
  6252  0019F2  C0A1  F060         	movff	calculatePID@angle,i2___ftneg@f1
  6253  0019F6  C0A2  F061         	movff	calculatePID@angle+1,i2___ftneg@f1+1
  6254  0019FA  C0A3  F062         	movff	calculatePID@angle+2,i2___ftneg@f1+2
  6255  0019FE  EC1D  F019         	call	i2___ftneg	;wreg free
  6256  001A02  C060  F086         	movff	?i2___ftneg,___ftadd@f1
  6257  001A06  C061  F087         	movff	?i2___ftneg+1,___ftadd@f1+1
  6258  001A0A  C062  F088         	movff	?i2___ftneg+2,___ftadd@f1+2
  6259  001A0E  C0A4  F089         	movff	calculatePID@setpoint,___ftadd@f2
  6260  001A12  C0A5  F08A         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  6261  001A16  C0A6  F08B         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  6262  001A1A  EC3A  F00E         	call	___ftadd	;wreg free
  6263  001A1E  C086  F0D0         	movff	?___ftadd,_error
  6264  001A22  C087  F0D1         	movff	?___ftadd+1,_error+1
  6265  001A26  C088  F0D2         	movff	?___ftadd+2,_error+2
  6266                           
  6267                           ;PID.c: 47: if(error > 180)
  6268  001A2A  0E00               	movlw	0
  6269  001A2C  0100               	movlb	0	; () banked
  6270  001A2E  6F60               	movwf	i2___ftge@ff1& (0+255),b
  6271  001A30  0E34               	movlw	52
  6272  001A32  0100               	movlb	0	; () banked
  6273  001A34  6F61               	movwf	(i2___ftge@ff1+1)& (0+255),b
  6274  001A36  0E43               	movlw	67
  6275  001A38  0100               	movlb	0	; () banked
  6276  001A3A  6F62               	movwf	(i2___ftge@ff1+2)& (0+255),b
  6277  001A3C  C0D0  F063         	movff	_error,i2___ftge@ff2
  6278  001A40  C0D1  F064         	movff	_error+1,i2___ftge@ff2+1
  6279  001A44  C0D2  F065         	movff	_error+2,i2___ftge@ff2+2
  6280  001A48  EC34  F014         	call	i2___ftge	;wreg free
  6281  001A4C  0100               	movlb	0	; () banked
  6282  001A4E  B0D8               	btfsc	status,0,c
  6283  001A50  D018               	goto	i2l3550
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;PID.c: 48: error -= 360;
  6287  001A52  C0D0  F092         	movff	_error,___ftsub@f1
  6288  001A56  C0D1  F093         	movff	_error+1,___ftsub@f1+1
  6289  001A5A  C0D2  F094         	movff	_error+2,___ftsub@f1+2
  6290  001A5E  0E00               	movlw	0
  6291  001A60  0100               	movlb	0	; () banked
  6292  001A62  6F95               	movwf	___ftsub@f2& (0+255),b
  6293  001A64  0EB4               	movlw	180
  6294  001A66  0100               	movlb	0	; () banked
  6295  001A68  6F96               	movwf	(___ftsub@f2+1)& (0+255),b
  6296  001A6A  0E43               	movlw	67
  6297  001A6C  0100               	movlb	0	; () banked
  6298  001A6E  6F97               	movwf	(___ftsub@f2+2)& (0+255),b
  6299  001A70  ECEC  F017         	call	___ftsub	;wreg free
  6300  001A74  C092  F0D0         	movff	?___ftsub,_error
  6301  001A78  C093  F0D1         	movff	?___ftsub+1,_error+1
  6302  001A7C  C094  F0D2         	movff	?___ftsub+2,_error+2
  6303  001A80  D02C               	goto	i2l88
  6304  001A82                     i2l3550:
  6305                           
  6306                           ;PID.c: 49: else if(error < -180)
  6307  001A82  C0D0  F060         	movff	_error,i2___ftge@ff1
  6308  001A86  C0D1  F061         	movff	_error+1,i2___ftge@ff1+1
  6309  001A8A  C0D2  F062         	movff	_error+2,i2___ftge@ff1+2
  6310  001A8E  0E00               	movlw	0
  6311  001A90  0100               	movlb	0	; () banked
  6312  001A92  6F63               	movwf	i2___ftge@ff2& (0+255),b
  6313  001A94  0E34               	movlw	52
  6314  001A96  0100               	movlb	0	; () banked
  6315  001A98  6F64               	movwf	(i2___ftge@ff2+1)& (0+255),b
  6316  001A9A  0EC3               	movlw	195
  6317  001A9C  0100               	movlb	0	; () banked
  6318  001A9E  6F65               	movwf	(i2___ftge@ff2+2)& (0+255),b
  6319  001AA0  EC34  F014         	call	i2___ftge	;wreg free
  6320  001AA4  0100               	movlb	0	; () banked
  6321  001AA6  B0D8               	btfsc	status,0,c
  6322  001AA8  D018               	goto	i2l88
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;PID.c: 50: error += 360;
  6326  001AAA  C0D0  F086         	movff	_error,___ftadd@f1
  6327  001AAE  C0D1  F087         	movff	_error+1,___ftadd@f1+1
  6328  001AB2  C0D2  F088         	movff	_error+2,___ftadd@f1+2
  6329  001AB6  0E00               	movlw	0
  6330  001AB8  0100               	movlb	0	; () banked
  6331  001ABA  6F89               	movwf	___ftadd@f2& (0+255),b
  6332  001ABC  0EB4               	movlw	180
  6333  001ABE  0100               	movlb	0	; () banked
  6334  001AC0  6F8A               	movwf	(___ftadd@f2+1)& (0+255),b
  6335  001AC2  0E43               	movlw	67
  6336  001AC4  0100               	movlb	0	; () banked
  6337  001AC6  6F8B               	movwf	(___ftadd@f2+2)& (0+255),b
  6338  001AC8  EC3A  F00E         	call	___ftadd	;wreg free
  6339  001ACC  C086  F0D0         	movff	?___ftadd,_error
  6340  001AD0  C087  F0D1         	movff	?___ftadd+1,_error+1
  6341  001AD4  C088  F0D2         	movff	?___ftadd+2,_error+2
  6342  001AD8  D000               	goto	i2l88
  6343  001ADA                     i2l88:
  6344                           
  6345                           ;PID.c: 52: intErr += error;
  6346  001ADA  C0D3  F086         	movff	_intErr,___ftadd@f1
  6347  001ADE  C0D4  F087         	movff	_intErr+1,___ftadd@f1+1
  6348  001AE2  C0D5  F088         	movff	_intErr+2,___ftadd@f1+2
  6349  001AE6  C0D0  F089         	movff	_error,___ftadd@f2
  6350  001AEA  C0D1  F08A         	movff	_error+1,___ftadd@f2+1
  6351  001AEE  C0D2  F08B         	movff	_error+2,___ftadd@f2+2
  6352  001AF2  EC3A  F00E         	call	___ftadd	;wreg free
  6353  001AF6  C086  F0D3         	movff	?___ftadd,_intErr
  6354  001AFA  C087  F0D4         	movff	?___ftadd+1,_intErr+1
  6355  001AFE  C088  F0D5         	movff	?___ftadd+2,_intErr+2
  6356                           
  6357                           ;PID.c: 53: derErr = error - prevErr;
  6358  001B02  C0D6  F060         	movff	_prevErr,i2___ftneg@f1
  6359  001B06  C0D7  F061         	movff	_prevErr+1,i2___ftneg@f1+1
  6360  001B0A  C0D8  F062         	movff	_prevErr+2,i2___ftneg@f1+2
  6361  001B0E  EC1D  F019         	call	i2___ftneg	;wreg free
  6362  001B12  C060  F086         	movff	?i2___ftneg,___ftadd@f1
  6363  001B16  C061  F087         	movff	?i2___ftneg+1,___ftadd@f1+1
  6364  001B1A  C062  F088         	movff	?i2___ftneg+2,___ftadd@f1+2
  6365  001B1E  C0D0  F089         	movff	_error,___ftadd@f2
  6366  001B22  C0D1  F08A         	movff	_error+1,___ftadd@f2+1
  6367  001B26  C0D2  F08B         	movff	_error+2,___ftadd@f2+2
  6368  001B2A  EC3A  F00E         	call	___ftadd	;wreg free
  6369  001B2E  C086  F0A7         	movff	?___ftadd,calculatePID@derErr
  6370  001B32  C087  F0A8         	movff	?___ftadd+1,calculatePID@derErr+1
  6371  001B36  C088  F0A9         	movff	?___ftadd+2,calculatePID@derErr+2
  6372                           
  6373                           ;PID.c: 55: motorInput = Kp * error + (Ki * intErr * loopTime) + (Kd * (derErr/loopTime)
      +                          );
  6374  001B3A  C0D3  F07A         	movff	_intErr,i2___ftmul@f2
  6375  001B3E  C0D4  F07B         	movff	_intErr+1,i2___ftmul@f2+1
  6376  001B42  C0D5  F07C         	movff	_intErr+2,i2___ftmul@f2+2
  6377  001B46  C0C4  F077         	movff	_Ki,i2___ftmul@f1
  6378  001B4A  C0C5  F078         	movff	_Ki+1,i2___ftmul@f1+1
  6379  001B4E  C0C6  F079         	movff	_Ki+2,i2___ftmul@f1+2
  6380  001B52  EC31  F010         	call	i2___ftmul	;wreg free
  6381  001B56  C077  F0AD         	movff	?i2___ftmul,_calculatePID$2716
  6382  001B5A  C078  F0AE         	movff	?i2___ftmul+1,_calculatePID$2716+1
  6383  001B5E  C079  F0AF         	movff	?i2___ftmul+2,_calculatePID$2716+2
  6384                           
  6385                           ;PID.c: 55: motorInput = Kp * error + (Ki * intErr * loopTime) + (Kd * (derErr/loopTime)
      +                          );
  6386  001B62  C0FA  F07A         	movff	_loopTime,i2___ftmul@f2
  6387  001B66  C0FB  F07B         	movff	_loopTime+1,i2___ftmul@f2+1
  6388  001B6A  C0FC  F07C         	movff	_loopTime+2,i2___ftmul@f2+2
  6389  001B6E  C0AD  F077         	movff	_calculatePID$2716,i2___ftmul@f1
  6390  001B72  C0AE  F078         	movff	_calculatePID$2716+1,i2___ftmul@f1+1
  6391  001B76  C0AF  F079         	movff	_calculatePID$2716+2,i2___ftmul@f1+2
  6392  001B7A  EC31  F010         	call	i2___ftmul	;wreg free
  6393  001B7E  C077  F089         	movff	?i2___ftmul,___ftadd@f2
  6394  001B82  C078  F08A         	movff	?i2___ftmul+1,___ftadd@f2+1
  6395  001B86  C079  F08B         	movff	?i2___ftmul+2,___ftadd@f2+2
  6396  001B8A  C0D0  F07A         	movff	_error,i2___ftmul@f2
  6397  001B8E  C0D1  F07B         	movff	_error+1,i2___ftmul@f2+1
  6398  001B92  C0D2  F07C         	movff	_error+2,i2___ftmul@f2+2
  6399  001B96  C0C7  F077         	movff	_Kp,i2___ftmul@f1
  6400  001B9A  C0C8  F078         	movff	_Kp+1,i2___ftmul@f1+1
  6401  001B9E  C0C9  F079         	movff	_Kp+2,i2___ftmul@f1+2
  6402  001BA2  EC31  F010         	call	i2___ftmul	;wreg free
  6403  001BA6  C077  F086         	movff	?i2___ftmul,___ftadd@f1
  6404  001BAA  C078  F087         	movff	?i2___ftmul+1,___ftadd@f1+1
  6405  001BAE  C079  F088         	movff	?i2___ftmul+2,___ftadd@f1+2
  6406  001BB2  EC3A  F00E         	call	___ftadd	;wreg free
  6407  001BB6  C086  F0AA         	movff	?___ftadd,_calculatePID$2645
  6408  001BBA  C087  F0AB         	movff	?___ftadd+1,_calculatePID$2645+1
  6409  001BBE  C088  F0AC         	movff	?___ftadd+2,_calculatePID$2645+2
  6410                           
  6411                           ;PID.c: 55: motorInput = Kp * error + (Ki * intErr * loopTime) + (Kd * (derErr/loopTime)
      +                          );
  6412  001BC2  C0C1  F07A         	movff	_Kd,i2___ftmul@f2
  6413  001BC6  C0C2  F07B         	movff	_Kd+1,i2___ftmul@f2+1
  6414  001BCA  C0C3  F07C         	movff	_Kd+2,i2___ftmul@f2+2
  6415  001BCE  C0FA  F06B         	movff	_loopTime,i2___ftdiv@f2
  6416  001BD2  C0FB  F06C         	movff	_loopTime+1,i2___ftdiv@f2+1
  6417  001BD6  C0FC  F06D         	movff	_loopTime+2,i2___ftdiv@f2+2
  6418  001BDA  C0A7  F068         	movff	calculatePID@derErr,i2___ftdiv@f1
  6419  001BDE  C0A8  F069         	movff	calculatePID@derErr+1,i2___ftdiv@f1+1
  6420  001BE2  C0A9  F06A         	movff	calculatePID@derErr+2,i2___ftdiv@f1+2
  6421  001BE6  ECDF  F010         	call	i2___ftdiv	;wreg free
  6422  001BEA  C068  F077         	movff	?i2___ftdiv,i2___ftmul@f1
  6423  001BEE  C069  F078         	movff	?i2___ftdiv+1,i2___ftmul@f1+1
  6424  001BF2  C06A  F079         	movff	?i2___ftdiv+2,i2___ftmul@f1+2
  6425  001BF6  EC31  F010         	call	i2___ftmul	;wreg free
  6426  001BFA  C077  F089         	movff	?i2___ftmul,___ftadd@f2
  6427  001BFE  C078  F08A         	movff	?i2___ftmul+1,___ftadd@f2+1
  6428  001C02  C079  F08B         	movff	?i2___ftmul+2,___ftadd@f2+2
  6429  001C06  C0AA  F086         	movff	_calculatePID$2645,___ftadd@f1
  6430  001C0A  C0AB  F087         	movff	_calculatePID$2645+1,___ftadd@f1+1
  6431  001C0E  C0AC  F088         	movff	_calculatePID$2645+2,___ftadd@f1+2
  6432  001C12  EC3A  F00E         	call	___ftadd	;wreg free
  6433  001C16  C086  F092         	movff	?___ftadd,___fttol@f1
  6434  001C1A  C087  F093         	movff	?___ftadd+1,___fttol@f1+1
  6435  001C1E  C088  F094         	movff	?___ftadd+2,___fttol@f1+2
  6436  001C22  EC1E  F012         	call	___fttol	;wreg free
  6437  001C26  C092  F0D9         	movff	?___fttol,_motorInput
  6438  001C2A  C093  F0DA         	movff	?___fttol+1,_motorInput+1
  6439                           
  6440                           ;PID.c: 57: if(motorInput > 255)
  6441  001C2E  0100               	movlb	0	; () banked
  6442  001C30  BFDA               	btfsc	(_motorInput+1)& (0+255),7,b
  6443  001C32  D009               	goto	i2l3558
  6444  001C34  0100               	movlb	0	; () banked
  6445  001C36  05DA               	decf	(_motorInput+1)& (0+255),w,b
  6446  001C38  A0D8               	btfss	status,0,c
  6447  001C3A  D005               	goto	i2l3558
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;PID.c: 58: motorInput = 255;
  6451  001C3C  0E00               	movlw	0
  6452  001C3E  0100               	movlb	0	; () banked
  6453  001C40  6FDA               	movwf	(_motorInput+1)& (0+255),b
  6454  001C42  69D9               	setf	_motorInput& (0+255),b
  6455  001C44  D010               	goto	i2l3562
  6456  001C46                     i2l3558:
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;PID.c: 59: else if (motorInput < -255)
  6460  001C46  0100               	movlb	0	; () banked
  6461  001C48  AFDA               	btfss	(_motorInput+1)& (0+255),7,b
  6462  001C4A  D00D               	goto	i2l3562
  6463  001C4C  0100               	movlb	0	; () banked
  6464  001C4E  05D9               	decf	_motorInput& (0+255),w,b
  6465  001C50  0EFF               	movlw	255
  6466  001C52  0100               	movlb	0	; () banked
  6467  001C54  59DA               	subwfb	(_motorInput+1)& (0+255),w,b
  6468  001C56  B0D8               	btfsc	status,0,c
  6469  001C58  D006               	goto	i2l3562
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;PID.c: 60: motorInput = -255;
  6473  001C5A  0EFF               	movlw	255
  6474  001C5C  0100               	movlb	0	; () banked
  6475  001C5E  6FDA               	movwf	(_motorInput+1)& (0+255),b
  6476  001C60  0E01               	movlw	1
  6477  001C62  6FD9               	movwf	_motorInput& (0+255),b
  6478                           
  6479                           ; BSR set to: 0
  6480  001C64  D000               	goto	i2l3562
  6481  001C66                     i2l3562:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;PID.c: 62: prevErr = error;
  6485  001C66  C0D0  F0D6         	movff	_error,_prevErr
  6486  001C6A  C0D1  F0D7         	movff	_error+1,_prevErr+1
  6487  001C6E  C0D2  F0D8         	movff	_error+2,_prevErr+2
  6488                           
  6489                           ; BSR set to: 0
  6490  001C72  0012               	return		;funcret
  6491  001C74                     __end_of_calculatePID:
  6492                           	opt stack 0
  6493                           pclatu	equ	0xFFB
  6494                           pclath	equ	0xFFA
  6495                           tblptru	equ	0xFF8
  6496                           tblptrh	equ	0xFF7
  6497                           tblptrl	equ	0xFF6
  6498                           tablat	equ	0xFF5
  6499                           prodh	equ	0xFF4
  6500                           prodl	equ	0xFF3
  6501                           intcon	equ	0xFF2
  6502                           intcon2	equ	0xFF1
  6503                           indf0	equ	0xFEF
  6504                           postinc0	equ	0xFEE
  6505                           fsr0h	equ	0xFEA
  6506                           fsr0l	equ	0xFE9
  6507                           wreg	equ	0xFE8
  6508                           indf1	equ	0xFE7
  6509                           fsr1h	equ	0xFE2
  6510                           fsr1l	equ	0xFE1
  6511                           bsr	equ	0xFE0
  6512                           indf2	equ	0xFDF
  6513                           postinc2	equ	0xFDE
  6514                           postdec2	equ	0xFDD
  6515                           fsr2h	equ	0xFDA
  6516                           fsr2l	equ	0xFD9
  6517                           status	equ	0xFD8
  6518                           
  6519 ;; *************** function i2___ftneg *****************
  6520 ;; Defined at:
  6521 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  f1              3    0[BANK0 ] float 
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  3    0[BANK0 ] float 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6535 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;Total ram usage:        3 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_calculatePID
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text36
  6549  00323A                     __ptext36:
  6550                           	opt stack 0
  6551  00323A                     i2___ftneg:
  6552                           	opt stack 16
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;incstack = 0
  6556  00323A  0100               	movlb	0	; () banked
  6557  00323C  5160               	movf	i2___ftneg@f1& (0+255),w,b
  6558  00323E  0100               	movlb	0	; () banked
  6559  003240  1161               	iorwf	(i2___ftneg@f1+1)& (0+255),w,b
  6560  003242  0100               	movlb	0	; () banked
  6561  003244  1162               	iorwf	(i2___ftneg@f1+2)& (0+255),w,b
  6562  003246  B4D8               	btfsc	status,2,c
  6563  003248  D009               	goto	i2l966
  6564                           
  6565                           ; BSR set to: 0
  6566  00324A  0E00               	movlw	0
  6567  00324C  0100               	movlb	0	; () banked
  6568  00324E  1B60               	xorwf	i2___ftneg@f1& (0+255),f,b
  6569  003250  0E00               	movlw	0
  6570  003252  0100               	movlb	0	; () banked
  6571  003254  1B61               	xorwf	(i2___ftneg@f1+1)& (0+255),f,b
  6572  003256  0E80               	movlw	128
  6573  003258  0100               	movlb	0	; () banked
  6574  00325A  1B62               	xorwf	(i2___ftneg@f1+2)& (0+255),f,b
  6575  00325C                     i2l966:
  6576                           
  6577                           ; BSR set to: 0
  6578  00325C  C060  F060         	movff	i2___ftneg@f1,?i2___ftneg
  6579  003260  C061  F061         	movff	i2___ftneg@f1+1,?i2___ftneg+1
  6580  003264  C062  F062         	movff	i2___ftneg@f1+2,?i2___ftneg+2
  6581                           
  6582                           ; BSR set to: 0
  6583  003268  0012               	return		;funcret
  6584  00326A                     __end_ofi2___ftneg:
  6585                           	opt stack 0
  6586                           pclatu	equ	0xFFB
  6587                           pclath	equ	0xFFA
  6588                           tblptru	equ	0xFF8
  6589                           tblptrh	equ	0xFF7
  6590                           tblptrl	equ	0xFF6
  6591                           tablat	equ	0xFF5
  6592                           prodh	equ	0xFF4
  6593                           prodl	equ	0xFF3
  6594                           intcon	equ	0xFF2
  6595                           intcon2	equ	0xFF1
  6596                           indf0	equ	0xFEF
  6597                           postinc0	equ	0xFEE
  6598                           fsr0h	equ	0xFEA
  6599                           fsr0l	equ	0xFE9
  6600                           wreg	equ	0xFE8
  6601                           indf1	equ	0xFE7
  6602                           fsr1h	equ	0xFE2
  6603                           fsr1l	equ	0xFE1
  6604                           bsr	equ	0xFE0
  6605                           indf2	equ	0xFDF
  6606                           postinc2	equ	0xFDE
  6607                           postdec2	equ	0xFDD
  6608                           fsr2h	equ	0xFDA
  6609                           fsr2l	equ	0xFD9
  6610                           status	equ	0xFD8
  6611                           
  6612 ;; *************** function i2___ftge *****************
  6613 ;; Defined at:
  6614 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  ff1             3    0[BANK0 ] float 
  6617 ;;  ff2             3    3[BANK0 ] float 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;		None               void
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6629 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;Total ram usage:        9 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_calculatePID
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text37
  6643  002868                     __ptext37:
  6644                           	opt stack 0
  6645  002868                     i2___ftge:
  6646                           	opt stack 16
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;incstack = 0
  6650  002868  0100               	movlb	0	; () banked
  6651  00286A  AF62               	btfss	(i2___ftge@ff1+2)& (0+255),7,b
  6652  00286C  D01E               	goto	i2l3424
  6653                           
  6654                           ; BSR set to: 0
  6655  00286E  C060  F066         	movff	i2___ftge@ff1,??i2___ftge
  6656  002872  C061  F067         	movff	i2___ftge@ff1+1,??i2___ftge+1
  6657  002876  C062  F068         	movff	i2___ftge@ff1+2,??i2___ftge+2
  6658  00287A  0100               	movlb	0	; () banked
  6659  00287C  1F66               	comf	??i2___ftge& (0+255),f,b
  6660  00287E  1F67               	comf	(??i2___ftge+1)& (0+255),f,b
  6661  002880  1F68               	comf	(??i2___ftge+2)& (0+255),f,b
  6662  002882  2B66               	incf	??i2___ftge& (0+255),f,b
  6663  002884  0E00               	movlw	0
  6664  002886  2367               	addwfc	(??i2___ftge+1)& (0+255),f,b
  6665  002888  2368               	addwfc	(??i2___ftge+2)& (0+255),f,b
  6666  00288A  0E00               	movlw	0
  6667  00288C  0100               	movlb	0	; () banked
  6668  00288E  2566               	addwf	??i2___ftge& (0+255),w,b
  6669  002890  0100               	movlb	0	; () banked
  6670  002892  6F60               	movwf	i2___ftge@ff1& (0+255),b
  6671  002894  0E00               	movlw	0
  6672  002896  0100               	movlb	0	; () banked
  6673  002898  2167               	addwfc	(??i2___ftge+1)& (0+255),w,b
  6674  00289A  0100               	movlb	0	; () banked
  6675  00289C  6F61               	movwf	(i2___ftge@ff1+1)& (0+255),b
  6676  00289E  0E80               	movlw	128
  6677  0028A0  0100               	movlb	0	; () banked
  6678  0028A2  2168               	addwfc	(??i2___ftge+2)& (0+255),w,b
  6679  0028A4  0100               	movlb	0	; () banked
  6680  0028A6  6F62               	movwf	(i2___ftge@ff1+2)& (0+255),b
  6681  0028A8  D000               	goto	i2l3424
  6682  0028AA                     i2l3424:
  6683                           
  6684                           ; BSR set to: 0
  6685  0028AA  0100               	movlb	0	; () banked
  6686  0028AC  AF65               	btfss	(i2___ftge@ff2+2)& (0+255),7,b
  6687  0028AE  D01E               	goto	i2l3428
  6688                           
  6689                           ; BSR set to: 0
  6690  0028B0  C063  F066         	movff	i2___ftge@ff2,??i2___ftge
  6691  0028B4  C064  F067         	movff	i2___ftge@ff2+1,??i2___ftge+1
  6692  0028B8  C065  F068         	movff	i2___ftge@ff2+2,??i2___ftge+2
  6693  0028BC  0100               	movlb	0	; () banked
  6694  0028BE  1F66               	comf	??i2___ftge& (0+255),f,b
  6695  0028C0  1F67               	comf	(??i2___ftge+1)& (0+255),f,b
  6696  0028C2  1F68               	comf	(??i2___ftge+2)& (0+255),f,b
  6697  0028C4  2B66               	incf	??i2___ftge& (0+255),f,b
  6698  0028C6  0E00               	movlw	0
  6699  0028C8  2367               	addwfc	(??i2___ftge+1)& (0+255),f,b
  6700  0028CA  2368               	addwfc	(??i2___ftge+2)& (0+255),f,b
  6701  0028CC  0E00               	movlw	0
  6702  0028CE  0100               	movlb	0	; () banked
  6703  0028D0  2566               	addwf	??i2___ftge& (0+255),w,b
  6704  0028D2  0100               	movlb	0	; () banked
  6705  0028D4  6F63               	movwf	i2___ftge@ff2& (0+255),b
  6706  0028D6  0E00               	movlw	0
  6707  0028D8  0100               	movlb	0	; () banked
  6708  0028DA  2167               	addwfc	(??i2___ftge+1)& (0+255),w,b
  6709  0028DC  0100               	movlb	0	; () banked
  6710  0028DE  6F64               	movwf	(i2___ftge@ff2+1)& (0+255),b
  6711  0028E0  0E80               	movlw	128
  6712  0028E2  0100               	movlb	0	; () banked
  6713  0028E4  2168               	addwfc	(??i2___ftge+2)& (0+255),w,b
  6714  0028E6  0100               	movlb	0	; () banked
  6715  0028E8  6F65               	movwf	(i2___ftge@ff2+2)& (0+255),b
  6716  0028EA  D000               	goto	i2l3428
  6717  0028EC                     i2l3428:
  6718                           
  6719                           ; BSR set to: 0
  6720  0028EC  0E00               	movlw	0
  6721  0028EE  0100               	movlb	0	; () banked
  6722  0028F0  1B60               	xorwf	i2___ftge@ff1& (0+255),f,b
  6723  0028F2  0E00               	movlw	0
  6724  0028F4  0100               	movlb	0	; () banked
  6725  0028F6  1B61               	xorwf	(i2___ftge@ff1+1)& (0+255),f,b
  6726  0028F8  0E80               	movlw	128
  6727  0028FA  0100               	movlb	0	; () banked
  6728  0028FC  1B62               	xorwf	(i2___ftge@ff1+2)& (0+255),f,b
  6729                           
  6730                           ; BSR set to: 0
  6731  0028FE  0E00               	movlw	0
  6732  002900  0100               	movlb	0	; () banked
  6733  002902  1B63               	xorwf	i2___ftge@ff2& (0+255),f,b
  6734  002904  0E00               	movlw	0
  6735  002906  0100               	movlb	0	; () banked
  6736  002908  1B64               	xorwf	(i2___ftge@ff2+1)& (0+255),f,b
  6737  00290A  0E80               	movlw	128
  6738  00290C  0100               	movlb	0	; () banked
  6739  00290E  1B65               	xorwf	(i2___ftge@ff2+2)& (0+255),f,b
  6740  002910  0100               	movlb	0	; () banked
  6741  002912  5163               	movf	i2___ftge@ff2& (0+255),w,b
  6742  002914  0100               	movlb	0	; () banked
  6743  002916  5D60               	subwf	i2___ftge@ff1& (0+255),w,b
  6744  002918  0100               	movlb	0	; () banked
  6745  00291A  5164               	movf	(i2___ftge@ff2+1)& (0+255),w,b
  6746  00291C  0100               	movlb	0	; () banked
  6747  00291E  5961               	subwfb	(i2___ftge@ff1+1)& (0+255),w,b
  6748  002920  0100               	movlb	0	; () banked
  6749  002922  5165               	movf	(i2___ftge@ff2+2)& (0+255),w,b
  6750  002924  0100               	movlb	0	; () banked
  6751  002926  5962               	subwfb	(i2___ftge@ff1+2)& (0+255),w,b
  6752  002928  B0D8               	btfsc	status,0,c
  6753  00292A  D002               	goto	i2l3434
  6754                           
  6755                           ; BSR set to: 0
  6756  00292C  90D8               	bcf	status,0,c
  6757  00292E  D002               	goto	i2l950
  6758  002930                     i2l3434:
  6759                           
  6760                           ; BSR set to: 0
  6761  002930  80D8               	bsf	status,0,c
  6762                           
  6763                           ; BSR set to: 0
  6764  002932  D000               	goto	i2l950
  6765  002934                     i2l950:
  6766                           
  6767                           ; BSR set to: 0
  6768  002934  0012               	return		;funcret
  6769  002936                     __end_ofi2___ftge:
  6770                           	opt stack 0
  6771                           pclatu	equ	0xFFB
  6772                           pclath	equ	0xFFA
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           intcon2	equ	0xFF1
  6781                           indf0	equ	0xFEF
  6782                           postinc0	equ	0xFEE
  6783                           fsr0h	equ	0xFEA
  6784                           fsr0l	equ	0xFE9
  6785                           wreg	equ	0xFE8
  6786                           indf1	equ	0xFE7
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           bsr	equ	0xFE0
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           postdec2	equ	0xFDD
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           
  6797 ;; *************** function i2___ftdiv *****************
  6798 ;; Defined at:
  6799 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  f1              3    8[BANK0 ] float 
  6802 ;;  f2              3   11[BANK0 ] float 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  __ftdiv         3   18[BANK0 ] float 
  6805 ;;  __ftdiv         1   22[BANK0 ] unsigned char 
  6806 ;;  __ftdiv         1   21[BANK0 ] unsigned char 
  6807 ;;  __ftdiv         1   17[BANK0 ] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  3    8[BANK0 ] float 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:       15 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    1
  6824 ;; This function calls:
  6825 ;;		i2___ftpack
  6826 ;; This function is called by:
  6827 ;;		_calculatePID
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text38
  6832  0021BE                     __ptext38:
  6833                           	opt stack 0
  6834  0021BE                     i2___ftdiv:
  6835                           	opt stack 15
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;incstack = 0
  6839  0021BE  C06A  F06E         	movff	i2___ftdiv@f1+2,??i2___ftdiv
  6840  0021C2  0100               	movlb	0	; () banked
  6841  0021C4  6B6F               	clrf	(??i2___ftdiv+1)& (0+255),b
  6842  0021C6  6B70               	clrf	(??i2___ftdiv+2)& (0+255),b
  6843  0021C8  0100               	movlb	0	; () banked
  6844  0021CA  3569               	rlcf	(i2___ftdiv@f1+1)& (0+255),w,b
  6845  0021CC  0100               	movlb	0	; () banked
  6846  0021CE  376E               	rlcf	??i2___ftdiv& (0+255),f,b
  6847  0021D0  E301               	bnc	u343_41
  6848  0021D2  816F               	bsf	(??i2___ftdiv+1)& (0+255),0,b
  6849  0021D4                     u343_41:
  6850  0021D4  0100               	movlb	0	; () banked
  6851  0021D6  516E               	movf	??i2___ftdiv& (0+255),w,b
  6852  0021D8  0100               	movlb	0	; () banked
  6853  0021DA  6F75               	movwf	i2___ftdiv@exp& (0+255),b
  6854  0021DC  0100               	movlb	0	; () banked
  6855  0021DE  5175               	movf	i2___ftdiv@exp& (0+255),w,b
  6856  0021E0  A4D8               	btfss	status,2,c
  6857  0021E2  D002               	goto	i2l3380
  6858  0021E4  D014               	goto	i2l3382
  6859                           
  6860                           ; BSR set to: 0
  6861                           
  6862                           ; BSR set to: 0
  6863  0021E6  D08B               	goto	i2l941
  6864  0021E8                     i2l3380:
  6865                           
  6866                           ; BSR set to: 0
  6867  0021E8  C06D  F06E         	movff	i2___ftdiv@f2+2,??i2___ftdiv
  6868  0021EC  0100               	movlb	0	; () banked
  6869  0021EE  6B6F               	clrf	(??i2___ftdiv+1)& (0+255),b
  6870  0021F0  6B70               	clrf	(??i2___ftdiv+2)& (0+255),b
  6871  0021F2  0100               	movlb	0	; () banked
  6872  0021F4  356C               	rlcf	(i2___ftdiv@f2+1)& (0+255),w,b
  6873  0021F6  0100               	movlb	0	; () banked
  6874  0021F8  376E               	rlcf	??i2___ftdiv& (0+255),f,b
  6875  0021FA  E301               	bnc	u345_41
  6876  0021FC  816F               	bsf	(??i2___ftdiv+1)& (0+255),0,b
  6877  0021FE                     u345_41:
  6878  0021FE  0100               	movlb	0	; () banked
  6879  002200  516E               	movf	??i2___ftdiv& (0+255),w,b
  6880  002202  0100               	movlb	0	; () banked
  6881  002204  6F76               	movwf	i2___ftdiv@sign& (0+255),b
  6882  002206  0100               	movlb	0	; () banked
  6883  002208  5176               	movf	i2___ftdiv@sign& (0+255),w,b
  6884  00220A  A4D8               	btfss	status,2,c
  6885  00220C  D00A               	goto	i2l3386
  6886  00220E                     i2l3382:
  6887                           
  6888                           ; BSR set to: 0
  6889  00220E  0E00               	movlw	0
  6890  002210  0100               	movlb	0	; () banked
  6891  002212  6F68               	movwf	?i2___ftdiv& (0+255),b
  6892  002214  0E00               	movlw	0
  6893  002216  0100               	movlb	0	; () banked
  6894  002218  6F69               	movwf	(?i2___ftdiv+1)& (0+255),b
  6895  00221A  0E00               	movlw	0
  6896  00221C  0100               	movlb	0	; () banked
  6897  00221E  6F6A               	movwf	(?i2___ftdiv+2)& (0+255),b
  6898                           
  6899                           ; BSR set to: 0
  6900  002220  D06E               	goto	i2l941
  6901  002222                     i2l3386:
  6902                           
  6903                           ; BSR set to: 0
  6904  002222  0E00               	movlw	0
  6905  002224  0100               	movlb	0	; () banked
  6906  002226  6F72               	movwf	i2___ftdiv@f3& (0+255),b
  6907  002228  0E00               	movlw	0
  6908  00222A  0100               	movlb	0	; () banked
  6909  00222C  6F73               	movwf	(i2___ftdiv@f3+1)& (0+255),b
  6910  00222E  0E00               	movlw	0
  6911  002230  0100               	movlb	0	; () banked
  6912  002232  6F74               	movwf	(i2___ftdiv@f3+2)& (0+255),b
  6913                           
  6914                           ; BSR set to: 0
  6915  002234  0100               	movlb	0	; () banked
  6916  002236  5176               	movf	i2___ftdiv@sign& (0+255),w,b
  6917  002238  0F89               	addlw	137
  6918  00223A  0100               	movlb	0	; () banked
  6919  00223C  5F75               	subwf	i2___ftdiv@exp& (0+255),f,b
  6920                           
  6921                           ; BSR set to: 0
  6922  00223E  C06A  F076         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
  6923                           
  6924                           ; BSR set to: 0
  6925  002242  0100               	movlb	0	; () banked
  6926  002244  516D               	movf	(i2___ftdiv@f2+2)& (0+255),w,b
  6927  002246  0100               	movlb	0	; () banked
  6928  002248  1B76               	xorwf	i2___ftdiv@sign& (0+255),f,b
  6929                           
  6930                           ; BSR set to: 0
  6931  00224A  0E80               	movlw	128
  6932  00224C  0100               	movlb	0	; () banked
  6933  00224E  1776               	andwf	i2___ftdiv@sign& (0+255),f,b
  6934                           
  6935                           ; BSR set to: 0
  6936  002250  0100               	movlb	0	; () banked
  6937  002252  8F69               	bsf	(i2___ftdiv@f1+1)& (0+255),7,b
  6938                           
  6939                           ; BSR set to: 0
  6940  002254  0EFF               	movlw	255
  6941  002256  0100               	movlb	0	; () banked
  6942  002258  1768               	andwf	i2___ftdiv@f1& (0+255),f,b
  6943  00225A  0EFF               	movlw	255
  6944  00225C  0100               	movlb	0	; () banked
  6945  00225E  1769               	andwf	(i2___ftdiv@f1+1)& (0+255),f,b
  6946  002260  0E00               	movlw	0
  6947  002262  0100               	movlb	0	; () banked
  6948  002264  176A               	andwf	(i2___ftdiv@f1+2)& (0+255),f,b
  6949                           
  6950                           ; BSR set to: 0
  6951  002266  0100               	movlb	0	; () banked
  6952  002268  8F6C               	bsf	(i2___ftdiv@f2+1)& (0+255),7,b
  6953                           
  6954                           ; BSR set to: 0
  6955  00226A  0EFF               	movlw	255
  6956  00226C  0100               	movlb	0	; () banked
  6957  00226E  176B               	andwf	i2___ftdiv@f2& (0+255),f,b
  6958  002270  0EFF               	movlw	255
  6959  002272  0100               	movlb	0	; () banked
  6960  002274  176C               	andwf	(i2___ftdiv@f2+1)& (0+255),f,b
  6961  002276  0E00               	movlw	0
  6962  002278  0100               	movlb	0	; () banked
  6963  00227A  176D               	andwf	(i2___ftdiv@f2+2)& (0+255),f,b
  6964                           
  6965                           ; BSR set to: 0
  6966  00227C  0E18               	movlw	24
  6967  00227E  0100               	movlb	0	; () banked
  6968  002280  6F71               	movwf	i2___ftdiv@cntr& (0+255),b
  6969  002282  D000               	goto	i2l3406
  6970  002284                     i2l3406:
  6971                           
  6972                           ; BSR set to: 0
  6973  002284  0100               	movlb	0	; () banked
  6974  002286  90D8               	bcf	status,0,c
  6975  002288  3772               	rlcf	i2___ftdiv@f3& (0+255),f,b
  6976  00228A  3773               	rlcf	(i2___ftdiv@f3+1)& (0+255),f,b
  6977  00228C  3774               	rlcf	(i2___ftdiv@f3+2)& (0+255),f,b
  6978                           
  6979                           ; BSR set to: 0
  6980  00228E  0100               	movlb	0	; () banked
  6981  002290  516B               	movf	i2___ftdiv@f2& (0+255),w,b
  6982  002292  0100               	movlb	0	; () banked
  6983  002294  5D68               	subwf	i2___ftdiv@f1& (0+255),w,b
  6984  002296  0100               	movlb	0	; () banked
  6985  002298  516C               	movf	(i2___ftdiv@f2+1)& (0+255),w,b
  6986  00229A  0100               	movlb	0	; () banked
  6987  00229C  5969               	subwfb	(i2___ftdiv@f1+1)& (0+255),w,b
  6988  00229E  0100               	movlb	0	; () banked
  6989  0022A0  516D               	movf	(i2___ftdiv@f2+2)& (0+255),w,b
  6990  0022A2  0100               	movlb	0	; () banked
  6991  0022A4  596A               	subwfb	(i2___ftdiv@f1+2)& (0+255),w,b
  6992  0022A6  A0D8               	btfss	status,0,c
  6993  0022A8  D00E               	goto	i2l944
  6994                           
  6995                           ; BSR set to: 0
  6996  0022AA  0100               	movlb	0	; () banked
  6997  0022AC  516B               	movf	i2___ftdiv@f2& (0+255),w,b
  6998  0022AE  0100               	movlb	0	; () banked
  6999  0022B0  5F68               	subwf	i2___ftdiv@f1& (0+255),f,b
  7000  0022B2  0100               	movlb	0	; () banked
  7001  0022B4  516C               	movf	(i2___ftdiv@f2+1)& (0+255),w,b
  7002  0022B6  0100               	movlb	0	; () banked
  7003  0022B8  5B69               	subwfb	(i2___ftdiv@f1+1)& (0+255),f,b
  7004  0022BA  0100               	movlb	0	; () banked
  7005  0022BC  516D               	movf	(i2___ftdiv@f2+2)& (0+255),w,b
  7006  0022BE  0100               	movlb	0	; () banked
  7007  0022C0  5B6A               	subwfb	(i2___ftdiv@f1+2)& (0+255),f,b
  7008                           
  7009                           ; BSR set to: 0
  7010  0022C2  0100               	movlb	0	; () banked
  7011  0022C4  8172               	bsf	i2___ftdiv@f3& (0+255),0,b
  7012  0022C6                     i2l944:
  7013                           
  7014                           ; BSR set to: 0
  7015  0022C6  0100               	movlb	0	; () banked
  7016  0022C8  90D8               	bcf	status,0,c
  7017  0022CA  3768               	rlcf	i2___ftdiv@f1& (0+255),f,b
  7018  0022CC  3769               	rlcf	(i2___ftdiv@f1+1)& (0+255),f,b
  7019  0022CE  376A               	rlcf	(i2___ftdiv@f1+2)& (0+255),f,b
  7020                           
  7021                           ; BSR set to: 0
  7022  0022D0  0100               	movlb	0	; () banked
  7023  0022D2  2F71               	decfsz	i2___ftdiv@cntr& (0+255),f,b
  7024  0022D4  D7D7               	goto	i2l3406
  7025  0022D6  D000               	goto	i2l3416
  7026  0022D8                     i2l3416:
  7027                           
  7028                           ; BSR set to: 0
  7029  0022D8  C072  F060         	movff	i2___ftdiv@f3,i2___ftpack@arg
  7030  0022DC  C073  F061         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
  7031  0022E0  C074  F062         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
  7032  0022E4  C075  F063         	movff	i2___ftdiv@exp,i2___ftpack@exp
  7033  0022E8  C076  F064         	movff	i2___ftdiv@sign,i2___ftpack@sign
  7034  0022EC  ECB7  F012         	call	i2___ftpack	;wreg free
  7035  0022F0  C060  F068         	movff	?i2___ftpack,?i2___ftdiv
  7036  0022F4  C061  F069         	movff	?i2___ftpack+1,?i2___ftdiv+1
  7037  0022F8  C062  F06A         	movff	?i2___ftpack+2,?i2___ftdiv+2
  7038  0022FC  D000               	goto	i2l941
  7039  0022FE                     i2l941:
  7040  0022FE  0012               	return		;funcret
  7041  002300                     __end_ofi2___ftdiv:
  7042                           	opt stack 0
  7043                           pclatu	equ	0xFFB
  7044                           pclath	equ	0xFFA
  7045                           tblptru	equ	0xFF8
  7046                           tblptrh	equ	0xFF7
  7047                           tblptrl	equ	0xFF6
  7048                           tablat	equ	0xFF5
  7049                           prodh	equ	0xFF4
  7050                           prodl	equ	0xFF3
  7051                           intcon	equ	0xFF2
  7052                           intcon2	equ	0xFF1
  7053                           indf0	equ	0xFEF
  7054                           postinc0	equ	0xFEE
  7055                           fsr0h	equ	0xFEA
  7056                           fsr0l	equ	0xFE9
  7057                           wreg	equ	0xFE8
  7058                           indf1	equ	0xFE7
  7059                           fsr1h	equ	0xFE2
  7060                           fsr1l	equ	0xFE1
  7061                           bsr	equ	0xFE0
  7062                           indf2	equ	0xFDF
  7063                           postinc2	equ	0xFDE
  7064                           postdec2	equ	0xFDD
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8
  7068                           
  7069 ;; *************** function ___ftsub *****************
  7070 ;; Defined at:
  7071 ;;		line 20 in file "/opt/microchip/xc8/v1.34/sources/common/ftsub.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  f1              3   50[BANK0 ] float 
  7074 ;;  f2              3   53[BANK0 ] float 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;		None
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  3   50[BANK0 ] float 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7086 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7090 ;;Total ram usage:        6 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    2
  7093 ;; This function calls:
  7094 ;;		___ftadd
  7095 ;; This function is called by:
  7096 ;;		_calculatePID
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text39
  7101  002FD8                     __ptext39:
  7102                           	opt stack 0
  7103  002FD8                     ___ftsub:
  7104                           	opt stack 14
  7105                           
  7106                           ;incstack = 0
  7107  002FD8  0100               	movlb	0	; () banked
  7108  002FDA  5195               	movf	___ftsub@f2& (0+255),w,b
  7109  002FDC  0100               	movlb	0	; () banked
  7110  002FDE  1196               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7111  002FE0  0100               	movlb	0	; () banked
  7112  002FE2  1197               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7113  002FE4  B4D8               	btfsc	status,2,c
  7114  002FE6  D00A               	goto	i2l3274
  7115                           
  7116                           ; BSR set to: 0
  7117  002FE8  0E00               	movlw	0
  7118  002FEA  0100               	movlb	0	; () banked
  7119  002FEC  1B95               	xorwf	___ftsub@f2& (0+255),f,b
  7120  002FEE  0E00               	movlw	0
  7121  002FF0  0100               	movlb	0	; () banked
  7122  002FF2  1B96               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7123  002FF4  0E80               	movlw	128
  7124  002FF6  0100               	movlb	0	; () banked
  7125  002FF8  1B97               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7126  002FFA  D000               	goto	i2l3274
  7127  002FFC                     i2l3274:
  7128                           
  7129                           ; BSR set to: 0
  7130  002FFC  C092  F086         	movff	___ftsub@f1,___ftadd@f1
  7131  003000  C093  F087         	movff	___ftsub@f1+1,___ftadd@f1+1
  7132  003004  C094  F088         	movff	___ftsub@f1+2,___ftadd@f1+2
  7133  003008  C095  F089         	movff	___ftsub@f2,___ftadd@f2
  7134  00300C  C096  F08A         	movff	___ftsub@f2+1,___ftadd@f2+1
  7135  003010  C097  F08B         	movff	___ftsub@f2+2,___ftadd@f2+2
  7136  003014  EC3A  F00E         	call	___ftadd	;wreg free
  7137  003018  C086  F092         	movff	?___ftadd,?___ftsub
  7138  00301C  C087  F093         	movff	?___ftadd+1,?___ftsub+1
  7139  003020  C088  F094         	movff	?___ftadd+2,?___ftsub+2
  7140  003024  D000               	goto	i2l973
  7141  003026                     i2l973:
  7142  003026  0012               	return		;funcret
  7143  003028                     __end_of___ftsub:
  7144                           	opt stack 0
  7145                           pclatu	equ	0xFFB
  7146                           pclath	equ	0xFFA
  7147                           tblptru	equ	0xFF8
  7148                           tblptrh	equ	0xFF7
  7149                           tblptrl	equ	0xFF6
  7150                           tablat	equ	0xFF5
  7151                           prodh	equ	0xFF4
  7152                           prodl	equ	0xFF3
  7153                           intcon	equ	0xFF2
  7154                           intcon2	equ	0xFF1
  7155                           indf0	equ	0xFEF
  7156                           postinc0	equ	0xFEE
  7157                           fsr0h	equ	0xFEA
  7158                           fsr0l	equ	0xFE9
  7159                           wreg	equ	0xFE8
  7160                           indf1	equ	0xFE7
  7161                           fsr1h	equ	0xFE2
  7162                           fsr1l	equ	0xFE1
  7163                           bsr	equ	0xFE0
  7164                           indf2	equ	0xFDF
  7165                           postinc2	equ	0xFDE
  7166                           postdec2	equ	0xFDD
  7167                           fsr2h	equ	0xFDA
  7168                           fsr2l	equ	0xFD9
  7169                           status	equ	0xFD8
  7170                           
  7171 ;; *************** function ___ftadd *****************
  7172 ;; Defined at:
  7173 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  f1              3   38[BANK0 ] float 
  7176 ;;  f2              3   41[BANK0 ] float 
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;  exp1            1   49[BANK0 ] unsigned char 
  7179 ;;  exp2            1   48[BANK0 ] unsigned char 
  7180 ;;  sign            1   47[BANK0 ] unsigned char 
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  3   38[BANK0 ] float 
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7190 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7192 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;Total ram usage:       12 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:    1
  7197 ;; This function calls:
  7198 ;;		i2___ftpack
  7199 ;; This function is called by:
  7200 ;;		_calculatePID
  7201 ;;		___ftsub
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           	psect	text40
  7206  001C74                     __ptext40:
  7207                           	opt stack 0
  7208  001C74                     ___ftadd:
  7209                           	opt stack 14
  7210                           
  7211                           ;incstack = 0
  7212  001C74  C088  F08C         	movff	___ftadd@f1+2,??___ftadd
  7213  001C78  0100               	movlb	0	; () banked
  7214  001C7A  6B8D               	clrf	(??___ftadd+1)& (0+255),b
  7215  001C7C  6B8E               	clrf	(??___ftadd+2)& (0+255),b
  7216  001C7E  0100               	movlb	0	; () banked
  7217  001C80  3587               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7218  001C82  0100               	movlb	0	; () banked
  7219  001C84  378C               	rlcf	??___ftadd& (0+255),f,b
  7220  001C86  E301               	bnc	u247_41
  7221  001C88  818D               	bsf	(??___ftadd+1)& (0+255),0,b
  7222  001C8A                     u247_41:
  7223  001C8A  0100               	movlb	0	; () banked
  7224  001C8C  518C               	movf	??___ftadd& (0+255),w,b
  7225  001C8E  0100               	movlb	0	; () banked
  7226  001C90  6F91               	movwf	___ftadd@exp1& (0+255),b
  7227  001C92  C08B  F08C         	movff	___ftadd@f2+2,??___ftadd
  7228  001C96  0100               	movlb	0	; () banked
  7229  001C98  6B8D               	clrf	(??___ftadd+1)& (0+255),b
  7230  001C9A  6B8E               	clrf	(??___ftadd+2)& (0+255),b
  7231  001C9C  0100               	movlb	0	; () banked
  7232  001C9E  358A               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7233  001CA0  0100               	movlb	0	; () banked
  7234  001CA2  378C               	rlcf	??___ftadd& (0+255),f,b
  7235  001CA4  E301               	bnc	u248_41
  7236  001CA6  818D               	bsf	(??___ftadd+1)& (0+255),0,b
  7237  001CA8                     u248_41:
  7238  001CA8  0100               	movlb	0	; () banked
  7239  001CAA  518C               	movf	??___ftadd& (0+255),w,b
  7240  001CAC  0100               	movlb	0	; () banked
  7241  001CAE  6F90               	movwf	___ftadd@exp2& (0+255),b
  7242                           
  7243                           ; BSR set to: 0
  7244  001CB0  0100               	movlb	0	; () banked
  7245  001CB2  5191               	movf	___ftadd@exp1& (0+255),w,b
  7246  001CB4  0100               	movlb	0	; () banked
  7247  001CB6  B4D8               	btfsc	status,2,c
  7248  001CB8  D011               	goto	i2l909
  7249                           
  7250                           ; BSR set to: 0
  7251  001CBA  0100               	movlb	0	; () banked
  7252  001CBC  5190               	movf	___ftadd@exp2& (0+255),w,b
  7253  001CBE  0100               	movlb	0	; () banked
  7254  001CC0  5D91               	subwf	___ftadd@exp1& (0+255),w,b
  7255  001CC2  B0D8               	btfsc	status,0,c
  7256  001CC4  D012               	goto	i2l2816
  7257                           
  7258                           ; BSR set to: 0
  7259  001CC6  0100               	movlb	0	; () banked
  7260  001CC8  5191               	movf	___ftadd@exp1& (0+255),w,b
  7261  001CCA  0800               	sublw	0
  7262  001CCC  0100               	movlb	0	; () banked
  7263  001CCE  2590               	addwf	___ftadd@exp2& (0+255),w,b
  7264  001CD0  0100               	movlb	0	; () banked
  7265  001CD2  6F8C               	movwf	??___ftadd& (0+255),b
  7266  001CD4  0E18               	movlw	24
  7267  001CD6  0100               	movlb	0	; () banked
  7268  001CD8  658C               	cpfsgt	??___ftadd& (0+255),b
  7269  001CDA  D007               	goto	i2l2816
  7270  001CDC                     i2l909:
  7271                           
  7272                           ; BSR set to: 0
  7273  001CDC  C089  F086         	movff	___ftadd@f2,?___ftadd
  7274  001CE0  C08A  F087         	movff	___ftadd@f2+1,?___ftadd+1
  7275  001CE4  C08B  F088         	movff	___ftadd@f2+2,?___ftadd+2
  7276  001CE8  D103               	goto	i2l910
  7277  001CEA                     i2l2816:
  7278                           
  7279                           ; BSR set to: 0
  7280  001CEA  0100               	movlb	0	; () banked
  7281  001CEC  5190               	movf	___ftadd@exp2& (0+255),w,b
  7282  001CEE  0100               	movlb	0	; () banked
  7283  001CF0  B4D8               	btfsc	status,2,c
  7284  001CF2  D011               	goto	i2l913
  7285                           
  7286                           ; BSR set to: 0
  7287  001CF4  0100               	movlb	0	; () banked
  7288  001CF6  5191               	movf	___ftadd@exp1& (0+255),w,b
  7289  001CF8  0100               	movlb	0	; () banked
  7290  001CFA  5D90               	subwf	___ftadd@exp2& (0+255),w,b
  7291  001CFC  B0D8               	btfsc	status,0,c
  7292  001CFE  D012               	goto	i2l2822
  7293                           
  7294                           ; BSR set to: 0
  7295  001D00  0100               	movlb	0	; () banked
  7296  001D02  5190               	movf	___ftadd@exp2& (0+255),w,b
  7297  001D04  0800               	sublw	0
  7298  001D06  0100               	movlb	0	; () banked
  7299  001D08  2591               	addwf	___ftadd@exp1& (0+255),w,b
  7300  001D0A  0100               	movlb	0	; () banked
  7301  001D0C  6F8C               	movwf	??___ftadd& (0+255),b
  7302  001D0E  0E18               	movlw	24
  7303  001D10  0100               	movlb	0	; () banked
  7304  001D12  658C               	cpfsgt	??___ftadd& (0+255),b
  7305  001D14  D007               	goto	i2l2822
  7306  001D16                     i2l913:
  7307                           
  7308                           ; BSR set to: 0
  7309  001D16  C086  F086         	movff	___ftadd@f1,?___ftadd
  7310  001D1A  C087  F087         	movff	___ftadd@f1+1,?___ftadd+1
  7311  001D1E  C088  F088         	movff	___ftadd@f1+2,?___ftadd+2
  7312  001D22  D0E6               	goto	i2l910
  7313  001D24                     i2l2822:
  7314                           
  7315                           ; BSR set to: 0
  7316  001D24  0E06               	movlw	6
  7317  001D26  0100               	movlb	0	; () banked
  7318  001D28  6F8F               	movwf	___ftadd@sign& (0+255),b
  7319                           
  7320                           ; BSR set to: 0
  7321  001D2A  0100               	movlb	0	; () banked
  7322  001D2C  AF88               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7323  001D2E  D003               	goto	i2l2828
  7324                           
  7325                           ; BSR set to: 0
  7326  001D30  0100               	movlb	0	; () banked
  7327  001D32  8F8F               	bsf	___ftadd@sign& (0+255),7,b
  7328  001D34  D000               	goto	i2l2828
  7329  001D36                     i2l2828:
  7330                           
  7331                           ; BSR set to: 0
  7332  001D36  0100               	movlb	0	; () banked
  7333  001D38  AF8B               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7334  001D3A  D002               	goto	i2l915
  7335                           
  7336                           ; BSR set to: 0
  7337  001D3C  0100               	movlb	0	; () banked
  7338  001D3E  8D8F               	bsf	___ftadd@sign& (0+255),6,b
  7339  001D40                     i2l915:
  7340                           
  7341                           ; BSR set to: 0
  7342  001D40  0100               	movlb	0	; () banked
  7343  001D42  8F87               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7344                           
  7345                           ; BSR set to: 0
  7346  001D44  0EFF               	movlw	255
  7347  001D46  0100               	movlb	0	; () banked
  7348  001D48  1786               	andwf	___ftadd@f1& (0+255),f,b
  7349  001D4A  0EFF               	movlw	255
  7350  001D4C  0100               	movlb	0	; () banked
  7351  001D4E  1787               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7352  001D50  0E00               	movlw	0
  7353  001D52  0100               	movlb	0	; () banked
  7354  001D54  1788               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7355  001D56  0100               	movlb	0	; () banked
  7356  001D58  8F8A               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7357                           
  7358                           ; BSR set to: 0
  7359  001D5A  0EFF               	movlw	255
  7360  001D5C  0100               	movlb	0	; () banked
  7361  001D5E  1789               	andwf	___ftadd@f2& (0+255),f,b
  7362  001D60  0EFF               	movlw	255
  7363  001D62  0100               	movlb	0	; () banked
  7364  001D64  178A               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7365  001D66  0E00               	movlw	0
  7366  001D68  0100               	movlb	0	; () banked
  7367  001D6A  178B               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7368                           
  7369                           ; BSR set to: 0
  7370  001D6C  0100               	movlb	0	; () banked
  7371  001D6E  5190               	movf	___ftadd@exp2& (0+255),w,b
  7372  001D70  0100               	movlb	0	; () banked
  7373  001D72  5D91               	subwf	___ftadd@exp1& (0+255),w,b
  7374  001D74  B0D8               	btfsc	status,0,c
  7375  001D76  D028               	goto	i2l2848
  7376  001D78                     i2l2838:
  7377                           
  7378                           ; BSR set to: 0
  7379  001D78  0100               	movlb	0	; () banked
  7380  001D7A  90D8               	bcf	status,0,c
  7381  001D7C  3789               	rlcf	___ftadd@f2& (0+255),f,b
  7382  001D7E  378A               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7383  001D80  378B               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7384  001D82  0100               	movlb	0	; () banked
  7385  001D84  0790               	decf	___ftadd@exp2& (0+255),f,b
  7386                           
  7387                           ; BSR set to: 0
  7388  001D86  0100               	movlb	0	; () banked
  7389  001D88  5191               	movf	___ftadd@exp1& (0+255),w,b
  7390  001D8A  0100               	movlb	0	; () banked
  7391  001D8C  1990               	xorwf	___ftadd@exp2& (0+255),w,b
  7392  001D8E  B4D8               	btfsc	status,2,c
  7393  001D90  D013               	goto	i2l2846
  7394                           
  7395                           ; BSR set to: 0
  7396  001D92  0100               	movlb	0	; () banked
  7397  001D94  078F               	decf	___ftadd@sign& (0+255),f,b
  7398  001D96  C08F  F08C         	movff	___ftadd@sign,??___ftadd
  7399  001D9A  0E07               	movlw	7
  7400  001D9C  0100               	movlb	0	; () banked
  7401  001D9E  178C               	andwf	??___ftadd& (0+255),f,b
  7402  001DA0  B4D8               	btfsc	status,2,c
  7403  001DA2  D00A               	goto	i2l2846
  7404  001DA4  D7E9               	goto	i2l2838
  7405                           
  7406                           ; BSR set to: 0
  7407                           
  7408                           ; BSR set to: 0
  7409  001DA6  D008               	goto	i2l2846
  7410  001DA8                     i2l2844:
  7411                           
  7412                           ; BSR set to: 0
  7413  001DA8  0100               	movlb	0	; () banked
  7414  001DAA  90D8               	bcf	status,0,c
  7415  001DAC  3388               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7416  001DAE  3387               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7417  001DB0  3386               	rrcf	___ftadd@f1& (0+255),f,b
  7418  001DB2  0100               	movlb	0	; () banked
  7419  001DB4  2B91               	incf	___ftadd@exp1& (0+255),f,b
  7420  001DB6  D000               	goto	i2l2846
  7421  001DB8                     i2l2846:
  7422                           
  7423                           ; BSR set to: 0
  7424  001DB8  0100               	movlb	0	; () banked
  7425  001DBA  5190               	movf	___ftadd@exp2& (0+255),w,b
  7426  001DBC  0100               	movlb	0	; () banked
  7427  001DBE  1991               	xorwf	___ftadd@exp1& (0+255),w,b
  7428  001DC0  B4D8               	btfsc	status,2,c
  7429  001DC2  D030               	goto	i2l924
  7430  001DC4  D7F1               	goto	i2l2844
  7431                           
  7432                           ; BSR set to: 0
  7433  001DC6  D02E               	goto	i2l924
  7434  001DC8                     i2l2848:
  7435                           
  7436                           ; BSR set to: 0
  7437  001DC8  0100               	movlb	0	; () banked
  7438  001DCA  5191               	movf	___ftadd@exp1& (0+255),w,b
  7439  001DCC  0100               	movlb	0	; () banked
  7440  001DCE  5D90               	subwf	___ftadd@exp2& (0+255),w,b
  7441  001DD0  B0D8               	btfsc	status,0,c
  7442  001DD2  D028               	goto	i2l924
  7443  001DD4                     i2l2850:
  7444                           
  7445                           ; BSR set to: 0
  7446  001DD4  0100               	movlb	0	; () banked
  7447  001DD6  90D8               	bcf	status,0,c
  7448  001DD8  3786               	rlcf	___ftadd@f1& (0+255),f,b
  7449  001DDA  3787               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7450  001DDC  3788               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7451  001DDE  0100               	movlb	0	; () banked
  7452  001DE0  0791               	decf	___ftadd@exp1& (0+255),f,b
  7453                           
  7454                           ; BSR set to: 0
  7455  001DE2  0100               	movlb	0	; () banked
  7456  001DE4  5191               	movf	___ftadd@exp1& (0+255),w,b
  7457  001DE6  0100               	movlb	0	; () banked
  7458  001DE8  1990               	xorwf	___ftadd@exp2& (0+255),w,b
  7459  001DEA  B4D8               	btfsc	status,2,c
  7460  001DEC  D013               	goto	i2l2858
  7461                           
  7462                           ; BSR set to: 0
  7463  001DEE  0100               	movlb	0	; () banked
  7464  001DF0  078F               	decf	___ftadd@sign& (0+255),f,b
  7465  001DF2  C08F  F08C         	movff	___ftadd@sign,??___ftadd
  7466  001DF6  0E07               	movlw	7
  7467  001DF8  0100               	movlb	0	; () banked
  7468  001DFA  178C               	andwf	??___ftadd& (0+255),f,b
  7469  001DFC  B4D8               	btfsc	status,2,c
  7470  001DFE  D00A               	goto	i2l2858
  7471  001E00  D7E9               	goto	i2l2850
  7472                           
  7473                           ; BSR set to: 0
  7474                           
  7475                           ; BSR set to: 0
  7476  001E02  D008               	goto	i2l2858
  7477  001E04                     i2l2856:
  7478                           
  7479                           ; BSR set to: 0
  7480  001E04  0100               	movlb	0	; () banked
  7481  001E06  90D8               	bcf	status,0,c
  7482  001E08  338B               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7483  001E0A  338A               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7484  001E0C  3389               	rrcf	___ftadd@f2& (0+255),f,b
  7485  001E0E  0100               	movlb	0	; () banked
  7486  001E10  2B90               	incf	___ftadd@exp2& (0+255),f,b
  7487  001E12  D000               	goto	i2l2858
  7488  001E14                     i2l2858:
  7489                           
  7490                           ; BSR set to: 0
  7491  001E14  0100               	movlb	0	; () banked
  7492  001E16  5190               	movf	___ftadd@exp2& (0+255),w,b
  7493  001E18  0100               	movlb	0	; () banked
  7494  001E1A  1991               	xorwf	___ftadd@exp1& (0+255),w,b
  7495  001E1C  B4D8               	btfsc	status,2,c
  7496  001E1E  D002               	goto	i2l924
  7497  001E20  D7F1               	goto	i2l2856
  7498                           
  7499                           ; BSR set to: 0
  7500  001E22  D000               	goto	i2l924
  7501  001E24                     i2l924:
  7502                           
  7503                           ; BSR set to: 0
  7504  001E24  0100               	movlb	0	; () banked
  7505  001E26  AF8F               	btfss	___ftadd@sign& (0+255),7,b
  7506  001E28  D012               	goto	i2l933
  7507                           
  7508                           ; BSR set to: 0
  7509  001E2A  0EFF               	movlw	255
  7510  001E2C  0100               	movlb	0	; () banked
  7511  001E2E  1B86               	xorwf	___ftadd@f1& (0+255),f,b
  7512  001E30  0EFF               	movlw	255
  7513  001E32  0100               	movlb	0	; () banked
  7514  001E34  1B87               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7515  001E36  0EFF               	movlw	255
  7516  001E38  0100               	movlb	0	; () banked
  7517  001E3A  1B88               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7518  001E3C  0E01               	movlw	1
  7519  001E3E  0100               	movlb	0	; () banked
  7520  001E40  2786               	addwf	___ftadd@f1& (0+255),f,b
  7521  001E42  0E00               	movlw	0
  7522  001E44  0100               	movlb	0	; () banked
  7523  001E46  2387               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7524  001E48  0E00               	movlw	0
  7525  001E4A  0100               	movlb	0	; () banked
  7526  001E4C  2388               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7527  001E4E                     i2l933:
  7528                           
  7529                           ; BSR set to: 0
  7530  001E4E  0100               	movlb	0	; () banked
  7531  001E50  AD8F               	btfss	___ftadd@sign& (0+255),6,b
  7532  001E52  D013               	goto	i2l2864
  7533                           
  7534                           ; BSR set to: 0
  7535  001E54  0EFF               	movlw	255
  7536  001E56  0100               	movlb	0	; () banked
  7537  001E58  1B89               	xorwf	___ftadd@f2& (0+255),f,b
  7538  001E5A  0EFF               	movlw	255
  7539  001E5C  0100               	movlb	0	; () banked
  7540  001E5E  1B8A               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7541  001E60  0EFF               	movlw	255
  7542  001E62  0100               	movlb	0	; () banked
  7543  001E64  1B8B               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7544  001E66  0E01               	movlw	1
  7545  001E68  0100               	movlb	0	; () banked
  7546  001E6A  2789               	addwf	___ftadd@f2& (0+255),f,b
  7547  001E6C  0E00               	movlw	0
  7548  001E6E  0100               	movlb	0	; () banked
  7549  001E70  238A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7550  001E72  0E00               	movlw	0
  7551  001E74  0100               	movlb	0	; () banked
  7552  001E76  238B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7553  001E78  D000               	goto	i2l2864
  7554  001E7A                     i2l2864:
  7555                           
  7556                           ; BSR set to: 0
  7557  001E7A  0E00               	movlw	0
  7558  001E7C  0100               	movlb	0	; () banked
  7559  001E7E  6F8F               	movwf	___ftadd@sign& (0+255),b
  7560                           
  7561                           ; BSR set to: 0
  7562  001E80  0100               	movlb	0	; () banked
  7563  001E82  5186               	movf	___ftadd@f1& (0+255),w,b
  7564  001E84  0100               	movlb	0	; () banked
  7565  001E86  2789               	addwf	___ftadd@f2& (0+255),f,b
  7566  001E88  0100               	movlb	0	; () banked
  7567  001E8A  5187               	movf	(___ftadd@f1+1)& (0+255),w,b
  7568  001E8C  0100               	movlb	0	; () banked
  7569  001E8E  238A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7570  001E90  0100               	movlb	0	; () banked
  7571  001E92  5188               	movf	(___ftadd@f1+2)& (0+255),w,b
  7572  001E94  0100               	movlb	0	; () banked
  7573  001E96  238B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7574                           
  7575                           ; BSR set to: 0
  7576  001E98  0100               	movlb	0	; () banked
  7577  001E9A  AF8B               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7578  001E9C  D016               	goto	i2l2874
  7579                           
  7580                           ; BSR set to: 0
  7581  001E9E  0EFF               	movlw	255
  7582  001EA0  0100               	movlb	0	; () banked
  7583  001EA2  1B89               	xorwf	___ftadd@f2& (0+255),f,b
  7584  001EA4  0EFF               	movlw	255
  7585  001EA6  0100               	movlb	0	; () banked
  7586  001EA8  1B8A               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7587  001EAA  0EFF               	movlw	255
  7588  001EAC  0100               	movlb	0	; () banked
  7589  001EAE  1B8B               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7590  001EB0  0E01               	movlw	1
  7591  001EB2  0100               	movlb	0	; () banked
  7592  001EB4  2789               	addwf	___ftadd@f2& (0+255),f,b
  7593  001EB6  0E00               	movlw	0
  7594  001EB8  0100               	movlb	0	; () banked
  7595  001EBA  238A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7596  001EBC  0E00               	movlw	0
  7597  001EBE  0100               	movlb	0	; () banked
  7598  001EC0  238B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7599                           
  7600                           ; BSR set to: 0
  7601  001EC2  0E01               	movlw	1
  7602  001EC4  0100               	movlb	0	; () banked
  7603  001EC6  6F8F               	movwf	___ftadd@sign& (0+255),b
  7604  001EC8  D000               	goto	i2l2874
  7605  001ECA                     i2l2874:
  7606                           
  7607                           ; BSR set to: 0
  7608  001ECA  C089  F060         	movff	___ftadd@f2,i2___ftpack@arg
  7609  001ECE  C08A  F061         	movff	___ftadd@f2+1,i2___ftpack@arg+1
  7610  001ED2  C08B  F062         	movff	___ftadd@f2+2,i2___ftpack@arg+2
  7611  001ED6  C091  F063         	movff	___ftadd@exp1,i2___ftpack@exp
  7612  001EDA  C08F  F064         	movff	___ftadd@sign,i2___ftpack@sign
  7613  001EDE  ECB7  F012         	call	i2___ftpack	;wreg free
  7614  001EE2  C060  F086         	movff	?i2___ftpack,?___ftadd
  7615  001EE6  C061  F087         	movff	?i2___ftpack+1,?___ftadd+1
  7616  001EEA  C062  F088         	movff	?i2___ftpack+2,?___ftadd+2
  7617  001EEE  D000               	goto	i2l910
  7618  001EF0                     i2l910:
  7619  001EF0  0012               	return		;funcret
  7620  001EF2                     __end_of___ftadd:
  7621                           	opt stack 0
  7622                           pclatu	equ	0xFFB
  7623                           pclath	equ	0xFFA
  7624                           tblptru	equ	0xFF8
  7625                           tblptrh	equ	0xFF7
  7626                           tblptrl	equ	0xFF6
  7627                           tablat	equ	0xFF5
  7628                           prodh	equ	0xFF4
  7629                           prodl	equ	0xFF3
  7630                           intcon	equ	0xFF2
  7631                           intcon2	equ	0xFF1
  7632                           indf0	equ	0xFEF
  7633                           postinc0	equ	0xFEE
  7634                           fsr0h	equ	0xFEA
  7635                           fsr0l	equ	0xFE9
  7636                           wreg	equ	0xFE8
  7637                           indf1	equ	0xFE7
  7638                           fsr1h	equ	0xFE2
  7639                           fsr1l	equ	0xFE1
  7640                           bsr	equ	0xFE0
  7641                           indf2	equ	0xFDF
  7642                           postinc2	equ	0xFDE
  7643                           postdec2	equ	0xFDD
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function _ReadRTDpos *****************
  7649 ;; Defined at:
  7650 ;;		line 35 in file "ResolverToDigital.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  FullPosition    2    8[BANK0 ] unsigned int 
  7655 ;;  helloworld      2    0        unsigned int 
  7656 ;;  x               1   10[BANK0 ] unsigned char 
  7657 ;;  LowPosition     1    7[BANK0 ] unsigned char 
  7658 ;;  HighPosition    1    6[BANK0 ] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  2    1[BANK0 ] unsigned int 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2, status,0, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7670 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;Total ram usage:       10 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    1
  7675 ;; This function calls:
  7676 ;;		i2_Delay10TCYx
  7677 ;; This function is called by:
  7678 ;;		_TMR0Int
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text41
  7683  002C16                     __ptext41:
  7684                           	opt stack 0
  7685  002C16                     _ReadRTDpos:
  7686                           	opt stack 16
  7687                           
  7688                           ;ResolverToDigital.c: 37: unsigned char x;
  7689                           ;ResolverToDigital.c: 38: unsigned int FullPosition, helloworld;
  7690                           ;ResolverToDigital.c: 39: unsigned char HighPosition, LowPosition;
  7691                           ;ResolverToDigital.c: 41: PORTEbits.RE1 = 1;
  7692                           
  7693                           ;incstack = 0
  7694  002C16  8284               	bsf	3972,1,c	;volatile
  7695                           
  7696                           ;ResolverToDigital.c: 42: PORTEbits.RE0 = 0;
  7697  002C18  9084               	bcf	3972,0,c	;volatile
  7698                           
  7699                           ;ResolverToDigital.c: 43: for(x = 0; x < 8; x++)
  7700  002C1A  0E00               	movlw	0
  7701  002C1C  0100               	movlb	0	; () banked
  7702  002C1E  6F6A               	movwf	ReadRTDpos@x& (0+255),b
  7703  002C20  D004               	goto	i2l3574
  7704                           
  7705                           ; BSR set to: 0
  7706                           
  7707                           ; BSR set to: 0
  7708  002C22  D007               	goto	i2l364
  7709  002C24                     i2l363:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;ResolverToDigital.c: 44: __nop();
  7713  002C24  F000               	nop	
  7714  002C26  0100               	movlb	0	; () banked
  7715  002C28  2B6A               	incf	ReadRTDpos@x& (0+255),f,b
  7716  002C2A                     i2l3574:
  7717                           
  7718                           ; BSR set to: 0
  7719  002C2A  0E07               	movlw	7
  7720  002C2C  0100               	movlb	0	; () banked
  7721  002C2E  656A               	cpfsgt	ReadRTDpos@x& (0+255),b
  7722  002C30  D7F9               	goto	i2l363
  7723  002C32                     i2l364:
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;ResolverToDigital.c: 45: PORTEbits.RE2 = 1;
  7727  002C32  8484               	bsf	3972,2,c	;volatile
  7728                           
  7729                           ;ResolverToDigital.c: 46: PORTEbits.RE2 = 0;
  7730  002C34  9484               	bcf	3972,2,c	;volatile
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;ResolverToDigital.c: 47: Delay10TCYx(1);
  7734  002C36  0E01               	movlw	1
  7735  002C38  EC34  F01A         	call	i2_Delay10TCYx
  7736                           
  7737                           ;ResolverToDigital.c: 48: HighPosition = PORTH;
  7738  002C3C  CF87 F066          	movff	3975,ReadRTDpos@HighPosition	;volatile
  7739                           
  7740                           ;ResolverToDigital.c: 49: LowPosition = PORTD;
  7741  002C40  CF83 F067          	movff	3971,ReadRTDpos@LowPosition	;volatile
  7742                           
  7743                           ;ResolverToDigital.c: 50: PORTEbits.RE2 = 1;
  7744  002C44  8484               	bsf	3972,2,c	;volatile
  7745                           
  7746                           ;ResolverToDigital.c: 51: PORTEbits.RE0 = 1;
  7747  002C46  8084               	bsf	3972,0,c	;volatile
  7748                           
  7749                           ;ResolverToDigital.c: 52: FullPosition = LowPosition;
  7750  002C48  C067  F068         	movff	ReadRTDpos@LowPosition,ReadRTDpos@FullPosition
  7751  002C4C  0100               	movlb	0	; () banked
  7752  002C4E  6B69               	clrf	(ReadRTDpos@FullPosition+1)& (0+255),b
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;ResolverToDigital.c: 53: FullPosition = FullPosition | ((HighPosition & 0x0F) << 8);
  7756  002C50  C066  F063         	movff	ReadRTDpos@HighPosition,??_ReadRTDpos
  7757  002C54  0E0F               	movlw	15
  7758  002C56  0100               	movlb	0	; () banked
  7759  002C58  1763               	andwf	??_ReadRTDpos& (0+255),f,b
  7760  002C5A  0100               	movlb	0	; () banked
  7761  002C5C  5163               	movf	??_ReadRTDpos& (0+255),w,b
  7762  002C5E  0100               	movlb	0	; () banked
  7763  002C60  6F65               	movwf	(??_ReadRTDpos+2)& (0+255),b
  7764  002C62  6B64               	clrf	(??_ReadRTDpos+1)& (0+255),b
  7765  002C64  0100               	movlb	0	; () banked
  7766  002C66  5168               	movf	ReadRTDpos@FullPosition& (0+255),w,b
  7767  002C68  0100               	movlb	0	; () banked
  7768  002C6A  1164               	iorwf	(??_ReadRTDpos+1)& (0+255),w,b
  7769  002C6C  0100               	movlb	0	; () banked
  7770  002C6E  6F68               	movwf	ReadRTDpos@FullPosition& (0+255),b
  7771  002C70  0100               	movlb	0	; () banked
  7772  002C72  5169               	movf	(ReadRTDpos@FullPosition+1)& (0+255),w,b
  7773  002C74  0100               	movlb	0	; () banked
  7774  002C76  1165               	iorwf	(??_ReadRTDpos+2)& (0+255),w,b
  7775  002C78  0100               	movlb	0	; () banked
  7776  002C7A  6F69               	movwf	(ReadRTDpos@FullPosition+1)& (0+255),b
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;ResolverToDigital.c: 54: return FullPosition;
  7780  002C7C  C068  F061         	movff	ReadRTDpos@FullPosition,?_ReadRTDpos
  7781  002C80  C069  F062         	movff	ReadRTDpos@FullPosition+1,?_ReadRTDpos+1
  7782  002C84  D000               	goto	i2l365
  7783  002C86                     i2l365:
  7784                           
  7785                           ; BSR set to: 0
  7786  002C86  0012               	return		;funcret
  7787  002C88                     __end_of_ReadRTDpos:
  7788                           	opt stack 0
  7789                           pclatu	equ	0xFFB
  7790                           pclath	equ	0xFFA
  7791                           tblptru	equ	0xFF8
  7792                           tblptrh	equ	0xFF7
  7793                           tblptrl	equ	0xFF6
  7794                           tablat	equ	0xFF5
  7795                           prodh	equ	0xFF4
  7796                           prodl	equ	0xFF3
  7797                           intcon	equ	0xFF2
  7798                           intcon2	equ	0xFF1
  7799                           indf0	equ	0xFEF
  7800                           postinc0	equ	0xFEE
  7801                           fsr0h	equ	0xFEA
  7802                           fsr0l	equ	0xFE9
  7803                           wreg	equ	0xFE8
  7804                           indf1	equ	0xFE7
  7805                           fsr1h	equ	0xFE2
  7806                           fsr1l	equ	0xFE1
  7807                           bsr	equ	0xFE0
  7808                           indf2	equ	0xFDF
  7809                           postinc2	equ	0xFDE
  7810                           postdec2	equ	0xFDD
  7811                           fsr2h	equ	0xFDA
  7812                           fsr2l	equ	0xFD9
  7813                           status	equ	0xFD8
  7814                           
  7815 ;; *************** function _RTD2Angle *****************
  7816 ;; Defined at:
  7817 ;;		line 88 in file "ResolverToDigital.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  RTDAngle        2   38[BANK0 ] unsigned int 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  3   38[BANK0 ] unsigned int 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2, status,0, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7831 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;Total ram usage:        3 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; Hardware stack levels required when called:    2
  7838 ;; This function calls:
  7839 ;;		___lwtoft
  7840 ;;		i2___ftmul
  7841 ;; This function is called by:
  7842 ;;		_TMR0Int
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text42
  7847  00319A                     __ptext42:
  7848                           	opt stack 0
  7849  00319A                     _RTD2Angle:
  7850                           	opt stack 15
  7851                           
  7852                           ;ResolverToDigital.c: 90: return 0.087890625 * RTDAngle;
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;incstack = 0
  7856  00319A  C086  F068         	movff	RTD2Angle@RTDAngle,___lwtoft@c
  7857  00319E  C087  F069         	movff	RTD2Angle@RTDAngle+1,___lwtoft@c+1
  7858  0031A2  EC4B  F019         	call	___lwtoft	;wreg free
  7859  0031A6  C068  F077         	movff	?___lwtoft,i2___ftmul@f1
  7860  0031AA  C069  F078         	movff	?___lwtoft+1,i2___ftmul@f1+1
  7861  0031AE  C06A  F079         	movff	?___lwtoft+2,i2___ftmul@f1+2
  7862  0031B2  0E00               	movlw	0
  7863  0031B4  0100               	movlb	0	; () banked
  7864  0031B6  6F7A               	movwf	i2___ftmul@f2& (0+255),b
  7865  0031B8  0EB4               	movlw	180
  7866  0031BA  0100               	movlb	0	; () banked
  7867  0031BC  6F7B               	movwf	(i2___ftmul@f2+1)& (0+255),b
  7868  0031BE  0E3D               	movlw	61
  7869  0031C0  0100               	movlb	0	; () banked
  7870  0031C2  6F7C               	movwf	(i2___ftmul@f2+2)& (0+255),b
  7871  0031C4  EC31  F010         	call	i2___ftmul	;wreg free
  7872  0031C8  C077  F086         	movff	?i2___ftmul,?_RTD2Angle
  7873  0031CC  C078  F087         	movff	?i2___ftmul+1,?_RTD2Angle+1
  7874  0031D0  C079  F088         	movff	?i2___ftmul+2,?_RTD2Angle+2
  7875  0031D4  D000               	goto	i2l375
  7876  0031D6                     i2l375:
  7877  0031D6  0012               	return		;funcret
  7878  0031D8                     __end_of_RTD2Angle:
  7879                           	opt stack 0
  7880                           pclatu	equ	0xFFB
  7881                           pclath	equ	0xFFA
  7882                           tblptru	equ	0xFF8
  7883                           tblptrh	equ	0xFF7
  7884                           tblptrl	equ	0xFF6
  7885                           tablat	equ	0xFF5
  7886                           prodh	equ	0xFF4
  7887                           prodl	equ	0xFF3
  7888                           intcon	equ	0xFF2
  7889                           intcon2	equ	0xFF1
  7890                           indf0	equ	0xFEF
  7891                           postinc0	equ	0xFEE
  7892                           fsr0h	equ	0xFEA
  7893                           fsr0l	equ	0xFE9
  7894                           wreg	equ	0xFE8
  7895                           indf1	equ	0xFE7
  7896                           fsr1h	equ	0xFE2
  7897                           fsr1l	equ	0xFE1
  7898                           bsr	equ	0xFE0
  7899                           indf2	equ	0xFDF
  7900                           postinc2	equ	0xFDE
  7901                           postdec2	equ	0xFDD
  7902                           fsr2h	equ	0xFDA
  7903                           fsr2l	equ	0xFD9
  7904                           status	equ	0xFD8
  7905                           
  7906 ;; *************** function ___lwtoft *****************
  7907 ;; Defined at:
  7908 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  c               2    8[BANK0 ] unsigned int 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;		None
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  3    8[BANK0 ] float 
  7915 ;; Registers used:
  7916 ;;		wreg, status,2, status,0, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7922 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7925 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7926 ;;Total ram usage:        3 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:    1
  7929 ;; This function calls:
  7930 ;;		i2___ftpack
  7931 ;; This function is called by:
  7932 ;;		_RTD2Angle
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text43
  7937  003296                     __ptext43:
  7938                           	opt stack 0
  7939  003296                     ___lwtoft:
  7940                           	opt stack 15
  7941                           
  7942                           ;incstack = 0
  7943  003296  C068  F060         	movff	___lwtoft@c,i2___ftpack@arg
  7944  00329A  C069  F061         	movff	___lwtoft@c+1,i2___ftpack@arg+1
  7945  00329E  0100               	movlb	0	; () banked
  7946  0032A0  6B62               	clrf	(i2___ftpack@arg+2)& (0+255),b
  7947  0032A2  0E8E               	movlw	142
  7948  0032A4  0100               	movlb	0	; () banked
  7949  0032A6  6F63               	movwf	i2___ftpack@exp& (0+255),b
  7950  0032A8  0E00               	movlw	0
  7951  0032AA  0100               	movlb	0	; () banked
  7952  0032AC  6F64               	movwf	i2___ftpack@sign& (0+255),b
  7953  0032AE  ECB7  F012         	call	i2___ftpack	;wreg free
  7954  0032B2  C060  F068         	movff	?i2___ftpack,?___lwtoft
  7955  0032B6  C061  F069         	movff	?i2___ftpack+1,?___lwtoft+1
  7956  0032BA  C062  F06A         	movff	?i2___ftpack+2,?___lwtoft+2
  7957  0032BE  D000               	goto	i2l1116
  7958  0032C0                     i2l1116:
  7959  0032C0  0012               	return		;funcret
  7960  0032C2                     __end_of___lwtoft:
  7961                           	opt stack 0
  7962                           pclatu	equ	0xFFB
  7963                           pclath	equ	0xFFA
  7964                           tblptru	equ	0xFF8
  7965                           tblptrh	equ	0xFF7
  7966                           tblptrl	equ	0xFF6
  7967                           tablat	equ	0xFF5
  7968                           prodh	equ	0xFF4
  7969                           prodl	equ	0xFF3
  7970                           intcon	equ	0xFF2
  7971                           intcon2	equ	0xFF1
  7972                           indf0	equ	0xFEF
  7973                           postinc0	equ	0xFEE
  7974                           fsr0h	equ	0xFEA
  7975                           fsr0l	equ	0xFE9
  7976                           wreg	equ	0xFE8
  7977                           indf1	equ	0xFE7
  7978                           fsr1h	equ	0xFE2
  7979                           fsr1l	equ	0xFE1
  7980                           bsr	equ	0xFE0
  7981                           indf2	equ	0xFDF
  7982                           postinc2	equ	0xFDE
  7983                           postdec2	equ	0xFDD
  7984                           fsr2h	equ	0xFDA
  7985                           fsr2l	equ	0xFD9
  7986                           status	equ	0xFD8
  7987                           
  7988 ;; *************** function _LCDBreakDouble *****************
  7989 ;; Defined at:
  7990 ;;		line 134 in file "LCD.h"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  dubs            3   65[BANK0 ] float 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  temp2           2   72[BANK0 ] unsigned int 
  7995 ;;  temp1           2   70[BANK0 ] unsigned int 
  7996 ;;  tempDub         2   68[BANK0 ] unsigned int 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;		None               void
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8006 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;Total ram usage:        9 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    4
  8013 ;; This function calls:
  8014 ;;		___fttol
  8015 ;;		___lwdiv
  8016 ;;		___lwmod
  8017 ;;		_lcdChar
  8018 ;;		_lcdGoTo
  8019 ;;		i2___ftmul
  8020 ;;		i2_lcdCommand
  8021 ;; This function is called by:
  8022 ;;		_TMR0Int
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text44
  8027  001EF2                     __ptext44:
  8028                           	opt stack 0
  8029  001EF2                     _LCDBreakDouble:
  8030                           	opt stack 13
  8031                           
  8032                           ;LCD.h: 136: unsigned int temp1, temp2;
  8033                           ;LCD.h: 137: unsigned int tempDub;
  8034                           ;LCD.h: 139: lcdCommand(0x01);
  8035                           
  8036                           ;incstack = 0
  8037  001EF2  0E01               	movlw	1
  8038  001EF4  EC61  F018         	call	i2_lcdCommand
  8039                           
  8040                           ;LCD.h: 140: lcdGoTo(0x40);
  8041  001EF8  0E40               	movlw	64
  8042  001EFA  EC4F  F01A         	call	_lcdGoTo
  8043                           
  8044                           ;LCD.h: 141: tempDub = dubs * 100;
  8045  001EFE  0E00               	movlw	0
  8046  001F00  0100               	movlb	0	; () banked
  8047  001F02  6F7A               	movwf	i2___ftmul@f2& (0+255),b
  8048  001F04  0EC8               	movlw	200
  8049  001F06  0100               	movlb	0	; () banked
  8050  001F08  6F7B               	movwf	(i2___ftmul@f2+1)& (0+255),b
  8051  001F0A  0E42               	movlw	66
  8052  001F0C  0100               	movlb	0	; () banked
  8053  001F0E  6F7C               	movwf	(i2___ftmul@f2+2)& (0+255),b
  8054  001F10  C0A1  F077         	movff	LCDBreakDouble@dubs,i2___ftmul@f1
  8055  001F14  C0A2  F078         	movff	LCDBreakDouble@dubs+1,i2___ftmul@f1+1
  8056  001F18  C0A3  F079         	movff	LCDBreakDouble@dubs+2,i2___ftmul@f1+2
  8057  001F1C  EC31  F010         	call	i2___ftmul	;wreg free
  8058  001F20  C077  F092         	movff	?i2___ftmul,___fttol@f1
  8059  001F24  C078  F093         	movff	?i2___ftmul+1,___fttol@f1+1
  8060  001F28  C079  F094         	movff	?i2___ftmul+2,___fttol@f1+2
  8061  001F2C  EC1E  F012         	call	___fttol	;wreg free
  8062  001F30  C092  F0A4         	movff	?___fttol,LCDBreakDouble@tempDub
  8063  001F34  C093  F0A5         	movff	?___fttol+1,LCDBreakDouble@tempDub+1
  8064                           
  8065                           ;LCD.h: 142: temp1 = tempDub / 10000;
  8066  001F38  C0A4  F060         	movff	LCDBreakDouble@tempDub,___lwdiv@dividend
  8067  001F3C  C0A5  F061         	movff	LCDBreakDouble@tempDub+1,___lwdiv@dividend+1
  8068  001F40  0E27               	movlw	39
  8069  001F42  0100               	movlb	0	; () banked
  8070  001F44  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8071  001F46  0E10               	movlw	16
  8072  001F48  6F62               	movwf	___lwdiv@divisor& (0+255),b
  8073  001F4A  EC8C  F015         	call	___lwdiv	;wreg free
  8074  001F4E  C060  F0A6         	movff	?___lwdiv,LCDBreakDouble@temp1
  8075  001F52  C061  F0A7         	movff	?___lwdiv+1,LCDBreakDouble@temp1+1
  8076                           
  8077                           ;LCD.h: 143: temp2 = tempDub % 10000;
  8078  001F56  C0A4  F060         	movff	LCDBreakDouble@tempDub,___lwmod@dividend
  8079  001F5A  C0A5  F061         	movff	LCDBreakDouble@tempDub+1,___lwmod@dividend+1
  8080  001F5E  0E27               	movlw	39
  8081  001F60  0100               	movlb	0	; () banked
  8082  001F62  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8083  001F64  0E10               	movlw	16
  8084  001F66  6F62               	movwf	___lwmod@divisor& (0+255),b
  8085  001F68  EC7C  F016         	call	___lwmod	;wreg free
  8086  001F6C  C060  F0A8         	movff	?___lwmod,LCDBreakDouble@temp2
  8087  001F70  C061  F0A9         	movff	?___lwmod+1,LCDBreakDouble@temp2+1
  8088                           
  8089                           ;LCD.h: 145: lcdChar(temp1 + 0x30);
  8090  001F74  0100               	movlb	0	; () banked
  8091  001F76  51A6               	movf	LCDBreakDouble@temp1& (0+255),w,b
  8092  001F78  0F30               	addlw	48
  8093  001F7A  ECAA  F018         	call	_lcdChar
  8094                           
  8095                           ;LCD.h: 146: temp1 = temp2 / 1000;
  8096  001F7E  C0A8  F060         	movff	LCDBreakDouble@temp2,___lwdiv@dividend
  8097  001F82  C0A9  F061         	movff	LCDBreakDouble@temp2+1,___lwdiv@dividend+1
  8098  001F86  0E03               	movlw	3
  8099  001F88  0100               	movlb	0	; () banked
  8100  001F8A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8101  001F8C  0EE8               	movlw	232
  8102  001F8E  6F62               	movwf	___lwdiv@divisor& (0+255),b
  8103  001F90  EC8C  F015         	call	___lwdiv	;wreg free
  8104  001F94  C060  F0A6         	movff	?___lwdiv,LCDBreakDouble@temp1
  8105  001F98  C061  F0A7         	movff	?___lwdiv+1,LCDBreakDouble@temp1+1
  8106                           
  8107                           ;LCD.h: 147: temp2 = temp2 % 1000;
  8108  001F9C  C0A8  F060         	movff	LCDBreakDouble@temp2,___lwmod@dividend
  8109  001FA0  C0A9  F061         	movff	LCDBreakDouble@temp2+1,___lwmod@dividend+1
  8110  001FA4  0E03               	movlw	3
  8111  001FA6  0100               	movlb	0	; () banked
  8112  001FA8  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8113  001FAA  0EE8               	movlw	232
  8114  001FAC  6F62               	movwf	___lwmod@divisor& (0+255),b
  8115  001FAE  EC7C  F016         	call	___lwmod	;wreg free
  8116  001FB2  C060  F0A8         	movff	?___lwmod,LCDBreakDouble@temp2
  8117  001FB6  C061  F0A9         	movff	?___lwmod+1,LCDBreakDouble@temp2+1
  8118                           
  8119                           ;LCD.h: 149: lcdChar(temp1 + 0x30);
  8120  001FBA  0100               	movlb	0	; () banked
  8121  001FBC  51A6               	movf	LCDBreakDouble@temp1& (0+255),w,b
  8122  001FBE  0F30               	addlw	48
  8123  001FC0  ECAA  F018         	call	_lcdChar
  8124                           
  8125                           ;LCD.h: 150: temp1 = temp2 / 100;
  8126  001FC4  C0A8  F060         	movff	LCDBreakDouble@temp2,___lwdiv@dividend
  8127  001FC8  C0A9  F061         	movff	LCDBreakDouble@temp2+1,___lwdiv@dividend+1
  8128  001FCC  0E00               	movlw	0
  8129  001FCE  0100               	movlb	0	; () banked
  8130  001FD0  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8131  001FD2  0E64               	movlw	100
  8132  001FD4  6F62               	movwf	___lwdiv@divisor& (0+255),b
  8133  001FD6  EC8C  F015         	call	___lwdiv	;wreg free
  8134  001FDA  C060  F0A6         	movff	?___lwdiv,LCDBreakDouble@temp1
  8135  001FDE  C061  F0A7         	movff	?___lwdiv+1,LCDBreakDouble@temp1+1
  8136                           
  8137                           ;LCD.h: 151: temp2 = temp2 % 100;
  8138  001FE2  C0A8  F060         	movff	LCDBreakDouble@temp2,___lwmod@dividend
  8139  001FE6  C0A9  F061         	movff	LCDBreakDouble@temp2+1,___lwmod@dividend+1
  8140  001FEA  0E00               	movlw	0
  8141  001FEC  0100               	movlb	0	; () banked
  8142  001FEE  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8143  001FF0  0E64               	movlw	100
  8144  001FF2  6F62               	movwf	___lwmod@divisor& (0+255),b
  8145  001FF4  EC7C  F016         	call	___lwmod	;wreg free
  8146  001FF8  C060  F0A8         	movff	?___lwmod,LCDBreakDouble@temp2
  8147  001FFC  C061  F0A9         	movff	?___lwmod+1,LCDBreakDouble@temp2+1
  8148                           
  8149                           ;LCD.h: 152: lcdChar(temp1 + 0x30);
  8150  002000  0100               	movlb	0	; () banked
  8151  002002  51A6               	movf	LCDBreakDouble@temp1& (0+255),w,b
  8152  002004  0F30               	addlw	48
  8153  002006  ECAA  F018         	call	_lcdChar
  8154                           
  8155                           ;LCD.h: 153: lcdChar('.');
  8156  00200A  0E2E               	movlw	46
  8157  00200C  ECAA  F018         	call	_lcdChar
  8158                           
  8159                           ;LCD.h: 154: temp1 = temp2 / 10;
  8160  002010  C0A8  F060         	movff	LCDBreakDouble@temp2,___lwdiv@dividend
  8161  002014  C0A9  F061         	movff	LCDBreakDouble@temp2+1,___lwdiv@dividend+1
  8162  002018  0E00               	movlw	0
  8163  00201A  0100               	movlb	0	; () banked
  8164  00201C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8165  00201E  0E0A               	movlw	10
  8166  002020  6F62               	movwf	___lwdiv@divisor& (0+255),b
  8167  002022  EC8C  F015         	call	___lwdiv	;wreg free
  8168  002026  C060  F0A6         	movff	?___lwdiv,LCDBreakDouble@temp1
  8169  00202A  C061  F0A7         	movff	?___lwdiv+1,LCDBreakDouble@temp1+1
  8170                           
  8171                           ;LCD.h: 155: temp2 = temp2 % 10;
  8172  00202E  C0A8  F060         	movff	LCDBreakDouble@temp2,___lwmod@dividend
  8173  002032  C0A9  F061         	movff	LCDBreakDouble@temp2+1,___lwmod@dividend+1
  8174  002036  0E00               	movlw	0
  8175  002038  0100               	movlb	0	; () banked
  8176  00203A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8177  00203C  0E0A               	movlw	10
  8178  00203E  6F62               	movwf	___lwmod@divisor& (0+255),b
  8179  002040  EC7C  F016         	call	___lwmod	;wreg free
  8180  002044  C060  F0A8         	movff	?___lwmod,LCDBreakDouble@temp2
  8181  002048  C061  F0A9         	movff	?___lwmod+1,LCDBreakDouble@temp2+1
  8182                           
  8183                           ;LCD.h: 156: lcdChar(temp1 + 0x30);
  8184  00204C  0100               	movlb	0	; () banked
  8185  00204E  51A6               	movf	LCDBreakDouble@temp1& (0+255),w,b
  8186  002050  0F30               	addlw	48
  8187  002052  ECAA  F018         	call	_lcdChar
  8188                           
  8189                           ;LCD.h: 157: lcdChar(temp2 + 0x30);
  8190  002056  0100               	movlb	0	; () banked
  8191  002058  51A8               	movf	LCDBreakDouble@temp2& (0+255),w,b
  8192  00205A  0F30               	addlw	48
  8193  00205C  ECAA  F018         	call	_lcdChar
  8194  002060  0012               	return		;funcret
  8195  002062                     __end_of_LCDBreakDouble:
  8196                           	opt stack 0
  8197                           pclatu	equ	0xFFB
  8198                           pclath	equ	0xFFA
  8199                           tblptru	equ	0xFF8
  8200                           tblptrh	equ	0xFF7
  8201                           tblptrl	equ	0xFF6
  8202                           tablat	equ	0xFF5
  8203                           prodh	equ	0xFF4
  8204                           prodl	equ	0xFF3
  8205                           intcon	equ	0xFF2
  8206                           intcon2	equ	0xFF1
  8207                           indf0	equ	0xFEF
  8208                           postinc0	equ	0xFEE
  8209                           fsr0h	equ	0xFEA
  8210                           fsr0l	equ	0xFE9
  8211                           wreg	equ	0xFE8
  8212                           indf1	equ	0xFE7
  8213                           fsr1h	equ	0xFE2
  8214                           fsr1l	equ	0xFE1
  8215                           bsr	equ	0xFE0
  8216                           indf2	equ	0xFDF
  8217                           postinc2	equ	0xFDE
  8218                           postdec2	equ	0xFDD
  8219                           fsr2h	equ	0xFDA
  8220                           fsr2l	equ	0xFD9
  8221                           status	equ	0xFD8
  8222                           
  8223 ;; *************** function i2___ftmul *****************
  8224 ;; Defined at:
  8225 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  f1              3   23[BANK0 ] float 
  8228 ;;  f2              3   26[BANK0 ] float 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  __ftmul         3   33[BANK0 ] unsigned um
  8231 ;;  __ftmul         1   37[BANK0 ] unsigned char 
  8232 ;;  __ftmul         1   36[BANK0 ] unsigned char 
  8233 ;;  __ftmul         1   32[BANK0 ] unsigned char 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  3   23[BANK0 ] float 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8243 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;Total ram usage:       15 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    1
  8250 ;; This function calls:
  8251 ;;		i2___ftpack
  8252 ;; This function is called by:
  8253 ;;		_LCDBreakDouble
  8254 ;;		_calculatePID
  8255 ;;		_RTD2Angle
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           	psect	text45
  8260  002062                     __ptext45:
  8261                           	opt stack 0
  8262  002062                     i2___ftmul:
  8263                           	opt stack 15
  8264                           
  8265                           ;incstack = 0
  8266  002062  C079  F07D         	movff	i2___ftmul@f1+2,??i2___ftmul
  8267  002066  0100               	movlb	0	; () banked
  8268  002068  6B7E               	clrf	(??i2___ftmul+1)& (0+255),b
  8269  00206A  6B7F               	clrf	(??i2___ftmul+2)& (0+255),b
  8270  00206C  0100               	movlb	0	; () banked
  8271  00206E  3578               	rlcf	(i2___ftmul@f1+1)& (0+255),w,b
  8272  002070  0100               	movlb	0	; () banked
  8273  002072  377D               	rlcf	??i2___ftmul& (0+255),f,b
  8274  002074  E301               	bnc	u351_41
  8275  002076  817E               	bsf	(??i2___ftmul+1)& (0+255),0,b
  8276  002078                     u351_41:
  8277  002078  0100               	movlb	0	; () banked
  8278  00207A  517D               	movf	??i2___ftmul& (0+255),w,b
  8279  00207C  0100               	movlb	0	; () banked
  8280  00207E  6F80               	movwf	i2___ftmul@exp& (0+255),b
  8281  002080  0100               	movlb	0	; () banked
  8282  002082  5180               	movf	i2___ftmul@exp& (0+255),w,b
  8283  002084  A4D8               	btfss	status,2,c
  8284  002086  D002               	goto	i2l3444
  8285  002088  D014               	goto	i2l3446
  8286                           
  8287                           ; BSR set to: 0
  8288                           
  8289                           ; BSR set to: 0
  8290  00208A  D098               	goto	i2l956
  8291  00208C                     i2l3444:
  8292                           
  8293                           ; BSR set to: 0
  8294  00208C  C07C  F07D         	movff	i2___ftmul@f2+2,??i2___ftmul
  8295  002090  0100               	movlb	0	; () banked
  8296  002092  6B7E               	clrf	(??i2___ftmul+1)& (0+255),b
  8297  002094  6B7F               	clrf	(??i2___ftmul+2)& (0+255),b
  8298  002096  0100               	movlb	0	; () banked
  8299  002098  357B               	rlcf	(i2___ftmul@f2+1)& (0+255),w,b
  8300  00209A  0100               	movlb	0	; () banked
  8301  00209C  377D               	rlcf	??i2___ftmul& (0+255),f,b
  8302  00209E  E301               	bnc	u353_41
  8303  0020A0  817E               	bsf	(??i2___ftmul+1)& (0+255),0,b
  8304  0020A2                     u353_41:
  8305  0020A2  0100               	movlb	0	; () banked
  8306  0020A4  517D               	movf	??i2___ftmul& (0+255),w,b
  8307  0020A6  0100               	movlb	0	; () banked
  8308  0020A8  6F85               	movwf	i2___ftmul@sign& (0+255),b
  8309  0020AA  0100               	movlb	0	; () banked
  8310  0020AC  5185               	movf	i2___ftmul@sign& (0+255),w,b
  8311  0020AE  A4D8               	btfss	status,2,c
  8312  0020B0  D00A               	goto	i2l3450
  8313  0020B2                     i2l3446:
  8314                           
  8315                           ; BSR set to: 0
  8316  0020B2  0E00               	movlw	0
  8317  0020B4  0100               	movlb	0	; () banked
  8318  0020B6  6F77               	movwf	?i2___ftmul& (0+255),b
  8319  0020B8  0E00               	movlw	0
  8320  0020BA  0100               	movlb	0	; () banked
  8321  0020BC  6F78               	movwf	(?i2___ftmul+1)& (0+255),b
  8322  0020BE  0E00               	movlw	0
  8323  0020C0  0100               	movlb	0	; () banked
  8324  0020C2  6F79               	movwf	(?i2___ftmul+2)& (0+255),b
  8325                           
  8326                           ; BSR set to: 0
  8327  0020C4  D07B               	goto	i2l956
  8328  0020C6                     i2l3450:
  8329                           
  8330                           ; BSR set to: 0
  8331  0020C6  0100               	movlb	0	; () banked
  8332  0020C8  5185               	movf	i2___ftmul@sign& (0+255),w,b
  8333  0020CA  0F7B               	addlw	123
  8334  0020CC  0100               	movlb	0	; () banked
  8335  0020CE  2780               	addwf	i2___ftmul@exp& (0+255),f,b
  8336                           
  8337                           ; BSR set to: 0
  8338  0020D0  C079  F085         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  8339  0020D4  0100               	movlb	0	; () banked
  8340  0020D6  517C               	movf	(i2___ftmul@f2+2)& (0+255),w,b
  8341  0020D8  0100               	movlb	0	; () banked
  8342  0020DA  1B85               	xorwf	i2___ftmul@sign& (0+255),f,b
  8343  0020DC  0E80               	movlw	128
  8344  0020DE  0100               	movlb	0	; () banked
  8345  0020E0  1785               	andwf	i2___ftmul@sign& (0+255),f,b
  8346                           
  8347                           ; BSR set to: 0
  8348  0020E2  0100               	movlb	0	; () banked
  8349  0020E4  8F78               	bsf	(i2___ftmul@f1+1)& (0+255),7,b
  8350                           
  8351                           ; BSR set to: 0
  8352  0020E6  0100               	movlb	0	; () banked
  8353  0020E8  8F7B               	bsf	(i2___ftmul@f2+1)& (0+255),7,b
  8354                           
  8355                           ; BSR set to: 0
  8356  0020EA  0EFF               	movlw	255
  8357  0020EC  0100               	movlb	0	; () banked
  8358  0020EE  177A               	andwf	i2___ftmul@f2& (0+255),f,b
  8359  0020F0  0EFF               	movlw	255
  8360  0020F2  0100               	movlb	0	; () banked
  8361  0020F4  177B               	andwf	(i2___ftmul@f2+1)& (0+255),f,b
  8362  0020F6  0E00               	movlw	0
  8363  0020F8  0100               	movlb	0	; () banked
  8364  0020FA  177C               	andwf	(i2___ftmul@f2+2)& (0+255),f,b
  8365                           
  8366                           ; BSR set to: 0
  8367  0020FC  0E00               	movlw	0
  8368  0020FE  0100               	movlb	0	; () banked
  8369  002100  6F81               	movwf	i2___ftmul@f3_as_product& (0+255),b
  8370  002102  0E00               	movlw	0
  8371  002104  0100               	movlb	0	; () banked
  8372  002106  6F82               	movwf	(i2___ftmul@f3_as_product+1)& (0+255),b
  8373  002108  0E00               	movlw	0
  8374  00210A  0100               	movlb	0	; () banked
  8375  00210C  6F83               	movwf	(i2___ftmul@f3_as_product+2)& (0+255),b
  8376                           
  8377                           ; BSR set to: 0
  8378  00210E  0E07               	movlw	7
  8379  002110  0100               	movlb	0	; () banked
  8380  002112  6F84               	movwf	i2___ftmul@cntr& (0+255),b
  8381  002114  D000               	goto	i2l3464
  8382  002116                     i2l3464:
  8383                           
  8384                           ; BSR set to: 0
  8385  002116  0100               	movlb	0	; () banked
  8386  002118  A177               	btfss	i2___ftmul@f1& (0+255),0,b
  8387  00211A  D00D               	goto	i2l3468
  8388                           
  8389                           ; BSR set to: 0
  8390  00211C  0100               	movlb	0	; () banked
  8391  00211E  517A               	movf	i2___ftmul@f2& (0+255),w,b
  8392  002120  0100               	movlb	0	; () banked
  8393  002122  2781               	addwf	i2___ftmul@f3_as_product& (0+255),f,b
  8394  002124  0100               	movlb	0	; () banked
  8395  002126  517B               	movf	(i2___ftmul@f2+1)& (0+255),w,b
  8396  002128  0100               	movlb	0	; () banked
  8397  00212A  2382               	addwfc	(i2___ftmul@f3_as_product+1)& (0+255),f,b
  8398  00212C  0100               	movlb	0	; () banked
  8399  00212E  517C               	movf	(i2___ftmul@f2+2)& (0+255),w,b
  8400  002130  0100               	movlb	0	; () banked
  8401  002132  2383               	addwfc	(i2___ftmul@f3_as_product+2)& (0+255),f,b
  8402  002134  D000               	goto	i2l3468
  8403  002136                     i2l3468:
  8404                           
  8405                           ; BSR set to: 0
  8406  002136  0100               	movlb	0	; () banked
  8407  002138  90D8               	bcf	status,0,c
  8408  00213A  3379               	rrcf	(i2___ftmul@f1+2)& (0+255),f,b
  8409  00213C  3378               	rrcf	(i2___ftmul@f1+1)& (0+255),f,b
  8410  00213E  3377               	rrcf	i2___ftmul@f1& (0+255),f,b
  8411  002140  0100               	movlb	0	; () banked
  8412  002142  90D8               	bcf	status,0,c
  8413  002144  377A               	rlcf	i2___ftmul@f2& (0+255),f,b
  8414  002146  377B               	rlcf	(i2___ftmul@f2+1)& (0+255),f,b
  8415  002148  377C               	rlcf	(i2___ftmul@f2+2)& (0+255),f,b
  8416                           
  8417                           ; BSR set to: 0
  8418  00214A  0100               	movlb	0	; () banked
  8419  00214C  2F84               	decfsz	i2___ftmul@cntr& (0+255),f,b
  8420  00214E  D7E3               	goto	i2l3464
  8421  002150  D000               	goto	i2l3472
  8422  002152                     i2l3472:
  8423                           
  8424                           ; BSR set to: 0
  8425  002152  0E09               	movlw	9
  8426  002154  0100               	movlb	0	; () banked
  8427  002156  6F84               	movwf	i2___ftmul@cntr& (0+255),b
  8428  002158  D000               	goto	i2l3474
  8429  00215A                     i2l3474:
  8430                           
  8431                           ; BSR set to: 0
  8432  00215A  0100               	movlb	0	; () banked
  8433  00215C  A177               	btfss	i2___ftmul@f1& (0+255),0,b
  8434  00215E  D00D               	goto	i2l3478
  8435                           
  8436                           ; BSR set to: 0
  8437  002160  0100               	movlb	0	; () banked
  8438  002162  517A               	movf	i2___ftmul@f2& (0+255),w,b
  8439  002164  0100               	movlb	0	; () banked
  8440  002166  2781               	addwf	i2___ftmul@f3_as_product& (0+255),f,b
  8441  002168  0100               	movlb	0	; () banked
  8442  00216A  517B               	movf	(i2___ftmul@f2+1)& (0+255),w,b
  8443  00216C  0100               	movlb	0	; () banked
  8444  00216E  2382               	addwfc	(i2___ftmul@f3_as_product+1)& (0+255),f,b
  8445  002170  0100               	movlb	0	; () banked
  8446  002172  517C               	movf	(i2___ftmul@f2+2)& (0+255),w,b
  8447  002174  0100               	movlb	0	; () banked
  8448  002176  2383               	addwfc	(i2___ftmul@f3_as_product+2)& (0+255),f,b
  8449  002178  D000               	goto	i2l3478
  8450  00217A                     i2l3478:
  8451                           
  8452                           ; BSR set to: 0
  8453  00217A  0100               	movlb	0	; () banked
  8454  00217C  90D8               	bcf	status,0,c
  8455  00217E  3379               	rrcf	(i2___ftmul@f1+2)& (0+255),f,b
  8456  002180  3378               	rrcf	(i2___ftmul@f1+1)& (0+255),f,b
  8457  002182  3377               	rrcf	i2___ftmul@f1& (0+255),f,b
  8458  002184  0100               	movlb	0	; () banked
  8459  002186  90D8               	bcf	status,0,c
  8460  002188  3383               	rrcf	(i2___ftmul@f3_as_product+2)& (0+255),f,b
  8461  00218A  3382               	rrcf	(i2___ftmul@f3_as_product+1)& (0+255),f,b
  8462  00218C  3381               	rrcf	i2___ftmul@f3_as_product& (0+255),f,b
  8463                           
  8464                           ; BSR set to: 0
  8465  00218E  0100               	movlb	0	; () banked
  8466  002190  2F84               	decfsz	i2___ftmul@cntr& (0+255),f,b
  8467  002192  D7E3               	goto	i2l3474
  8468  002194  D000               	goto	i2l3482
  8469  002196                     i2l3482:
  8470                           
  8471                           ; BSR set to: 0
  8472  002196  C081  F060         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  8473  00219A  C082  F061         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  8474  00219E  C083  F062         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  8475  0021A2  C080  F063         	movff	i2___ftmul@exp,i2___ftpack@exp
  8476  0021A6  C085  F064         	movff	i2___ftmul@sign,i2___ftpack@sign
  8477  0021AA  ECB7  F012         	call	i2___ftpack	;wreg free
  8478  0021AE  C060  F077         	movff	?i2___ftpack,?i2___ftmul
  8479  0021B2  C061  F078         	movff	?i2___ftpack+1,?i2___ftmul+1
  8480  0021B6  C062  F079         	movff	?i2___ftpack+2,?i2___ftmul+2
  8481  0021BA  D000               	goto	i2l956
  8482  0021BC                     i2l956:
  8483  0021BC  0012               	return		;funcret
  8484  0021BE                     __end_ofi2___ftmul:
  8485                           	opt stack 0
  8486                           pclatu	equ	0xFFB
  8487                           pclath	equ	0xFFA
  8488                           tblptru	equ	0xFF8
  8489                           tblptrh	equ	0xFF7
  8490                           tblptrl	equ	0xFF6
  8491                           tablat	equ	0xFF5
  8492                           prodh	equ	0xFF4
  8493                           prodl	equ	0xFF3
  8494                           intcon	equ	0xFF2
  8495                           intcon2	equ	0xFF1
  8496                           indf0	equ	0xFEF
  8497                           postinc0	equ	0xFEE
  8498                           fsr0h	equ	0xFEA
  8499                           fsr0l	equ	0xFE9
  8500                           wreg	equ	0xFE8
  8501                           indf1	equ	0xFE7
  8502                           fsr1h	equ	0xFE2
  8503                           fsr1l	equ	0xFE1
  8504                           bsr	equ	0xFE0
  8505                           indf2	equ	0xFDF
  8506                           postinc2	equ	0xFDE
  8507                           postdec2	equ	0xFDD
  8508                           fsr2h	equ	0xFDA
  8509                           fsr2l	equ	0xFD9
  8510                           status	equ	0xFD8
  8511                           
  8512 ;; *************** function i2___ftpack *****************
  8513 ;; Defined at:
  8514 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  arg             3    0[BANK0 ] unsigned um
  8517 ;;  exp             1    3[BANK0 ] unsigned char 
  8518 ;;  sign            1    4[BANK0 ] unsigned char 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;		None
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  3    0[BANK0 ] float 
  8523 ;; Registers used:
  8524 ;;		wreg, status,2, status,0
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8530 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8534 ;;Total ram usage:        8 bytes
  8535 ;; Hardware stack levels used:    1
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		___ftadd
  8540 ;;		___lwtoft
  8541 ;;		i2___ftdiv
  8542 ;;		i2___ftmul
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text46
  8547  00256E                     __ptext46:
  8548                           	opt stack 0
  8549  00256E                     i2___ftpack:
  8550                           	opt stack 15
  8551                           
  8552                           ;incstack = 0
  8553  00256E  0100               	movlb	0	; () banked
  8554  002570  5163               	movf	i2___ftpack@exp& (0+255),w,b
  8555  002572  0100               	movlb	0	; () banked
  8556  002574  B4D8               	btfsc	status,2,c
  8557  002576  D008               	goto	i2l2720
  8558                           
  8559                           ; BSR set to: 0
  8560  002578  0100               	movlb	0	; () banked
  8561  00257A  5160               	movf	i2___ftpack@arg& (0+255),w,b
  8562  00257C  0100               	movlb	0	; () banked
  8563  00257E  1161               	iorwf	(i2___ftpack@arg+1)& (0+255),w,b
  8564  002580  0100               	movlb	0	; () banked
  8565  002582  1162               	iorwf	(i2___ftpack@arg+2)& (0+255),w,b
  8566  002584  A4D8               	btfss	status,2,c
  8567  002586  D013               	goto	i2l2726
  8568  002588                     i2l2720:
  8569                           
  8570                           ; BSR set to: 0
  8571  002588  0E00               	movlw	0
  8572  00258A  0100               	movlb	0	; () banked
  8573  00258C  6F60               	movwf	?i2___ftpack& (0+255),b
  8574  00258E  0E00               	movlw	0
  8575  002590  0100               	movlb	0	; () banked
  8576  002592  6F61               	movwf	(?i2___ftpack+1)& (0+255),b
  8577  002594  0E00               	movlw	0
  8578  002596  0100               	movlb	0	; () banked
  8579  002598  6F62               	movwf	(?i2___ftpack+2)& (0+255),b
  8580                           
  8581                           ; BSR set to: 0
  8582  00259A  D078               	goto	i2l869
  8583                           
  8584                           ; BSR set to: 0
  8585  00259C  D008               	goto	i2l2726
  8586  00259E                     i2l2724:
  8587                           
  8588                           ; BSR set to: 0
  8589  00259E  0100               	movlb	0	; () banked
  8590  0025A0  2B63               	incf	i2___ftpack@exp& (0+255),f,b
  8591  0025A2  0100               	movlb	0	; () banked
  8592  0025A4  90D8               	bcf	status,0,c
  8593  0025A6  3362               	rrcf	(i2___ftpack@arg+2)& (0+255),f,b
  8594  0025A8  3361               	rrcf	(i2___ftpack@arg+1)& (0+255),f,b
  8595  0025AA  3360               	rrcf	i2___ftpack@arg& (0+255),f,b
  8596  0025AC  D000               	goto	i2l2726
  8597  0025AE                     i2l2726:
  8598                           
  8599                           ; BSR set to: 0
  8600  0025AE  0E00               	movlw	0
  8601  0025B0  0100               	movlb	0	; () banked
  8602  0025B2  1560               	andwf	i2___ftpack@arg& (0+255),w,b
  8603  0025B4  0100               	movlb	0	; () banked
  8604  0025B6  6F65               	movwf	??i2___ftpack& (0+255),b
  8605  0025B8  0E00               	movlw	0
  8606  0025BA  0100               	movlb	0	; () banked
  8607  0025BC  1561               	andwf	(i2___ftpack@arg+1)& (0+255),w,b
  8608  0025BE  0100               	movlb	0	; () banked
  8609  0025C0  6F66               	movwf	(??i2___ftpack+1)& (0+255),b
  8610  0025C2  0EFE               	movlw	254
  8611  0025C4  0100               	movlb	0	; () banked
  8612  0025C6  1562               	andwf	(i2___ftpack@arg+2)& (0+255),w,b
  8613  0025C8  0100               	movlb	0	; () banked
  8614  0025CA  6F67               	movwf	(??i2___ftpack+2)& (0+255),b
  8615  0025CC  0100               	movlb	0	; () banked
  8616  0025CE  5165               	movf	??i2___ftpack& (0+255),w,b
  8617  0025D0  0100               	movlb	0	; () banked
  8618  0025D2  1166               	iorwf	(??i2___ftpack+1)& (0+255),w,b
  8619  0025D4  0100               	movlb	0	; () banked
  8620  0025D6  1167               	iorwf	(??i2___ftpack+2)& (0+255),w,b
  8621  0025D8  B4D8               	btfsc	status,2,c
  8622  0025DA  D013               	goto	i2l2732
  8623  0025DC  D7E0               	goto	i2l2724
  8624                           
  8625                           ; BSR set to: 0
  8626  0025DE  D011               	goto	i2l2732
  8627  0025E0                     i2l2728:
  8628                           
  8629                           ; BSR set to: 0
  8630  0025E0  0100               	movlb	0	; () banked
  8631  0025E2  2B63               	incf	i2___ftpack@exp& (0+255),f,b
  8632                           
  8633                           ; BSR set to: 0
  8634  0025E4  0E01               	movlw	1
  8635  0025E6  0100               	movlb	0	; () banked
  8636  0025E8  2760               	addwf	i2___ftpack@arg& (0+255),f,b
  8637  0025EA  0E00               	movlw	0
  8638  0025EC  0100               	movlb	0	; () banked
  8639  0025EE  2361               	addwfc	(i2___ftpack@arg+1)& (0+255),f,b
  8640  0025F0  0E00               	movlw	0
  8641  0025F2  0100               	movlb	0	; () banked
  8642  0025F4  2362               	addwfc	(i2___ftpack@arg+2)& (0+255),f,b
  8643  0025F6  0100               	movlb	0	; () banked
  8644  0025F8  90D8               	bcf	status,0,c
  8645  0025FA  3362               	rrcf	(i2___ftpack@arg+2)& (0+255),f,b
  8646  0025FC  3361               	rrcf	(i2___ftpack@arg+1)& (0+255),f,b
  8647  0025FE  3360               	rrcf	i2___ftpack@arg& (0+255),f,b
  8648  002600  D000               	goto	i2l2732
  8649  002602                     i2l2732:
  8650                           
  8651                           ; BSR set to: 0
  8652  002602  0E00               	movlw	0
  8653  002604  0100               	movlb	0	; () banked
  8654  002606  1560               	andwf	i2___ftpack@arg& (0+255),w,b
  8655  002608  0100               	movlb	0	; () banked
  8656  00260A  6F65               	movwf	??i2___ftpack& (0+255),b
  8657  00260C  0E00               	movlw	0
  8658  00260E  0100               	movlb	0	; () banked
  8659  002610  1561               	andwf	(i2___ftpack@arg+1)& (0+255),w,b
  8660  002612  0100               	movlb	0	; () banked
  8661  002614  6F66               	movwf	(??i2___ftpack+1)& (0+255),b
  8662  002616  0EFF               	movlw	255
  8663  002618  0100               	movlb	0	; () banked
  8664  00261A  1562               	andwf	(i2___ftpack@arg+2)& (0+255),w,b
  8665  00261C  0100               	movlb	0	; () banked
  8666  00261E  6F67               	movwf	(??i2___ftpack+2)& (0+255),b
  8667  002620  0100               	movlb	0	; () banked
  8668  002622  5165               	movf	??i2___ftpack& (0+255),w,b
  8669  002624  0100               	movlb	0	; () banked
  8670  002626  1166               	iorwf	(??i2___ftpack+1)& (0+255),w,b
  8671  002628  0100               	movlb	0	; () banked
  8672  00262A  1167               	iorwf	(??i2___ftpack+2)& (0+255),w,b
  8673  00262C  B4D8               	btfsc	status,2,c
  8674  00262E  D00A               	goto	i2l2736
  8675  002630  D7D7               	goto	i2l2728
  8676                           
  8677                           ; BSR set to: 0
  8678  002632  D008               	goto	i2l2736
  8679  002634                     i2l2734:
  8680                           
  8681                           ; BSR set to: 0
  8682  002634  0100               	movlb	0	; () banked
  8683  002636  0763               	decf	i2___ftpack@exp& (0+255),f,b
  8684  002638  0100               	movlb	0	; () banked
  8685  00263A  90D8               	bcf	status,0,c
  8686  00263C  3760               	rlcf	i2___ftpack@arg& (0+255),f,b
  8687  00263E  3761               	rlcf	(i2___ftpack@arg+1)& (0+255),f,b
  8688  002640  3762               	rlcf	(i2___ftpack@arg+2)& (0+255),f,b
  8689  002642  D000               	goto	i2l2736
  8690  002644                     i2l2736:
  8691                           
  8692                           ; BSR set to: 0
  8693  002644  0100               	movlb	0	; () banked
  8694  002646  BF61               	btfsc	(i2___ftpack@arg+1)& (0+255),7,b
  8695  002648  D005               	goto	i2l880
  8696                           
  8697                           ; BSR set to: 0
  8698  00264A  0E02               	movlw	2
  8699  00264C  0100               	movlb	0	; () banked
  8700  00264E  6163               	cpfslt	i2___ftpack@exp& (0+255),b
  8701  002650  D7F1               	goto	i2l2734
  8702  002652  D000               	goto	i2l880
  8703  002654                     i2l880:
  8704                           
  8705                           ; BSR set to: 0
  8706  002654  0100               	movlb	0	; () banked
  8707  002656  B163               	btfsc	i2___ftpack@exp& (0+255),0,b
  8708  002658  D003               	goto	i2l2742
  8709                           
  8710                           ; BSR set to: 0
  8711  00265A  0100               	movlb	0	; () banked
  8712  00265C  9F61               	bcf	(i2___ftpack@arg+1)& (0+255),7,b
  8713  00265E  D000               	goto	i2l2742
  8714  002660                     i2l2742:
  8715                           
  8716                           ; BSR set to: 0
  8717  002660  0100               	movlb	0	; () banked
  8718  002662  90D8               	bcf	status,0,c
  8719  002664  3363               	rrcf	i2___ftpack@exp& (0+255),f,b
  8720  002666  0100               	movlb	0	; () banked
  8721  002668  5163               	movf	i2___ftpack@exp& (0+255),w,b
  8722  00266A  0100               	movlb	0	; () banked
  8723  00266C  1362               	iorwf	(i2___ftpack@arg+2)& (0+255),f,b
  8724                           
  8725                           ; BSR set to: 0
  8726  00266E  0100               	movlb	0	; () banked
  8727  002670  5164               	movf	i2___ftpack@sign& (0+255),w,b
  8728  002672  0100               	movlb	0	; () banked
  8729  002674  B4D8               	btfsc	status,2,c
  8730  002676  D003               	goto	i2l2748
  8731                           
  8732                           ; BSR set to: 0
  8733  002678  0100               	movlb	0	; () banked
  8734  00267A  8F62               	bsf	(i2___ftpack@arg+2)& (0+255),7,b
  8735  00267C  D000               	goto	i2l2748
  8736  00267E                     i2l2748:
  8737                           
  8738                           ; BSR set to: 0
  8739  00267E  C060  F060         	movff	i2___ftpack@arg,?i2___ftpack
  8740  002682  C061  F061         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  8741  002686  C062  F062         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  8742  00268A  D000               	goto	i2l869
  8743  00268C                     i2l869:
  8744                           
  8745                           ; BSR set to: 0
  8746  00268C  0012               	return		;funcret
  8747  00268E                     __end_ofi2___ftpack:
  8748                           	opt stack 0
  8749                           pclatu	equ	0xFFB
  8750                           pclath	equ	0xFFA
  8751                           tblptru	equ	0xFF8
  8752                           tblptrh	equ	0xFF7
  8753                           tblptrl	equ	0xFF6
  8754                           tablat	equ	0xFF5
  8755                           prodh	equ	0xFF4
  8756                           prodl	equ	0xFF3
  8757                           intcon	equ	0xFF2
  8758                           intcon2	equ	0xFF1
  8759                           indf0	equ	0xFEF
  8760                           postinc0	equ	0xFEE
  8761                           fsr0h	equ	0xFEA
  8762                           fsr0l	equ	0xFE9
  8763                           wreg	equ	0xFE8
  8764                           indf1	equ	0xFE7
  8765                           fsr1h	equ	0xFE2
  8766                           fsr1l	equ	0xFE1
  8767                           bsr	equ	0xFE0
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           fsr2h	equ	0xFDA
  8772                           fsr2l	equ	0xFD9
  8773                           status	equ	0xFD8
  8774                           
  8775 ;; *************** function _lcdGoTo *****************
  8776 ;; Defined at:
  8777 ;;		line 78 in file "LCD.h"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  pos             1    wreg     unsigned char 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;  pos             1    5[BANK0 ] unsigned char 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;		None               void
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;Total ram usage:        1 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    3
  8798 ;; This function calls:
  8799 ;;		i2_lcdCommand
  8800 ;; This function is called by:
  8801 ;;		_LCDBreakDouble
  8802 ;;		_lcdPrint
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text47
  8807  00349E                     __ptext47:
  8808                           	opt stack 0
  8809  00349E                     _lcdGoTo:
  8810                           	opt stack 13
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;incstack = 0
  8814                           ;lcdGoTo@pos stored from wreg
  8815  00349E  0100               	movlb	0	; () banked
  8816  0034A0  6F65               	movwf	lcdGoTo@pos& (0+255),b
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;LCD.h: 81: lcdCommand(0x80+pos);
  8820  0034A2  0100               	movlb	0	; () banked
  8821  0034A4  5165               	movf	lcdGoTo@pos& (0+255),w,b
  8822  0034A6  0F80               	addlw	128
  8823  0034A8  EC61  F018         	call	i2_lcdCommand
  8824  0034AC  0012               	return		;funcret
  8825  0034AE                     __end_of_lcdGoTo:
  8826                           	opt stack 0
  8827                           pclatu	equ	0xFFB
  8828                           pclath	equ	0xFFA
  8829                           tblptru	equ	0xFF8
  8830                           tblptrh	equ	0xFF7
  8831                           tblptrl	equ	0xFF6
  8832                           tablat	equ	0xFF5
  8833                           prodh	equ	0xFF4
  8834                           prodl	equ	0xFF3
  8835                           intcon	equ	0xFF2
  8836                           intcon2	equ	0xFF1
  8837                           indf0	equ	0xFEF
  8838                           postinc0	equ	0xFEE
  8839                           fsr0h	equ	0xFEA
  8840                           fsr0l	equ	0xFE9
  8841                           wreg	equ	0xFE8
  8842                           indf1	equ	0xFE7
  8843                           fsr1h	equ	0xFE2
  8844                           fsr1l	equ	0xFE1
  8845                           bsr	equ	0xFE0
  8846                           indf2	equ	0xFDF
  8847                           postinc2	equ	0xFDE
  8848                           postdec2	equ	0xFDD
  8849                           fsr2h	equ	0xFDA
  8850                           fsr2l	equ	0xFD9
  8851                           status	equ	0xFD8
  8852                           
  8853 ;; *************** function i2_lcdCommand *****************
  8854 ;; Defined at:
  8855 ;;		line 54 in file "LCD.h"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  command         1    wreg     unsigned char 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  command         1    4[BANK0 ] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;		None               void
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8873 ;;Total ram usage:        1 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:    2
  8876 ;; This function calls:
  8877 ;;		i2_Delay10TCYx
  8878 ;;		i2_setGPIO
  8879 ;; This function is called by:
  8880 ;;		_lcdGoTo
  8881 ;;		_LCDBreakDouble
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           	psect	text48
  8886  0030C2                     __ptext48:
  8887                           	opt stack 0
  8888  0030C2                     i2_lcdCommand:
  8889                           	opt stack 14
  8890                           
  8891                           ;incstack = 0
  8892                           ;i2lcdCommand@command stored from wreg
  8893  0030C2  0100               	movlb	0	; () banked
  8894  0030C4  6F64               	movwf	i2lcdCommand@command& (0+255),b
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;LCD.h: 56: setGPIO(0x12,0x00);
  8898  0030C6  0E00               	movlw	0
  8899  0030C8  0100               	movlb	0	; () banked
  8900  0030CA  6F62               	movwf	i2setGPIO@value& (0+255),b
  8901  0030CC  0E12               	movlw	18
  8902  0030CE  ECF2  F019         	call	i2_setGPIO
  8903                           
  8904                           ;LCD.h: 57: Delay10TCYx(0);
  8905  0030D2  0E00               	movlw	0
  8906  0030D4  EC34  F01A         	call	i2_Delay10TCYx
  8907                           
  8908                           ;LCD.h: 58: setGPIO(0x13, command);
  8909  0030D8  C064  F062         	movff	i2lcdCommand@command,i2setGPIO@value
  8910  0030DC  0E13               	movlw	19
  8911  0030DE  ECF2  F019         	call	i2_setGPIO
  8912                           
  8913                           ;LCD.h: 59: Delay10TCYx(0);
  8914  0030E2  0E00               	movlw	0
  8915  0030E4  EC34  F01A         	call	i2_Delay10TCYx
  8916                           
  8917                           ;LCD.h: 60: setGPIO(0x12,0x40);
  8918  0030E8  0E40               	movlw	64
  8919  0030EA  0100               	movlb	0	; () banked
  8920  0030EC  6F62               	movwf	i2setGPIO@value& (0+255),b
  8921  0030EE  0E12               	movlw	18
  8922  0030F0  ECF2  F019         	call	i2_setGPIO
  8923                           
  8924                           ;LCD.h: 61: Delay10TCYx(0);
  8925  0030F4  0E00               	movlw	0
  8926  0030F6  EC34  F01A         	call	i2_Delay10TCYx
  8927                           
  8928                           ;LCD.h: 62: setGPIO(0x12,0x00);
  8929  0030FA  0E00               	movlw	0
  8930  0030FC  0100               	movlb	0	; () banked
  8931  0030FE  6F62               	movwf	i2setGPIO@value& (0+255),b
  8932  003100  0E12               	movlw	18
  8933  003102  ECF2  F019         	call	i2_setGPIO
  8934                           
  8935                           ;LCD.h: 63: Delay10TCYx(0);
  8936  003106  0E00               	movlw	0
  8937  003108  EC34  F01A         	call	i2_Delay10TCYx
  8938  00310C  0012               	return		;funcret
  8939  00310E                     __end_ofi2_lcdCommand:
  8940                           	opt stack 0
  8941                           pclatu	equ	0xFFB
  8942                           pclath	equ	0xFFA
  8943                           tblptru	equ	0xFF8
  8944                           tblptrh	equ	0xFF7
  8945                           tblptrl	equ	0xFF6
  8946                           tablat	equ	0xFF5
  8947                           prodh	equ	0xFF4
  8948                           prodl	equ	0xFF3
  8949                           intcon	equ	0xFF2
  8950                           intcon2	equ	0xFF1
  8951                           indf0	equ	0xFEF
  8952                           postinc0	equ	0xFEE
  8953                           fsr0h	equ	0xFEA
  8954                           fsr0l	equ	0xFE9
  8955                           wreg	equ	0xFE8
  8956                           indf1	equ	0xFE7
  8957                           fsr1h	equ	0xFE2
  8958                           fsr1l	equ	0xFE1
  8959                           bsr	equ	0xFE0
  8960                           indf2	equ	0xFDF
  8961                           postinc2	equ	0xFDE
  8962                           postdec2	equ	0xFDD
  8963                           fsr2h	equ	0xFDA
  8964                           fsr2l	equ	0xFD9
  8965                           status	equ	0xFD8
  8966                           
  8967 ;; *************** function _lcdChar *****************
  8968 ;; Defined at:
  8969 ;;		line 66 in file "LCD.h"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  letter          1    wreg     unsigned char 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;  letter          1    4[BANK0 ] unsigned char 
  8974 ;; Return value:  Size  Location     Type
  8975 ;;		None               void
  8976 ;; Registers used:
  8977 ;;		wreg, status,2, cstack
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;Total ram usage:        1 bytes
  8988 ;; Hardware stack levels used:    1
  8989 ;; Hardware stack levels required when called:    2
  8990 ;; This function calls:
  8991 ;;		i2_Delay10TCYx
  8992 ;;		i2_setGPIO
  8993 ;; This function is called by:
  8994 ;;		_LCDBreakDouble
  8995 ;;		_lcdWriteString
  8996 ;;		_lcdPrint
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text49
  9001  003154                     __ptext49:
  9002                           	opt stack 0
  9003  003154                     _lcdChar:
  9004                           	opt stack 14
  9005                           
  9006                           ;incstack = 0
  9007                           ;lcdChar@letter stored from wreg
  9008  003154  0100               	movlb	0	; () banked
  9009  003156  6F64               	movwf	lcdChar@letter& (0+255),b
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;LCD.h: 68: setGPIO(0x12,0x80);
  9013  003158  0E80               	movlw	128
  9014  00315A  0100               	movlb	0	; () banked
  9015  00315C  6F62               	movwf	i2setGPIO@value& (0+255),b
  9016  00315E  0E12               	movlw	18
  9017  003160  ECF2  F019         	call	i2_setGPIO
  9018                           
  9019                           ;LCD.h: 69: Delay10TCYx(0);
  9020  003164  0E00               	movlw	0
  9021  003166  EC34  F01A         	call	i2_Delay10TCYx
  9022                           
  9023                           ;LCD.h: 70: setGPIO(0x13,letter);
  9024  00316A  C064  F062         	movff	lcdChar@letter,i2setGPIO@value
  9025  00316E  0E13               	movlw	19
  9026  003170  ECF2  F019         	call	i2_setGPIO
  9027                           
  9028                           ;LCD.h: 72: setGPIO(0x12, 0xc0);
  9029  003174  0EC0               	movlw	192
  9030  003176  0100               	movlb	0	; () banked
  9031  003178  6F62               	movwf	i2setGPIO@value& (0+255),b
  9032  00317A  0E12               	movlw	18
  9033  00317C  ECF2  F019         	call	i2_setGPIO
  9034                           
  9035                           ;LCD.h: 73: Delay10TCYx(0);
  9036  003180  0E00               	movlw	0
  9037  003182  EC34  F01A         	call	i2_Delay10TCYx
  9038                           
  9039                           ;LCD.h: 74: setGPIO(0x12,0x00);
  9040  003186  0E00               	movlw	0
  9041  003188  0100               	movlb	0	; () banked
  9042  00318A  6F62               	movwf	i2setGPIO@value& (0+255),b
  9043  00318C  0E12               	movlw	18
  9044  00318E  ECF2  F019         	call	i2_setGPIO
  9045                           
  9046                           ;LCD.h: 75: Delay10TCYx(0);
  9047  003192  0E00               	movlw	0
  9048  003194  EC34  F01A         	call	i2_Delay10TCYx
  9049  003198  0012               	return		;funcret
  9050  00319A                     __end_of_lcdChar:
  9051                           	opt stack 0
  9052                           pclatu	equ	0xFFB
  9053                           pclath	equ	0xFFA
  9054                           tblptru	equ	0xFF8
  9055                           tblptrh	equ	0xFF7
  9056                           tblptrl	equ	0xFF6
  9057                           tablat	equ	0xFF5
  9058                           prodh	equ	0xFF4
  9059                           prodl	equ	0xFF3
  9060                           intcon	equ	0xFF2
  9061                           intcon2	equ	0xFF1
  9062                           indf0	equ	0xFEF
  9063                           postinc0	equ	0xFEE
  9064                           fsr0h	equ	0xFEA
  9065                           fsr0l	equ	0xFE9
  9066                           wreg	equ	0xFE8
  9067                           indf1	equ	0xFE7
  9068                           fsr1h	equ	0xFE2
  9069                           fsr1l	equ	0xFE1
  9070                           bsr	equ	0xFE0
  9071                           indf2	equ	0xFDF
  9072                           postinc2	equ	0xFDE
  9073                           postdec2	equ	0xFDD
  9074                           fsr2h	equ	0xFDA
  9075                           fsr2l	equ	0xFD9
  9076                           status	equ	0xFD8
  9077                           
  9078 ;; *************** function i2_setGPIO *****************
  9079 ;; Defined at:
  9080 ;;		line 34 in file "LCD.h"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  address         1    wreg     unsigned char 
  9083 ;;  value           1    2[BANK0 ] unsigned char 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  address         1    3[BANK0 ] unsigned char 
  9086 ;; Return value:  Size  Location     Type
  9087 ;;		None               void
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, cstack
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9095 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9099 ;;Total ram usage:        2 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    1
  9102 ;; This function calls:
  9103 ;;		i2_WriteSPI1
  9104 ;; This function is called by:
  9105 ;;		_lcdChar
  9106 ;;		i2_lcdCommand
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text50
  9111  0033E4                     __ptext50:
  9112                           	opt stack 0
  9113  0033E4                     i2_setGPIO:
  9114                           	opt stack 14
  9115                           
  9116                           ;incstack = 0
  9117                           ;i2setGPIO@address stored from wreg
  9118  0033E4  0100               	movlb	0	; () banked
  9119  0033E6  6F63               	movwf	i2setGPIO@address& (0+255),b
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;LCD.h: 36: PORTAbits.RA2=0;
  9123  0033E8  9480               	bcf	3968,2,c	;volatile
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;LCD.h: 39: WriteSPI1(0x40);
  9127  0033EA  0E40               	movlw	64
  9128  0033EC  ECAF  F019         	call	i2_WriteSPI1
  9129                           
  9130                           ;LCD.h: 40: WriteSPI1(address);
  9131  0033F0  0100               	movlb	0	; () banked
  9132  0033F2  5163               	movf	i2setGPIO@address& (0+255),w,b
  9133  0033F4  ECAF  F019         	call	i2_WriteSPI1
  9134                           
  9135                           ;LCD.h: 41: WriteSPI1(value);
  9136  0033F8  0100               	movlb	0	; () banked
  9137  0033FA  5162               	movf	i2setGPIO@value& (0+255),w,b
  9138  0033FC  ECAF  F019         	call	i2_WriteSPI1
  9139                           
  9140                           ;LCD.h: 42: PORTAbits.RA2=1;
  9141  003400  8480               	bsf	3968,2,c	;volatile
  9142  003402  0012               	return		;funcret
  9143  003404                     __end_ofi2_setGPIO:
  9144                           	opt stack 0
  9145                           pclatu	equ	0xFFB
  9146                           pclath	equ	0xFFA
  9147                           tblptru	equ	0xFF8
  9148                           tblptrh	equ	0xFF7
  9149                           tblptrl	equ	0xFF6
  9150                           tablat	equ	0xFF5
  9151                           prodh	equ	0xFF4
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           intcon2	equ	0xFF1
  9155                           indf0	equ	0xFEF
  9156                           postinc0	equ	0xFEE
  9157                           fsr0h	equ	0xFEA
  9158                           fsr0l	equ	0xFE9
  9159                           wreg	equ	0xFE8
  9160                           indf1	equ	0xFE7
  9161                           fsr1h	equ	0xFE2
  9162                           fsr1l	equ	0xFE1
  9163                           bsr	equ	0xFE0
  9164                           indf2	equ	0xFDF
  9165                           postinc2	equ	0xFDE
  9166                           postdec2	equ	0xFDD
  9167                           fsr2h	equ	0xFDA
  9168                           fsr2l	equ	0xFD9
  9169                           status	equ	0xFD8
  9170                           
  9171 ;; *************** function i2_WriteSPI1 *****************
  9172 ;; Defined at:
  9173 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  data_out        1    wreg     unsigned char 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  data_out        1    1[BANK0 ] unsigned char 
  9178 ;;  WriteSPI1       1    0[BANK0 ] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      char 
  9181 ;; Registers used:
  9182 ;;		wreg
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;Total ram usage:        2 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; This function calls:
  9195 ;;		Nothing
  9196 ;; This function is called by:
  9197 ;;		i2_setGPIO
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text51
  9202  00335E                     __ptext51:
  9203                           	opt stack 0
  9204  00335E                     i2_WriteSPI1:
  9205                           	opt stack 14
  9206                           
  9207                           ;incstack = 0
  9208                           ;i2WriteSPI1@data_out stored from wreg
  9209  00335E  0100               	movlb	0	; () banked
  9210  003360  6F61               	movwf	i2WriteSPI1@data_out& (0+255),b
  9211                           
  9212                           ; BSR set to: 0
  9213  003362  CFC9 F060          	movff	4041,i2WriteSPI1@TempVar	;volatile
  9214  003366  969E               	bcf	3998,3,c	;volatile
  9215  003368  9EC6               	bcf	4038,7,c	;volatile
  9216                           
  9217                           ; BSR set to: 0
  9218  00336A  C061  FFC9         	movff	i2WriteSPI1@data_out,4041	;volatile
  9219                           
  9220                           ; BSR set to: 0
  9221  00336E  BEC6               	btfsc	4038,7,c	;volatile
  9222  003370  D007               	goto	i2l468
  9223  003372  D002               	goto	i2l470
  9224                           
  9225                           ; BSR set to: 0
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;	Return value of i2_WriteSPI1 is never used
  9229  003374  D005               	goto	i2l468
  9230                           
  9231                           ; BSR set to: 0
  9232  003376  D000               	goto	i2l470
  9233  003378                     i2l470:
  9234  003378  B69E               	btfsc	3998,3,c	;volatile
  9235  00337A  D002               	goto	i2l468
  9236  00337C  D7FD               	goto	i2l470
  9237  00337E  D000               	goto	i2l468
  9238  003380                     i2l468:
  9239  003380  0012               	return		;funcret
  9240  003382                     __end_ofi2_WriteSPI1:
  9241                           	opt stack 0
  9242                           pclatu	equ	0xFFB
  9243                           pclath	equ	0xFFA
  9244                           tblptru	equ	0xFF8
  9245                           tblptrh	equ	0xFF7
  9246                           tblptrl	equ	0xFF6
  9247                           tablat	equ	0xFF5
  9248                           prodh	equ	0xFF4
  9249                           prodl	equ	0xFF3
  9250                           intcon	equ	0xFF2
  9251                           intcon2	equ	0xFF1
  9252                           indf0	equ	0xFEF
  9253                           postinc0	equ	0xFEE
  9254                           fsr0h	equ	0xFEA
  9255                           fsr0l	equ	0xFE9
  9256                           wreg	equ	0xFE8
  9257                           indf1	equ	0xFE7
  9258                           fsr1h	equ	0xFE2
  9259                           fsr1l	equ	0xFE1
  9260                           bsr	equ	0xFE0
  9261                           indf2	equ	0xFDF
  9262                           postinc2	equ	0xFDE
  9263                           postdec2	equ	0xFDD
  9264                           fsr2h	equ	0xFDA
  9265                           fsr2l	equ	0xFD9
  9266                           status	equ	0xFD8
  9267                           
  9268 ;; *************** function i2_Delay10TCYx *****************
  9269 ;; Defined at:
  9270 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  unit            1    wreg     unsigned char 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  unit            1    0[BANK0 ] unsigned char 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;		None               void
  9277 ;; Registers used:
  9278 ;;		wreg
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;Total ram usage:        1 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; This function calls:
  9291 ;;		Nothing
  9292 ;; This function is called by:
  9293 ;;		_lcdChar
  9294 ;;		_ReadRTDpos
  9295 ;;		i2_lcdCommand
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text52
  9300  003468                     __ptext52:
  9301                           	opt stack 0
  9302  003468                     i2_Delay10TCYx:
  9303                           	opt stack 16
  9304                           
  9305                           ;incstack = 0
  9306                           ;i2Delay10TCYx@unit stored from wreg
  9307  003468  0100               	movlb	0	; () banked
  9308  00346A  6F60               	movwf	i2Delay10TCYx@unit& (0+255),b
  9309  00346C                     
  9310                           ; BSR set to: 0
  9311  00346C  0E03               	movlw	3
  9312  00346E                     i2u433_47:
  9313  00346E  2EE8               	decfsz	wreg,f,c
  9314  003470  D7FE               	goto	i2u433_47
  9315  003472  F000               	nop	
  9316  003474  0100               	movlb	0	; () banked
  9317  003476  2F60               	decfsz	i2Delay10TCYx@unit& (0+255),f,b
  9318  003478  D7F9               	goto	i2l2712
  9319  00347A  D000               	goto	i2l765
  9320  00347C                     i2l765:
  9321                           
  9322                           ; BSR set to: 0
  9323  00347C  0012               	return		;funcret
  9324  00347E                     __end_ofi2_Delay10TCYx:
  9325                           	opt stack 0
  9326                           pclatu	equ	0xFFB
  9327                           pclath	equ	0xFFA
  9328                           tblptru	equ	0xFF8
  9329                           tblptrh	equ	0xFF7
  9330                           tblptrl	equ	0xFF6
  9331                           tablat	equ	0xFF5
  9332                           prodh	equ	0xFF4
  9333                           prodl	equ	0xFF3
  9334                           intcon	equ	0xFF2
  9335                           intcon2	equ	0xFF1
  9336                           indf0	equ	0xFEF
  9337                           postinc0	equ	0xFEE
  9338                           fsr0h	equ	0xFEA
  9339                           fsr0l	equ	0xFE9
  9340                           wreg	equ	0xFE8
  9341                           indf1	equ	0xFE7
  9342                           fsr1h	equ	0xFE2
  9343                           fsr1l	equ	0xFE1
  9344                           bsr	equ	0xFE0
  9345                           indf2	equ	0xFDF
  9346                           postinc2	equ	0xFDE
  9347                           postdec2	equ	0xFDD
  9348                           fsr2h	equ	0xFDA
  9349                           fsr2l	equ	0xFD9
  9350                           status	equ	0xFD8
  9351                           
  9352 ;; *************** function ___lwmod *****************
  9353 ;; Defined at:
  9354 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  dividend        2    0[BANK0 ] unsigned int 
  9357 ;;  divisor         2    2[BANK0 ] unsigned int 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  counter         1    4[BANK0 ] unsigned char 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  2    0[BANK0 ] unsigned int 
  9362 ;; Registers used:
  9363 ;;		wreg, status,2, status,0
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9372 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9373 ;;Total ram usage:        5 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_LCDBreakDouble
  9379 ;;		_breakDouble
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text53
  9384  002CF8                     __ptext53:
  9385                           	opt stack 0
  9386  002CF8                     ___lwmod:
  9387                           	opt stack 16
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;incstack = 0
  9391  002CF8  0100               	movlb	0	; () banked
  9392  002CFA  5162               	movf	___lwmod@divisor& (0+255),w,b
  9393  002CFC  0100               	movlb	0	; () banked
  9394  002CFE  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9395  002D00  B4D8               	btfsc	status,2,c
  9396  002D02  D02B               	goto	i2l1099
  9397                           
  9398                           ; BSR set to: 0
  9399  002D04  0E01               	movlw	1
  9400  002D06  0100               	movlb	0	; () banked
  9401  002D08  6F64               	movwf	___lwmod@counter& (0+255),b
  9402  002D0A  D007               	goto	i2l3352
  9403  002D0C                     i2l3350:
  9404                           
  9405                           ; BSR set to: 0
  9406  002D0C  0100               	movlb	0	; () banked
  9407  002D0E  90D8               	bcf	status,0,c
  9408  002D10  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  9409  002D12  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9410  002D14  0100               	movlb	0	; () banked
  9411  002D16  2B64               	incf	___lwmod@counter& (0+255),f,b
  9412  002D18  D000               	goto	i2l3352
  9413  002D1A                     i2l3352:
  9414                           
  9415                           ; BSR set to: 0
  9416  002D1A  0100               	movlb	0	; () banked
  9417  002D1C  BF63               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  9418  002D1E  D002               	goto	i2l3354
  9419  002D20  D7F5               	goto	i2l3350
  9420                           
  9421                           ; BSR set to: 0
  9422  002D22  D000               	goto	i2l3354
  9423  002D24                     i2l3354:
  9424                           
  9425                           ; BSR set to: 0
  9426  002D24  0100               	movlb	0	; () banked
  9427  002D26  5162               	movf	___lwmod@divisor& (0+255),w,b
  9428  002D28  0100               	movlb	0	; () banked
  9429  002D2A  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  9430  002D2C  0100               	movlb	0	; () banked
  9431  002D2E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9432  002D30  0100               	movlb	0	; () banked
  9433  002D32  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9434  002D34  A0D8               	btfss	status,0,c
  9435  002D36  D009               	goto	i2l3358
  9436                           
  9437                           ; BSR set to: 0
  9438  002D38  0100               	movlb	0	; () banked
  9439  002D3A  5162               	movf	___lwmod@divisor& (0+255),w,b
  9440  002D3C  0100               	movlb	0	; () banked
  9441  002D3E  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  9442  002D40  0100               	movlb	0	; () banked
  9443  002D42  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9444  002D44  0100               	movlb	0	; () banked
  9445  002D46  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9446  002D48  D000               	goto	i2l3358
  9447  002D4A                     i2l3358:
  9448                           
  9449                           ; BSR set to: 0
  9450  002D4A  0100               	movlb	0	; () banked
  9451  002D4C  90D8               	bcf	status,0,c
  9452  002D4E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9453  002D50  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  9454                           
  9455                           ; BSR set to: 0
  9456  002D52  0100               	movlb	0	; () banked
  9457  002D54  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  9458  002D56  D7E6               	goto	i2l3354
  9459  002D58  D000               	goto	i2l1099
  9460  002D5A                     i2l1099:
  9461                           
  9462                           ; BSR set to: 0
  9463  002D5A  C060  F060         	movff	___lwmod@dividend,?___lwmod
  9464  002D5E  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  9465                           
  9466                           ; BSR set to: 0
  9467  002D62  0012               	return		;funcret
  9468  002D64                     __end_of___lwmod:
  9469                           	opt stack 0
  9470                           pclatu	equ	0xFFB
  9471                           pclath	equ	0xFFA
  9472                           tblptru	equ	0xFF8
  9473                           tblptrh	equ	0xFF7
  9474                           tblptrl	equ	0xFF6
  9475                           tablat	equ	0xFF5
  9476                           prodh	equ	0xFF4
  9477                           prodl	equ	0xFF3
  9478                           intcon	equ	0xFF2
  9479                           intcon2	equ	0xFF1
  9480                           indf0	equ	0xFEF
  9481                           postinc0	equ	0xFEE
  9482                           fsr0h	equ	0xFEA
  9483                           fsr0l	equ	0xFE9
  9484                           wreg	equ	0xFE8
  9485                           indf1	equ	0xFE7
  9486                           fsr1h	equ	0xFE2
  9487                           fsr1l	equ	0xFE1
  9488                           bsr	equ	0xFE0
  9489                           indf2	equ	0xFDF
  9490                           postinc2	equ	0xFDE
  9491                           postdec2	equ	0xFDD
  9492                           fsr2h	equ	0xFDA
  9493                           fsr2l	equ	0xFD9
  9494                           status	equ	0xFD8
  9495                           
  9496 ;; *************** function ___lwdiv *****************
  9497 ;; Defined at:
  9498 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  dividend        2    0[BANK0 ] unsigned int 
  9501 ;;  divisor         2    2[BANK0 ] unsigned int 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  quotient        2    4[BANK0 ] unsigned int 
  9504 ;;  counter         1    6[BANK0 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  2    0[BANK0 ] unsigned int 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9515 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9517 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;Total ram usage:        7 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_LCDBreakDouble
  9524 ;;		_breakDouble
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text54
  9529  002B18                     __ptext54:
  9530                           	opt stack 0
  9531  002B18                     ___lwdiv:
  9532                           	opt stack 16
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;incstack = 0
  9536  002B18  0E00               	movlw	0
  9537  002B1A  0100               	movlb	0	; () banked
  9538  002B1C  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9539  002B1E  0E00               	movlw	0
  9540  002B20  6F64               	movwf	___lwdiv@quotient& (0+255),b
  9541                           
  9542                           ; BSR set to: 0
  9543  002B22  0100               	movlb	0	; () banked
  9544  002B24  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9545  002B26  0100               	movlb	0	; () banked
  9546  002B28  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9547  002B2A  B4D8               	btfsc	status,2,c
  9548  002B2C  D031               	goto	i2l1089
  9549                           
  9550                           ; BSR set to: 0
  9551  002B2E  0E01               	movlw	1
  9552  002B30  0100               	movlb	0	; () banked
  9553  002B32  6F66               	movwf	___lwdiv@counter& (0+255),b
  9554  002B34  D007               	goto	i2l3332
  9555  002B36                     i2l3330:
  9556                           
  9557                           ; BSR set to: 0
  9558  002B36  0100               	movlb	0	; () banked
  9559  002B38  90D8               	bcf	status,0,c
  9560  002B3A  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  9561  002B3C  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9562  002B3E  0100               	movlb	0	; () banked
  9563  002B40  2B66               	incf	___lwdiv@counter& (0+255),f,b
  9564  002B42  D000               	goto	i2l3332
  9565  002B44                     i2l3332:
  9566                           
  9567                           ; BSR set to: 0
  9568  002B44  0100               	movlb	0	; () banked
  9569  002B46  BF63               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  9570  002B48  D002               	goto	i2l3334
  9571  002B4A  D7F5               	goto	i2l3330
  9572                           
  9573                           ; BSR set to: 0
  9574  002B4C  D000               	goto	i2l3334
  9575  002B4E                     i2l3334:
  9576                           
  9577                           ; BSR set to: 0
  9578  002B4E  0100               	movlb	0	; () banked
  9579  002B50  90D8               	bcf	status,0,c
  9580  002B52  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  9581  002B54  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9582                           
  9583                           ; BSR set to: 0
  9584  002B56  0100               	movlb	0	; () banked
  9585  002B58  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9586  002B5A  0100               	movlb	0	; () banked
  9587  002B5C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  9588  002B5E  0100               	movlb	0	; () banked
  9589  002B60  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9590  002B62  0100               	movlb	0	; () banked
  9591  002B64  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9592  002B66  A0D8               	btfss	status,0,c
  9593  002B68  D00B               	goto	i2l3342
  9594                           
  9595                           ; BSR set to: 0
  9596  002B6A  0100               	movlb	0	; () banked
  9597  002B6C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9598  002B6E  0100               	movlb	0	; () banked
  9599  002B70  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  9600  002B72  0100               	movlb	0	; () banked
  9601  002B74  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9602  002B76  0100               	movlb	0	; () banked
  9603  002B78  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9604                           
  9605                           ; BSR set to: 0
  9606  002B7A  0100               	movlb	0	; () banked
  9607  002B7C  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  9608  002B7E  D000               	goto	i2l3342
  9609  002B80                     i2l3342:
  9610                           
  9611                           ; BSR set to: 0
  9612  002B80  0100               	movlb	0	; () banked
  9613  002B82  90D8               	bcf	status,0,c
  9614  002B84  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9615  002B86  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  9616                           
  9617                           ; BSR set to: 0
  9618  002B88  0100               	movlb	0	; () banked
  9619  002B8A  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  9620  002B8C  D7E0               	goto	i2l3334
  9621  002B8E  D000               	goto	i2l1089
  9622  002B90                     i2l1089:
  9623                           
  9624                           ; BSR set to: 0
  9625  002B90  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  9626  002B94  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9627                           
  9628                           ; BSR set to: 0
  9629  002B98  0012               	return		;funcret
  9630  002B9A                     __end_of___lwdiv:
  9631                           	opt stack 0
  9632                           pclatu	equ	0xFFB
  9633                           pclath	equ	0xFFA
  9634                           tblptru	equ	0xFF8
  9635                           tblptrh	equ	0xFF7
  9636                           tblptrl	equ	0xFF6
  9637                           tablat	equ	0xFF5
  9638                           prodh	equ	0xFF4
  9639                           prodl	equ	0xFF3
  9640                           intcon	equ	0xFF2
  9641                           intcon2	equ	0xFF1
  9642                           indf0	equ	0xFEF
  9643                           postinc0	equ	0xFEE
  9644                           fsr0h	equ	0xFEA
  9645                           fsr0l	equ	0xFE9
  9646                           wreg	equ	0xFE8
  9647                           indf1	equ	0xFE7
  9648                           fsr1h	equ	0xFE2
  9649                           fsr1l	equ	0xFE1
  9650                           bsr	equ	0xFE0
  9651                           indf2	equ	0xFDF
  9652                           postinc2	equ	0xFDE
  9653                           postdec2	equ	0xFDD
  9654                           fsr2h	equ	0xFDA
  9655                           fsr2l	equ	0xFD9
  9656                           status	equ	0xFD8
  9657                           
  9658 ;; *************** function ___fttol *****************
  9659 ;; Defined at:
  9660 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  f1              3   50[BANK0 ] float 
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;  lval            4   60[BANK0 ] unsigned long 
  9665 ;;  exp1            1   64[BANK0 ] unsigned char 
  9666 ;;  sign1           1   59[BANK0 ] unsigned char 
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  4   50[BANK0 ] long 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2, status,0
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;Total ram usage:       15 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_LCDBreakDouble
  9686 ;;		_calculatePID
  9687 ;;		_breakDouble
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           	psect	text55
  9692  00243C                     __ptext55:
  9693                           	opt stack 0
  9694  00243C                     ___fttol:
  9695                           	opt stack 16
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;incstack = 0
  9699  00243C  C094  F096         	movff	___fttol@f1+2,??___fttol
  9700  002440  0100               	movlb	0	; () banked
  9701  002442  6B97               	clrf	(??___fttol+1)& (0+255),b
  9702  002444  6B98               	clrf	(??___fttol+2)& (0+255),b
  9703  002446  0100               	movlb	0	; () banked
  9704  002448  3593               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9705  00244A  0100               	movlb	0	; () banked
  9706  00244C  3796               	rlcf	??___fttol& (0+255),f,b
  9707  00244E  E301               	bnc	u326_41
  9708  002450  8197               	bsf	(??___fttol+1)& (0+255),0,b
  9709  002452                     u326_41:
  9710  002452  0100               	movlb	0	; () banked
  9711  002454  5196               	movf	??___fttol& (0+255),w,b
  9712  002456  0100               	movlb	0	; () banked
  9713  002458  6FA0               	movwf	___fttol@exp1& (0+255),b
  9714  00245A  0100               	movlb	0	; () banked
  9715  00245C  51A0               	movf	___fttol@exp1& (0+255),w,b
  9716  00245E  A4D8               	btfss	status,2,c
  9717  002460  D002               	goto	i2l3284
  9718  002462  D051               	goto	i2l3308
  9719                           
  9720                           ; BSR set to: 0
  9721                           
  9722                           ; BSR set to: 0
  9723  002464  D083               	goto	i2l977
  9724  002466                     i2l3284:
  9725                           
  9726                           ; BSR set to: 0
  9727  002466  0E17               	movlw	23
  9728  002468  0100               	movlb	0	; () banked
  9729  00246A  6F96               	movwf	??___fttol& (0+255),b
  9730  00246C  C092  F097         	movff	___fttol@f1,??___fttol+1
  9731  002470  C093  F098         	movff	___fttol@f1+1,??___fttol+2
  9732  002474  C094  F099         	movff	___fttol@f1+2,??___fttol+3
  9733  002478  0100               	movlb	0	; () banked
  9734  00247A  2996               	incf	??___fttol& (0+255),w,b
  9735  00247C  0100               	movlb	0	; () banked
  9736  00247E  6F9A               	movwf	(??___fttol+4)& (0+255),b
  9737  002480  D005               	goto	i2u328_40
  9738  002482                     i2u328_45:
  9739  002482  0100               	movlb	0	; () banked
  9740  002484  90D8               	bcf	status,0,c
  9741  002486  3399               	rrcf	(??___fttol+3)& (0+255),f,b
  9742  002488  3398               	rrcf	(??___fttol+2)& (0+255),f,b
  9743  00248A  3397               	rrcf	(??___fttol+1)& (0+255),f,b
  9744  00248C                     i2u328_40:
  9745  00248C  0100               	movlb	0	; () banked
  9746  00248E  2F9A               	decfsz	(??___fttol+4)& (0+255),f,b
  9747  002490  D7F8               	goto	i2u328_45
  9748  002492  0100               	movlb	0	; () banked
  9749  002494  5197               	movf	(??___fttol+1)& (0+255),w,b
  9750  002496  0100               	movlb	0	; () banked
  9751  002498  6F9B               	movwf	___fttol@sign1& (0+255),b
  9752                           
  9753                           ; BSR set to: 0
  9754  00249A  0100               	movlb	0	; () banked
  9755  00249C  8F93               	bsf	(___fttol@f1+1)& (0+255),7,b
  9756                           
  9757                           ; BSR set to: 0
  9758  00249E  0EFF               	movlw	255
  9759  0024A0  0100               	movlb	0	; () banked
  9760  0024A2  1792               	andwf	___fttol@f1& (0+255),f,b
  9761  0024A4  0EFF               	movlw	255
  9762  0024A6  0100               	movlb	0	; () banked
  9763  0024A8  1793               	andwf	(___fttol@f1+1)& (0+255),f,b
  9764  0024AA  0E00               	movlw	0
  9765  0024AC  0100               	movlb	0	; () banked
  9766  0024AE  1794               	andwf	(___fttol@f1+2)& (0+255),f,b
  9767                           
  9768                           ; BSR set to: 0
  9769  0024B0  0100               	movlb	0	; () banked
  9770  0024B2  5192               	movf	___fttol@f1& (0+255),w,b
  9771  0024B4  0100               	movlb	0	; () banked
  9772  0024B6  6F9C               	movwf	___fttol@lval& (0+255),b
  9773  0024B8  0100               	movlb	0	; () banked
  9774  0024BA  5193               	movf	(___fttol@f1+1)& (0+255),w,b
  9775  0024BC  0100               	movlb	0	; () banked
  9776  0024BE  6F9D               	movwf	(___fttol@lval+1)& (0+255),b
  9777  0024C0  0100               	movlb	0	; () banked
  9778  0024C2  5194               	movf	(___fttol@f1+2)& (0+255),w,b
  9779  0024C4  0100               	movlb	0	; () banked
  9780  0024C6  6F9E               	movwf	(___fttol@lval+2)& (0+255),b
  9781  0024C8  0100               	movlb	0	; () banked
  9782  0024CA  6B9F               	clrf	(___fttol@lval+3)& (0+255),b
  9783                           
  9784                           ; BSR set to: 0
  9785  0024CC  0E8E               	movlw	142
  9786  0024CE  0100               	movlb	0	; () banked
  9787  0024D0  5FA0               	subwf	___fttol@exp1& (0+255),f,b
  9788                           
  9789                           ; BSR set to: 0
  9790  0024D2  0100               	movlb	0	; () banked
  9791  0024D4  AFA0               	btfss	___fttol@exp1& (0+255),7,b
  9792  0024D6  D013               	goto	i2l3306
  9793                           
  9794                           ; BSR set to: 0
  9795  0024D8  0100               	movlb	0	; () banked
  9796  0024DA  51A0               	movf	___fttol@exp1& (0+255),w,b
  9797  0024DC  0A80               	xorlw	128
  9798  0024DE  0F8F               	addlw	143
  9799  0024E0  B0D8               	btfsc	status,0,c
  9800  0024E2  D003               	goto	i2l3302
  9801  0024E4  D010               	goto	i2l3308
  9802                           
  9803                           ; BSR set to: 0
  9804                           
  9805                           ; BSR set to: 0
  9806  0024E6  D042               	goto	i2l977
  9807                           
  9808                           ; BSR set to: 0
  9809  0024E8  D000               	goto	i2l3302
  9810  0024EA                     i2l3302:
  9811                           
  9812                           ; BSR set to: 0
  9813  0024EA  0100               	movlb	0	; () banked
  9814  0024EC  90D8               	bcf	status,0,c
  9815  0024EE  339F               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9816  0024F0  339E               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9817  0024F2  339D               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9818  0024F4  339C               	rrcf	___fttol@lval& (0+255),f,b
  9819                           
  9820                           ; BSR set to: 0
  9821  0024F6  0100               	movlb	0	; () banked
  9822  0024F8  3FA0               	incfsz	___fttol@exp1& (0+255),f,b
  9823  0024FA  D7F7               	goto	i2l3302
  9824                           
  9825                           ; BSR set to: 0
  9826  0024FC  D01F               	goto	i2l3316
  9827  0024FE                     i2l3306:
  9828                           
  9829                           ; BSR set to: 0
  9830  0024FE  0E17               	movlw	23
  9831  002500  0100               	movlb	0	; () banked
  9832  002502  65A0               	cpfsgt	___fttol@exp1& (0+255),b
  9833  002504  D014               	goto	i2l3314
  9834  002506                     i2l3308:
  9835                           
  9836                           ; BSR set to: 0
  9837  002506  0E00               	movlw	0
  9838  002508  0100               	movlb	0	; () banked
  9839  00250A  6F92               	movwf	?___fttol& (0+255),b
  9840  00250C  0E00               	movlw	0
  9841  00250E  6F93               	movwf	(?___fttol+1)& (0+255),b
  9842  002510  0E00               	movlw	0
  9843  002512  6F94               	movwf	(?___fttol+2)& (0+255),b
  9844  002514  0E00               	movlw	0
  9845  002516  6F95               	movwf	(?___fttol+3)& (0+255),b
  9846                           
  9847                           ; BSR set to: 0
  9848  002518  D029               	goto	i2l977
  9849                           
  9850                           ; BSR set to: 0
  9851  00251A  D009               	goto	i2l3314
  9852  00251C                     i2l3312:
  9853                           
  9854                           ; BSR set to: 0
  9855  00251C  0100               	movlb	0	; () banked
  9856  00251E  90D8               	bcf	status,0,c
  9857  002520  379C               	rlcf	___fttol@lval& (0+255),f,b
  9858  002522  379D               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9859  002524  379E               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9860  002526  379F               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9861  002528  0100               	movlb	0	; () banked
  9862  00252A  07A0               	decf	___fttol@exp1& (0+255),f,b
  9863  00252C  D000               	goto	i2l3314
  9864  00252E                     i2l3314:
  9865                           
  9866                           ; BSR set to: 0
  9867  00252E  0100               	movlb	0	; () banked
  9868  002530  51A0               	movf	___fttol@exp1& (0+255),w,b
  9869  002532  0100               	movlb	0	; () banked
  9870  002534  B4D8               	btfsc	status,2,c
  9871  002536  D002               	goto	i2l3316
  9872  002538  D7F1               	goto	i2l3312
  9873                           
  9874                           ; BSR set to: 0
  9875  00253A  D000               	goto	i2l3316
  9876  00253C                     i2l3316:
  9877                           
  9878                           ; BSR set to: 0
  9879  00253C  0100               	movlb	0	; () banked
  9880  00253E  519B               	movf	___fttol@sign1& (0+255),w,b
  9881  002540  0100               	movlb	0	; () banked
  9882  002542  B4D8               	btfsc	status,2,c
  9883  002544  D00A               	goto	i2l3320
  9884                           
  9885                           ; BSR set to: 0
  9886  002546  0100               	movlb	0	; () banked
  9887  002548  1F9F               	comf	(___fttol@lval+3)& (0+255),f,b
  9888  00254A  1F9E               	comf	(___fttol@lval+2)& (0+255),f,b
  9889  00254C  1F9D               	comf	(___fttol@lval+1)& (0+255),f,b
  9890  00254E  6D9C               	negf	___fttol@lval& (0+255),b
  9891  002550  0E00               	movlw	0
  9892  002552  239D               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9893  002554  239E               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9894  002556  239F               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9895  002558  D000               	goto	i2l3320
  9896  00255A                     i2l3320:
  9897                           
  9898                           ; BSR set to: 0
  9899  00255A  C09C  F092         	movff	___fttol@lval,?___fttol
  9900  00255E  C09D  F093         	movff	___fttol@lval+1,?___fttol+1
  9901  002562  C09E  F094         	movff	___fttol@lval+2,?___fttol+2
  9902  002566  C09F  F095         	movff	___fttol@lval+3,?___fttol+3
  9903  00256A  D000               	goto	i2l977
  9904  00256C                     i2l977:
  9905                           
  9906                           ; BSR set to: 0
  9907  00256C  0012               	return		;funcret
  9908  00256E                     __end_of___fttol:
  9909                           	opt stack 0
  9910                           pclatu	equ	0xFFB
  9911                           pclath	equ	0xFFA
  9912                           tblptru	equ	0xFF8
  9913                           tblptrh	equ	0xFF7
  9914                           tblptrl	equ	0xFF6
  9915                           tablat	equ	0xFF5
  9916                           prodh	equ	0xFF4
  9917                           prodl	equ	0xFF3
  9918                           intcon	equ	0xFF2
  9919                           intcon2	equ	0xFF1
  9920                           indf0	equ	0xFEF
  9921                           postinc0	equ	0xFEE
  9922                           fsr0h	equ	0xFEA
  9923                           fsr0l	equ	0xFE9
  9924                           wreg	equ	0xFE8
  9925                           indf1	equ	0xFE7
  9926                           fsr1h	equ	0xFE2
  9927                           fsr1l	equ	0xFE1
  9928                           bsr	equ	0xFE0
  9929                           indf2	equ	0xFDF
  9930                           postinc2	equ	0xFDE
  9931                           postdec2	equ	0xFDD
  9932                           fsr2h	equ	0xFDA
  9933                           fsr2l	equ	0xFD9
  9934                           status	equ	0xFD8
  9935                           
  9936 ;; *************** function _ImplementPIDMotion *****************
  9937 ;; Defined at:
  9938 ;;		line 29 in file "MotorControl.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  PIDValue        2    4[BANK0 ] int 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;		None
  9943 ;; Return value:  Size  Location     Type
  9944 ;;		None               void
  9945 ;; Registers used:
  9946 ;;		wreg, status,2, status,0, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9952 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;Total ram usage:        4 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    1
  9959 ;; This function calls:
  9960 ;;		_abs
  9961 ;; This function is called by:
  9962 ;;		_TMR0Int
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text56
  9967  002C88                     __ptext56:
  9968                           	opt stack 0
  9969  002C88                     _ImplementPIDMotion:
  9970                           	opt stack 16
  9971                           
  9972                           ;MotorControl.c: 31: if (PIDValue < 0)
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;incstack = 0
  9976  002C88  0100               	movlb	0	; () banked
  9977  002C8A  AF65               	btfss	(ImplementPIDMotion@PIDValue+1)& (0+255),7,b
  9978  002C8C  D002               	goto	i2l3602
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;MotorControl.c: 32: CCP3CONbits.P3M1 = 1;
  9982  002C8E  8EB7               	bsf	4023,7,c	;volatile
  9983  002C90  D00C               	goto	i2l3606
  9984  002C92                     i2l3602:
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;MotorControl.c: 33: else if (PIDValue > 0)
  9988  002C92  0100               	movlb	0	; () banked
  9989  002C94  BF65               	btfsc	(ImplementPIDMotion@PIDValue+1)& (0+255),7,b
  9990  002C96  D009               	goto	i2l3606
  9991  002C98  0100               	movlb	0	; () banked
  9992  002C9A  5165               	movf	(ImplementPIDMotion@PIDValue+1)& (0+255),w,b
  9993  002C9C  E104               	bnz	i2u366_40
  9994  002C9E  0100               	movlb	0	; () banked
  9995  002CA0  0564               	decf	ImplementPIDMotion@PIDValue& (0+255),w,b
  9996  002CA2  A0D8               	btfss	status,0,c
  9997  002CA4  D002               	goto	i2l3606
  9998  002CA6                     i2u366_40:
  9999                           
 10000                           ; BSR set to: 0
 10001                           ;MotorControl.c: 34: CCP3CONbits.P3M1 = 0;
 10002  002CA6  9EB7               	bcf	4023,7,c	;volatile
 10003                           
 10004                           ; BSR set to: 0
 10005  002CA8  D000               	goto	i2l3606
 10006  002CAA                     i2l3606:
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;MotorControl.c: 36: PIDValue = abs(PIDValue);
 10010  002CAA  C064  F060         	movff	ImplementPIDMotion@PIDValue,abs@a
 10011  002CAE  C065  F061         	movff	ImplementPIDMotion@PIDValue+1,abs@a+1
 10012  002CB2  EC61  F019         	call	_abs	;wreg free
 10013  002CB6  C060  F064         	movff	?_abs,ImplementPIDMotion@PIDValue
 10014  002CBA  C061  F065         	movff	?_abs+1,ImplementPIDMotion@PIDValue+1
 10015                           
 10016                           ;MotorControl.c: 37: CCPR3L = (PIDValue >> 2) & 0xFF;
 10017  002CBE  C064  F066         	movff	ImplementPIDMotion@PIDValue,??_ImplementPIDMotion
 10018  002CC2  C065  F067         	movff	ImplementPIDMotion@PIDValue+1,??_ImplementPIDMotion+1
 10019  002CC6  0100               	movlb	0	; () banked
 10020  002CC8  3567               	rlcf	(??_ImplementPIDMotion+1)& (0+255),w,b
 10021  002CCA  3367               	rrcf	(??_ImplementPIDMotion+1)& (0+255),f,b
 10022  002CCC  3366               	rrcf	??_ImplementPIDMotion& (0+255),f,b
 10023  002CCE  0100               	movlb	0	; () banked
 10024  002CD0  3567               	rlcf	(??_ImplementPIDMotion+1)& (0+255),w,b
 10025  002CD2  3367               	rrcf	(??_ImplementPIDMotion+1)& (0+255),f,b
 10026  002CD4  3366               	rrcf	??_ImplementPIDMotion& (0+255),f,b
 10027  002CD6  0100               	movlb	0	; () banked
 10028  002CD8  5166               	movf	??_ImplementPIDMotion& (0+255),w,b
 10029  002CDA  6EB8               	movwf	4024,c	;volatile
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;MotorControl.c: 38: CCP3CONbits.DC3B = (PIDValue & 0x03);
 10033  002CDC  C064  F066         	movff	ImplementPIDMotion@PIDValue,??_ImplementPIDMotion
 10034  002CE0  0E03               	movlw	3
 10035  002CE2  0100               	movlb	0	; () banked
 10036  002CE4  1766               	andwf	??_ImplementPIDMotion& (0+255),f,b
 10037  002CE6  0100               	movlb	0	; () banked
 10038  002CE8  3B66               	swapf	??_ImplementPIDMotion& (0+255),f,b
 10039  002CEA  50B7               	movf	4023,w,c	;volatile
 10040  002CEC  0100               	movlb	0	; () banked
 10041  002CEE  1966               	xorwf	??_ImplementPIDMotion& (0+255),w,b
 10042  002CF0  0BCF               	andlw	-49
 10043  002CF2  1966               	xorwf	??_ImplementPIDMotion& (0+255),w,b
 10044  002CF4  6EB7               	movwf	4023,c	;volatile
 10045                           
 10046                           ; BSR set to: 0
 10047  002CF6  0012               	return		;funcret
 10048  002CF8                     __end_of_ImplementPIDMotion:
 10049                           	opt stack 0
 10050                           pclatu	equ	0xFFB
 10051                           pclath	equ	0xFFA
 10052                           tblptru	equ	0xFF8
 10053                           tblptrh	equ	0xFF7
 10054                           tblptrl	equ	0xFF6
 10055                           tablat	equ	0xFF5
 10056                           prodh	equ	0xFF4
 10057                           prodl	equ	0xFF3
 10058                           intcon	equ	0xFF2
 10059                           intcon2	equ	0xFF1
 10060                           indf0	equ	0xFEF
 10061                           postinc0	equ	0xFEE
 10062                           fsr0h	equ	0xFEA
 10063                           fsr0l	equ	0xFE9
 10064                           wreg	equ	0xFE8
 10065                           indf1	equ	0xFE7
 10066                           fsr1h	equ	0xFE2
 10067                           fsr1l	equ	0xFE1
 10068                           bsr	equ	0xFE0
 10069                           indf2	equ	0xFDF
 10070                           postinc2	equ	0xFDE
 10071                           postdec2	equ	0xFDD
 10072                           fsr2h	equ	0xFDA
 10073                           fsr2l	equ	0xFD9
 10074                           status	equ	0xFD8
 10075                           
 10076 ;; *************** function _abs *****************
 10077 ;; Defined at:
 10078 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/abs.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  a               2    0[BANK0 ] int 
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  2    0[BANK0 ] int 
 10085 ;; Registers used:
 10086 ;;		wreg, status,2, status,0
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;Total ram usage:        4 bytes
 10097 ;; Hardware stack levels used:    1
 10098 ;; This function calls:
 10099 ;;		Nothing
 10100 ;; This function is called by:
 10101 ;;		_ImplementPIDMotion
 10102 ;;		_ImplementJSMotion
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           	psect	text57
 10107  0032C2                     __ptext57:
 10108                           	opt stack 0
 10109  0032C2                     _abs:
 10110                           	opt stack 16
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;incstack = 0
 10114  0032C2  0100               	movlb	0	; () banked
 10115  0032C4  AF61               	btfss	(abs@a+1)& (0+255),7,b
 10116  0032C6  D00E               	goto	i2l522
 10117                           
 10118                           ; BSR set to: 0
 10119  0032C8  C060  F062         	movff	abs@a,??_abs
 10120  0032CC  C061  F063         	movff	abs@a+1,??_abs+1
 10121  0032D0  0100               	movlb	0	; () banked
 10122  0032D2  1F62               	comf	??_abs& (0+255),f,b
 10123  0032D4  1F63               	comf	(??_abs+1)& (0+255),f,b
 10124  0032D6  4B62               	infsnz	??_abs& (0+255),f,b
 10125  0032D8  2B63               	incf	(??_abs+1)& (0+255),f,b
 10126  0032DA  C062  F060         	movff	??_abs,?_abs
 10127  0032DE  C063  F061         	movff	??_abs+1,?_abs+1
 10128  0032E2  D004               	goto	i2l523
 10129  0032E4                     i2l522:
 10130                           
 10131                           ; BSR set to: 0
 10132  0032E4  C060  F060         	movff	abs@a,?_abs
 10133  0032E8  C061  F061         	movff	abs@a+1,?_abs+1
 10134  0032EC                     i2l523:
 10135                           
 10136                           ; BSR set to: 0
 10137  0032EC  0012               	return		;funcret
 10138  0032EE                     __end_of_abs:
 10139                           	opt stack 0
 10140                           pclatu	equ	0xFFB
 10141                           pclath	equ	0xFFA
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           intcon	equ	0xFF2
 10149                           intcon2	equ	0xFF1
 10150                           indf0	equ	0xFEF
 10151                           postinc0	equ	0xFEE
 10152                           fsr0h	equ	0xFEA
 10153                           fsr0l	equ	0xFE9
 10154                           wreg	equ	0xFE8
 10155                           indf1	equ	0xFE7
 10156                           fsr1h	equ	0xFE2
 10157                           fsr1l	equ	0xFE1
 10158                           bsr	equ	0xFE0
 10159                           indf2	equ	0xFDF
 10160                           postinc2	equ	0xFDE
 10161                           postdec2	equ	0xFDD
 10162                           fsr2h	equ	0xFDA
 10163                           fsr2l	equ	0xFD9
 10164                           status	equ	0xFD8
 10165                           pclatu	equ	0xFFB
 10166                           pclath	equ	0xFFA
 10167                           tblptru	equ	0xFF8
 10168                           tblptrh	equ	0xFF7
 10169                           tblptrl	equ	0xFF6
 10170                           tablat	equ	0xFF5
 10171                           prodh	equ	0xFF4
 10172                           prodl	equ	0xFF3
 10173                           intcon	equ	0xFF2
 10174                           intcon2	equ	0xFF1
 10175                           indf0	equ	0xFEF
 10176                           postinc0	equ	0xFEE
 10177                           fsr0h	equ	0xFEA
 10178                           fsr0l	equ	0xFE9
 10179                           wreg	equ	0xFE8
 10180                           indf1	equ	0xFE7
 10181                           fsr1h	equ	0xFE2
 10182                           fsr1l	equ	0xFE1
 10183                           bsr	equ	0xFE0
 10184                           indf2	equ	0xFDF
 10185                           postinc2	equ	0xFDE
 10186                           postdec2	equ	0xFDD
 10187                           fsr2h	equ	0xFDA
 10188                           fsr2l	equ	0xFD9
 10189                           status	equ	0xFD8
 10190                           
 10191                           	psect	param0
 10192  0000                     pclatu	equ	0xFFB
 10193                           pclath	equ	0xFFA
 10194                           tblptru	equ	0xFF8
 10195                           tblptrh	equ	0xFF7
 10196                           tblptrl	equ	0xFF6
 10197                           tablat	equ	0xFF5
 10198                           prodh	equ	0xFF4
 10199                           prodl	equ	0xFF3
 10200                           intcon	equ	0xFF2
 10201                           intcon2	equ	0xFF1
 10202                           indf0	equ	0xFEF
 10203                           postinc0	equ	0xFEE
 10204                           fsr0h	equ	0xFEA
 10205                           fsr0l	equ	0xFE9
 10206                           wreg	equ	0xFE8
 10207                           indf1	equ	0xFE7
 10208                           fsr1h	equ	0xFE2
 10209                           fsr1l	equ	0xFE1
 10210                           bsr	equ	0xFE0
 10211                           indf2	equ	0xFDF
 10212                           postinc2	equ	0xFDE
 10213                           postdec2	equ	0xFDD
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    0
    Data        4
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      89
    BANK0           160     94     157
    BANK1           256      5       5
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[3]), STR_17(CODE[3]), 
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> key(COMRAM[5]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), keyValue@str_end(COMRAM[2]), 

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 36
		 -> STR_30(CODE[36]), STR_29(CODE[4]), STR_14(CODE[6]), STR_13(CODE[4]), 
		 -> STR_4(CODE[11]), value(COMRAM[10]), STR_3(CODE[6]), key(COMRAM[5]), 

    keyValue@str_end	PTR unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    keyValue@str	PTR unsigned char  size(2) Largest target is 30
		 -> received(BANK0[30]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _hISR in COMRAM

    None.

Critical Paths under _lISR in COMRAM

    _lISR->_RCInt
    _RCInt->_keyValue
    _keyValue->_strtod
    i1_SerTxStr->i1_SerTx
    _strtod->___ftdiv
    _strtod->___ftmul
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___altoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _hISR in BANK0

    _TMR0Int->_calculatePID
    _calculatePID->___fttol
    i2___ftdiv->i2___ftpack
    ___ftsub->___ftadd
    ___ftadd->i2___ftmul
    _ReadRTDpos->i2_Delay10TCYx
    _RTD2Angle->i2___ftmul
    ___lwtoft->i2___ftpack
    _LCDBreakDouble->___fttol
    i2___ftmul->i2___ftdiv
    _lcdGoTo->i2_lcdCommand
    i2_lcdCommand->i2_setGPIO
    _lcdChar->i2_setGPIO
    i2_setGPIO->i2_WriteSPI1
    ___fttol->___ftadd
    _ImplementPIDMotion->_abs

Critical Paths under _lISR in BANK0

    None.

Critical Paths under _main in BANK1

    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _lcdCommand->_setGPIO
    _setGPIO->_WriteSPI1
    _SerInit->_SerTxStr
    _SerTxStr->_SerTx
    _RTDInit->_Delay10TCYx
    _RTDInit->_Delay1KTCYx
    _RTDInit->_Delay1TCYx

Critical Paths under _hISR in BANK1

    None.

Critical Paths under _lISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hISR in BANK2

    None.

Critical Paths under _lISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hISR in BANK3

    None.

Critical Paths under _lISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hISR in BANK4

    None.

Critical Paths under _lISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hISR in BANK5

    None.

Critical Paths under _lISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hISR in BANK6

    None.

Critical Paths under _lISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hISR in BANK7

    None.

Critical Paths under _lISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _hISR in BANK8

    None.

Critical Paths under _lISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _hISR in BANK9

    None.

Critical Paths under _lISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _hISR in BANK10

    None.

Critical Paths under _lISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _hISR in BANK11

    None.

Critical Paths under _lISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _hISR in BANK12

    None.

Critical Paths under _lISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _hISR in BANK13

    None.

Critical Paths under _lISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _hISR in BANK14

    None.

Critical Paths under _lISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _hISR in BANK15

    None.

Critical Paths under _lISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2034
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    2034
                    _MotorDriverInit
                            _PIDInit
                            _RTDInit
                            _SerInit
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1533
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     195
                                              2 BANK1      2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     583
                                              4 BANK1      1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     539
                                              2 BANK1      2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      23
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     216
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0     435
                           _SerTxStr
 ---------------------------------------------------------------------------------
 (3) _SerTxStr                                             2     0      2     435
                                              1 BANK1      2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (4) _SerTx                                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RTDInit                                              0     0      0      66
                        _Delay10TCYx
                        _Delay1KTCYx
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1TCYx                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIDInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorDriverInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _lISR                                                17    17      0   15172
                                             48 COMRAM    17    17      0
                              _RCInt
 ---------------------------------------------------------------------------------
 (7) _RCInt                                                2     2      0   15172
                                             46 COMRAM     2     2      0
                           _keyValue
                            i1_SerTx
 ---------------------------------------------------------------------------------
 (8) _keyValue                                            11     7      4   14993
                                             35 COMRAM    11     7      4
                            _isspace
                             _strcmp
                             _strtod
                            i1_SerTx
                         i1_SerTxStr
 ---------------------------------------------------------------------------------
 (9) i1_SerTxStr                                           2     0      2     275
                                              1 COMRAM     2     0      2
                            i1_SerTx
 ---------------------------------------------------------------------------------
 (8) i1_SerTx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _strtod                                              12     8      4   10711
                                             23 COMRAM    12     8      4
                           ___altoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (10) _isspace                                             3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) _isdigit                                             3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) ___lmul                                             12     4      8     322
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___ftneg                                             3     0      3     185
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) ___ftmul                                            15     9      6    3221
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___ftge                                              9     3      6     544
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (10) ___ftdiv                                            15     9      6    2667
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___altoft                                           10     6      4    2155
                                              8 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftpack                                            8     3      5    1953
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) _strcmp                                               6     2      4    2907
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _hISR                                               14    14      0   15938
                                             80 BANK0     14    14      0
                            _TMR0Int
 ---------------------------------------------------------------------------------
 (13) _TMR0Int                                             0     0      0   15938
                 _ImplementPIDMotion
                     _LCDBreakDouble
                          _RTD2Angle
                         _ReadRTDpos
                       _calculatePID
 ---------------------------------------------------------------------------------
 (14) _calculatePID                                       15     9      6    8159
                                             65 BANK0     15     9      6
                            ___ftadd
                            ___ftsub
                            ___fttol
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (15) i2___ftneg                                           3     0      3      97
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (15) i2___ftge                                            9     3      6     240
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (15) i2___ftdiv                                          15     9      6     875
                                              8 BANK0     15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (15) ___ftsub                                             6     0      6    2678
                                             50 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (16) ___ftadd                                            12     6      6    2381
                                             38 BANK0     12     6      6
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) _ReadRTDpos                                         12    10      2     160
                                              1 BANK0     10     8      2
                      i2_Delay10TCYx
 ---------------------------------------------------------------------------------
 (14) _RTD2Angle                                           3     0      3    1896
                                             38 BANK0      3     0      3
                         _ReadRTDpos (ARG)
                           ___lwtoft
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (15) ___lwtoft                                            3     0      3     629
                                              8 BANK0      3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) _LCDBreakDouble                                      9     6      3    5354
                                             65 BANK0      9     6      3
                            ___fttol
                            ___lwdiv
                            ___lwmod
                            _lcdChar
                            _lcdGoTo
                          i2___ftmul
                       i2_lcdCommand
 ---------------------------------------------------------------------------------
 (15) i2___ftmul                                          15     9      6    1181
                                             23 BANK0     15     9      6
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___ftpack                                          8     3      5     543
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (15) _lcdGoTo                                             1     1      0     341
                                              5 BANK0      1     1      0
                       i2_lcdCommand
 ---------------------------------------------------------------------------------
 (15) i2_lcdCommand                                        1     1      0     319
                                              4 BANK0      1     1      0
                      i2_Delay10TCYx
                          i2_setGPIO
 ---------------------------------------------------------------------------------
 (15) _lcdChar                                             1     1      0     319
                                              4 BANK0      1     1      0
                      i2_Delay10TCYx
                          i2_setGPIO
 ---------------------------------------------------------------------------------
 (16) i2_setGPIO                                           2     1      1     275
                                              2 BANK0      2     1      1
                        i2_WriteSPI1
 ---------------------------------------------------------------------------------
 (17) i2_WriteSPI1                                         2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (15) i2_Delay10TCYx                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (15) ___lwmod                                             5     1      4    1183
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (15) ___lwdiv                                             7     3      4    1186
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (15) ___fttol                                            15    11      4     444
                                             50 BANK0     15    11      4
                            ___ftadd (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (14) _ImplementPIDMotion                                  4     2      2     369
                                              4 BANK0      4     2      2
                                _abs
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     194
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _MotorDriverInit
     _PIDInit
     _RTDInit
       _Delay10TCYx
       _Delay1KTCYx
       _Delay1TCYx
     _SerInit
       _SerTxStr
         _SerTx
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1

 _lISR (ROOT)
   _RCInt
     _keyValue
       _isspace
       _strcmp
       _strtod
         ___altoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___ftpack
         ___ftneg
         ___lmul
         _isdigit
         _isspace
       i1_SerTx
       i1_SerTxStr
         i1_SerTx
     i1_SerTx

 _hISR (ROOT)
   _TMR0Int
     _ImplementPIDMotion
       _abs
     _LCDBreakDouble
       ___fttol
         ___ftadd (ARG)
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___ftpack
             i2___ftpack (ARG)
           i2___ftneg (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           i2___ftpack
         i2___ftmul (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftpack (ARG)
       ___lwdiv
       ___lwmod
       _lcdChar
         i2_Delay10TCYx
         i2_setGPIO
           i2_WriteSPI1
       _lcdGoTo
         i2_lcdCommand
           i2_Delay10TCYx
           i2_setGPIO
             i2_WriteSPI1
       i2___ftmul
         ___lwtoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2_lcdCommand
         i2_Delay10TCYx
         i2_setGPIO
           i2_WriteSPI1
     _RTD2Angle
       _ReadRTDpos (ARG)
         i2_Delay10TCYx
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___ftpack
         i2___ftpack (ARG)
     _ReadRTDpos
       i2_Delay10TCYx
     _calculatePID
       ___ftadd
         i2___ftdiv (ARG)
           i2___ftpack
         i2___ftmul (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftpack (ARG)
         i2___ftneg (ARG)
         i2___ftpack (ARG)
       ___ftsub
         ___ftadd
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___ftpack
             i2___ftpack (ARG)
           i2___ftneg (ARG)
           i2___ftpack (ARG)
       ___fttol
         ___ftadd (ARG)
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___ftdiv (ARG)
               i2___ftpack
             i2___ftpack (ARG)
           i2___ftneg (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           i2___ftpack
         i2___ftmul (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___ftdiv (ARG)
             i2___ftpack
           i2___ftpack (ARG)
       i2___ftdiv
         i2___ftpack
       i2___ftge
       i2___ftmul
         ___lwtoft (ARG)
           i2___ftpack
         i2___ftdiv (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2___ftneg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5       5       7        2.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      9D       5       98.1%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      59       1       93.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      32        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Oct 24 03:26:05 2015

               ___altoft@exp 0011     __size_of_MotorDriverInit 001C                ___altoft@sign 0012  
                         _Kd 00C1                           _Ki 00C4                           _Kp 00C7  
                         bsr 000FE0                   i2___ftpack 256E                 ___ftadd@exp1 0091  
               ___ftadd@exp2 0090                 ___ftadd@sign 008F                          l310 3488  
                        l452 2DA0                          l453 2DBC                          l454 2DA2  
                        l446 2D7E                          l470 3330                          l455 2DA6  
                        l448 2D82                          l449 2D84                          l468 3338  
                        l772 3450                          l765 3466                          l777 3492  
                        l779 349C                          _PR2 000FCB                          _abs 32C2  
                        _key 0054            lcdCommand@command 0104                          prod 000FF3  
                        wreg 000FE8                  i2_WriteSPI1 335E                 ___ftdiv@cntr 0012  
                 _Delay1TCYx 348E                 ___ftdiv@sign 0017                 __CFG_WDT$OFF 000000  
                       ?_abs 0060                         l3070 2DAA                         l3080 2E26  
                       l3066 2D88                         l3084 2E54                         l3264 3440  
                       l2762 3456                         l3996 31F6                         l3988 31DE  
                       STR_1 1037                         STR_2 1030                         STR_3 103E  
                       STR_4 1025                         STR_5 104C                         STR_6 1054  
                       STR_7 105E                         STR_8 106A                         STR_9 105B  
                       _AZEL 0059                         u4317 3442                         u4327 3458  
                       u2870 2E48                         u2880 2E76                         u2877 2E3E  
                       u2887 2E6C                         i2l88 1ADA              __end_of_PIDInit 3154  
                       _hISR 0008                         _lISR 0018              __end_of_TMR0Int 2E24  
                       abs@a 0060                         _main 31D8                 ___ftpack@arg 0001  
            __end_ofi1_SerTx 34BC                 ___ftpack@exp 0004              __end_of_RTDInit 323A  
                       fsr0h 000FEA                         fsr1h 000FE2                         indf0 000FEF  
                       fsr0l 000FE9                         fsr2h 000FDA                         indf1 000FE7  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       pclat 000FFA                 i2___ftge@ff1 0060                 i2___ftge@ff2 0063  
                       prodh 000FF4                         prodl 000FF3                         start 00AC  
               i2___ftdiv@f1 0068                 i2___ftdiv@f2 006B                 i2___ftdiv@f3 0072  
               i2___ftneg@f1 0060                 ___ftmul@cntr 0016                 i2___ftmul@f1 0077  
               i2___ftmul@f2 007A                 ___param_bank 000000                 ___ftmul@sign 0017  
                _Delay10TCYx 3452                 ___fttol@exp1 00A0                        ??_abs 0062  
            __end_of_SerInit 3316                 ___fttol@lval 009C                  _Delay1KTCYx 343C  
                      ?_hISR 0001                        ?_lISR 0001                  ReadRTDpos@x 006A  
          RTD2Angle@RTDAngle 0086                        ?_main 0001              __end_of___ftadd 1EF2  
                      STR_10 1067                        STR_11 1058                        STR_20 1054  
                      STR_12 1064                        STR_21 1048                        STR_13 1044  
                      STR_14 103E                        STR_22 1050                        STR_30 1001  
                      STR_23 105E                        STR_15 1061                        STR_24 106A  
                      STR_16 106D                        STR_25 105B                        STR_17 1049  
                      STR_26 1067                        STR_18 1051                        STR_27 1058  
                      STR_19 104C                        STR_28 1064                        STR_29 1044  
            __end_of___ftdiv 2868              __end_of___ftneg 335E              __end_of___ftmul 2786  
                      _T0CON 000FD5              __end_of___ftsub 3028              __end_of___fttol 256E  
                      _T2CON 000FCA                        _T3CON 000FB1              __end_of___lwdiv 2B9A  
                      i1l310 34B6                        i1l207 243A                        i1l190 2306  
                      i1l430 0066              __end_of___lwmod 2D64                        i1l576 2C14  
                      i2l522 32E4                        i2l426 2ADE                        i1l666 16C8  
                      i2l523 32EC                        i2l363 2C24                        i2l364 2C32  
                      i1l668 16D0                        i2l365 2C86                        i1l941 2866  
                      i1l685 199C                        i2l470 3378                        i1l950 2A90  
                      i2l375 31D6                        i1l695 196C                        i1l880 29D2  
                      i1l944 2832                        i2l468 3380                        i1l956 2784  
                      i1l869 29FA                        i2l910 1EF0                        i1l966 3350  
                      i1l992 33A2                        i2l913 1D16                        i2l915 1D40  
                      i2l924 1E24                        i2l765 347C                        i2l933 1E4E  
                      i2l909 1CDC                        i2l941 22FE                        i1l997 3294  
                      i2l950 2934                        i2l880 2654                        i2l944 22C6  
                      i2l956 21BC                        i2l869 268C                        i2l973 3026  
                      i2l966 325C                        i2l977 256C                        _RCREG 000FAE  
          i2Delay10TCYx@unit 0060           __size_of_RTD2Angle 003E        __size_ofi2_lcdCommand 004C  
                      _TMR0H 000FD7                        _TMR0L 000FD6                        _SPBRG 000FAF  
                      _PORTD 000F83                        _RCInt 2300                        _PORTH 000F87  
                      _TRISD 000F95                        _TRISH 000F99              __end_of_lcdChar 319A  
            __end_of_lcdGoTo 34AE          ___lmul@multiplicand 0005              __end_of_lcdInit 2F84  
             __CFG_FCMEN$OFF 000000                        _SerTx 347E                        _error 00D0  
            __end_of_setGPIO 33E4              __end_of_isdigit 33A4                ___ftpack@sign 0005  
                      _value 004A              __end_of_isspace 3296                        tablat 000FF5  
           __end_ofi2___ftge 2936                        status 000FD8                  ?i1_SerTxStr 0002  
              i2___ftdiv@exp 0075           __size_ofi2___ftdiv 0142           __size_ofi2___ftneg 0030  
         __size_ofi2___ftmul 015C                   _ReadRTDpos 2C16              __initialization 3028  
               __end_of_hISR 2B18                 __end_of_lISR 00AC                 __end_of_main 320A  
              i2___ftmul@exp 0080                 i2_lcdCommand 30C2           __size_ofi2_setGPIO 0020  
             __CFG_OSC$HSPLL 000000                       ??_hISR 00B0                  ?i2___ftpack 0060  
                     ??_lISR 0031                _StrippedValue 0045             __end_of_OpenSPI1 2DC4  
                keyValue@str 0024                       ??_main 0105                ___fttol@sign1 009B  
           __end_of_SerTxStr 2E7E                __activetblptr 000003            ??_MotorDriverInit 0100  
                     ?_RCInt 0001             ??_LCDBreakDouble 00A4                    ??_PIDInit 0100  
                     ?_SerTx 0001                    ??_TMR0Int 00B0             __end_of___altoft 2C16  
                  ??i1_SerTx 0001                    ??_RTDInit 0101                  ?_Delay1TCYx 0001  
                     _CCPR3L 000FB8             __end_of___ftpack 29FC        __size_of_calculatePID 02D6  
                     i1l1124 2FD6                       i1l3102 15E2                       i1l3104 15E8  
                     i1l3210 184E                       i1l3202 1818                       i1l3130 1650  
                     i1l3114 1610                       i1l3212 185C                       i1l3124 1638  
                     i1l3116 1618                       i1l3206 1820                       i1l3230 18B4  
                     i1l3134 1666                       i1l3118 161E                       i1l3240 18F8  
                     i1l3216 1888                       i1l3160 1722                       i1l3090 2F90  
                     i1l3234 18C2                       i1l3162 1728                       i1l3154 16FA  
                     i1l3260 198E                       i1l3244 1924                       i1l3164 172E  
                     i1l3148 16D6                       i1l3094 2FCA                       i1l3254 195C  
                     i1l3238 18F0                       i1l3182 17BC                       i1l3158 1712  
                     i1l3088 2F86                       i1l2800 2BBC                       i1l2802 2BCA  
                     i1l3194 17E4                       i1l3186 17C4                       i2l1116 32C0  
                     i1l3372 2F06                       i1l3620 107C                       i1l2670 2946  
                     i1l2910 280C                       i1l3702 12EC                       i1l2920 2840  
                     i1l3368 2EDA                       i1l3632 10CE                       i1l2682 299A  
                     i1l2674 2956                       i1l2930 26AC                       i1l3802 15A6  
                     i1l3730 1404                       i1l3722 13C0                       i1l3714 137C  
                     i1l3706 1314                       i1l3642 112C                       i1l3626 109A  
                     i1l2692 29DA                       i1l2684 29BA                       i1l2676 2962  
                     i1l2932 26C6                       i1l3652 115E                       i1l3644 1130  
                     i1l3628 10A0                       i1l2686 29C6                       i1l2678 2982  
                     i1l2950 2708                       i1l3750 1498                       i1l3742 1454  
                     i1l3734 1410                       i1l3726 13CC                       i1l3718 1388  
                     i1l3670 1204                       i1l3638 10EC                       i1l2960 2736  
                     i1l2936 26D4                       i1l2784 2E90                       i1l2776 3286  
                     i1l3808 15BE                       i1l3648 1140                       i2l1089 2B90  
                     i1l2698 29EC                       i1l2890 27CC                       i1l2954 271A  
                     i1l2778 328C                       i1l3762 1514                       i1l3754 14D0  
                     i1l3746 148C                       i1l3738 1448                       i1l3690 12C4  
                     i1l3682 1280                       i1l3674 123C                       i1l3770 1532  
                     i1l3666 11F8                       i1l3658 1188                       i2l1099 2D5A  
                     i1l2884 27A4                       i1l2964 2748                       i1l2788 2EA6  
                     i1l2980 339A                       i2l3302 24EA                       i1l2886 27BE  
                     i1l2958 2730                       i1l3790 1582                       i1l3774 1556  
                     i1l3766 1520                       i1l3758 14DC                       i1l3694 12D0  
                     i1l3686 128C                       i1l3678 1248                       i1l3870 23A8  
                     i1l3862 235E                       i2l3320 255A                       i2l3312 251C  
                     i2l4008 2AD8                       i1l2992 2A60                       i1l2968 275E  
                     i1l3784 1576                       i1l3768 152C                       i1l3864 2374  
                     i2l3314 252E                       i2l3306 24FE                       i2l3330 2B36  
                     i1l3786 157A                       i1l3778 155E                       i1l3698 12E0  
                     i1l3858 2354                       i2l3308 2506                       i2l3316 253C  
                     i2l3332 2B44                       i1l2988 2A2E                       i1l3796 159A  
                     i1l3892 240E                       i2l3342 2B80                       i2l3334 2B4E  
                     i2l3350 2D0C                       i2l3406 2284                       i1l2998 2A8C  
                     i1l3798 159E                       i2l3352 2D1A                       i2l2712 346C  
                     i2l2720 2588                       i2l3416 22D8                       i2l3424 28AA  
                     i1l3896 2424                       i1l3888 23F8                       i2l3602 2C92  
                     i2l3354 2D24                       i2l3450 20C6                       i2l3274 2FFC  
                     i2l3434 2930                       i2l3284 2466                       i2l2732 2602  
                     i2l2724 259E                       i2l3444 208C                       i2l3380 21E8  
                     i2l3428 28EC                       i2l3606 2CAA                       i2l3358 2D4A  
                     i2l2742 2660                       i2l2734 2634                       i2l2726 25AE  
                     i2l3446 20B2                       i2l2822 1D24                       i2l3382 220E  
                     i2l3550 1A82                       i2l2736 2644                       i2l2728 25E0  
                     i2l3472 2152                       i2l3464 2116                       i2l2816 1CEA  
                     i2l3544 19F2                       i2l3482 2196                       i2l3474 215A  
                     i2l2850 1DD4                       i2l3386 2222                       i2l3562 1C66  
                     i2l2748 267E                       i2l3468 2136                       i2l2844 1DA8  
                     i2l2828 1D36                       i2l3478 217A                       i2l3574 2C2A  
                     i2l2846 1DB8                       i2l2838 1D78                       i2l3558 1C46  
                     i2l2864 1E7A                       i2l2856 1E04                       i2l2848 1DC8  
                     i2l2874 1ECA                       i2l2858 1E14                       u270_21 27B4  
                     u326_41 2452                       u351_41 2078                       u247_41 1C8A  
                     u343_41 21D4                       _RCREG1 000FAE                       u248_41 1CA8  
                     u273_21 269E                       u353_41 20A2                       u345_41 21FE  
           __end_of___lwtoft 32C2                       u275_21 26BC                       u268_21 2796  
                     _RCSTA1 000FAB                       _TXREG1 000FAD                       _RCflag 0048  
                     _TXSTA1 000FAC            __end_of_RTD2Angle 31D8                       SerTx@c 0100  
                  ??_SerInit 0103             OpenSPI1@bus_mode 0100                       ___ftge 29FC  
                     ___lmul 2E7E                    ??___ftadd 008C               keyValue@length 0026  
      __end_ofi2_Delay10TCYx 347E                    ??___ftdiv 000F                    ??___ftneg 0004  
                  ??___ftmul 000F                    ??___ftsub 0098                    ??___fttol 0096  
           __end_of_keyValue 15C8                    ??___lwdiv 0064                    ??___lwmod 0064  
                     _intErr 00D3             __end_of_setIODIR 33C4                       clear_0 302E  
                     clear_1 303A                  setIODIR@dir 0102                    ??_lcdChar 0064  
                  ??_lcdGoTo 0065                    ??_lcdInit 0105                       _strcmp 2F84  
                     _strtod 15C8        ___ftmul@f3_as_product 0013  __size_of_ImplementPIDMotion 0070  
        __size_ofi1_SerTxStr 0058                 __pdataCOMRAM 0059                    ??_setGPIO 0103  
               _calculatePID 199E                    ??_isdigit 0001            __end_ofi2___ftdiv 2300  
          __end_ofi2___ftneg 326A            _calculatePID$2716 00AD            _calculatePID$2645 00AA  
          __end_ofi2___ftmul 21BE                 __mediumconst 0000                    ??_isspace 0001  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                 _StartAngle 00CD            __end_ofi2_setGPIO 3404               i2___ftdiv@cntr 0071  
                 __accesstop 0060      __end_of__initialization 3070                   ___altoft@c 0009  
             i2___ftdiv@sign 0076           __size_of_WriteSPI1 0024                   ___ftadd@f1 0086  
                 ___ftadd@f2 0089          __size_ofi2___ftpack 0120                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004                ___rparam_used 000000                   ___ftdiv@f1 0009  
                 ___ftdiv@f2 000C                   ___ftdiv@f3 0013                   ___ftneg@f1 0001  
             i2___ftpack@arg 0060                  ?_ReadRTDpos 0061                __end_of_RCInt 243C  
             i2___ftpack@exp 0063                   ___ftmul@f1 0009                   ___ftmul@f2 000C  
                 ___ftsub@f1 0092                   ___ftsub@f2 0095                   ___fttol@f1 0092  
             __pcstackCOMRAM 0001                __end_of_SerTx 348E                 __pidataBANK0 34BC  
             i2___ftmul@cntr 0084               i2___ftmul@sign 0085          __size_of_Delay1TCYx 0010  
                 ___lwtoft@c 0068                    ?i2___ftge 0060                      ??_RCInt 002F  
                    ??_SerTx 0100                 ?i2_WriteSPI1 0001                 keyValue@flag 002C  
                 __pbssBANK0 00BE             WriteSPI1@TempVar 0100                    ?_OpenSPI1 0100  
                  ?_SerTxStr 0101                      ?___ftge 0001                      ?___lmul 0001  
               ?_Delay10TCYx 0001                   _lcdCommand 3076                      _CCP3CON 000FB7  
               ?_Delay1KTCYx 0001                    ?___altoft 0009                      _BAUDCON 000F7E  
             ___lmul@product 0009                    ?___ftpack 0001                   ??i2___ftge 0066  
                    ?_strcmp 0001            __end_of_WriteSPI1 333A                    ?___lwtoft 0068  
                    ?_strtod 0018          i2WriteSPI1@data_out 0061                      _PIDInit 310E  
        __size_of_ReadRTDpos 0072          LCDBreakDouble@temp1 00A6          LCDBreakDouble@temp2 00A8  
              _PIDEnableFlag 00DB                      _SSP1BUF 000FC9                      _TMR0Int 2DC4  
 ImplementPIDMotion@PIDValue 0064                      i1_SerTx 34AE                      _RTDInit 320A  
             SerTxStr@string 0101                    ?_keyValue 0024                    ?_setIODIR 0102  
               ??i1_SerTxStr 0004                   ??_OpenSPI1 0102                   ??_SerTxStr 0103  
                    __Hparam 0000                      _SerInit 32EE                      __Lparam 0000  
            _MotorDriverInit 3420              __size_of___ftge 0096              __size_of___lmul 005A  
                    ___ftadd 1C74                      ___ftdiv 2786                      ___ftneg 333A  
                    ___ftmul 268E                      ___ftsub 2FD8                      ___fttol 243C  
                    ___lwdiv 2B18                      ___lwmod 2CF8                 __psmallconst 1000  
                 ??___altoft 000D                      __pcinit 3028                 ??i2___ftpack 0065  
                 ??___ftpack 0006              Delay10TCYx@unit 0100                      _lcdChar 3154  
    i2___ftmul@f3_as_product 0081                      __ramtop 1000                   _initialize 3404  
                    _lcdGoTo 349E                      _lcdInit 2F30                      __ptext0 31D8  
                    __ptext1 3404                      __ptext2 2F30                      __ptext3 33A4  
                    __ptext4 3076                      __ptext5 33C4                      __ptext6 3316  
                    __ptext7 2D64                      __ptext8 32EE                      __ptext9 2E24  
                 ??___lwtoft 006B                    _T0CONbits 000FD5              __size_of_strcmp 0054  
            __size_of_strtod 03D6                 __size_of_abs 002C                      _setGPIO 33C4  
                    _isdigit 3382              keyValue@str_end 002A           __end_ofi1_SerTxStr 2F30  
                    _isspace 326A                      _prevErr 00D6              setIODIR@address 0103  
               setGPIO@value 0102                 ??_Delay1TCYx 0100               __pintcode_body 2A92  
       end_of_initialization 3070                   ??_keyValue 0028                   ??_setIODIR 0103  
                    int_func 2A92            OpenSPI1@smp_phase 0101                   lcdGoTo@pos 0065  
         __end_ofi2___ftpack 268E        ReadRTDpos@LowPosition 0067                      postdec2 000FDD  
                ?_lcdCommand 0001                   _motorInput 00D9                    _RTD2Angle 319A  
                    postinc0 000FEE                      postinc2 000FDE        LCDBreakDouble@tempDub 00A4  
          OpenSPI1@sync_mode 0102                      strcmp@r 0006           __end_of_Delay1TCYx 349E  
                    strtod@s 0018                    _PORTAbits 000F80                    _PORTEbits 000F84  
                  _PORTJbits 000F88                    _TRISAbits 000F92                    _TRISBbits 000F93  
                  _TRISCbits 000F94                    _TRISEbits 000F96                    _TRISFbits 000F97  
                  _TRISGbits 000F98                    _TRISJbits 000F9A                    i2___ftdiv 21BE  
                  i2___ftneg 323A                    i2___ftmul 2062         __size_ofi2_WriteSPI1 0024  
    __end_of_MotorDriverInit 343C                  ___ftdiv@exp 0016                  _CCP3CONbits 000FB7  
                  i2_setGPIO 33E4              i2___ftpack@sign 0064                 ??_ReadRTDpos 0063  
                ___ftmul@exp 0012                  _StrippedKey 0049                   ?_RTD2Angle 0086  
             __end_of___ftge 2A92               __end_of___lmul 2ED8         __size_of_Delay10TCYx 0016  
              __pidataCOMRAM 34BF   __end_of_ImplementPIDMotion 2CF8                  ?_initialize 0001  
       __size_of_Delay1KTCYx 0016               __end_of_strcmp 2FD8                lcdChar@letter 0064  
             __end_of_strtod 199E          start_initialization 3028              _CurrentVelocity 0042  
          __size_ofi2___ftge 00CE                 _CurrentAngle 00BE                  __end_of_abs 32EE  
         __end_of_ReadRTDpos 2C88             i2setGPIO@address 0063                   ?i2___ftdiv 0068  
                 ?i2___ftneg 0060                   ?i2___ftmul 0077          __size_of_lcdCommand 004C  
     __size_ofi2_Delay10TCYx 0016      __size_of_LCDBreakDouble 0170                   ?i2_setGPIO 0062  
       calculatePID@setpoint 00A4       ReadRTDpos@HighPosition 0066            __size_of_OpenSPI1 0060  
                   ??___ftge 0007                     ??___lmul 0009            __size_of_SerTxStr 005A  
                __pdataBANK0 00FA                     ??_strcmp 0005                     ??_strtod 001C  
          __size_of___altoft 007C            __size_of___ftpack 00C6                  __pbssCOMRAM 0042  
          __size_of___lwtoft 002C                __pcstackBANK0 0060                __pcstackBANK1 0100  
                   ?_PIDInit 0001                    _WriteSPI1 3316                     ?_TMR0Int 0001  
         calculatePID@derErr 00A7                 _isdigit$2356 0002                     ?i1_SerTx 0001  
                   ?_RTDInit 0001              Delay1KTCYx@unit 0100               i2setGPIO@value 0062  
           ?_MotorDriverInit 0001          __size_of_initialize 001C            __size_of_keyValue 0556  
          WriteSPI1@data_out 0101            __size_of_setIODIR 0020                     ?_SerInit 0001  
         i2WriteSPI1@TempVar 0060             ___lwdiv@dividend 0060             i1SerTxStr@string 0002  
                  __pintcode 0008                  ??_RTD2Angle 0089                ?i2_lcdCommand 0001  
                   ?___ftadd 0086                     ?___ftdiv 0009                     ?___ftneg 0001  
                   ?___ftmul 0009                     ?___ftsub 0092                     ?___fttol 0092  
                   ?___lwdiv 0060                     ?___lwmod 0060                i2_Delay10TCYx 3468  
                __pintcodelo 0018           LCDBreakDouble@dubs 00A1                     ?_lcdChar 0001  
                   ?_lcdGoTo 0001                     ?_lcdInit 0001                  __smallconst 1000  
                   ?_setGPIO 0102                     ?_isdigit 0001               __size_of_RCInt 013C  
                   ?_isspace 0001                   ?_WriteSPI1 0001               __size_of_SerTx 0010  
           ___lwdiv@quotient 0064                  ??i2___ftdiv 006E                  ??i2___ftneg 0063  
                ??i2___ftmul 007D                     _IPR1bits 000F9F                     _PIE1bits 000F9D  
                ??i2_setGPIO 0063          i2lcdCommand@command 0064                     i1u340_20 2EFC  
                   i1u340_27 2EF2                     i1u341_20 2F28                     i1u341_27 2F1E  
                   i2u328_40 248C                     i2u328_45 2482                     _PIR1bits 000F9E  
                   i2u433_47 346E                     i2u366_40 2CA6               setGPIO@address 0103  
             ??i2_lcdCommand 0064                     _RCONbits 000FD0                 ??_lcdCommand 0104  
                   _SSP1CON1 000FC6               ?i2_Delay10TCYx 0001                  strtod@flags 001E  
                   _SSP1STAT 000FC7                     i1SerTx@c 0001                  strtod@expon 001F  
                   i2___ftge 2868                ?_calculatePID 00A1                 _isspace$2359 0002  
           __size_of_PIDInit 0046            ___lmul@multiplier 0001                  _INTCON2bits 000FF1  
           __size_of_TMR0Int 0060             __size_ofi1_SerTx 000E             __size_of_RTDInit 0030  
         __end_of_lcdCommand 30C2               _LCDBreakDouble 1EF2                    keyValue@x 002E  
                  keyValue@y 002D                     _SetAngle 00CA                     _OpenSPI1 2D64  
                   __Hparam0 0000       ReadRTDpos@FullPosition 0068                     _SerTxStr 2E24  
                   __Lparam0 0000             __size_of_SerInit 0028             __size_of___ftadd 027E  
           __size_of___ftdiv 00E2             __size_of___ftneg 0024                     ___altoft 2B9A  
           __size_of___ftmul 00F8             __size_of___ftsub 0050             __size_of___fttol 0132  
           __size_of___lwdiv 0082             __size_of___lwmod 006C                 ??_initialize 0105  
                   ___ftpack 2936            calculatePID@angle 00A1             __size_of_lcdChar 0046  
             ??_calculatePID 00A7                     ___lwtoft 3296             __size_of_lcdGoTo 0010  
           __size_of_lcdInit 0054             __size_of_setGPIO 0020             __size_of_isdigit 0022  
              ??i2_WriteSPI1 0060                  ??_WriteSPI1 0100              ___lwdiv@divisor 0062  
           __size_of_isspace 002C              ___lwdiv@counter 0066                 RCInt@counter 0030  
                   __ptext10 347E                     __ptext11 320A                     __ptext20 2ED8  
                   __ptext12 348E                     __ptext21 34AE                     __ptext13 343C  
                   __ptext30 2B9A                     __ptext22 15C8                     __ptext14 3452  
                   __ptext31 2936                     __ptext23 326A                     __ptext15 310E  
                   __ptext40 1C74                     __ptext32 2F84                     __ptext24 3382  
                   __ptext16 3420                     __ptext41 2C16                     __ptext25 2E7E  
                   __ptext50 33E4                     __ptext42 319A                     __ptext34 2DC4  
                   __ptext26 333A                     __ptext18 2300                     __ptext51 335E  
                   __ptext43 3296                     __ptext35 199E                     __ptext27 268E  
                   __ptext19 1072                     __ptext52 3468                     __ptext44 1EF2  
                   __ptext36 323A                     __ptext28 29FC                     __ptext53 2CF8  
                   __ptext45 2062                     __ptext37 2868                     __ptext29 2786  
                   __ptext54 2B18                     __ptext46 256E                     __ptext38 21BE  
                   __ptext55 243C                     __ptext47 349E                     __ptext39 2FD8  
                   __ptext56 2C88                     __ptext48 30C2                     __ptext57 32C2  
                   __ptext49 3154                 _SSP1CON1bits 000FC6       __end_of_LCDBreakDouble 2062  
         _ImplementPIDMotion 2C88                     _keyValue 1072                __size_of_hISR 2B10  
              __size_of_lISR 0094                     _setIODIR 33A4                __size_of_main 0032  
             Delay1TCYx@unit 0100                     _received 00DC          ?_ImplementPIDMotion 0064  
         __end_of_initialize 3420                     _loopTime 00FA              ??i2_Delay10TCYx 0060  
              ??_Delay10TCYx 0100                   strtod@eexp 001D                ??_Delay1KTCYx 0100  
               _SSP1STATbits 000FC7         ??_ImplementPIDMotion 0066                   _INTCONbits 000FF2  
                   isdigit@c 0003         __end_ofi2_lcdCommand 310E              ?_LCDBreakDouble 00A1  
                   intlevel1 0000                     intlevel2 0000          __end_ofi2_WriteSPI1 3382  
           ___lwmod@dividend 0060                     isspace@c 0003                    strtod@res 001A  
        __end_of_Delay10TCYx 3468                     strcmp@s1 0001                     strcmp@s2 0003  
            ___lwmod@divisor 0062          __end_of_Delay1KTCYx 3452              ___lwmod@counter 0064  
                   strtod@_u 0020                   i1_SerTxStr 2ED8         __end_of_calculatePID 1C74  
