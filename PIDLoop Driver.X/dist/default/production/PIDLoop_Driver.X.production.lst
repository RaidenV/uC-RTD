

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 27 01:12:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	param0,global,class=BANK0,space=1,delta=1
    73  0000                     
    74                           	psect	idataCOMRAM
    75  003483                     __pidataCOMRAM:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _AZEL
    79  003483  01                 	db	1
    80                           
    81                           	psect	idataBANK0
    82  003480                     __pidataBANK0:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _loopTime
    86                           ;PID.c: 6: unsigned char PIDEnableFlag;
    87                           ;PID.c: 7: unsigned char TMR0Flag = 0;
    88                           ;PID.c: 8: double Ki;
    89                           ;PID.c: 9: double Kp;
    90                           ;PID.c: 10: double Kd;
    91                           ;PID.c: 11: double SetAngle;
    92                           ;PID.c: 12: double CurrentAngle;
    93                           ;PID.c: 13: double error;
    94                           ;PID.c: 14: double prevErr;
    95                           ;PID.c: 15: double intErr;
    96                           ;PID.c: 16: int motorInput;
    97  003480  C3                 	db	195
    98  003481  F5                 	db	245
    99  003482  3C                 	db	60
   100  0000                     _BAUDCON	set	3966
   101  0000                     _CCP3CON	set	4023
   102  0000                     _CCP3CONbits	set	4023
   103  0000                     _CCPR3L	set	4024
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _INTCONbits	set	4082
   106  0000                     _IPR1bits	set	3999
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PORTAbits	set	3968
   110  0000                     _PORTD	set	3971
   111  0000                     _PORTEbits	set	3972
   112  0000                     _PORTH	set	3975
   113  0000                     _PORTJbits	set	3976
   114  0000                     _PR2	set	4043
   115  0000                     _RCONbits	set	4048
   116  0000                     _RCREG	set	4014
   117  0000                     _RCREG1	set	4014
   118  0000                     _RCSTA1	set	4011
   119  0000                     _SPBRG	set	4015
   120  0000                     _SSP1BUF	set	4041
   121  0000                     _SSP1CON1	set	4038
   122  0000                     _SSP1CON1bits	set	4038
   123  0000                     _SSP1STAT	set	4039
   124  0000                     _SSP1STATbits	set	4039
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _T2CON	set	4042
   128  0000                     _T3CON	set	4017
   129  0000                     _TMR0H	set	4055
   130  0000                     _TMR0L	set	4054
   131  0000                     _TRISAbits	set	3986
   132  0000                     _TRISBbits	set	3987
   133  0000                     _TRISCbits	set	3988
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISEbits	set	3990
   136  0000                     _TRISFbits	set	3991
   137  0000                     _TRISGbits	set	3992
   138  0000                     _TRISH	set	3993
   139  0000                     _TRISJbits	set	3994
   140  0000                     _TXREG1	set	4013
   141  0000                     _TXSTA1	set	4012
   142                           
   143                           	psect	smallconst
   144  001000                     __psmallconst:
   145                           	opt stack 0
   146  001000  00                 	db	0
   147  001001                     STR_30:
   148  001001  57                 	db	87	;'W'
   149  001002  65                 	db	101	;'e'
   150  001003  6C                 	db	108	;'l'
   151  001004  63                 	db	99	;'c'
   152  001005  6F                 	db	111	;'o'
   153  001006  6D                 	db	109	;'m'
   154  001007  65                 	db	101	;'e'
   155  001008  20                 	db	32
   156  001009  74                 	db	116	;'t'
   157  00100A  6F                 	db	111	;'o'
   158  00100B  20                 	db	32
   159  00100C  74                 	db	116	;'t'
   160  00100D  68                 	db	104	;'h'
   161  00100E  65                 	db	101	;'e'
   162  00100F  20                 	db	32
   163  001010  77                 	db	119	;'w'
   164  001011  6F                 	db	111	;'o'
   165  001012  72                 	db	114	;'r'
   166  001013  6C                 	db	108	;'l'
   167  001014  64                 	db	100	;'d'
   168  001015  20                 	db	32
   169  001016  6F                 	db	111	;'o'
   170  001017  66                 	db	102	;'f'
   171  001018  20                 	db	32
   172  001019  74                 	db	116	;'t'
   173  00101A  6F                 	db	111	;'o'
   174  00101B  6D                 	db	109	;'m'
   175  00101C  6F                 	db	111	;'o'
   176  00101D  72                 	db	114	;'r'
   177  00101E  72                 	db	114	;'r'
   178  00101F  6F                 	db	111	;'o'
   179  001020  77                 	db	119	;'w'
   180  001021  21                 	db	33
   181  001022  21                 	db	33
   182  001023  21                 	db	33
   183  001024  00                 	db	0
   184  001025                     STR_31:
   185  001025  43                 	db	67	;'C'
   186  001026  75                 	db	117	;'u'
   187  001027  72                 	db	114	;'r'
   188  001028  72                 	db	114	;'r'
   189  001029  65                 	db	101	;'e'
   190  00102A  6E                 	db	110	;'n'
   191  00102B  74                 	db	116	;'t'
   192  00102C  20                 	db	32
   193  00102D  41                 	db	65	;'A'
   194  00102E  6E                 	db	110	;'n'
   195  00102F  67                 	db	103	;'g'
   196  001030  6C                 	db	108	;'l'
   197  001031  65                 	db	101	;'e'
   198  001032  3A                 	db	58	;':'
   199  001033  20                 	db	32
   200  001034  00                 	db	0
   201  001035                     STR_4:
   202  001035  20                 	db	32
   203  001036  20                 	db	32
   204  001037  20                 	db	32
   205  001038  56                 	db	86	;'V'
   206  001039  61                 	db	97	;'a'
   207  00103A  6C                 	db	108	;'l'
   208  00103B  75                 	db	117	;'u'
   209  00103C  65                 	db	101	;'e'
   210  00103D  3A                 	db	58	;':'
   211  00103E  20                 	db	32
   212  00103F  00                 	db	0
   213  001040  38                 	db	56	;'8'
   214  001041  36                 	db	54	;'6'
   215  001042  38                 	db	56	;'8'
   216  001043  30                 	db	48	;'0'
   217  001044  3A                 	db	58	;':'
   218  001045  20                 	db	32
   219  001046  00                 	db	0
   220  001047  38                 	db	56	;'8'
   221  001048  37                 	db	55	;'7'
   222  001049  32                 	db	50	;'2'
   223  00104A  32                 	db	50	;'2'
   224  00104B  3A                 	db	58	;':'
   225  00104C  20                 	db	32
   226  00104D  00                 	db	0
   227  00104E                     STR_3:
   228  00104E  4B                 	db	75	;'K'
   229  00104F  65                 	db	101	;'e'
   230  001050  79                 	db	121	;'y'
   231  001051  3A                 	db	58	;':'
   232  001052  20                 	db	32
   233  001053  00                 	db	0
   234  001054                     STR_13:
   235  001054  3F                 	db	63	;'?'
   236  001055  3F                 	db	63	;'?'
   237  001056  3F                 	db	63	;'?'
   238  001057  00                 	db	0
   239  001058                     STR_21:
   240  001058  56                 	db	86	;'V'
   241  001059  45                 	db	69	;'E'
   242  00105A  4C                 	db	76	;'L'
   243  00105B  00                 	db	0
   244  00105C                     STR_5:
   245  00105C  50                 	db	80	;'P'
   246  00105D  4F                 	db	79	;'O'
   247  00105E  53                 	db	83	;'S'
   248  00105F  00                 	db	0
   249  001060                     STR_22:
   250  001060  76                 	db	118	;'v'
   251  001061  65                 	db	101	;'e'
   252  001062  6C                 	db	108	;'l'
   253  001063  00                 	db	0
   254  001064                     STR_6:
   255  001064  70                 	db	112	;'p'
   256  001065  6F                 	db	111	;'o'
   257  001066  73                 	db	115	;'s'
   258  001067  00                 	db	0
   259  001068                     STR_11:
   260  001068  4B                 	db	75	;'K'
   261  001069  44                 	db	68	;'D'
   262  00106A  00                 	db	0
   263  00106B                     STR_9:
   264  00106B  4B                 	db	75	;'K'
   265  00106C  49                 	db	73	;'I'
   266  00106D  00                 	db	0
   267  00106E                     STR_7:
   268  00106E  4B                 	db	75	;'K'
   269  00106F  50                 	db	80	;'P'
   270  001070  00                 	db	0
   271  001071                     STR_15:
   272  001071  41                 	db	65	;'A'
   273  001072  5A                 	db	90	;'Z'
   274  001073  00                 	db	0
   275  001074                     STR_12:
   276  001074  6B                 	db	107	;'k'
   277  001075  64                 	db	100	;'d'
   278  001076  00                 	db	0
   279  001077                     STR_10:
   280  001077  6B                 	db	107	;'k'
   281  001078  69                 	db	105	;'i'
   282  001079  00                 	db	0
   283  00107A                     STR_8:
   284  00107A  6B                 	db	107	;'k'
   285  00107B  70                 	db	112	;'p'
   286  00107C  00                 	db	0
   287  00107D                     STR_16:
   288  00107D  61                 	db	97	;'a'
   289  00107E  7A                 	db	122	;'z'
   290  00107F  00                 	db	0
   291  0000                     
   292                           ; #config settings
   293  001080  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           	psect	cinit
   296  0030F2                     __pcinit:
   297                           	opt stack 0
   298  0030F2                     start_initialization:
   299                           	opt stack 0
   300  0030F2                     __initialization:
   301                           	opt stack 0
   302                           
   303                           ; Clear objects allocated to BANK0 (58 bytes)
   304  0030F2  EE00  F0B5         	lfsr	0,__pbssBANK0
   305  0030F6  0E3A               	movlw	58
   306  0030F8                     clear_0:
   307  0030F8  6AEE               	clrf	postinc0,c
   308  0030FA  06E8               	decf	wreg,f,c
   309  0030FC  E1FD               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to COMRAM (23 bytes)
   312  0030FE  EE00  F042         	lfsr	0,__pbssCOMRAM
   313  003102  0E17               	movlw	23
   314  003104                     clear_1:
   315  003104  6AEE               	clrf	postinc0,c
   316  003106  06E8               	decf	wreg,f,c
   317  003108  E1FD               	bnz	clear_1
   318                           
   319                           ; Initialize objects allocated to BANK0 (3 bytes)
   320                           ; load TBLPTR registers with __pidataBANK0
   321  00310A  0E80               	movlw	low __pidataBANK0
   322  00310C  6EF6               	movwf	tblptrl,c
   323  00310E  0E34               	movlw	high __pidataBANK0
   324  003110  6EF7               	movwf	tblptrh,c
   325  003112  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   326  003114  6EF8               	movwf	tblptru,c
   327  003116  0009               	tblrd		*+	;fetch initializer
   328  003118  CFF5 F0EF          	movff	tablat,__pdataBANK0
   329  00311C  0009               	tblrd		*+	;fetch initializer
   330  00311E  CFF5 F0F0          	movff	tablat,__pdataBANK0+1
   331  003122  0009               	tblrd		*+	;fetch initializer
   332  003124  CFF5 F0F1          	movff	tablat,__pdataBANK0+2
   333                           
   334                           ; Initialize objects allocated to COMRAM (1 bytes)
   335                           ; load TBLPTR registers with __pidataCOMRAM
   336  003128  0E83               	movlw	low __pidataCOMRAM
   337  00312A  6EF6               	movwf	tblptrl,c
   338  00312C  0E34               	movlw	high __pidataCOMRAM
   339  00312E  6EF7               	movwf	tblptrh,c
   340  003130  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   341  003132  6EF8               	movwf	tblptru,c
   342  003134  0009               	tblrd		*+	;fetch initializer
   343  003136  CFF5 F059          	movff	tablat,__pdataCOMRAM
   344  00313A                     end_of_initialization:
   345                           	opt stack 0
   346  00313A                     __end_of__initialization:
   347                           	opt stack 0
   348  00313A  0100               	movlb	0
   349  00313C  EFC7  F013         	goto	_main	;jump to C main() function
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           
   357                           	psect	bssCOMRAM
   358  000042                     __pbssCOMRAM:
   359                           	opt stack 0
   360  000042                     _CurrentVelocity:
   361                           	opt stack 0
   362  000042                     	ds	3
   363  000045                     _StrippedValue:
   364                           	opt stack 0
   365  000045                     	ds	3
   366  000048                     _RCflag:
   367                           	opt stack 0
   368  000048                     	ds	1
   369  000049                     _StrippedKey:
   370                           	opt stack 0
   371  000049                     	ds	1
   372  00004A                     _value:
   373                           	opt stack 0
   374  00004A                     	ds	10
   375  000054                     _key:
   376                           	opt stack 0
   377  000054                     	ds	5
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           
   385                           	psect	dataCOMRAM
   386  000059                     __pdataCOMRAM:
   387                           	opt stack 0
   388  000059                     _AZEL:
   389                           	opt stack 0
   390  000059                     	ds	1
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           
   398                           	psect	bssBANK0
   399  0000B5                     __pbssBANK0:
   400                           	opt stack 0
   401  0000B5                     _CurrentAngle:
   402                           	opt stack 0
   403  0000B5                     	ds	3
   404  0000B8                     _Kd:
   405                           	opt stack 0
   406  0000B8                     	ds	3
   407  0000BB                     _Ki:
   408                           	opt stack 0
   409  0000BB                     	ds	3
   410  0000BE                     _Kp:
   411                           	opt stack 0
   412  0000BE                     	ds	3
   413  0000C1                     _SetAngle:
   414                           	opt stack 0
   415  0000C1                     	ds	3
   416  0000C4                     _error:
   417                           	opt stack 0
   418  0000C4                     	ds	3
   419  0000C7                     _intErr:
   420                           	opt stack 0
   421  0000C7                     	ds	3
   422  0000CA                     _prevErr:
   423                           	opt stack 0
   424  0000CA                     	ds	3
   425  0000CD                     _motorInput:
   426                           	opt stack 0
   427  0000CD                     	ds	2
   428  0000CF                     _PIDEnableFlag:
   429                           	opt stack 0
   430  0000CF                     	ds	1
   431  0000D0                     _TMR0Flag:
   432                           	opt stack 0
   433  0000D0                     	ds	1
   434  0000D1                     _received:
   435                           	opt stack 0
   436  0000D1                     	ds	30
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           
   444                           	psect	dataBANK0
   445  0000EF                     __pdataBANK0:
   446                           	opt stack 0
   447  0000EF                     _loopTime:
   448                           	opt stack 0
   449  0000EF                     	ds	3
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           
   457                           	psect	cstackBANK1
   458  000100                     __pcstackBANK1:
   459                           	opt stack 0
   460  000100                     breakDouble@tempDub:
   461                           	opt stack 0
   462  000100                     calculatePID@derErr:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0x0
   466  000100                     	ds	2
   467  000102                     breakDouble@temp1:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x2
   471  000102                     	ds	1
   472  000103                     _calculatePID$2660:
   473                           	opt stack 0
   474                           
   475                           ; 3 bytes @ 0x3
   476  000103                     	ds	1
   477  000104                     breakDouble@temp2:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x4
   481  000104                     	ds	2
   482  000106                     _calculatePID$2661:
   483                           	opt stack 0
   484                           
   485                           ; 3 bytes @ 0x6
   486  000106                     	ds	3
   487                           tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           postinc0	equ	0xFEE
   492                           wreg	equ	0xFE8
   493                           
   494                           	psect	cstackBANK0
   495  000060                     __pcstackBANK0:
   496                           	opt stack 0
   497  000060                     ??_hISR:
   498                           
   499                           ; 0 bytes @ 0x0
   500  000060                     	ds	14
   501  00006E                     ?_abs:
   502                           	opt stack 0
   503  00006E                     ?___lwdiv:
   504                           	opt stack 0
   505  00006E                     ?___lwmod:
   506                           	opt stack 0
   507  00006E                     ?___ftpack:
   508                           	opt stack 0
   509  00006E                     ?___ftneg:
   510                           	opt stack 0
   511  00006E                     SerTx@c:
   512                           	opt stack 0
   513  00006E                     OpenSPI1@bus_mode:
   514                           	opt stack 0
   515  00006E                     WriteSPI1@TempVar:
   516                           	opt stack 0
   517  00006E                     Delay10TCYx@unit:
   518                           	opt stack 0
   519  00006E                     Delay1KTCYx@unit:
   520                           	opt stack 0
   521  00006E                     Delay1TCYx@unit:
   522                           	opt stack 0
   523  00006E                     abs@a:
   524                           	opt stack 0
   525  00006E                     ___lwdiv@dividend:
   526                           	opt stack 0
   527  00006E                     ___lwmod@dividend:
   528                           	opt stack 0
   529  00006E                     ___ftpack@arg:
   530                           	opt stack 0
   531  00006E                     ___ftge@ff1:
   532                           	opt stack 0
   533  00006E                     ___ftneg@f1:
   534                           	opt stack 0
   535                           
   536                           ; 3 bytes @ 0xE
   537  00006E                     	ds	1
   538  00006F                     ?_ReadRTDpos:
   539                           	opt stack 0
   540  00006F                     OpenSPI1@smp_phase:
   541                           	opt stack 0
   542  00006F                     WriteSPI1@data_out:
   543                           	opt stack 0
   544  00006F                     SerTxStr@string:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0xF
   548  00006F                     	ds	1
   549  000070                     ??_abs:
   550  000070                     setGPIO@value:
   551                           	opt stack 0
   552  000070                     setIODIR@dir:
   553                           	opt stack 0
   554  000070                     OpenSPI1@sync_mode:
   555                           	opt stack 0
   556  000070                     ___lwdiv@divisor:
   557                           	opt stack 0
   558  000070                     ___lwmod@divisor:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x10
   562  000070                     	ds	1
   563  000071                     ??_ReadRTDpos:
   564  000071                     setGPIO@address:
   565                           	opt stack 0
   566  000071                     setIODIR@address:
   567                           	opt stack 0
   568  000071                     ___ftpack@exp:
   569                           	opt stack 0
   570  000071                     ___ftge@ff2:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x11
   574  000071                     	ds	1
   575  000072                     lcdCommand@command:
   576                           	opt stack 0
   577  000072                     ___ftpack@sign:
   578                           	opt stack 0
   579  000072                     ___lwdiv@counter:
   580                           	opt stack 0
   581  000072                     ___lwmod@counter:
   582                           	opt stack 0
   583  000072                     ImplementPIDMotion@PIDValue:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x12
   587  000072                     	ds	1
   588  000073                     ??___ftpack:
   589  000073                     ___lwdiv@quotient:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x13
   593  000073                     	ds	1
   594  000074                     ??_ImplementPIDMotion:
   595  000074                     ??___ftge:
   596  000074                     ReadRTDpos@HighPosition:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x14
   600  000074                     	ds	1
   601  000075                     ReadRTDpos@LowPosition:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x15
   605  000075                     	ds	1
   606  000076                     ?___ftdiv:
   607                           	opt stack 0
   608  000076                     ?___lwtoft:
   609                           	opt stack 0
   610  000076                     ReadRTDpos@FullPosition:
   611                           	opt stack 0
   612  000076                     ___lwtoft@c:
   613                           	opt stack 0
   614  000076                     ___ftdiv@f1:
   615                           	opt stack 0
   616                           
   617                           ; 3 bytes @ 0x16
   618  000076                     	ds	2
   619  000078                     ReadRTDpos@x:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x18
   623  000078                     	ds	1
   624  000079                     ___ftdiv@f2:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x19
   628  000079                     	ds	3
   629  00007C                     ??___ftdiv:
   630                           
   631                           ; 0 bytes @ 0x1C
   632  00007C                     	ds	3
   633  00007F                     ___ftdiv@cntr:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x1F
   637  00007F                     	ds	1
   638  000080                     ___ftdiv@f3:
   639                           	opt stack 0
   640                           
   641                           ; 3 bytes @ 0x20
   642  000080                     	ds	3
   643  000083                     ___ftdiv@exp:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x23
   647  000083                     	ds	1
   648  000084                     ___ftdiv@sign:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x24
   652  000084                     	ds	1
   653  000085                     ?___ftmul:
   654                           	opt stack 0
   655  000085                     ___ftmul@f1:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x25
   659  000085                     	ds	3
   660  000088                     ___ftmul@f2:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x28
   664  000088                     	ds	3
   665  00008B                     ??___ftmul:
   666                           
   667                           ; 0 bytes @ 0x2B
   668  00008B                     	ds	3
   669  00008E                     ___ftmul@exp:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x2E
   673  00008E                     	ds	1
   674  00008F                     ___ftmul@f3_as_product:
   675                           	opt stack 0
   676                           
   677                           ; 3 bytes @ 0x2F
   678  00008F                     	ds	3
   679  000092                     ___ftmul@cntr:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x32
   683  000092                     	ds	1
   684  000093                     ___ftmul@sign:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x33
   688  000093                     	ds	1
   689  000094                     ?___ftadd:
   690                           	opt stack 0
   691  000094                     ?_RTD2Angle:
   692                           	opt stack 0
   693  000094                     RTD2Angle@RTDAngle:
   694                           	opt stack 0
   695  000094                     ___ftadd@f1:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x34
   699  000094                     	ds	3
   700  000097                     ___ftadd@f2:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x37
   704  000097                     	ds	3
   705  00009A                     ??___ftadd:
   706                           
   707                           ; 0 bytes @ 0x3A
   708  00009A                     	ds	3
   709  00009D                     ___ftadd@sign:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x3D
   713  00009D                     	ds	1
   714  00009E                     ___ftadd@exp2:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x3E
   718  00009E                     	ds	1
   719  00009F                     ___ftadd@exp1:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x3F
   723  00009F                     	ds	1
   724  0000A0                     ?___ftsub:
   725                           	opt stack 0
   726  0000A0                     ?___fttol:
   727                           	opt stack 0
   728  0000A0                     ___ftsub@f1:
   729                           	opt stack 0
   730  0000A0                     ___fttol@f1:
   731                           	opt stack 0
   732                           
   733                           ; 3 bytes @ 0x40
   734  0000A0                     	ds	3
   735  0000A3                     ___ftsub@f2:
   736                           	opt stack 0
   737                           
   738                           ; 3 bytes @ 0x43
   739  0000A3                     	ds	1
   740  0000A4                     ??___fttol:
   741                           
   742                           ; 0 bytes @ 0x44
   743  0000A4                     	ds	2
   744  0000A6                     
   745                           ; 0 bytes @ 0x46
   746  0000A6                     	ds	3
   747  0000A9                     ___fttol@sign1:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x49
   751  0000A9                     	ds	1
   752  0000AA                     ___fttol@lval:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x4A
   756  0000AA                     	ds	4
   757  0000AE                     ___fttol@exp1:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x4E
   761  0000AE                     	ds	1
   762  0000AF                     calculatePID@angle:
   763                           	opt stack 0
   764  0000AF                     breakDouble@dubs:
   765                           	opt stack 0
   766                           
   767                           ; 3 bytes @ 0x4F
   768  0000AF                     	ds	3
   769  0000B2                     calculatePID@setpoint:
   770                           	opt stack 0
   771                           
   772                           ; 3 bytes @ 0x52
   773  0000B2                     	ds	3
   774  0000B5                     tblptru	equ	0xFF8
   775                           tblptrh	equ	0xFF7
   776                           tblptrl	equ	0xFF6
   777                           tablat	equ	0xFF5
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           
   781                           ; 0 bytes @ 0x55
   782                           
   783                           	psect	cstackCOMRAM
   784  000001                     __pcstackCOMRAM:
   785                           	opt stack 0
   786  000001                     ??_isspace:
   787  000001                     ??_isdigit:
   788  000001                     ?_strcmp:
   789                           	opt stack 0
   790  000001                     ?i1___ftpack:
   791                           	opt stack 0
   792  000001                     ?i1___ftneg:
   793                           	opt stack 0
   794  000001                     ?___lmul:
   795                           	opt stack 0
   796  000001                     i1SerTx@c:
   797                           	opt stack 0
   798  000001                     strcmp@s1:
   799                           	opt stack 0
   800  000001                     i1___ftpack@arg:
   801                           	opt stack 0
   802  000001                     i1___ftge@ff1:
   803                           	opt stack 0
   804  000001                     i1___ftneg@f1:
   805                           	opt stack 0
   806  000001                     ___lmul@multiplier:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x0
   810  000001                     	ds	1
   811  000002                     _isdigit$2362:
   812                           	opt stack 0
   813  000002                     _isspace$2365:
   814                           	opt stack 0
   815  000002                     i1SerTxStr@string:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x1
   819  000002                     	ds	1
   820  000003                     isdigit@c:
   821                           	opt stack 0
   822  000003                     isspace@c:
   823                           	opt stack 0
   824  000003                     strcmp@s2:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x2
   828  000003                     	ds	1
   829  000004                     i1___ftpack@exp:
   830                           	opt stack 0
   831  000004                     i1___ftge@ff2:
   832                           	opt stack 0
   833                           
   834                           ; 3 bytes @ 0x3
   835  000004                     	ds	1
   836  000005                     ??_strcmp:
   837  000005                     i1___ftpack@sign:
   838                           	opt stack 0
   839  000005                     ___lmul@multiplicand:
   840                           	opt stack 0
   841                           
   842                           ; 4 bytes @ 0x4
   843  000005                     	ds	1
   844  000006                     ??i1___ftpack:
   845  000006                     strcmp@r:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x5
   849  000006                     	ds	1
   850  000007                     ??i1___ftge:
   851                           
   852                           ; 0 bytes @ 0x6
   853  000007                     	ds	2
   854  000009                     ?___altoft:
   855                           	opt stack 0
   856  000009                     ?i1___ftdiv:
   857                           	opt stack 0
   858  000009                     ?i1___ftmul:
   859                           	opt stack 0
   860  000009                     i1___ftdiv@f1:
   861                           	opt stack 0
   862  000009                     i1___ftmul@f1:
   863                           	opt stack 0
   864  000009                     ___lmul@product:
   865                           	opt stack 0
   866  000009                     ___altoft@c:
   867                           	opt stack 0
   868                           
   869                           ; 4 bytes @ 0x8
   870  000009                     	ds	3
   871  00000C                     i1___ftdiv@f2:
   872                           	opt stack 0
   873  00000C                     i1___ftmul@f2:
   874                           	opt stack 0
   875                           
   876                           ; 3 bytes @ 0xB
   877  00000C                     	ds	1
   878  00000D                     ??___altoft:
   879                           
   880                           ; 0 bytes @ 0xC
   881  00000D                     	ds	2
   882  00000F                     ??i1___ftdiv:
   883  00000F                     ??i1___ftmul:
   884                           
   885                           ; 0 bytes @ 0xE
   886  00000F                     	ds	2
   887  000011                     ___altoft@exp:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x10
   891  000011                     	ds	1
   892  000012                     ___altoft@sign:
   893                           	opt stack 0
   894  000012                     i1___ftdiv@cntr:
   895                           	opt stack 0
   896  000012                     i1___ftmul@exp:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x11
   900  000012                     	ds	1
   901  000013                     i1___ftdiv@f3:
   902                           	opt stack 0
   903  000013                     i1___ftmul@f3_as_product:
   904                           	opt stack 0
   905                           
   906                           ; 3 bytes @ 0x12
   907  000013                     	ds	3
   908  000016                     i1___ftdiv@exp:
   909                           	opt stack 0
   910  000016                     i1___ftmul@cntr:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x15
   914  000016                     	ds	1
   915  000017                     i1___ftdiv@sign:
   916                           	opt stack 0
   917  000017                     i1___ftmul@sign:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x16
   921  000017                     	ds	1
   922  000018                     ?_strtod:
   923                           	opt stack 0
   924  000018                     strtod@s:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x17
   928  000018                     	ds	2
   929  00001A                     strtod@res:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x19
   933  00001A                     	ds	2
   934  00001C                     ??_strtod:
   935                           
   936                           ; 0 bytes @ 0x1B
   937  00001C                     	ds	1
   938  00001D                     strtod@eexp:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x1C
   942  00001D                     	ds	1
   943  00001E                     strtod@flags:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x1D
   947  00001E                     	ds	1
   948  00001F                     strtod@expon:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x1E
   952  00001F                     	ds	1
   953  000020                     strtod@_u:
   954                           	opt stack 0
   955                           
   956                           ; 4 bytes @ 0x1F
   957  000020                     	ds	4
   958  000024                     keyValue@str:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x23
   962  000024                     	ds	2
   963  000026                     keyValue@length:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x25
   967  000026                     	ds	2
   968  000028                     ??_keyValue:
   969                           
   970                           ; 0 bytes @ 0x27
   971  000028                     	ds	2
   972  00002A                     keyValue@str_end:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x29
   976  00002A                     	ds	2
   977  00002C                     keyValue@flag:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x2B
   981  00002C                     	ds	1
   982  00002D                     keyValue@y:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x2C
   986  00002D                     	ds	1
   987  00002E                     keyValue@x:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x2D
   991  00002E                     	ds	1
   992  00002F                     
   993                           ; 0 bytes @ 0x2E
   994  00002F                     	ds	1
   995  000030                     RCInt@counter:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x2F
   999  000030                     	ds	1
  1000  000031                     ??_lISR:
  1001                           
  1002                           ; 0 bytes @ 0x30
  1003  000031                     	ds	17
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           
  1011 ;;
  1012 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1013 ;;
  1014 ;; *************** function _main *****************
  1015 ;; Defined at:
  1016 ;;		line 16 in file "PIDLoop.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;		None               void
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels required when called:   13
  1036 ;; This function calls:
  1037 ;;		_ImplementPIDMotion
  1038 ;;		_RTD2Angle
  1039 ;;		_ReadRTDpos
  1040 ;;		_SerTxStr
  1041 ;;		_breakDouble
  1042 ;;		_calculatePID
  1043 ;;		_initialize
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text0
  1050  00278E                     __ptext0:
  1051                           	opt stack 0
  1052  00278E                     _main:
  1053                           	opt stack 18
  1054                           
  1055                           ;PIDLoop.c: 18: initialize();
  1056                           
  1057                           ;incstack = 0
  1058  00278E  ECE3  F019         	call	_initialize	;wreg free
  1059  002792  D000               	goto	l4445
  1060  002794                     l4445:
  1061                           
  1062                           ;PIDLoop.c: 21: {
  1063                           ;PIDLoop.c: 23: if (PIDEnableFlag == 1 && TMR0Flag == 1)
  1064  002794  0100               	movlb	0	; () banked
  1065  002796  05CF               	decf	_PIDEnableFlag& (0+255),w,b
  1066  002798  A4D8               	btfss	status,2,c
  1067  00279A  D03C               	goto	l4461
  1068                           
  1069                           ; BSR set to: 0
  1070  00279C  0100               	movlb	0	; () banked
  1071  00279E  05D0               	decf	_TMR0Flag& (0+255),w,b
  1072  0027A0  A4D8               	btfss	status,2,c
  1073  0027A2  D038               	goto	l4461
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;PIDLoop.c: 24: {
  1077                           ;PIDLoop.c: 25: INTCONbits.GIE = 0;
  1078  0027A4  9EF2               	bcf	intcon,7,c	;volatile
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;PIDLoop.c: 26: CurrentAngle = RTD2Angle(ReadRTDpos());
  1082  0027A6  ECD8  F016         	call	_ReadRTDpos	;wreg free
  1083  0027AA  C06F  F094         	movff	?_ReadRTDpos,RTD2Angle@RTDAngle
  1084  0027AE  C070  F095         	movff	?_ReadRTDpos+1,RTD2Angle@RTDAngle+1
  1085  0027B2  ECE9  F018         	call	_RTD2Angle	;wreg free
  1086  0027B6  C094  F0B5         	movff	?_RTD2Angle,_CurrentAngle
  1087  0027BA  C095  F0B6         	movff	?_RTD2Angle+1,_CurrentAngle+1
  1088  0027BE  C096  F0B7         	movff	?_RTD2Angle+2,_CurrentAngle+2
  1089                           
  1090                           ;PIDLoop.c: 27: calculatePID(CurrentAngle, SetAngle);
  1091  0027C2  C0B5  F0AF         	movff	_CurrentAngle,calculatePID@angle
  1092  0027C6  C0B6  F0B0         	movff	_CurrentAngle+1,calculatePID@angle+1
  1093  0027CA  C0B7  F0B1         	movff	_CurrentAngle+2,calculatePID@angle+2
  1094  0027CE  C0C1  F0B2         	movff	_SetAngle,calculatePID@setpoint
  1095  0027D2  C0C2  F0B3         	movff	_SetAngle+1,calculatePID@setpoint+1
  1096  0027D6  C0C3  F0B4         	movff	_SetAngle+2,calculatePID@setpoint+2
  1097  0027DA  ECD7  F00C         	call	_calculatePID	;wreg free
  1098                           
  1099                           ;PIDLoop.c: 28: ImplementPIDMotion(motorInput);
  1100  0027DE  C0CD  F072         	movff	_motorInput,ImplementPIDMotion@PIDValue
  1101  0027E2  C0CE  F073         	movff	_motorInput+1,ImplementPIDMotion@PIDValue+1
  1102  0027E6  EC77  F015         	call	_ImplementPIDMotion	;wreg free
  1103                           
  1104                           ;PIDLoop.c: 29: TMR0Flag = 0;
  1105  0027EA  0E00               	movlw	0
  1106  0027EC  0100               	movlb	0	; () banked
  1107  0027EE  6FD0               	movwf	_TMR0Flag& (0+255),b
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;PIDLoop.c: 30: INTCONbits.GIE = 1;
  1111  0027F0  8EF2               	bsf	intcon,7,c	;volatile
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;PIDLoop.c: 32: SerTxStr("Current Angle: ");
  1115  0027F2  0E25               	movlw	low STR_31
  1116  0027F4  0100               	movlb	0	; () banked
  1117  0027F6  6F6F               	movwf	SerTxStr@string& (0+255),b
  1118  0027F8  0E10               	movlw	high STR_31
  1119  0027FA  0100               	movlb	0	; () banked
  1120  0027FC  6F70               	movwf	(SerTxStr@string+1)& (0+255),b
  1121  0027FE  EC77  F017         	call	_SerTxStr	;wreg free
  1122                           
  1123                           ;PIDLoop.c: 33: breakDouble(CurrentAngle);
  1124  002802  C0B5  F0AF         	movff	_CurrentAngle,breakDouble@dubs
  1125  002806  C0B6  F0B0         	movff	_CurrentAngle+1,breakDouble@dubs+1
  1126  00280A  C0B7  F0B1         	movff	_CurrentAngle+2,breakDouble@dubs+2
  1127  00280E  EC7D  F00F         	call	_breakDouble	;wreg free
  1128                           
  1129                           ;PIDLoop.c: 34: }
  1130  002812  D7C0               	goto	l4445
  1131  002814                     l4461:
  1132                           
  1133                           ;PIDLoop.c: 36: else if (PIDEnableFlag == 3)
  1134  002814  0E03               	movlw	3
  1135  002816  0100               	movlb	0	; () banked
  1136  002818  19CF               	xorwf	_PIDEnableFlag& (0+255),w,b
  1137  00281A  A4D8               	btfss	status,2,c
  1138  00281C  D7BB               	goto	l4445
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;PIDLoop.c: 37: {
  1142                           ;PIDLoop.c: 38: INTCONbits.GIE = 0;
  1143  00281E  9EF2               	bcf	intcon,7,c	;volatile
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;PIDLoop.c: 39: TMR0H = 0xDB;
  1147  002820  0EDB               	movlw	219
  1148  002822  6ED7               	movwf	4055,c	;volatile
  1149                           
  1150                           ;PIDLoop.c: 40: TMR0L = 0x60;
  1151  002824  0E60               	movlw	96
  1152  002826  6ED6               	movwf	4054,c	;volatile
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;PIDLoop.c: 41: CurrentAngle = RTD2Angle(ReadRTDpos());
  1156  002828  ECD8  F016         	call	_ReadRTDpos	;wreg free
  1157  00282C  C06F  F094         	movff	?_ReadRTDpos,RTD2Angle@RTDAngle
  1158  002830  C070  F095         	movff	?_ReadRTDpos+1,RTD2Angle@RTDAngle+1
  1159  002834  ECE9  F018         	call	_RTD2Angle	;wreg free
  1160  002838  C094  F0B5         	movff	?_RTD2Angle,_CurrentAngle
  1161  00283C  C095  F0B6         	movff	?_RTD2Angle+1,_CurrentAngle+1
  1162  002840  C096  F0B7         	movff	?_RTD2Angle+2,_CurrentAngle+2
  1163                           
  1164                           ;PIDLoop.c: 42: calculatePID(CurrentAngle, SetAngle);
  1165  002844  C0B5  F0AF         	movff	_CurrentAngle,calculatePID@angle
  1166  002848  C0B6  F0B0         	movff	_CurrentAngle+1,calculatePID@angle+1
  1167  00284C  C0B7  F0B1         	movff	_CurrentAngle+2,calculatePID@angle+2
  1168  002850  C0C1  F0B2         	movff	_SetAngle,calculatePID@setpoint
  1169  002854  C0C2  F0B3         	movff	_SetAngle+1,calculatePID@setpoint+1
  1170  002858  C0C3  F0B4         	movff	_SetAngle+2,calculatePID@setpoint+2
  1171  00285C  ECD7  F00C         	call	_calculatePID	;wreg free
  1172                           
  1173                           ;PIDLoop.c: 43: ImplementPIDMotion(motorInput);
  1174  002860  C0CD  F072         	movff	_motorInput,ImplementPIDMotion@PIDValue
  1175  002864  C0CE  F073         	movff	_motorInput+1,ImplementPIDMotion@PIDValue+1
  1176  002868  EC77  F015         	call	_ImplementPIDMotion	;wreg free
  1177                           
  1178                           ;PIDLoop.c: 44: INTCONbits.GIE = 1;
  1179  00286C  8EF2               	bsf	intcon,7,c	;volatile
  1180                           
  1181                           ;PIDLoop.c: 45: INTCONbits.TMR0IE = 1;
  1182  00286E  8AF2               	bsf	intcon,5,c	;volatile
  1183                           
  1184                           ;PIDLoop.c: 46: T0CONbits.TMR0ON = 1;
  1185  002870  8ED5               	bsf	4053,7,c	;volatile
  1186  002872  D790               	goto	l4445
  1187  002874  EF5A  F000         	goto	start
  1188  002878                     __end_of_main:
  1189                           	opt stack 0
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           intcon	equ	0xFF2
  1195                           postinc0	equ	0xFEE
  1196                           wreg	equ	0xFE8
  1197                           status	equ	0xFD8
  1198                           
  1199 ;; *************** function _initialize *****************
  1200 ;; Defined at:
  1201 ;;		line 51 in file "PIDLoop.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;		None               void
  1208 ;; Registers used:
  1209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:   12
  1222 ;; This function calls:
  1223 ;;		_MotorDriverInit
  1224 ;;		_PIDInit
  1225 ;;		_RTDInit
  1226 ;;		_SerInit
  1227 ;;		_lcdInit
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text1
  1234  0033C6                     __ptext1:
  1235                           	opt stack 0
  1236  0033C6                     _initialize:
  1237                           	opt stack 18
  1238                           
  1239                           ;PIDLoop.c: 53: RTDInit();
  1240                           
  1241                           ;incstack = 0
  1242  0033C6  EC08  F019         	call	_RTDInit	;wreg free
  1243                           
  1244                           ;PIDLoop.c: 54: PIDInit();
  1245  0033CA  ECC6  F018         	call	_PIDInit	;wreg free
  1246                           
  1247                           ;PIDLoop.c: 55: MotorDriverInit();
  1248  0033CE  ECF1  F019         	call	_MotorDriverInit	;wreg free
  1249                           
  1250                           ;PIDLoop.c: 56: SerInit();
  1251  0033D2  EC7A  F019         	call	_SerInit	;wreg free
  1252                           
  1253                           ;PIDLoop.c: 57: lcdInit();
  1254  0033D6  ECFD  F017         	call	_lcdInit	;wreg free
  1255                           
  1256                           ;PIDLoop.c: 59: INTCONbits.GIE = 1;
  1257  0033DA  8EF2               	bsf	intcon,7,c	;volatile
  1258                           
  1259                           ;PIDLoop.c: 60: INTCONbits.PEIE = 1;
  1260  0033DC  8CF2               	bsf	intcon,6,c	;volatile
  1261                           
  1262                           ;PIDLoop.c: 61: RCONbits.IPEN = 1;
  1263  0033DE  8ED0               	bsf	4048,7,c	;volatile
  1264  0033E0  0012               	return		;funcret
  1265  0033E2                     __end_of_initialize:
  1266                           	opt stack 0
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           intcon	equ	0xFF2
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _lcdInit *****************
  1277 ;; Defined at:
  1278 ;;		line 112 in file "LCD.h"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;		None               void
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:   11
  1299 ;; This function calls:
  1300 ;;		_OpenSPI1
  1301 ;;		_lcdCommand
  1302 ;;		_setGPIO
  1303 ;;		_setIODIR
  1304 ;; This function is called by:
  1305 ;;		_initialize
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text2
  1310  002FFA                     __ptext2:
  1311                           	opt stack 0
  1312  002FFA                     _lcdInit:
  1313                           	opt stack 18
  1314                           
  1315                           ;LCD.h: 114: TRISAbits.RA2=0;
  1316                           
  1317                           ;incstack = 0
  1318  002FFA  9492               	bcf	3986,2,c	;volatile
  1319                           
  1320                           ;LCD.h: 115: PORTAbits.RA2=1;
  1321  002FFC  8480               	bsf	3968,2,c	;volatile
  1322                           
  1323                           ;LCD.h: 117: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
  1324  002FFE  0E02               	movlw	2
  1325  003000  0100               	movlb	0	; () banked
  1326  003002  6F6E               	movwf	OpenSPI1@bus_mode& (0+255),b
  1327  003004  0E80               	movlw	128
  1328  003006  0100               	movlb	0	; () banked
  1329  003008  6F6F               	movwf	OpenSPI1@smp_phase& (0+255),b
  1330  00300A  0E02               	movlw	2
  1331  00300C  EC47  F017         	call	_OpenSPI1
  1332                           
  1333                           ;LCD.h: 119: setIODIR(0x01,0x00);
  1334  003010  0E00               	movlw	0
  1335  003012  0100               	movlb	0	; () banked
  1336  003014  6F70               	movwf	setIODIR@dir& (0+255),b
  1337  003016  0E01               	movlw	1
  1338  003018  ECC3  F019         	call	_setIODIR
  1339                           
  1340                           ;LCD.h: 121: setIODIR(0x00,0x00);
  1341  00301C  0E00               	movlw	0
  1342  00301E  0100               	movlb	0	; () banked
  1343  003020  6F70               	movwf	setIODIR@dir& (0+255),b
  1344  003022  0E00               	movlw	0
  1345  003024  ECC3  F019         	call	_setIODIR
  1346                           
  1347                           ;LCD.h: 123: setGPIO(0x00,0x00);
  1348  003028  0E00               	movlw	0
  1349  00302A  0100               	movlb	0	; () banked
  1350  00302C  6F70               	movwf	setGPIO@value& (0+255),b
  1351  00302E  0E00               	movlw	0
  1352  003030  ECD3  F019         	call	_setGPIO
  1353                           
  1354                           ;LCD.h: 125: lcdCommand(0b00111111);
  1355  003034  0E3F               	movlw	63
  1356  003036  ECA0  F018         	call	_lcdCommand
  1357                           
  1358                           ;LCD.h: 127: lcdCommand(0b00001111);
  1359  00303A  0E0F               	movlw	15
  1360  00303C  ECA0  F018         	call	_lcdCommand
  1361                           
  1362                           ;LCD.h: 129: lcdCommand(0b00000001);
  1363  003040  0E01               	movlw	1
  1364  003042  ECA0  F018         	call	_lcdCommand
  1365                           
  1366                           ;LCD.h: 131: lcdCommand(0b00000110);
  1367  003046  0E06               	movlw	6
  1368  003048  ECA0  F018         	call	_lcdCommand
  1369  00304C  0012               	return		;funcret
  1370  00304E                     __end_of_lcdInit:
  1371                           	opt stack 0
  1372                           tblptru	equ	0xFF8
  1373                           tblptrh	equ	0xFF7
  1374                           tblptrl	equ	0xFF6
  1375                           tablat	equ	0xFF5
  1376                           intcon	equ	0xFF2
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _setIODIR *****************
  1382 ;; Defined at:
  1383 ;;		line 45 in file "LCD.h"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  address         1    wreg     unsigned char 
  1386 ;;  dir             1   16[BANK0 ] unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  address         1   17[BANK0 ] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;		None               void
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1398 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    9
  1405 ;; This function calls:
  1406 ;;		_WriteSPI1
  1407 ;; This function is called by:
  1408 ;;		_lcdInit
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text3
  1413  003386                     __ptext3:
  1414                           	opt stack 0
  1415  003386                     _setIODIR:
  1416                           	opt stack 19
  1417                           
  1418                           ;incstack = 0
  1419                           ;setIODIR@address stored from wreg
  1420  003386  0100               	movlb	0	; () banked
  1421  003388  6F71               	movwf	setIODIR@address& (0+255),b
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;LCD.h: 47: PORTAbits.RA2=0;
  1425  00338A  9480               	bcf	3968,2,c	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;LCD.h: 48: WriteSPI1(0x40);
  1429  00338C  0E40               	movlw	64
  1430  00338E  EC8E  F019         	call	_WriteSPI1
  1431                           
  1432                           ;LCD.h: 49: WriteSPI1(address);
  1433  003392  0100               	movlb	0	; () banked
  1434  003394  5171               	movf	setIODIR@address& (0+255),w,b
  1435  003396  EC8E  F019         	call	_WriteSPI1
  1436                           
  1437                           ;LCD.h: 50: WriteSPI1(dir);
  1438  00339A  0100               	movlb	0	; () banked
  1439  00339C  5170               	movf	setIODIR@dir& (0+255),w,b
  1440  00339E  EC8E  F019         	call	_WriteSPI1
  1441                           
  1442                           ;LCD.h: 51: PORTAbits.RA2=1;
  1443  0033A2  8480               	bsf	3968,2,c	;volatile
  1444  0033A4  0012               	return		;funcret
  1445  0033A6                     __end_of_setIODIR:
  1446                           	opt stack 0
  1447                           tblptru	equ	0xFF8
  1448                           tblptrh	equ	0xFF7
  1449                           tblptrl	equ	0xFF6
  1450                           tablat	equ	0xFF5
  1451                           intcon	equ	0xFF2
  1452                           postinc0	equ	0xFEE
  1453                           wreg	equ	0xFE8
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _lcdCommand *****************
  1457 ;; Defined at:
  1458 ;;		line 54 in file "LCD.h"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  command         1    wreg     unsigned char 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  command         1   18[BANK0 ] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;Total ram usage:        1 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:   10
  1479 ;; This function calls:
  1480 ;;		_Delay10TCYx
  1481 ;;		_setGPIO
  1482 ;; This function is called by:
  1483 ;;		_lcdInit
  1484 ;;		_lcdGoTo
  1485 ;;		_LCDBreakDouble
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text4
  1490  003140                     __ptext4:
  1491                           	opt stack 0
  1492  003140                     _lcdCommand:
  1493                           	opt stack 18
  1494                           
  1495                           ;incstack = 0
  1496                           ;lcdCommand@command stored from wreg
  1497  003140  0100               	movlb	0	; () banked
  1498  003142  6F72               	movwf	lcdCommand@command& (0+255),b
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;LCD.h: 56: setGPIO(0x12,0x00);
  1502  003144  0E00               	movlw	0
  1503  003146  0100               	movlb	0	; () banked
  1504  003148  6F70               	movwf	setGPIO@value& (0+255),b
  1505  00314A  0E12               	movlw	18
  1506  00314C  ECD3  F019         	call	_setGPIO
  1507                           
  1508                           ;LCD.h: 57: Delay10TCYx(0);
  1509  003150  0E00               	movlw	0
  1510  003152  EC0A  F01A         	call	_Delay10TCYx
  1511                           
  1512                           ;LCD.h: 58: setGPIO(0x13, command);
  1513  003156  C072  F070         	movff	lcdCommand@command,setGPIO@value
  1514  00315A  0E13               	movlw	19
  1515  00315C  ECD3  F019         	call	_setGPIO
  1516                           
  1517                           ;LCD.h: 59: Delay10TCYx(0);
  1518  003160  0E00               	movlw	0
  1519  003162  EC0A  F01A         	call	_Delay10TCYx
  1520                           
  1521                           ;LCD.h: 60: setGPIO(0x12,0x40);
  1522  003166  0E40               	movlw	64
  1523  003168  0100               	movlb	0	; () banked
  1524  00316A  6F70               	movwf	setGPIO@value& (0+255),b
  1525  00316C  0E12               	movlw	18
  1526  00316E  ECD3  F019         	call	_setGPIO
  1527                           
  1528                           ;LCD.h: 61: Delay10TCYx(0);
  1529  003172  0E00               	movlw	0
  1530  003174  EC0A  F01A         	call	_Delay10TCYx
  1531                           
  1532                           ;LCD.h: 62: setGPIO(0x12,0x00);
  1533  003178  0E00               	movlw	0
  1534  00317A  0100               	movlb	0	; () banked
  1535  00317C  6F70               	movwf	setGPIO@value& (0+255),b
  1536  00317E  0E12               	movlw	18
  1537  003180  ECD3  F019         	call	_setGPIO
  1538                           
  1539                           ;LCD.h: 63: Delay10TCYx(0);
  1540  003184  0E00               	movlw	0
  1541  003186  EC0A  F01A         	call	_Delay10TCYx
  1542  00318A  0012               	return		;funcret
  1543  00318C                     __end_of_lcdCommand:
  1544                           	opt stack 0
  1545                           tblptru	equ	0xFF8
  1546                           tblptrh	equ	0xFF7
  1547                           tblptrl	equ	0xFF6
  1548                           tablat	equ	0xFF5
  1549                           intcon	equ	0xFF2
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           status	equ	0xFD8
  1553                           
  1554 ;; *************** function _setGPIO *****************
  1555 ;; Defined at:
  1556 ;;		line 34 in file "LCD.h"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  address         1    wreg     unsigned char 
  1559 ;;  value           1   16[BANK0 ] unsigned char 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  address         1   17[BANK0 ] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;		None               void
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1571 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;Total ram usage:        2 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    9
  1578 ;; This function calls:
  1579 ;;		_WriteSPI1
  1580 ;; This function is called by:
  1581 ;;		_lcdCommand
  1582 ;;		_lcdInit
  1583 ;;		_lcdChar
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text5
  1588  0033A6                     __ptext5:
  1589                           	opt stack 0
  1590  0033A6                     _setGPIO:
  1591                           	opt stack 19
  1592                           
  1593                           ;incstack = 0
  1594                           ;setGPIO@address stored from wreg
  1595  0033A6  0100               	movlb	0	; () banked
  1596  0033A8  6F71               	movwf	setGPIO@address& (0+255),b
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;LCD.h: 36: PORTAbits.RA2=0;
  1600  0033AA  9480               	bcf	3968,2,c	;volatile
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;LCD.h: 39: WriteSPI1(0x40);
  1604  0033AC  0E40               	movlw	64
  1605  0033AE  EC8E  F019         	call	_WriteSPI1
  1606                           
  1607                           ;LCD.h: 40: WriteSPI1(address);
  1608  0033B2  0100               	movlb	0	; () banked
  1609  0033B4  5171               	movf	setGPIO@address& (0+255),w,b
  1610  0033B6  EC8E  F019         	call	_WriteSPI1
  1611                           
  1612                           ;LCD.h: 41: WriteSPI1(value);
  1613  0033BA  0100               	movlb	0	; () banked
  1614  0033BC  5170               	movf	setGPIO@value& (0+255),w,b
  1615  0033BE  EC8E  F019         	call	_WriteSPI1
  1616                           
  1617                           ;LCD.h: 42: PORTAbits.RA2=1;
  1618  0033C2  8480               	bsf	3968,2,c	;volatile
  1619  0033C4  0012               	return		;funcret
  1620  0033C6                     __end_of_setGPIO:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           intcon	equ	0xFF2
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           status	equ	0xFD8
  1630                           
  1631 ;; *************** function _WriteSPI1 *****************
  1632 ;; Defined at:
  1633 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  data_out        1    wreg     unsigned char 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  data_out        1   15[BANK0 ] unsigned char 
  1638 ;;  TempVar         1   14[BANK0 ] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      char 
  1641 ;; Registers used:
  1642 ;;		wreg
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:        2 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    8
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_setGPIO
  1659 ;;		_setIODIR
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text6
  1664  00331C                     __ptext6:
  1665                           	opt stack 0
  1666  00331C                     _WriteSPI1:
  1667                           	opt stack 19
  1668                           
  1669                           ;incstack = 0
  1670                           ;WriteSPI1@data_out stored from wreg
  1671  00331C  0100               	movlb	0	; () banked
  1672  00331E  6F6F               	movwf	WriteSPI1@data_out& (0+255),b
  1673                           
  1674                           ; BSR set to: 0
  1675  003320  CFC9 F06E          	movff	4041,WriteSPI1@TempVar	;volatile
  1676  003324  969E               	bcf	3998,3,c	;volatile
  1677  003326  9EC6               	bcf	4038,7,c	;volatile
  1678                           
  1679                           ; BSR set to: 0
  1680  003328  C06F  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  1681                           
  1682                           ; BSR set to: 0
  1683  00332C  BEC6               	btfsc	4038,7,c	;volatile
  1684  00332E  D007               	goto	l491
  1685  003330  D002               	goto	l493
  1686                           
  1687                           ; BSR set to: 0
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;	Return value of _WriteSPI1 is never used
  1691  003332  D005               	goto	l491
  1692                           
  1693                           ; BSR set to: 0
  1694  003334  D000               	goto	l493
  1695  003336                     l493:
  1696  003336  B69E               	btfsc	3998,3,c	;volatile
  1697  003338  D002               	goto	l491
  1698  00333A  D7FD               	goto	l493
  1699  00333C  D000               	goto	l491
  1700  00333E                     l491:
  1701  00333E  0012               	return		;funcret
  1702  003340                     __end_of_WriteSPI1:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           intcon	equ	0xFF2
  1709                           postinc0	equ	0xFEE
  1710                           wreg	equ	0xFE8
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _OpenSPI1 *****************
  1714 ;; Defined at:
  1715 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  sync_mode       1    wreg     unsigned char 
  1718 ;;  bus_mode        1   14[BANK0 ] unsigned char 
  1719 ;;  smp_phase       1   15[BANK0 ] unsigned char 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  sync_mode       1   16[BANK0 ] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;		None               void
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;Total ram usage:        3 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    8
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_lcdInit
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text7
  1746  002E8E                     __ptext7:
  1747                           	opt stack 0
  1748  002E8E                     _OpenSPI1:
  1749                           	opt stack 20
  1750                           
  1751                           ;incstack = 0
  1752                           ;OpenSPI1@sync_mode stored from wreg
  1753  002E8E  0100               	movlb	0	; () banked
  1754  002E90  6F70               	movwf	OpenSPI1@sync_mode& (0+255),b
  1755                           
  1756                           ; BSR set to: 0
  1757  002E92  0E3F               	movlw	63
  1758  002E94  16C7               	andwf	4039,f,c	;volatile
  1759                           
  1760                           ; BSR set to: 0
  1761  002E96  0E00               	movlw	0
  1762  002E98  6EC6               	movwf	4038,c	;volatile
  1763                           
  1764                           ; BSR set to: 0
  1765  002E9A  0100               	movlb	0	; () banked
  1766  002E9C  5170               	movf	OpenSPI1@sync_mode& (0+255),w,b
  1767  002E9E  12C6               	iorwf	4038,f,c	;volatile
  1768                           
  1769                           ; BSR set to: 0
  1770  002EA0  0100               	movlb	0	; () banked
  1771  002EA2  516F               	movf	OpenSPI1@smp_phase& (0+255),w,b
  1772  002EA4  12C7               	iorwf	4039,f,c	;volatile
  1773  002EA6  D005               	goto	l2959
  1774  002EA8                     l469:
  1775                           
  1776                           ; BSR set to: 0
  1777  002EA8  8CC7               	bsf	4039,6,c	;volatile
  1778  002EAA  D014               	goto	l2963
  1779  002EAC                     l471:
  1780                           
  1781                           ; BSR set to: 0
  1782  002EAC  8CC7               	bsf	4039,6,c	;volatile
  1783  002EAE                     l472:
  1784                           
  1785                           ; BSR set to: 0
  1786  002EAE  88C6               	bsf	4038,4,c	;volatile
  1787                           
  1788                           ; BSR set to: 0
  1789                           
  1790                           ; BSR set to: 0
  1791  002EB0  D011               	goto	l2963
  1792  002EB2                     l2959:
  1793                           
  1794                           ; BSR set to: 0
  1795  002EB2  0100               	movlb	0	; () banked
  1796  002EB4  516E               	movf	OpenSPI1@bus_mode& (0+255),w,b
  1797                           
  1798                           ; Switch size 1, requested type "space"
  1799                           ; Number of cases is 3, Range of values is 0 to 3
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte           10     6 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804  002EB6  0A00               	xorlw	0	; case 0
  1805  002EB8  B4D8               	btfsc	status,2,c
  1806  002EBA  D7F6               	goto	l469
  1807  002EBC  0A02               	xorlw	2	; case 2
  1808  002EBE  B4D8               	btfsc	status,2,c
  1809  002EC0  D7F5               	goto	l471
  1810  002EC2  0A01               	xorlw	1	; case 3
  1811  002EC4  B4D8               	btfsc	status,2,c
  1812  002EC6  D7F3               	goto	l472
  1813                           
  1814                           ; BSR set to: 0
  1815  002EC8  D005               	goto	l2963
  1816  002ECA                     l475:
  1817                           
  1818                           ; BSR set to: 0
  1819  002ECA  8E97               	bsf	3991,7,c	;volatile
  1820  002ECC                     l477:
  1821                           
  1822                           ; BSR set to: 0
  1823  002ECC  8694               	bsf	3988,3,c	;volatile
  1824  002ECE  D00B               	goto	l476
  1825  002ED0                     l478:
  1826                           
  1827                           ; BSR set to: 0
  1828  002ED0  9694               	bcf	3988,3,c	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831  002ED2  D009               	goto	l476
  1832  002ED4                     l2963:
  1833                           
  1834                           ; BSR set to: 0
  1835  002ED4  0100               	movlb	0	; () banked
  1836  002ED6  5170               	movf	OpenSPI1@sync_mode& (0+255),w,b
  1837                           
  1838                           ; Switch size 1, requested type "space"
  1839                           ; Number of cases is 2, Range of values is 4 to 5
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte            7     4 (average)
  1843                           ;	Chosen strategy is simple_byte
  1844  002ED8  0A04               	xorlw	4	; case 4
  1845  002EDA  B4D8               	btfsc	status,2,c
  1846  002EDC  D7F6               	goto	l475
  1847  002EDE  0A01               	xorlw	1	; case 5
  1848  002EE0  B4D8               	btfsc	status,2,c
  1849  002EE2  D7F4               	goto	l477
  1850  002EE4  D7F5               	goto	l478
  1851  002EE6                     l476:
  1852                           
  1853                           ; BSR set to: 0
  1854  002EE6  8894               	bsf	3988,4,c	;volatile
  1855  002EE8  9A94               	bcf	3988,5,c	;volatile
  1856                           
  1857                           ; BSR set to: 0
  1858  002EEA  8AC6               	bsf	4038,5,c	;volatile
  1859                           
  1860                           ; BSR set to: 0
  1861  002EEC  0012               	return		;funcret
  1862  002EEE                     __end_of_OpenSPI1:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           tblptrh	equ	0xFF7
  1866                           tblptrl	equ	0xFF6
  1867                           tablat	equ	0xFF5
  1868                           intcon	equ	0xFF2
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           status	equ	0xFD8
  1872                           
  1873 ;; *************** function _SerInit *****************
  1874 ;; Defined at:
  1875 ;;		line 19 in file "SerComm.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;		None               void
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:   10
  1896 ;; This function calls:
  1897 ;;		_SerTxStr
  1898 ;; This function is called by:
  1899 ;;		_initialize
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text8
  1904  0032F4                     __ptext8:
  1905                           	opt stack 0
  1906  0032F4                     _SerInit:
  1907                           	opt stack 19
  1908                           
  1909                           ;SerComm.c: 26: TXSTA1 = 0x24;
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;incstack = 0
  1913  0032F4  0E24               	movlw	36
  1914  0032F6  6EAC               	movwf	4012,c	;volatile
  1915                           
  1916                           ;SerComm.c: 27: RCSTA1 = 0x90;
  1917  0032F8  0E90               	movlw	144
  1918  0032FA  6EAB               	movwf	4011,c	;volatile
  1919                           
  1920                           ;SerComm.c: 28: BAUDCON = 0x00;
  1921  0032FC  0E00               	movlw	0
  1922  0032FE  6E7E               	movwf	3966,c	;volatile
  1923                           
  1924                           ;SerComm.c: 29: SPBRG = 21;
  1925  003300  0E15               	movlw	21
  1926  003302  6EAF               	movwf	4015,c	;volatile
  1927                           
  1928                           ;SerComm.c: 31: RCONbits.IPEN = 1;
  1929  003304  8ED0               	bsf	4048,7,c	;volatile
  1930                           
  1931                           ;SerComm.c: 32: IPR1bits.RCIP = 0;
  1932  003306  9A9F               	bcf	3999,5,c	;volatile
  1933                           
  1934                           ;SerComm.c: 33: PIE1bits.RC1IE = 1;
  1935  003308  8A9D               	bsf	3997,5,c	;volatile
  1936                           
  1937                           ;SerComm.c: 35: SerTxStr("Welcome to the world of tomorrow!!!");
  1938  00330A  0E01               	movlw	low STR_30
  1939  00330C  0100               	movlb	0	; () banked
  1940  00330E  6F6F               	movwf	SerTxStr@string& (0+255),b
  1941  003310  0E10               	movlw	high STR_30
  1942  003312  0100               	movlb	0	; () banked
  1943  003314  6F70               	movwf	(SerTxStr@string+1)& (0+255),b
  1944  003316  EC77  F017         	call	_SerTxStr	;wreg free
  1945  00331A  0012               	return		;funcret
  1946  00331C                     __end_of_SerInit:
  1947                           	opt stack 0
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           intcon	equ	0xFF2
  1953                           postinc0	equ	0xFEE
  1954                           wreg	equ	0xFE8
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _SerTxStr *****************
  1958 ;; Defined at:
  1959 ;;		line 50 in file "SerComm.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  string          2   15[BANK0 ] PTR unsigned char 
  1962 ;;		 -> STR_31(16), STR_30(36), STR_29(4), STR_14(6), 
  1963 ;;		 -> STR_13(4), STR_4(11), value(10), STR_3(6), 
  1964 ;;		 -> key(5), 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;		None               void
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;Total ram usage:        2 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    9
  1983 ;; This function calls:
  1984 ;;		_SerTx
  1985 ;; This function is called by:
  1986 ;;		_SerInit
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text9
  1992  002EEE                     __ptext9:
  1993                           	opt stack 0
  1994  002EEE                     _SerTxStr:
  1995                           	opt stack 19
  1996                           
  1997                           ;SerComm.c: 52: while (*string)
  1998                           
  1999                           ;incstack = 0
  2000  002EEE  D017               	goto	l4061
  2001  002EF0                     l4057:
  2002                           
  2003                           ;SerComm.c: 53: SerTx(*string++);
  2004  002EF0  C06F  FFF6         	movff	SerTxStr@string,tblptrl
  2005  002EF4  C070  FFF7         	movff	SerTxStr@string+1,tblptrh
  2006  002EF8  0E00               	movlw	low (__smallconst shr (0+16))
  2007  002EFA  6EF8               	movwf	tblptru,c
  2008  002EFC  0E0F               	movlw	(high __ramtop+-1)
  2009  002EFE  64F7               	cpfsgt	tblptrh,c
  2010  002F00  D003               	bra	u4367
  2011  002F02  0008               	tblrd		*
  2012  002F04  50F5               	movf	tablat,w,c
  2013  002F06  D005               	bra	u4360
  2014  002F08                     u4367:
  2015  002F08  CFF6 FFE9          	movff	tblptrl,fsr0l
  2016  002F0C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2017  002F10  50EF               	movf	indf0,w,c
  2018  002F12                     u4360:
  2019  002F12  EC26  F01A         	call	_SerTx
  2020  002F16  0100               	movlb	0	; () banked
  2021  002F18  4B6F               	infsnz	SerTxStr@string& (0+255),f,b
  2022  002F1A  2B70               	incf	(SerTxStr@string+1)& (0+255),f,b
  2023  002F1C  D000               	goto	l4061
  2024  002F1E                     l4061:
  2025  002F1E  C06F  FFF6         	movff	SerTxStr@string,tblptrl
  2026  002F22  C070  FFF7         	movff	SerTxStr@string+1,tblptrh
  2027  002F26  0E00               	movlw	low (__smallconst shr (0+16))
  2028  002F28  6EF8               	movwf	tblptru,c
  2029  002F2A  0E0F               	movlw	(high __ramtop+-1)
  2030  002F2C  64F7               	cpfsgt	tblptrh,c
  2031  002F2E  D003               	bra	u4377
  2032  002F30  0008               	tblrd		*
  2033  002F32  50F5               	movf	tablat,w,c
  2034  002F34  D005               	bra	u4370
  2035  002F36                     u4377:
  2036  002F36  CFF6 FFE9          	movff	tblptrl,fsr0l
  2037  002F3A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2038  002F3E  50EF               	movf	indf0,w,c
  2039  002F40                     u4370:
  2040  002F40  0900               	iorlw	0
  2041  002F42  A4D8               	btfss	status,2,c
  2042  002F44  D7D5               	goto	l4057
  2043  002F46  0012               	return		;funcret
  2044  002F48                     __end_of_SerTxStr:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           intcon	equ	0xFF2
  2051                           indf0	equ	0xFEF
  2052                           postinc0	equ	0xFEE
  2053                           fsr0h	equ	0xFEA
  2054                           fsr0l	equ	0xFE9
  2055                           wreg	equ	0xFE8
  2056                           status	equ	0xFD8
  2057                           
  2058 ;; *************** function _RTDInit *****************
  2059 ;; Defined at:
  2060 ;;		line 3 in file "ResolverToDigital.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;		None               void
  2067 ;; Registers used:
  2068 ;;		wreg, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    9
  2081 ;; This function calls:
  2082 ;;		_Delay10TCYx
  2083 ;;		_Delay1KTCYx
  2084 ;;		_Delay1TCYx
  2085 ;; This function is called by:
  2086 ;;		_initialize
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text10
  2091  003210                     __ptext10:
  2092                           	opt stack 0
  2093  003210                     _RTDInit:
  2094                           	opt stack 20
  2095                           
  2096                           ;ResolverToDigital.c: 5: TRISD = 0xFF;
  2097                           
  2098                           ;incstack = 0
  2099  003210  6895               	setf	3989,c	;volatile
  2100                           
  2101                           ;ResolverToDigital.c: 6: TRISH = 0xFF;
  2102  003212  6899               	setf	3993,c	;volatile
  2103                           
  2104                           ;ResolverToDigital.c: 7: TRISEbits.RE0 = 0;
  2105  003214  9096               	bcf	3990,0,c	;volatile
  2106                           
  2107                           ;ResolverToDigital.c: 8: TRISEbits.RE1 = 0;
  2108  003216  9296               	bcf	3990,1,c	;volatile
  2109                           
  2110                           ;ResolverToDigital.c: 9: TRISEbits.RE2 = 0;
  2111  003218  9496               	bcf	3990,2,c	;volatile
  2112                           
  2113                           ;ResolverToDigital.c: 10: TRISJbits.RJ0 = 0;
  2114  00321A  909A               	bcf	3994,0,c	;volatile
  2115                           
  2116                           ;ResolverToDigital.c: 11: TRISEbits.RE5 = 1;
  2117  00321C  8A96               	bsf	3990,5,c	;volatile
  2118                           
  2119                           ;ResolverToDigital.c: 12: TRISEbits.RE6 = 1;
  2120  00321E  8C96               	bsf	3990,6,c	;volatile
  2121                           
  2122                           ;ResolverToDigital.c: 13: TRISEbits.RE7 = 1;
  2123  003220  8E96               	bsf	3990,7,c	;volatile
  2124                           
  2125                           ;ResolverToDigital.c: 17: PORTJbits.RJ0 = 0;
  2126  003222  9088               	bcf	3976,0,c	;volatile
  2127                           
  2128                           ;ResolverToDigital.c: 18: Delay10TCYx(10);
  2129  003224  0E0A               	movlw	10
  2130  003226  EC0A  F01A         	call	_Delay10TCYx
  2131                           
  2132                           ;ResolverToDigital.c: 19: PORTJbits.RJ0 = 1;
  2133  00322A  8088               	bsf	3976,0,c	;volatile
  2134                           
  2135                           ;ResolverToDigital.c: 20: Delay1KTCYx(20);
  2136  00322C  0E14               	movlw	20
  2137  00322E  ECFF  F019         	call	_Delay1KTCYx
  2138                           
  2139                           ;ResolverToDigital.c: 21: PORTEbits.RE0 = 0;
  2140  003232  9084               	bcf	3972,0,c	;volatile
  2141                           
  2142                           ;ResolverToDigital.c: 22: Delay1TCYx(1);
  2143  003234  0E01               	movlw	1
  2144  003236  EC1E  F01A         	call	_Delay1TCYx
  2145                           
  2146                           ;ResolverToDigital.c: 23: PORTEbits.RE0 = 1;
  2147  00323A  8084               	bsf	3972,0,c	;volatile
  2148                           
  2149                           ;ResolverToDigital.c: 25: PORTEbits.RE2 = 0;
  2150  00323C  9484               	bcf	3972,2,c	;volatile
  2151  00323E  0012               	return		;funcret
  2152  003240                     __end_of_RTDInit:
  2153                           	opt stack 0
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           intcon	equ	0xFF2
  2159                           indf0	equ	0xFEF
  2160                           postinc0	equ	0xFEE
  2161                           fsr0h	equ	0xFEA
  2162                           fsr0l	equ	0xFE9
  2163                           wreg	equ	0xFE8
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _Delay1TCYx *****************
  2167 ;; Defined at:
  2168 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1tcyx.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  unit            1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  unit            1   14[BANK0 ] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;Total ram usage:        1 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    8
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_RTDInit
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text11
  2197  00343C                     __ptext11:
  2198                           	opt stack 0
  2199  00343C                     _Delay1TCYx:
  2200                           	opt stack 20
  2201                           
  2202                           ;incstack = 0
  2203                           ;Delay1TCYx@unit stored from wreg
  2204  00343C  0100               	movlb	0	; () banked
  2205  00343E  6F6E               	movwf	Delay1TCYx@unit& (0+255),b
  2206  003440                     l800:
  2207                           
  2208                           ; BSR set to: 0
  2209  003440  F000               	nop	
  2210  003442  0100               	movlb	0	; () banked
  2211  003444  2F6E               	decfsz	Delay1TCYx@unit& (0+255),f,b
  2212  003446  D7FC               	goto	l800
  2213  003448  D000               	goto	l802
  2214  00344A                     l802:
  2215                           
  2216                           ; BSR set to: 0
  2217  00344A  0012               	return		;funcret
  2218  00344C                     __end_of_Delay1TCYx:
  2219                           	opt stack 0
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           intcon	equ	0xFF2
  2225                           indf0	equ	0xFEF
  2226                           postinc0	equ	0xFEE
  2227                           fsr0h	equ	0xFEA
  2228                           fsr0l	equ	0xFE9
  2229                           wreg	equ	0xFE8
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function _Delay1KTCYx *****************
  2233 ;; Defined at:
  2234 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1ktcyx.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  unit            1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  unit            1   14[BANK0 ] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;		None               void
  2241 ;; Registers used:
  2242 ;;		wreg
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        1 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    8
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_RTDInit
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text12
  2263  0033FE                     __ptext12:
  2264                           	opt stack 0
  2265  0033FE                     _Delay1KTCYx:
  2266                           	opt stack 20
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;incstack = 0
  2270                           ;Delay1KTCYx@unit stored from wreg
  2271  0033FE  0100               	movlb	0	; () banked
  2272  003400  6F6E               	movwf	Delay1KTCYx@unit& (0+255),b
  2273  003402                     
  2274                           ; BSR set to: 0
  2275  003402  0EFA               	movlw	250
  2276  003404                     u4977:
  2277  003404  F000               	nop	
  2278  003406  2EE8               	decfsz	wreg,f,c
  2279  003408  D7FD               	goto	u4977
  2280  00340A  0100               	movlb	0	; () banked
  2281  00340C  2F6E               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2282  00340E  D7F9               	goto	l3153
  2283  003410  D000               	goto	l795
  2284  003412                     l795:
  2285                           
  2286                           ; BSR set to: 0
  2287  003412  0012               	return		;funcret
  2288  003414                     __end_of_Delay1KTCYx:
  2289                           	opt stack 0
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           intcon	equ	0xFF2
  2295                           indf0	equ	0xFEF
  2296                           postinc0	equ	0xFEE
  2297                           fsr0h	equ	0xFEA
  2298                           fsr0l	equ	0xFE9
  2299                           wreg	equ	0xFE8
  2300                           status	equ	0xFD8
  2301                           
  2302 ;; *************** function _PIDInit *****************
  2303 ;; Defined at:
  2304 ;;		line 19 in file "PID.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;		None               void
  2311 ;; Registers used:
  2312 ;;		wreg, status,2
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    8
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_initialize
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text13
  2333  00318C                     __ptext13:
  2334                           	opt stack 0
  2335  00318C                     _PIDInit:
  2336                           	opt stack 21
  2337                           
  2338                           ;PID.c: 22: error = 0;
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;incstack = 0
  2342  00318C  0E00               	movlw	0
  2343  00318E  0100               	movlb	0	; () banked
  2344  003190  6FC4               	movwf	_error& (0+255),b
  2345  003192  0E00               	movlw	0
  2346  003194  0100               	movlb	0	; () banked
  2347  003196  6FC5               	movwf	(_error+1)& (0+255),b
  2348  003198  0E00               	movlw	0
  2349  00319A  0100               	movlb	0	; () banked
  2350  00319C  6FC6               	movwf	(_error+2)& (0+255),b
  2351                           
  2352                           ;PID.c: 23: prevErr = 0;
  2353  00319E  0E00               	movlw	0
  2354  0031A0  0100               	movlb	0	; () banked
  2355  0031A2  6FCA               	movwf	_prevErr& (0+255),b
  2356  0031A4  0E00               	movlw	0
  2357  0031A6  0100               	movlb	0	; () banked
  2358  0031A8  6FCB               	movwf	(_prevErr+1)& (0+255),b
  2359  0031AA  0E00               	movlw	0
  2360  0031AC  0100               	movlb	0	; () banked
  2361  0031AE  6FCC               	movwf	(_prevErr+2)& (0+255),b
  2362                           
  2363                           ;PID.c: 24: intErr = 0;
  2364  0031B0  0E00               	movlw	0
  2365  0031B2  0100               	movlb	0	; () banked
  2366  0031B4  6FC7               	movwf	_intErr& (0+255),b
  2367  0031B6  0E00               	movlw	0
  2368  0031B8  0100               	movlb	0	; () banked
  2369  0031BA  6FC8               	movwf	(_intErr+1)& (0+255),b
  2370  0031BC  0E00               	movlw	0
  2371  0031BE  0100               	movlb	0	; () banked
  2372  0031C0  6FC9               	movwf	(_intErr+2)& (0+255),b
  2373                           
  2374                           ;PID.c: 28: T0CON = 0x04;
  2375  0031C2  0E04               	movlw	4
  2376  0031C4  6ED5               	movwf	4053,c	;volatile
  2377                           
  2378                           ;PID.c: 29: TMR0H = 0xDB;
  2379  0031C6  0EDB               	movlw	219
  2380  0031C8  6ED7               	movwf	4055,c	;volatile
  2381                           
  2382                           ;PID.c: 30: TMR0L = 0x60;
  2383  0031CA  0E60               	movlw	96
  2384  0031CC  6ED6               	movwf	4054,c	;volatile
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;PID.c: 31: INTCON2bits.TMR0IP = 1;
  2388  0031CE  84F1               	bsf	intcon2,2,c	;volatile
  2389                           
  2390                           ; BSR set to: 0
  2391  0031D0  0012               	return		;funcret
  2392  0031D2                     __end_of_PIDInit:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           intcon	equ	0xFF2
  2399                           intcon2	equ	0xFF1
  2400                           indf0	equ	0xFEF
  2401                           postinc0	equ	0xFEE
  2402                           fsr0h	equ	0xFEA
  2403                           fsr0l	equ	0xFE9
  2404                           wreg	equ	0xFE8
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _MotorDriverInit *****************
  2408 ;; Defined at:
  2409 ;;		line 5 in file "MotorControl.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, status,2
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    8
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_initialize
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text14
  2438  0033E2                     __ptext14:
  2439                           	opt stack 0
  2440  0033E2                     _MotorDriverInit:
  2441                           	opt stack 21
  2442                           
  2443                           ;MotorControl.c: 7: TRISGbits.RG0 = 0;
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;incstack = 0
  2447  0033E2  9098               	bcf	3992,0,c	;volatile
  2448                           
  2449                           ;MotorControl.c: 8: TRISEbits.RE4 = 0;
  2450  0033E4  9896               	bcf	3990,4,c	;volatile
  2451                           
  2452                           ;MotorControl.c: 9: TRISEbits.RE3 = 0;
  2453  0033E6  9696               	bcf	3990,3,c	;volatile
  2454                           
  2455                           ;MotorControl.c: 10: TRISGbits.RG3 = 0;
  2456  0033E8  9698               	bcf	3992,3,c	;volatile
  2457                           
  2458                           ;MotorControl.c: 12: TRISBbits.RB0 = 1;
  2459  0033EA  8093               	bsf	3987,0,c	;volatile
  2460                           
  2461                           ;MotorControl.c: 14: TRISAbits.RA4 = 0;
  2462  0033EC  9892               	bcf	3986,4,c	;volatile
  2463                           
  2464                           ;MotorControl.c: 16: CCP3CON = 0x4C;
  2465  0033EE  0E4C               	movlw	76
  2466  0033F0  6EB7               	movwf	4023,c	;volatile
  2467                           
  2468                           ;MotorControl.c: 17: PR2 = 0xFF;
  2469  0033F2  68CB               	setf	4043,c	;volatile
  2470                           
  2471                           ;MotorControl.c: 18: T3CON = 0x00;
  2472  0033F4  0E00               	movlw	0
  2473  0033F6  6EB1               	movwf	4017,c	;volatile
  2474                           
  2475                           ;MotorControl.c: 19: T2CON = 0x04;
  2476  0033F8  0E04               	movlw	4
  2477  0033FA  6ECA               	movwf	4042,c	;volatile
  2478  0033FC  0012               	return		;funcret
  2479  0033FE                     __end_of_MotorDriverInit:
  2480                           	opt stack 0
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           intcon	equ	0xFF2
  2486                           intcon2	equ	0xFF1
  2487                           indf0	equ	0xFEF
  2488                           postinc0	equ	0xFEE
  2489                           fsr0h	equ	0xFEA
  2490                           fsr0l	equ	0xFE9
  2491                           wreg	equ	0xFE8
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _calculatePID *****************
  2495 ;; Defined at:
  2496 ;;		line 35 in file "PID.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  angle           3   79[BANK0 ] unsigned char 
  2499 ;;  setpoint        3   82[BANK0 ] unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  derErr          3    0[BANK1 ] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;		None               void
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2511 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;Total ram usage:       15 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:   11
  2518 ;; This function calls:
  2519 ;;		___ftadd
  2520 ;;		___ftdiv
  2521 ;;		___ftge
  2522 ;;		___ftmul
  2523 ;;		___ftneg
  2524 ;;		___ftsub
  2525 ;;		___fttol
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text15
  2532  0019AE                     __ptext15:
  2533                           	opt stack 0
  2534  0019AE                     _calculatePID:
  2535                           	opt stack 19
  2536                           
  2537                           ;PID.c: 37: double derErr;
  2538                           ;PID.c: 38: if (PIDEnableFlag == 3)
  2539                           
  2540                           ;incstack = 0
  2541  0019AE  0E03               	movlw	3
  2542  0019B0  0100               	movlb	0	; () banked
  2543  0019B2  19CF               	xorwf	_PIDEnableFlag& (0+255),w,b
  2544  0019B4  A4D8               	btfss	status,2,c
  2545  0019B6  D01F               	goto	l4359
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;PID.c: 39: {
  2549                           ;PID.c: 40: error = 0;
  2550  0019B8  0E00               	movlw	0
  2551  0019BA  0100               	movlb	0	; () banked
  2552  0019BC  6FC4               	movwf	_error& (0+255),b
  2553  0019BE  0E00               	movlw	0
  2554  0019C0  0100               	movlb	0	; () banked
  2555  0019C2  6FC5               	movwf	(_error+1)& (0+255),b
  2556  0019C4  0E00               	movlw	0
  2557  0019C6  0100               	movlb	0	; () banked
  2558  0019C8  6FC6               	movwf	(_error+2)& (0+255),b
  2559                           
  2560                           ;PID.c: 41: prevErr = 0;
  2561  0019CA  0E00               	movlw	0
  2562  0019CC  0100               	movlb	0	; () banked
  2563  0019CE  6FCA               	movwf	_prevErr& (0+255),b
  2564  0019D0  0E00               	movlw	0
  2565  0019D2  0100               	movlb	0	; () banked
  2566  0019D4  6FCB               	movwf	(_prevErr+1)& (0+255),b
  2567  0019D6  0E00               	movlw	0
  2568  0019D8  0100               	movlb	0	; () banked
  2569  0019DA  6FCC               	movwf	(_prevErr+2)& (0+255),b
  2570                           
  2571                           ;PID.c: 42: intErr = 0;
  2572  0019DC  0E00               	movlw	0
  2573  0019DE  0100               	movlb	0	; () banked
  2574  0019E0  6FC7               	movwf	_intErr& (0+255),b
  2575  0019E2  0E00               	movlw	0
  2576  0019E4  0100               	movlb	0	; () banked
  2577  0019E6  6FC8               	movwf	(_intErr+1)& (0+255),b
  2578  0019E8  0E00               	movlw	0
  2579  0019EA  0100               	movlb	0	; () banked
  2580  0019EC  6FC9               	movwf	(_intErr+2)& (0+255),b
  2581                           
  2582                           ;PID.c: 43: PIDEnableFlag = 1;
  2583  0019EE  0E01               	movlw	1
  2584  0019F0  0100               	movlb	0	; () banked
  2585  0019F2  6FCF               	movwf	_PIDEnableFlag& (0+255),b
  2586  0019F4  D000               	goto	l4359
  2587  0019F6                     l4359:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;PID.c: 44: }
  2591                           ;PID.c: 46: error = setpoint - angle;
  2592  0019F6  C0AF  F06E         	movff	calculatePID@angle,___ftneg@f1
  2593  0019FA  C0B0  F06F         	movff	calculatePID@angle+1,___ftneg@f1+1
  2594  0019FE  C0B1  F070         	movff	calculatePID@angle+2,___ftneg@f1+2
  2595  001A02  EC20  F019         	call	___ftneg	;wreg free
  2596  001A06  C06E  F094         	movff	?___ftneg,___ftadd@f1
  2597  001A0A  C06F  F095         	movff	?___ftneg+1,___ftadd@f1+1
  2598  001A0E  C070  F096         	movff	?___ftneg+2,___ftadd@f1+2
  2599  001A12  C0B2  F097         	movff	calculatePID@setpoint,___ftadd@f2
  2600  001A16  C0B3  F098         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2601  001A1A  C0B4  F099         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2602  001A1E  EC3E  F00E         	call	___ftadd	;wreg free
  2603  001A22  C094  F0C4         	movff	?___ftadd,_error
  2604  001A26  C095  F0C5         	movff	?___ftadd+1,_error+1
  2605  001A2A  C096  F0C6         	movff	?___ftadd+2,_error+2
  2606                           
  2607                           ;PID.c: 47: if (error > 180)
  2608  001A2E  0E00               	movlw	0
  2609  001A30  0100               	movlb	0	; () banked
  2610  001A32  6F6E               	movwf	___ftge@ff1& (0+255),b
  2611  001A34  0E34               	movlw	52
  2612  001A36  0100               	movlb	0	; () banked
  2613  001A38  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  2614  001A3A  0E43               	movlw	67
  2615  001A3C  0100               	movlb	0	; () banked
  2616  001A3E  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  2617  001A40  C0C4  F071         	movff	_error,___ftge@ff2
  2618  001A44  C0C5  F072         	movff	_error+1,___ftge@ff2+1
  2619  001A48  C0C6  F073         	movff	_error+2,___ftge@ff2+2
  2620  001A4C  ECAD  F014         	call	___ftge	;wreg free
  2621  001A50  0100               	movlb	0	; () banked
  2622  001A52  B0D8               	btfsc	status,0,c
  2623  001A54  D018               	goto	l4365
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;PID.c: 48: error -= 360;
  2627  001A56  C0C4  F0A0         	movff	_error,___ftsub@f1
  2628  001A5A  C0C5  F0A1         	movff	_error+1,___ftsub@f1+1
  2629  001A5E  C0C6  F0A2         	movff	_error+2,___ftsub@f1+2
  2630  001A62  0E00               	movlw	0
  2631  001A64  0100               	movlb	0	; () banked
  2632  001A66  6FA3               	movwf	___ftsub@f2& (0+255),b
  2633  001A68  0EB4               	movlw	180
  2634  001A6A  0100               	movlb	0	; () banked
  2635  001A6C  6FA4               	movwf	(___ftsub@f2+1)& (0+255),b
  2636  001A6E  0E43               	movlw	67
  2637  001A70  0100               	movlb	0	; () banked
  2638  001A72  6FA5               	movwf	(___ftsub@f2+2)& (0+255),b
  2639  001A74  EC51  F018         	call	___ftsub	;wreg free
  2640  001A78  C0A0  F0C4         	movff	?___ftsub,_error
  2641  001A7C  C0A1  F0C5         	movff	?___ftsub+1,_error+1
  2642  001A80  C0A2  F0C6         	movff	?___ftsub+2,_error+2
  2643  001A84  D02C               	goto	l82
  2644  001A86                     l4365:
  2645                           
  2646                           ;PID.c: 49: else if (error < -180)
  2647  001A86  C0C4  F06E         	movff	_error,___ftge@ff1
  2648  001A8A  C0C5  F06F         	movff	_error+1,___ftge@ff1+1
  2649  001A8E  C0C6  F070         	movff	_error+2,___ftge@ff1+2
  2650  001A92  0E00               	movlw	0
  2651  001A94  0100               	movlb	0	; () banked
  2652  001A96  6F71               	movwf	___ftge@ff2& (0+255),b
  2653  001A98  0E34               	movlw	52
  2654  001A9A  0100               	movlb	0	; () banked
  2655  001A9C  6F72               	movwf	(___ftge@ff2+1)& (0+255),b
  2656  001A9E  0EC3               	movlw	195
  2657  001AA0  0100               	movlb	0	; () banked
  2658  001AA2  6F73               	movwf	(___ftge@ff2+2)& (0+255),b
  2659  001AA4  ECAD  F014         	call	___ftge	;wreg free
  2660  001AA8  0100               	movlb	0	; () banked
  2661  001AAA  B0D8               	btfsc	status,0,c
  2662  001AAC  D018               	goto	l82
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;PID.c: 50: error += 360;
  2666  001AAE  C0C4  F094         	movff	_error,___ftadd@f1
  2667  001AB2  C0C5  F095         	movff	_error+1,___ftadd@f1+1
  2668  001AB6  C0C6  F096         	movff	_error+2,___ftadd@f1+2
  2669  001ABA  0E00               	movlw	0
  2670  001ABC  0100               	movlb	0	; () banked
  2671  001ABE  6F97               	movwf	___ftadd@f2& (0+255),b
  2672  001AC0  0EB4               	movlw	180
  2673  001AC2  0100               	movlb	0	; () banked
  2674  001AC4  6F98               	movwf	(___ftadd@f2+1)& (0+255),b
  2675  001AC6  0E43               	movlw	67
  2676  001AC8  0100               	movlb	0	; () banked
  2677  001ACA  6F99               	movwf	(___ftadd@f2+2)& (0+255),b
  2678  001ACC  EC3E  F00E         	call	___ftadd	;wreg free
  2679  001AD0  C094  F0C4         	movff	?___ftadd,_error
  2680  001AD4  C095  F0C5         	movff	?___ftadd+1,_error+1
  2681  001AD8  C096  F0C6         	movff	?___ftadd+2,_error+2
  2682  001ADC  D000               	goto	l82
  2683  001ADE                     l82:
  2684                           
  2685                           ;PID.c: 52: derErr = error - prevErr;
  2686  001ADE  C0CA  F06E         	movff	_prevErr,___ftneg@f1
  2687  001AE2  C0CB  F06F         	movff	_prevErr+1,___ftneg@f1+1
  2688  001AE6  C0CC  F070         	movff	_prevErr+2,___ftneg@f1+2
  2689  001AEA  EC20  F019         	call	___ftneg	;wreg free
  2690  001AEE  C06E  F094         	movff	?___ftneg,___ftadd@f1
  2691  001AF2  C06F  F095         	movff	?___ftneg+1,___ftadd@f1+1
  2692  001AF6  C070  F096         	movff	?___ftneg+2,___ftadd@f1+2
  2693  001AFA  C0C4  F097         	movff	_error,___ftadd@f2
  2694  001AFE  C0C5  F098         	movff	_error+1,___ftadd@f2+1
  2695  001B02  C0C6  F099         	movff	_error+2,___ftadd@f2+2
  2696  001B06  EC3E  F00E         	call	___ftadd	;wreg free
  2697  001B0A  C094  F100         	movff	?___ftadd,calculatePID@derErr
  2698  001B0E  C095  F101         	movff	?___ftadd+1,calculatePID@derErr+1
  2699  001B12  C096  F102         	movff	?___ftadd+2,calculatePID@derErr+2
  2700                           
  2701                           ;PID.c: 53: intErr += error;
  2702  001B16  C0C7  F094         	movff	_intErr,___ftadd@f1
  2703  001B1A  C0C8  F095         	movff	_intErr+1,___ftadd@f1+1
  2704  001B1E  C0C9  F096         	movff	_intErr+2,___ftadd@f1+2
  2705  001B22  C0C4  F097         	movff	_error,___ftadd@f2
  2706  001B26  C0C5  F098         	movff	_error+1,___ftadd@f2+1
  2707  001B2A  C0C6  F099         	movff	_error+2,___ftadd@f2+2
  2708  001B2E  EC3E  F00E         	call	___ftadd	;wreg free
  2709  001B32  C094  F0C7         	movff	?___ftadd,_intErr
  2710  001B36  C095  F0C8         	movff	?___ftadd+1,_intErr+1
  2711  001B3A  C096  F0C9         	movff	?___ftadd+2,_intErr+2
  2712                           
  2713                           ;PID.c: 54: if (intErr > 2000)
  2714  001B3E  0E00               	movlw	0
  2715  001B40  0100               	movlb	0	; () banked
  2716  001B42  6F6E               	movwf	___ftge@ff1& (0+255),b
  2717  001B44  0EFA               	movlw	250
  2718  001B46  0100               	movlb	0	; () banked
  2719  001B48  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  2720  001B4A  0E44               	movlw	68
  2721  001B4C  0100               	movlb	0	; () banked
  2722  001B4E  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  2723  001B50  C0C7  F071         	movff	_intErr,___ftge@ff2
  2724  001B54  C0C8  F072         	movff	_intErr+1,___ftge@ff2+1
  2725  001B58  C0C9  F073         	movff	_intErr+2,___ftge@ff2+2
  2726  001B5C  ECAD  F014         	call	___ftge	;wreg free
  2727  001B60  0100               	movlb	0	; () banked
  2728  001B62  B0D8               	btfsc	status,0,c
  2729  001B64  D00A               	goto	l4371
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;PID.c: 55: intErr = 2000;
  2733  001B66  0E00               	movlw	0
  2734  001B68  0100               	movlb	0	; () banked
  2735  001B6A  6FC7               	movwf	_intErr& (0+255),b
  2736  001B6C  0EFA               	movlw	250
  2737  001B6E  0100               	movlb	0	; () banked
  2738  001B70  6FC8               	movwf	(_intErr+1)& (0+255),b
  2739  001B72  0E44               	movlw	68
  2740  001B74  0100               	movlb	0	; () banked
  2741  001B76  6FC9               	movwf	(_intErr+2)& (0+255),b
  2742  001B78  D000               	goto	l4371
  2743  001B7A                     l4371:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;PID.c: 57: motorInput = Kp * error + (Ki * intErr * loopTime) + (Kd * (derErr / loopTim
      +                          e));
  2747  001B7A  C0C7  F088         	movff	_intErr,___ftmul@f2
  2748  001B7E  C0C8  F089         	movff	_intErr+1,___ftmul@f2+1
  2749  001B82  C0C9  F08A         	movff	_intErr+2,___ftmul@f2+2
  2750  001B86  C0BB  F085         	movff	_Ki,___ftmul@f1
  2751  001B8A  C0BC  F086         	movff	_Ki+1,___ftmul@f1+1
  2752  001B8E  C0BD  F087         	movff	_Ki+2,___ftmul@f1+2
  2753  001B92  EC35  F010         	call	___ftmul	;wreg free
  2754  001B96  C085  F103         	movff	?___ftmul,_calculatePID$2660
  2755  001B9A  C086  F104         	movff	?___ftmul+1,_calculatePID$2660+1
  2756  001B9E  C087  F105         	movff	?___ftmul+2,_calculatePID$2660+2
  2757                           
  2758                           ;PID.c: 57: motorInput = Kp * error + (Ki * intErr * loopTime) + (Kd * (derErr / loopTim
      +                          e));
  2759  001BA2  C0EF  F088         	movff	_loopTime,___ftmul@f2
  2760  001BA6  C0F0  F089         	movff	_loopTime+1,___ftmul@f2+1
  2761  001BAA  C0F1  F08A         	movff	_loopTime+2,___ftmul@f2+2
  2762  001BAE  C103  F085         	movff	_calculatePID$2660,___ftmul@f1
  2763  001BB2  C104  F086         	movff	_calculatePID$2660+1,___ftmul@f1+1
  2764  001BB6  C105  F087         	movff	_calculatePID$2660+2,___ftmul@f1+2
  2765  001BBA  EC35  F010         	call	___ftmul	;wreg free
  2766  001BBE  C085  F097         	movff	?___ftmul,___ftadd@f2
  2767  001BC2  C086  F098         	movff	?___ftmul+1,___ftadd@f2+1
  2768  001BC6  C087  F099         	movff	?___ftmul+2,___ftadd@f2+2
  2769  001BCA  C0C4  F088         	movff	_error,___ftmul@f2
  2770  001BCE  C0C5  F089         	movff	_error+1,___ftmul@f2+1
  2771  001BD2  C0C6  F08A         	movff	_error+2,___ftmul@f2+2
  2772  001BD6  C0BE  F085         	movff	_Kp,___ftmul@f1
  2773  001BDA  C0BF  F086         	movff	_Kp+1,___ftmul@f1+1
  2774  001BDE  C0C0  F087         	movff	_Kp+2,___ftmul@f1+2
  2775  001BE2  EC35  F010         	call	___ftmul	;wreg free
  2776  001BE6  C085  F094         	movff	?___ftmul,___ftadd@f1
  2777  001BEA  C086  F095         	movff	?___ftmul+1,___ftadd@f1+1
  2778  001BEE  C087  F096         	movff	?___ftmul+2,___ftadd@f1+2
  2779  001BF2  EC3E  F00E         	call	___ftadd	;wreg free
  2780  001BF6  C094  F106         	movff	?___ftadd,_calculatePID$2661
  2781  001BFA  C095  F107         	movff	?___ftadd+1,_calculatePID$2661+1
  2782  001BFE  C096  F108         	movff	?___ftadd+2,_calculatePID$2661+2
  2783                           
  2784                           ;PID.c: 57: motorInput = Kp * error + (Ki * intErr * loopTime) + (Kd * (derErr / loopTim
      +                          e));
  2785  001C02  C0B8  F088         	movff	_Kd,___ftmul@f2
  2786  001C06  C0B9  F089         	movff	_Kd+1,___ftmul@f2+1
  2787  001C0A  C0BA  F08A         	movff	_Kd+2,___ftmul@f2+2
  2788  001C0E  C0EF  F079         	movff	_loopTime,___ftdiv@f2
  2789  001C12  C0F0  F07A         	movff	_loopTime+1,___ftdiv@f2+1
  2790  001C16  C0F1  F07B         	movff	_loopTime+2,___ftdiv@f2+2
  2791  001C1A  C100  F076         	movff	calculatePID@derErr,___ftdiv@f1
  2792  001C1E  C101  F077         	movff	calculatePID@derErr+1,___ftdiv@f1+1
  2793  001C22  C102  F078         	movff	calculatePID@derErr+2,___ftdiv@f1+2
  2794  001C26  ECE3  F010         	call	___ftdiv	;wreg free
  2795  001C2A  C076  F085         	movff	?___ftdiv,___ftmul@f1
  2796  001C2E  C077  F086         	movff	?___ftdiv+1,___ftmul@f1+1
  2797  001C32  C078  F087         	movff	?___ftdiv+2,___ftmul@f1+2
  2798  001C36  EC35  F010         	call	___ftmul	;wreg free
  2799  001C3A  C085  F097         	movff	?___ftmul,___ftadd@f2
  2800  001C3E  C086  F098         	movff	?___ftmul+1,___ftadd@f2+1
  2801  001C42  C087  F099         	movff	?___ftmul+2,___ftadd@f2+2
  2802  001C46  C106  F094         	movff	_calculatePID$2661,___ftadd@f1
  2803  001C4A  C107  F095         	movff	_calculatePID$2661+1,___ftadd@f1+1
  2804  001C4E  C108  F096         	movff	_calculatePID$2661+2,___ftadd@f1+2
  2805  001C52  EC3E  F00E         	call	___ftadd	;wreg free
  2806  001C56  C094  F0A0         	movff	?___ftadd,___fttol@f1
  2807  001C5A  C095  F0A1         	movff	?___ftadd+1,___fttol@f1+1
  2808  001C5E  C096  F0A2         	movff	?___ftadd+2,___fttol@f1+2
  2809  001C62  EC22  F012         	call	___fttol	;wreg free
  2810  001C66  C0A0  F0CD         	movff	?___fttol,_motorInput
  2811  001C6A  C0A1  F0CE         	movff	?___fttol+1,_motorInput+1
  2812                           
  2813                           ;PID.c: 59: prevErr = error;
  2814  001C6E  C0C4  F0CA         	movff	_error,_prevErr
  2815  001C72  C0C5  F0CB         	movff	_error+1,_prevErr+1
  2816  001C76  C0C6  F0CC         	movff	_error+2,_prevErr+2
  2817  001C7A  0012               	return		;funcret
  2818  001C7C                     __end_of_calculatePID:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           tblptrh	equ	0xFF7
  2822                           tblptrl	equ	0xFF6
  2823                           tablat	equ	0xFF5
  2824                           intcon	equ	0xFF2
  2825                           intcon2	equ	0xFF1
  2826                           indf0	equ	0xFEF
  2827                           postinc0	equ	0xFEE
  2828                           fsr0h	equ	0xFEA
  2829                           fsr0l	equ	0xFE9
  2830                           wreg	equ	0xFE8
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function ___ftsub *****************
  2834 ;; Defined at:
  2835 ;;		line 20 in file "/opt/microchip/xc8/v1.34/sources/common/ftsub.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  f1              3   64[BANK0 ] float 
  2838 ;;  f2              3   67[BANK0 ] float 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  3   64[BANK0 ] float 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2850 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;Total ram usage:        6 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:   10
  2857 ;; This function calls:
  2858 ;;		___ftadd
  2859 ;; This function is called by:
  2860 ;;		_calculatePID
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text16
  2865  0030A2                     __ptext16:
  2866                           	opt stack 0
  2867  0030A2                     ___ftsub:
  2868                           	opt stack 19
  2869                           
  2870                           ;incstack = 0
  2871  0030A2  0100               	movlb	0	; () banked
  2872  0030A4  51A3               	movf	___ftsub@f2& (0+255),w,b
  2873  0030A6  0100               	movlb	0	; () banked
  2874  0030A8  11A4               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  2875  0030AA  0100               	movlb	0	; () banked
  2876  0030AC  11A5               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  2877  0030AE  B4D8               	btfsc	status,2,c
  2878  0030B0  D00A               	goto	l4241
  2879                           
  2880                           ; BSR set to: 0
  2881  0030B2  0E00               	movlw	0
  2882  0030B4  0100               	movlb	0	; () banked
  2883  0030B6  1BA3               	xorwf	___ftsub@f2& (0+255),f,b
  2884  0030B8  0E00               	movlw	0
  2885  0030BA  0100               	movlb	0	; () banked
  2886  0030BC  1BA4               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  2887  0030BE  0E80               	movlw	128
  2888  0030C0  0100               	movlb	0	; () banked
  2889  0030C2  1BA5               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  2890  0030C4  D000               	goto	l4241
  2891  0030C6                     l4241:
  2892                           
  2893                           ; BSR set to: 0
  2894  0030C6  C0A0  F094         	movff	___ftsub@f1,___ftadd@f1
  2895  0030CA  C0A1  F095         	movff	___ftsub@f1+1,___ftadd@f1+1
  2896  0030CE  C0A2  F096         	movff	___ftsub@f1+2,___ftadd@f1+2
  2897  0030D2  C0A3  F097         	movff	___ftsub@f2,___ftadd@f2
  2898  0030D6  C0A4  F098         	movff	___ftsub@f2+1,___ftadd@f2+1
  2899  0030DA  C0A5  F099         	movff	___ftsub@f2+2,___ftadd@f2+2
  2900  0030DE  EC3E  F00E         	call	___ftadd	;wreg free
  2901  0030E2  C094  F0A0         	movff	?___ftadd,?___ftsub
  2902  0030E6  C095  F0A1         	movff	?___ftadd+1,?___ftsub+1
  2903  0030EA  C096  F0A2         	movff	?___ftadd+2,?___ftsub+2
  2904  0030EE  D000               	goto	l996
  2905  0030F0                     l996:
  2906  0030F0  0012               	return		;funcret
  2907  0030F2                     __end_of___ftsub:
  2908                           	opt stack 0
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           intcon	equ	0xFF2
  2914                           intcon2	equ	0xFF1
  2915                           indf0	equ	0xFEF
  2916                           postinc0	equ	0xFEE
  2917                           fsr0h	equ	0xFEA
  2918                           fsr0l	equ	0xFE9
  2919                           wreg	equ	0xFE8
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function ___ftadd *****************
  2923 ;; Defined at:
  2924 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  f1              3   52[BANK0 ] float 
  2927 ;;  f2              3   55[BANK0 ] float 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  exp1            1   63[BANK0 ] unsigned char 
  2930 ;;  exp2            1   62[BANK0 ] unsigned char 
  2931 ;;  sign            1   61[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  3   52[BANK0 ] float 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2941 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;Total ram usage:       12 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    9
  2948 ;; This function calls:
  2949 ;;		___ftpack
  2950 ;; This function is called by:
  2951 ;;		_calculatePID
  2952 ;;		___ftsub
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text17
  2957  001C7C                     __ptext17:
  2958                           	opt stack 0
  2959  001C7C                     ___ftadd:
  2960                           	opt stack 19
  2961                           
  2962                           ;incstack = 0
  2963  001C7C  C096  F09A         	movff	___ftadd@f1+2,??___ftadd
  2964  001C80  0100               	movlb	0	; () banked
  2965  001C82  6B9B               	clrf	(??___ftadd+1)& (0+255),b
  2966  001C84  6B9C               	clrf	(??___ftadd+2)& (0+255),b
  2967  001C86  0100               	movlb	0	; () banked
  2968  001C88  3595               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2969  001C8A  0100               	movlb	0	; () banked
  2970  001C8C  379A               	rlcf	??___ftadd& (0+255),f,b
  2971  001C8E  E301               	bnc	u4391
  2972  001C90  819B               	bsf	(??___ftadd+1)& (0+255),0,b
  2973  001C92                     u4391:
  2974  001C92  0100               	movlb	0	; () banked
  2975  001C94  519A               	movf	??___ftadd& (0+255),w,b
  2976  001C96  0100               	movlb	0	; () banked
  2977  001C98  6F9F               	movwf	___ftadd@exp1& (0+255),b
  2978  001C9A  C099  F09A         	movff	___ftadd@f2+2,??___ftadd
  2979  001C9E  0100               	movlb	0	; () banked
  2980  001CA0  6B9B               	clrf	(??___ftadd+1)& (0+255),b
  2981  001CA2  6B9C               	clrf	(??___ftadd+2)& (0+255),b
  2982  001CA4  0100               	movlb	0	; () banked
  2983  001CA6  3598               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2984  001CA8  0100               	movlb	0	; () banked
  2985  001CAA  379A               	rlcf	??___ftadd& (0+255),f,b
  2986  001CAC  E301               	bnc	u4401
  2987  001CAE  819B               	bsf	(??___ftadd+1)& (0+255),0,b
  2988  001CB0                     u4401:
  2989  001CB0  0100               	movlb	0	; () banked
  2990  001CB2  519A               	movf	??___ftadd& (0+255),w,b
  2991  001CB4  0100               	movlb	0	; () banked
  2992  001CB6  6F9E               	movwf	___ftadd@exp2& (0+255),b
  2993                           
  2994                           ; BSR set to: 0
  2995  001CB8  0100               	movlb	0	; () banked
  2996  001CBA  519F               	movf	___ftadd@exp1& (0+255),w,b
  2997  001CBC  0100               	movlb	0	; () banked
  2998  001CBE  B4D8               	btfsc	status,2,c
  2999  001CC0  D011               	goto	l932
  3000                           
  3001                           ; BSR set to: 0
  3002  001CC2  0100               	movlb	0	; () banked
  3003  001CC4  519E               	movf	___ftadd@exp2& (0+255),w,b
  3004  001CC6  0100               	movlb	0	; () banked
  3005  001CC8  5D9F               	subwf	___ftadd@exp1& (0+255),w,b
  3006  001CCA  B0D8               	btfsc	status,0,c
  3007  001CCC  D012               	goto	l4071
  3008                           
  3009                           ; BSR set to: 0
  3010  001CCE  0100               	movlb	0	; () banked
  3011  001CD0  519F               	movf	___ftadd@exp1& (0+255),w,b
  3012  001CD2  0800               	sublw	0
  3013  001CD4  0100               	movlb	0	; () banked
  3014  001CD6  259E               	addwf	___ftadd@exp2& (0+255),w,b
  3015  001CD8  0100               	movlb	0	; () banked
  3016  001CDA  6F9A               	movwf	??___ftadd& (0+255),b
  3017  001CDC  0E18               	movlw	24
  3018  001CDE  0100               	movlb	0	; () banked
  3019  001CE0  659A               	cpfsgt	??___ftadd& (0+255),b
  3020  001CE2  D007               	goto	l4071
  3021  001CE4                     l932:
  3022                           
  3023                           ; BSR set to: 0
  3024  001CE4  C097  F094         	movff	___ftadd@f2,?___ftadd
  3025  001CE8  C098  F095         	movff	___ftadd@f2+1,?___ftadd+1
  3026  001CEC  C099  F096         	movff	___ftadd@f2+2,?___ftadd+2
  3027  001CF0  D103               	goto	l933
  3028  001CF2                     l4071:
  3029                           
  3030                           ; BSR set to: 0
  3031  001CF2  0100               	movlb	0	; () banked
  3032  001CF4  519E               	movf	___ftadd@exp2& (0+255),w,b
  3033  001CF6  0100               	movlb	0	; () banked
  3034  001CF8  B4D8               	btfsc	status,2,c
  3035  001CFA  D011               	goto	l936
  3036                           
  3037                           ; BSR set to: 0
  3038  001CFC  0100               	movlb	0	; () banked
  3039  001CFE  519F               	movf	___ftadd@exp1& (0+255),w,b
  3040  001D00  0100               	movlb	0	; () banked
  3041  001D02  5D9E               	subwf	___ftadd@exp2& (0+255),w,b
  3042  001D04  B0D8               	btfsc	status,0,c
  3043  001D06  D012               	goto	l4077
  3044                           
  3045                           ; BSR set to: 0
  3046  001D08  0100               	movlb	0	; () banked
  3047  001D0A  519E               	movf	___ftadd@exp2& (0+255),w,b
  3048  001D0C  0800               	sublw	0
  3049  001D0E  0100               	movlb	0	; () banked
  3050  001D10  259F               	addwf	___ftadd@exp1& (0+255),w,b
  3051  001D12  0100               	movlb	0	; () banked
  3052  001D14  6F9A               	movwf	??___ftadd& (0+255),b
  3053  001D16  0E18               	movlw	24
  3054  001D18  0100               	movlb	0	; () banked
  3055  001D1A  659A               	cpfsgt	??___ftadd& (0+255),b
  3056  001D1C  D007               	goto	l4077
  3057  001D1E                     l936:
  3058                           
  3059                           ; BSR set to: 0
  3060  001D1E  C094  F094         	movff	___ftadd@f1,?___ftadd
  3061  001D22  C095  F095         	movff	___ftadd@f1+1,?___ftadd+1
  3062  001D26  C096  F096         	movff	___ftadd@f1+2,?___ftadd+2
  3063  001D2A  D0E6               	goto	l933
  3064  001D2C                     l4077:
  3065                           
  3066                           ; BSR set to: 0
  3067  001D2C  0E06               	movlw	6
  3068  001D2E  0100               	movlb	0	; () banked
  3069  001D30  6F9D               	movwf	___ftadd@sign& (0+255),b
  3070                           
  3071                           ; BSR set to: 0
  3072  001D32  0100               	movlb	0	; () banked
  3073  001D34  AF96               	btfss	(___ftadd@f1+2)& (0+255),7,b
  3074  001D36  D003               	goto	l4083
  3075                           
  3076                           ; BSR set to: 0
  3077  001D38  0100               	movlb	0	; () banked
  3078  001D3A  8F9D               	bsf	___ftadd@sign& (0+255),7,b
  3079  001D3C  D000               	goto	l4083
  3080  001D3E                     l4083:
  3081                           
  3082                           ; BSR set to: 0
  3083  001D3E  0100               	movlb	0	; () banked
  3084  001D40  AF99               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3085  001D42  D002               	goto	l938
  3086                           
  3087                           ; BSR set to: 0
  3088  001D44  0100               	movlb	0	; () banked
  3089  001D46  8D9D               	bsf	___ftadd@sign& (0+255),6,b
  3090  001D48                     l938:
  3091                           
  3092                           ; BSR set to: 0
  3093  001D48  0100               	movlb	0	; () banked
  3094  001D4A  8F95               	bsf	(___ftadd@f1+1)& (0+255),7,b
  3095                           
  3096                           ; BSR set to: 0
  3097  001D4C  0EFF               	movlw	255
  3098  001D4E  0100               	movlb	0	; () banked
  3099  001D50  1794               	andwf	___ftadd@f1& (0+255),f,b
  3100  001D52  0EFF               	movlw	255
  3101  001D54  0100               	movlb	0	; () banked
  3102  001D56  1795               	andwf	(___ftadd@f1+1)& (0+255),f,b
  3103  001D58  0E00               	movlw	0
  3104  001D5A  0100               	movlb	0	; () banked
  3105  001D5C  1796               	andwf	(___ftadd@f1+2)& (0+255),f,b
  3106  001D5E  0100               	movlb	0	; () banked
  3107  001D60  8F98               	bsf	(___ftadd@f2+1)& (0+255),7,b
  3108                           
  3109                           ; BSR set to: 0
  3110  001D62  0EFF               	movlw	255
  3111  001D64  0100               	movlb	0	; () banked
  3112  001D66  1797               	andwf	___ftadd@f2& (0+255),f,b
  3113  001D68  0EFF               	movlw	255
  3114  001D6A  0100               	movlb	0	; () banked
  3115  001D6C  1798               	andwf	(___ftadd@f2+1)& (0+255),f,b
  3116  001D6E  0E00               	movlw	0
  3117  001D70  0100               	movlb	0	; () banked
  3118  001D72  1799               	andwf	(___ftadd@f2+2)& (0+255),f,b
  3119                           
  3120                           ; BSR set to: 0
  3121  001D74  0100               	movlb	0	; () banked
  3122  001D76  519E               	movf	___ftadd@exp2& (0+255),w,b
  3123  001D78  0100               	movlb	0	; () banked
  3124  001D7A  5D9F               	subwf	___ftadd@exp1& (0+255),w,b
  3125  001D7C  B0D8               	btfsc	status,0,c
  3126  001D7E  D028               	goto	l4103
  3127  001D80                     l4093:
  3128                           
  3129                           ; BSR set to: 0
  3130  001D80  0100               	movlb	0	; () banked
  3131  001D82  90D8               	bcf	status,0,c
  3132  001D84  3797               	rlcf	___ftadd@f2& (0+255),f,b
  3133  001D86  3798               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  3134  001D88  3799               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  3135  001D8A  0100               	movlb	0	; () banked
  3136  001D8C  079E               	decf	___ftadd@exp2& (0+255),f,b
  3137                           
  3138                           ; BSR set to: 0
  3139  001D8E  0100               	movlb	0	; () banked
  3140  001D90  519F               	movf	___ftadd@exp1& (0+255),w,b
  3141  001D92  0100               	movlb	0	; () banked
  3142  001D94  199E               	xorwf	___ftadd@exp2& (0+255),w,b
  3143  001D96  B4D8               	btfsc	status,2,c
  3144  001D98  D013               	goto	l4101
  3145                           
  3146                           ; BSR set to: 0
  3147  001D9A  0100               	movlb	0	; () banked
  3148  001D9C  079D               	decf	___ftadd@sign& (0+255),f,b
  3149  001D9E  C09D  F09A         	movff	___ftadd@sign,??___ftadd
  3150  001DA2  0E07               	movlw	7
  3151  001DA4  0100               	movlb	0	; () banked
  3152  001DA6  179A               	andwf	??___ftadd& (0+255),f,b
  3153  001DA8  B4D8               	btfsc	status,2,c
  3154  001DAA  D00A               	goto	l4101
  3155  001DAC  D7E9               	goto	l4093
  3156                           
  3157                           ; BSR set to: 0
  3158                           
  3159                           ; BSR set to: 0
  3160  001DAE  D008               	goto	l4101
  3161  001DB0                     l4099:
  3162                           
  3163                           ; BSR set to: 0
  3164  001DB0  0100               	movlb	0	; () banked
  3165  001DB2  90D8               	bcf	status,0,c
  3166  001DB4  3396               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  3167  001DB6  3395               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  3168  001DB8  3394               	rrcf	___ftadd@f1& (0+255),f,b
  3169  001DBA  0100               	movlb	0	; () banked
  3170  001DBC  2B9F               	incf	___ftadd@exp1& (0+255),f,b
  3171  001DBE  D000               	goto	l4101
  3172  001DC0                     l4101:
  3173                           
  3174                           ; BSR set to: 0
  3175  001DC0  0100               	movlb	0	; () banked
  3176  001DC2  519E               	movf	___ftadd@exp2& (0+255),w,b
  3177  001DC4  0100               	movlb	0	; () banked
  3178  001DC6  199F               	xorwf	___ftadd@exp1& (0+255),w,b
  3179  001DC8  B4D8               	btfsc	status,2,c
  3180  001DCA  D030               	goto	l947
  3181  001DCC  D7F1               	goto	l4099
  3182                           
  3183                           ; BSR set to: 0
  3184  001DCE  D02E               	goto	l947
  3185  001DD0                     l4103:
  3186                           
  3187                           ; BSR set to: 0
  3188  001DD0  0100               	movlb	0	; () banked
  3189  001DD2  519F               	movf	___ftadd@exp1& (0+255),w,b
  3190  001DD4  0100               	movlb	0	; () banked
  3191  001DD6  5D9E               	subwf	___ftadd@exp2& (0+255),w,b
  3192  001DD8  B0D8               	btfsc	status,0,c
  3193  001DDA  D028               	goto	l947
  3194  001DDC                     l4105:
  3195                           
  3196                           ; BSR set to: 0
  3197  001DDC  0100               	movlb	0	; () banked
  3198  001DDE  90D8               	bcf	status,0,c
  3199  001DE0  3794               	rlcf	___ftadd@f1& (0+255),f,b
  3200  001DE2  3795               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  3201  001DE4  3796               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  3202  001DE6  0100               	movlb	0	; () banked
  3203  001DE8  079F               	decf	___ftadd@exp1& (0+255),f,b
  3204                           
  3205                           ; BSR set to: 0
  3206  001DEA  0100               	movlb	0	; () banked
  3207  001DEC  519F               	movf	___ftadd@exp1& (0+255),w,b
  3208  001DEE  0100               	movlb	0	; () banked
  3209  001DF0  199E               	xorwf	___ftadd@exp2& (0+255),w,b
  3210  001DF2  B4D8               	btfsc	status,2,c
  3211  001DF4  D013               	goto	l4113
  3212                           
  3213                           ; BSR set to: 0
  3214  001DF6  0100               	movlb	0	; () banked
  3215  001DF8  079D               	decf	___ftadd@sign& (0+255),f,b
  3216  001DFA  C09D  F09A         	movff	___ftadd@sign,??___ftadd
  3217  001DFE  0E07               	movlw	7
  3218  001E00  0100               	movlb	0	; () banked
  3219  001E02  179A               	andwf	??___ftadd& (0+255),f,b
  3220  001E04  B4D8               	btfsc	status,2,c
  3221  001E06  D00A               	goto	l4113
  3222  001E08  D7E9               	goto	l4105
  3223                           
  3224                           ; BSR set to: 0
  3225                           
  3226                           ; BSR set to: 0
  3227  001E0A  D008               	goto	l4113
  3228  001E0C                     l4111:
  3229                           
  3230                           ; BSR set to: 0
  3231  001E0C  0100               	movlb	0	; () banked
  3232  001E0E  90D8               	bcf	status,0,c
  3233  001E10  3399               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  3234  001E12  3398               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  3235  001E14  3397               	rrcf	___ftadd@f2& (0+255),f,b
  3236  001E16  0100               	movlb	0	; () banked
  3237  001E18  2B9E               	incf	___ftadd@exp2& (0+255),f,b
  3238  001E1A  D000               	goto	l4113
  3239  001E1C                     l4113:
  3240                           
  3241                           ; BSR set to: 0
  3242  001E1C  0100               	movlb	0	; () banked
  3243  001E1E  519E               	movf	___ftadd@exp2& (0+255),w,b
  3244  001E20  0100               	movlb	0	; () banked
  3245  001E22  199F               	xorwf	___ftadd@exp1& (0+255),w,b
  3246  001E24  B4D8               	btfsc	status,2,c
  3247  001E26  D002               	goto	l947
  3248  001E28  D7F1               	goto	l4111
  3249                           
  3250                           ; BSR set to: 0
  3251  001E2A  D000               	goto	l947
  3252  001E2C                     l947:
  3253                           
  3254                           ; BSR set to: 0
  3255  001E2C  0100               	movlb	0	; () banked
  3256  001E2E  AF9D               	btfss	___ftadd@sign& (0+255),7,b
  3257  001E30  D012               	goto	l956
  3258                           
  3259                           ; BSR set to: 0
  3260  001E32  0EFF               	movlw	255
  3261  001E34  0100               	movlb	0	; () banked
  3262  001E36  1B94               	xorwf	___ftadd@f1& (0+255),f,b
  3263  001E38  0EFF               	movlw	255
  3264  001E3A  0100               	movlb	0	; () banked
  3265  001E3C  1B95               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  3266  001E3E  0EFF               	movlw	255
  3267  001E40  0100               	movlb	0	; () banked
  3268  001E42  1B96               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  3269  001E44  0E01               	movlw	1
  3270  001E46  0100               	movlb	0	; () banked
  3271  001E48  2794               	addwf	___ftadd@f1& (0+255),f,b
  3272  001E4A  0E00               	movlw	0
  3273  001E4C  0100               	movlb	0	; () banked
  3274  001E4E  2395               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  3275  001E50  0E00               	movlw	0
  3276  001E52  0100               	movlb	0	; () banked
  3277  001E54  2396               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  3278  001E56                     l956:
  3279                           
  3280                           ; BSR set to: 0
  3281  001E56  0100               	movlb	0	; () banked
  3282  001E58  AD9D               	btfss	___ftadd@sign& (0+255),6,b
  3283  001E5A  D013               	goto	l4119
  3284                           
  3285                           ; BSR set to: 0
  3286  001E5C  0EFF               	movlw	255
  3287  001E5E  0100               	movlb	0	; () banked
  3288  001E60  1B97               	xorwf	___ftadd@f2& (0+255),f,b
  3289  001E62  0EFF               	movlw	255
  3290  001E64  0100               	movlb	0	; () banked
  3291  001E66  1B98               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3292  001E68  0EFF               	movlw	255
  3293  001E6A  0100               	movlb	0	; () banked
  3294  001E6C  1B99               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3295  001E6E  0E01               	movlw	1
  3296  001E70  0100               	movlb	0	; () banked
  3297  001E72  2797               	addwf	___ftadd@f2& (0+255),f,b
  3298  001E74  0E00               	movlw	0
  3299  001E76  0100               	movlb	0	; () banked
  3300  001E78  2398               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3301  001E7A  0E00               	movlw	0
  3302  001E7C  0100               	movlb	0	; () banked
  3303  001E7E  2399               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3304  001E80  D000               	goto	l4119
  3305  001E82                     l4119:
  3306                           
  3307                           ; BSR set to: 0
  3308  001E82  0E00               	movlw	0
  3309  001E84  0100               	movlb	0	; () banked
  3310  001E86  6F9D               	movwf	___ftadd@sign& (0+255),b
  3311                           
  3312                           ; BSR set to: 0
  3313  001E88  0100               	movlb	0	; () banked
  3314  001E8A  5194               	movf	___ftadd@f1& (0+255),w,b
  3315  001E8C  0100               	movlb	0	; () banked
  3316  001E8E  2797               	addwf	___ftadd@f2& (0+255),f,b
  3317  001E90  0100               	movlb	0	; () banked
  3318  001E92  5195               	movf	(___ftadd@f1+1)& (0+255),w,b
  3319  001E94  0100               	movlb	0	; () banked
  3320  001E96  2398               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3321  001E98  0100               	movlb	0	; () banked
  3322  001E9A  5196               	movf	(___ftadd@f1+2)& (0+255),w,b
  3323  001E9C  0100               	movlb	0	; () banked
  3324  001E9E  2399               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3325                           
  3326                           ; BSR set to: 0
  3327  001EA0  0100               	movlb	0	; () banked
  3328  001EA2  AF99               	btfss	(___ftadd@f2+2)& (0+255),7,b
  3329  001EA4  D016               	goto	l4129
  3330                           
  3331                           ; BSR set to: 0
  3332  001EA6  0EFF               	movlw	255
  3333  001EA8  0100               	movlb	0	; () banked
  3334  001EAA  1B97               	xorwf	___ftadd@f2& (0+255),f,b
  3335  001EAC  0EFF               	movlw	255
  3336  001EAE  0100               	movlb	0	; () banked
  3337  001EB0  1B98               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  3338  001EB2  0EFF               	movlw	255
  3339  001EB4  0100               	movlb	0	; () banked
  3340  001EB6  1B99               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  3341  001EB8  0E01               	movlw	1
  3342  001EBA  0100               	movlb	0	; () banked
  3343  001EBC  2797               	addwf	___ftadd@f2& (0+255),f,b
  3344  001EBE  0E00               	movlw	0
  3345  001EC0  0100               	movlb	0	; () banked
  3346  001EC2  2398               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  3347  001EC4  0E00               	movlw	0
  3348  001EC6  0100               	movlb	0	; () banked
  3349  001EC8  2399               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  3350                           
  3351                           ; BSR set to: 0
  3352  001ECA  0E01               	movlw	1
  3353  001ECC  0100               	movlb	0	; () banked
  3354  001ECE  6F9D               	movwf	___ftadd@sign& (0+255),b
  3355  001ED0  D000               	goto	l4129
  3356  001ED2                     l4129:
  3357                           
  3358                           ; BSR set to: 0
  3359  001ED2  C097  F06E         	movff	___ftadd@f2,___ftpack@arg
  3360  001ED6  C098  F06F         	movff	___ftadd@f2+1,___ftpack@arg+1
  3361  001EDA  C099  F070         	movff	___ftadd@f2+2,___ftpack@arg+2
  3362  001EDE  C09F  F071         	movff	___ftadd@exp1,___ftpack@exp
  3363  001EE2  C09D  F072         	movff	___ftadd@sign,___ftpack@sign
  3364  001EE6  ECBB  F012         	call	___ftpack	;wreg free
  3365  001EEA  C06E  F094         	movff	?___ftpack,?___ftadd
  3366  001EEE  C06F  F095         	movff	?___ftpack+1,?___ftadd+1
  3367  001EF2  C070  F096         	movff	?___ftpack+2,?___ftadd+2
  3368  001EF6  D000               	goto	l933
  3369  001EF8                     l933:
  3370  001EF8  0012               	return		;funcret
  3371  001EFA                     __end_of___ftadd:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           intcon	equ	0xFF2
  3378                           intcon2	equ	0xFF1
  3379                           indf0	equ	0xFEF
  3380                           postinc0	equ	0xFEE
  3381                           fsr0h	equ	0xFEA
  3382                           fsr0l	equ	0xFE9
  3383                           wreg	equ	0xFE8
  3384                           status	equ	0xFD8
  3385                           
  3386 ;; *************** function ___ftneg *****************
  3387 ;; Defined at:
  3388 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  f1              3   14[BANK0 ] float 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  3   14[BANK0 ] float 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3402 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;Total ram usage:        3 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    8
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_calculatePID
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text18
  3417  003240                     __ptext18:
  3418                           	opt stack 0
  3419  003240                     ___ftneg:
  3420                           	opt stack 21
  3421                           
  3422                           ;incstack = 0
  3423  003240  0100               	movlb	0	; () banked
  3424  003242  516E               	movf	___ftneg@f1& (0+255),w,b
  3425  003244  0100               	movlb	0	; () banked
  3426  003246  116F               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  3427  003248  0100               	movlb	0	; () banked
  3428  00324A  1170               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  3429  00324C  B4D8               	btfsc	status,2,c
  3430  00324E  D009               	goto	l989
  3431                           
  3432                           ; BSR set to: 0
  3433  003250  0E00               	movlw	0
  3434  003252  0100               	movlb	0	; () banked
  3435  003254  1B6E               	xorwf	___ftneg@f1& (0+255),f,b
  3436  003256  0E00               	movlw	0
  3437  003258  0100               	movlb	0	; () banked
  3438  00325A  1B6F               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  3439  00325C  0E80               	movlw	128
  3440  00325E  0100               	movlb	0	; () banked
  3441  003260  1B70               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  3442  003262                     l989:
  3443                           
  3444                           ; BSR set to: 0
  3445  003262  C06E  F06E         	movff	___ftneg@f1,?___ftneg
  3446  003266  C06F  F06F         	movff	___ftneg@f1+1,?___ftneg+1
  3447  00326A  C070  F070         	movff	___ftneg@f1+2,?___ftneg+2
  3448                           
  3449                           ; BSR set to: 0
  3450  00326E  0012               	return		;funcret
  3451  003270                     __end_of___ftneg:
  3452                           	opt stack 0
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           intcon	equ	0xFF2
  3458                           intcon2	equ	0xFF1
  3459                           indf0	equ	0xFEF
  3460                           postinc0	equ	0xFEE
  3461                           fsr0h	equ	0xFEA
  3462                           fsr0l	equ	0xFE9
  3463                           wreg	equ	0xFE8
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function ___ftge *****************
  3467 ;; Defined at:
  3468 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  ff1             3   14[BANK0 ] float 
  3471 ;;  ff2             3   17[BANK0 ] float 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;		None               void
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3483 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;Total ram usage:        9 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    8
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_calculatePID
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text19
  3498  00295A                     __ptext19:
  3499                           	opt stack 0
  3500  00295A                     ___ftge:
  3501                           	opt stack 21
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;incstack = 0
  3505  00295A  0100               	movlb	0	; () banked
  3506  00295C  AF70               	btfss	(___ftge@ff1+2)& (0+255),7,b
  3507  00295E  D01E               	goto	l4249
  3508                           
  3509                           ; BSR set to: 0
  3510  002960  C06E  F074         	movff	___ftge@ff1,??___ftge
  3511  002964  C06F  F075         	movff	___ftge@ff1+1,??___ftge+1
  3512  002968  C070  F076         	movff	___ftge@ff1+2,??___ftge+2
  3513  00296C  0100               	movlb	0	; () banked
  3514  00296E  1F74               	comf	??___ftge& (0+255),f,b
  3515  002970  1F75               	comf	(??___ftge+1)& (0+255),f,b
  3516  002972  1F76               	comf	(??___ftge+2)& (0+255),f,b
  3517  002974  2B74               	incf	??___ftge& (0+255),f,b
  3518  002976  0E00               	movlw	0
  3519  002978  2375               	addwfc	(??___ftge+1)& (0+255),f,b
  3520  00297A  2376               	addwfc	(??___ftge+2)& (0+255),f,b
  3521  00297C  0E00               	movlw	0
  3522  00297E  0100               	movlb	0	; () banked
  3523  002980  2574               	addwf	??___ftge& (0+255),w,b
  3524  002982  0100               	movlb	0	; () banked
  3525  002984  6F6E               	movwf	___ftge@ff1& (0+255),b
  3526  002986  0E00               	movlw	0
  3527  002988  0100               	movlb	0	; () banked
  3528  00298A  2175               	addwfc	(??___ftge+1)& (0+255),w,b
  3529  00298C  0100               	movlb	0	; () banked
  3530  00298E  6F6F               	movwf	(___ftge@ff1+1)& (0+255),b
  3531  002990  0E80               	movlw	128
  3532  002992  0100               	movlb	0	; () banked
  3533  002994  2176               	addwfc	(??___ftge+2)& (0+255),w,b
  3534  002996  0100               	movlb	0	; () banked
  3535  002998  6F70               	movwf	(___ftge@ff1+2)& (0+255),b
  3536  00299A  D000               	goto	l4249
  3537  00299C                     l4249:
  3538                           
  3539                           ; BSR set to: 0
  3540  00299C  0100               	movlb	0	; () banked
  3541  00299E  AF73               	btfss	(___ftge@ff2+2)& (0+255),7,b
  3542  0029A0  D01E               	goto	l4253
  3543                           
  3544                           ; BSR set to: 0
  3545  0029A2  C071  F074         	movff	___ftge@ff2,??___ftge
  3546  0029A6  C072  F075         	movff	___ftge@ff2+1,??___ftge+1
  3547  0029AA  C073  F076         	movff	___ftge@ff2+2,??___ftge+2
  3548  0029AE  0100               	movlb	0	; () banked
  3549  0029B0  1F74               	comf	??___ftge& (0+255),f,b
  3550  0029B2  1F75               	comf	(??___ftge+1)& (0+255),f,b
  3551  0029B4  1F76               	comf	(??___ftge+2)& (0+255),f,b
  3552  0029B6  2B74               	incf	??___ftge& (0+255),f,b
  3553  0029B8  0E00               	movlw	0
  3554  0029BA  2375               	addwfc	(??___ftge+1)& (0+255),f,b
  3555  0029BC  2376               	addwfc	(??___ftge+2)& (0+255),f,b
  3556  0029BE  0E00               	movlw	0
  3557  0029C0  0100               	movlb	0	; () banked
  3558  0029C2  2574               	addwf	??___ftge& (0+255),w,b
  3559  0029C4  0100               	movlb	0	; () banked
  3560  0029C6  6F71               	movwf	___ftge@ff2& (0+255),b
  3561  0029C8  0E00               	movlw	0
  3562  0029CA  0100               	movlb	0	; () banked
  3563  0029CC  2175               	addwfc	(??___ftge+1)& (0+255),w,b
  3564  0029CE  0100               	movlb	0	; () banked
  3565  0029D0  6F72               	movwf	(___ftge@ff2+1)& (0+255),b
  3566  0029D2  0E80               	movlw	128
  3567  0029D4  0100               	movlb	0	; () banked
  3568  0029D6  2176               	addwfc	(??___ftge+2)& (0+255),w,b
  3569  0029D8  0100               	movlb	0	; () banked
  3570  0029DA  6F73               	movwf	(___ftge@ff2+2)& (0+255),b
  3571  0029DC  D000               	goto	l4253
  3572  0029DE                     l4253:
  3573                           
  3574                           ; BSR set to: 0
  3575  0029DE  0E00               	movlw	0
  3576  0029E0  0100               	movlb	0	; () banked
  3577  0029E2  1B6E               	xorwf	___ftge@ff1& (0+255),f,b
  3578  0029E4  0E00               	movlw	0
  3579  0029E6  0100               	movlb	0	; () banked
  3580  0029E8  1B6F               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  3581  0029EA  0E80               	movlw	128
  3582  0029EC  0100               	movlb	0	; () banked
  3583  0029EE  1B70               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  3584                           
  3585                           ; BSR set to: 0
  3586  0029F0  0E00               	movlw	0
  3587  0029F2  0100               	movlb	0	; () banked
  3588  0029F4  1B71               	xorwf	___ftge@ff2& (0+255),f,b
  3589  0029F6  0E00               	movlw	0
  3590  0029F8  0100               	movlb	0	; () banked
  3591  0029FA  1B72               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  3592  0029FC  0E80               	movlw	128
  3593  0029FE  0100               	movlb	0	; () banked
  3594  002A00  1B73               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  3595  002A02  0100               	movlb	0	; () banked
  3596  002A04  5171               	movf	___ftge@ff2& (0+255),w,b
  3597  002A06  0100               	movlb	0	; () banked
  3598  002A08  5D6E               	subwf	___ftge@ff1& (0+255),w,b
  3599  002A0A  0100               	movlb	0	; () banked
  3600  002A0C  5172               	movf	(___ftge@ff2+1)& (0+255),w,b
  3601  002A0E  0100               	movlb	0	; () banked
  3602  002A10  596F               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  3603  002A12  0100               	movlb	0	; () banked
  3604  002A14  5173               	movf	(___ftge@ff2+2)& (0+255),w,b
  3605  002A16  0100               	movlb	0	; () banked
  3606  002A18  5970               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  3607  002A1A  B0D8               	btfsc	status,0,c
  3608  002A1C  D002               	goto	l4259
  3609                           
  3610                           ; BSR set to: 0
  3611  002A1E  90D8               	bcf	status,0,c
  3612  002A20  D002               	goto	l973
  3613  002A22                     l4259:
  3614                           
  3615                           ; BSR set to: 0
  3616  002A22  80D8               	bsf	status,0,c
  3617                           
  3618                           ; BSR set to: 0
  3619  002A24  D000               	goto	l973
  3620  002A26                     l973:
  3621                           
  3622                           ; BSR set to: 0
  3623  002A26  0012               	return		;funcret
  3624  002A28                     __end_of___ftge:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           intcon	equ	0xFF2
  3631                           intcon2	equ	0xFF1
  3632                           indf0	equ	0xFEF
  3633                           postinc0	equ	0xFEE
  3634                           fsr0h	equ	0xFEA
  3635                           fsr0l	equ	0xFE9
  3636                           wreg	equ	0xFE8
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function ___ftdiv *****************
  3640 ;; Defined at:
  3641 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  f1              3   22[BANK0 ] float 
  3644 ;;  f2              3   25[BANK0 ] float 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  f3              3   32[BANK0 ] float 
  3647 ;;  sign            1   36[BANK0 ] unsigned char 
  3648 ;;  exp             1   35[BANK0 ] unsigned char 
  3649 ;;  cntr            1   31[BANK0 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  3   22[BANK0 ] float 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:       15 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    9
  3666 ;; This function calls:
  3667 ;;		___ftpack
  3668 ;; This function is called by:
  3669 ;;		_calculatePID
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text20
  3674  0021C6                     __ptext20:
  3675                           	opt stack 0
  3676  0021C6                     ___ftdiv:
  3677                           	opt stack 20
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;incstack = 0
  3681  0021C6  C078  F07C         	movff	___ftdiv@f1+2,??___ftdiv
  3682  0021CA  0100               	movlb	0	; () banked
  3683  0021CC  6B7D               	clrf	(??___ftdiv+1)& (0+255),b
  3684  0021CE  6B7E               	clrf	(??___ftdiv+2)& (0+255),b
  3685  0021D0  0100               	movlb	0	; () banked
  3686  0021D2  3577               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  3687  0021D4  0100               	movlb	0	; () banked
  3688  0021D6  377C               	rlcf	??___ftdiv& (0+255),f,b
  3689  0021D8  E301               	bnc	u4601
  3690  0021DA  817D               	bsf	(??___ftdiv+1)& (0+255),0,b
  3691  0021DC                     u4601:
  3692  0021DC  0100               	movlb	0	; () banked
  3693  0021DE  517C               	movf	??___ftdiv& (0+255),w,b
  3694  0021E0  0100               	movlb	0	; () banked
  3695  0021E2  6F83               	movwf	___ftdiv@exp& (0+255),b
  3696  0021E4  0100               	movlb	0	; () banked
  3697  0021E6  5183               	movf	___ftdiv@exp& (0+255),w,b
  3698  0021E8  A4D8               	btfss	status,2,c
  3699  0021EA  D002               	goto	l4149
  3700  0021EC  D014               	goto	l4151
  3701                           
  3702                           ; BSR set to: 0
  3703                           
  3704                           ; BSR set to: 0
  3705  0021EE  D08B               	goto	l964
  3706  0021F0                     l4149:
  3707                           
  3708                           ; BSR set to: 0
  3709  0021F0  C07B  F07C         	movff	___ftdiv@f2+2,??___ftdiv
  3710  0021F4  0100               	movlb	0	; () banked
  3711  0021F6  6B7D               	clrf	(??___ftdiv+1)& (0+255),b
  3712  0021F8  6B7E               	clrf	(??___ftdiv+2)& (0+255),b
  3713  0021FA  0100               	movlb	0	; () banked
  3714  0021FC  357A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  3715  0021FE  0100               	movlb	0	; () banked
  3716  002200  377C               	rlcf	??___ftdiv& (0+255),f,b
  3717  002202  E301               	bnc	u4621
  3718  002204  817D               	bsf	(??___ftdiv+1)& (0+255),0,b
  3719  002206                     u4621:
  3720  002206  0100               	movlb	0	; () banked
  3721  002208  517C               	movf	??___ftdiv& (0+255),w,b
  3722  00220A  0100               	movlb	0	; () banked
  3723  00220C  6F84               	movwf	___ftdiv@sign& (0+255),b
  3724  00220E  0100               	movlb	0	; () banked
  3725  002210  5184               	movf	___ftdiv@sign& (0+255),w,b
  3726  002212  A4D8               	btfss	status,2,c
  3727  002214  D00A               	goto	l4155
  3728  002216                     l4151:
  3729                           
  3730                           ; BSR set to: 0
  3731  002216  0E00               	movlw	0
  3732  002218  0100               	movlb	0	; () banked
  3733  00221A  6F76               	movwf	?___ftdiv& (0+255),b
  3734  00221C  0E00               	movlw	0
  3735  00221E  0100               	movlb	0	; () banked
  3736  002220  6F77               	movwf	(?___ftdiv+1)& (0+255),b
  3737  002222  0E00               	movlw	0
  3738  002224  0100               	movlb	0	; () banked
  3739  002226  6F78               	movwf	(?___ftdiv+2)& (0+255),b
  3740                           
  3741                           ; BSR set to: 0
  3742  002228  D06E               	goto	l964
  3743  00222A                     l4155:
  3744                           
  3745                           ; BSR set to: 0
  3746  00222A  0E00               	movlw	0
  3747  00222C  0100               	movlb	0	; () banked
  3748  00222E  6F80               	movwf	___ftdiv@f3& (0+255),b
  3749  002230  0E00               	movlw	0
  3750  002232  0100               	movlb	0	; () banked
  3751  002234  6F81               	movwf	(___ftdiv@f3+1)& (0+255),b
  3752  002236  0E00               	movlw	0
  3753  002238  0100               	movlb	0	; () banked
  3754  00223A  6F82               	movwf	(___ftdiv@f3+2)& (0+255),b
  3755                           
  3756                           ; BSR set to: 0
  3757  00223C  0100               	movlb	0	; () banked
  3758  00223E  5184               	movf	___ftdiv@sign& (0+255),w,b
  3759  002240  0F89               	addlw	137
  3760  002242  0100               	movlb	0	; () banked
  3761  002244  5F83               	subwf	___ftdiv@exp& (0+255),f,b
  3762                           
  3763                           ; BSR set to: 0
  3764  002246  C078  F084         	movff	___ftdiv@f1+2,___ftdiv@sign
  3765                           
  3766                           ; BSR set to: 0
  3767  00224A  0100               	movlb	0	; () banked
  3768  00224C  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3769  00224E  0100               	movlb	0	; () banked
  3770  002250  1B84               	xorwf	___ftdiv@sign& (0+255),f,b
  3771                           
  3772                           ; BSR set to: 0
  3773  002252  0E80               	movlw	128
  3774  002254  0100               	movlb	0	; () banked
  3775  002256  1784               	andwf	___ftdiv@sign& (0+255),f,b
  3776                           
  3777                           ; BSR set to: 0
  3778  002258  0100               	movlb	0	; () banked
  3779  00225A  8F77               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3780                           
  3781                           ; BSR set to: 0
  3782  00225C  0EFF               	movlw	255
  3783  00225E  0100               	movlb	0	; () banked
  3784  002260  1776               	andwf	___ftdiv@f1& (0+255),f,b
  3785  002262  0EFF               	movlw	255
  3786  002264  0100               	movlb	0	; () banked
  3787  002266  1777               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3788  002268  0E00               	movlw	0
  3789  00226A  0100               	movlb	0	; () banked
  3790  00226C  1778               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3791                           
  3792                           ; BSR set to: 0
  3793  00226E  0100               	movlb	0	; () banked
  3794  002270  8F7A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3795                           
  3796                           ; BSR set to: 0
  3797  002272  0EFF               	movlw	255
  3798  002274  0100               	movlb	0	; () banked
  3799  002276  1779               	andwf	___ftdiv@f2& (0+255),f,b
  3800  002278  0EFF               	movlw	255
  3801  00227A  0100               	movlb	0	; () banked
  3802  00227C  177A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3803  00227E  0E00               	movlw	0
  3804  002280  0100               	movlb	0	; () banked
  3805  002282  177B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3806                           
  3807                           ; BSR set to: 0
  3808  002284  0E18               	movlw	24
  3809  002286  0100               	movlb	0	; () banked
  3810  002288  6F7F               	movwf	___ftdiv@cntr& (0+255),b
  3811  00228A  D000               	goto	l4175
  3812  00228C                     l4175:
  3813                           
  3814                           ; BSR set to: 0
  3815  00228C  0100               	movlb	0	; () banked
  3816  00228E  90D8               	bcf	status,0,c
  3817  002290  3780               	rlcf	___ftdiv@f3& (0+255),f,b
  3818  002292  3781               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3819  002294  3782               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3820                           
  3821                           ; BSR set to: 0
  3822  002296  0100               	movlb	0	; () banked
  3823  002298  5179               	movf	___ftdiv@f2& (0+255),w,b
  3824  00229A  0100               	movlb	0	; () banked
  3825  00229C  5D76               	subwf	___ftdiv@f1& (0+255),w,b
  3826  00229E  0100               	movlb	0	; () banked
  3827  0022A0  517A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3828  0022A2  0100               	movlb	0	; () banked
  3829  0022A4  5977               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3830  0022A6  0100               	movlb	0	; () banked
  3831  0022A8  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3832  0022AA  0100               	movlb	0	; () banked
  3833  0022AC  5978               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3834  0022AE  A0D8               	btfss	status,0,c
  3835  0022B0  D00E               	goto	l967
  3836                           
  3837                           ; BSR set to: 0
  3838  0022B2  0100               	movlb	0	; () banked
  3839  0022B4  5179               	movf	___ftdiv@f2& (0+255),w,b
  3840  0022B6  0100               	movlb	0	; () banked
  3841  0022B8  5F76               	subwf	___ftdiv@f1& (0+255),f,b
  3842  0022BA  0100               	movlb	0	; () banked
  3843  0022BC  517A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3844  0022BE  0100               	movlb	0	; () banked
  3845  0022C0  5B77               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3846  0022C2  0100               	movlb	0	; () banked
  3847  0022C4  517B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3848  0022C6  0100               	movlb	0	; () banked
  3849  0022C8  5B78               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3850                           
  3851                           ; BSR set to: 0
  3852  0022CA  0100               	movlb	0	; () banked
  3853  0022CC  8180               	bsf	___ftdiv@f3& (0+255),0,b
  3854  0022CE                     l967:
  3855                           
  3856                           ; BSR set to: 0
  3857  0022CE  0100               	movlb	0	; () banked
  3858  0022D0  90D8               	bcf	status,0,c
  3859  0022D2  3776               	rlcf	___ftdiv@f1& (0+255),f,b
  3860  0022D4  3777               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3861  0022D6  3778               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3862                           
  3863                           ; BSR set to: 0
  3864  0022D8  0100               	movlb	0	; () banked
  3865  0022DA  2F7F               	decfsz	___ftdiv@cntr& (0+255),f,b
  3866  0022DC  D7D7               	goto	l4175
  3867  0022DE  D000               	goto	l4185
  3868  0022E0                     l4185:
  3869                           
  3870                           ; BSR set to: 0
  3871  0022E0  C080  F06E         	movff	___ftdiv@f3,___ftpack@arg
  3872  0022E4  C081  F06F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3873  0022E8  C082  F070         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3874  0022EC  C083  F071         	movff	___ftdiv@exp,___ftpack@exp
  3875  0022F0  C084  F072         	movff	___ftdiv@sign,___ftpack@sign
  3876  0022F4  ECBB  F012         	call	___ftpack	;wreg free
  3877  0022F8  C06E  F076         	movff	?___ftpack,?___ftdiv
  3878  0022FC  C06F  F077         	movff	?___ftpack+1,?___ftdiv+1
  3879  002300  C070  F078         	movff	?___ftpack+2,?___ftdiv+2
  3880  002304  D000               	goto	l964
  3881  002306                     l964:
  3882  002306  0012               	return		;funcret
  3883  002308                     __end_of___ftdiv:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           intcon	equ	0xFF2
  3890                           intcon2	equ	0xFF1
  3891                           indf0	equ	0xFEF
  3892                           postinc0	equ	0xFEE
  3893                           fsr0h	equ	0xFEA
  3894                           fsr0l	equ	0xFE9
  3895                           wreg	equ	0xFE8
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function _breakDouble *****************
  3899 ;; Defined at:
  3900 ;;		line 86 in file "SerComm.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  dubs            3   79[BANK0 ] float 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  temp2           2    4[BANK1 ] unsigned int 
  3905 ;;  temp1           2    2[BANK1 ] unsigned int 
  3906 ;;  tempDub         2    0[BANK1 ] unsigned int 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;		None               void
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3916 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;Total ram usage:        9 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:   10
  3923 ;; This function calls:
  3924 ;;		_SerTx
  3925 ;;		___ftmul
  3926 ;;		___fttol
  3927 ;;		___lwdiv
  3928 ;;		___lwmod
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text21
  3935  001EFA                     __ptext21:
  3936                           	opt stack 0
  3937  001EFA                     _breakDouble:
  3938                           	opt stack 20
  3939                           
  3940                           ;SerComm.c: 88: unsigned int temp1, temp2;
  3941                           ;SerComm.c: 89: unsigned int tempDub;
  3942                           ;SerComm.c: 91: tempDub = dubs * 100;
  3943                           
  3944                           ;incstack = 0
  3945  001EFA  0E00               	movlw	0
  3946  001EFC  0100               	movlb	0	; () banked
  3947  001EFE  6F88               	movwf	___ftmul@f2& (0+255),b
  3948  001F00  0EC8               	movlw	200
  3949  001F02  0100               	movlb	0	; () banked
  3950  001F04  6F89               	movwf	(___ftmul@f2+1)& (0+255),b
  3951  001F06  0E42               	movlw	66
  3952  001F08  0100               	movlb	0	; () banked
  3953  001F0A  6F8A               	movwf	(___ftmul@f2+2)& (0+255),b
  3954  001F0C  C0AF  F085         	movff	breakDouble@dubs,___ftmul@f1
  3955  001F10  C0B0  F086         	movff	breakDouble@dubs+1,___ftmul@f1+1
  3956  001F14  C0B1  F087         	movff	breakDouble@dubs+2,___ftmul@f1+2
  3957  001F18  EC35  F010         	call	___ftmul	;wreg free
  3958  001F1C  C085  F0A0         	movff	?___ftmul,___fttol@f1
  3959  001F20  C086  F0A1         	movff	?___ftmul+1,___fttol@f1+1
  3960  001F24  C087  F0A2         	movff	?___ftmul+2,___fttol@f1+2
  3961  001F28  EC22  F012         	call	___fttol	;wreg free
  3962  001F2C  C0A0  F100         	movff	?___fttol,breakDouble@tempDub
  3963  001F30  C0A1  F101         	movff	?___fttol+1,breakDouble@tempDub+1
  3964                           
  3965                           ;SerComm.c: 92: temp1 = tempDub / 10000;
  3966  001F34  C100  F06E         	movff	breakDouble@tempDub,___lwdiv@dividend
  3967  001F38  C101  F06F         	movff	breakDouble@tempDub+1,___lwdiv@dividend+1
  3968  001F3C  0E27               	movlw	39
  3969  001F3E  0100               	movlb	0	; () banked
  3970  001F40  6F71               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3971  001F42  0E10               	movlw	16
  3972  001F44  6F70               	movwf	___lwdiv@divisor& (0+255),b
  3973  001F46  EC59  F016         	call	___lwdiv	;wreg free
  3974  001F4A  C06E  F102         	movff	?___lwdiv,breakDouble@temp1
  3975  001F4E  C06F  F103         	movff	?___lwdiv+1,breakDouble@temp1+1
  3976                           
  3977                           ;SerComm.c: 93: temp2 = tempDub % 10000;
  3978  001F52  C100  F06E         	movff	breakDouble@tempDub,___lwmod@dividend
  3979  001F56  C101  F06F         	movff	breakDouble@tempDub+1,___lwmod@dividend+1
  3980  001F5A  0E27               	movlw	39
  3981  001F5C  0100               	movlb	0	; () banked
  3982  001F5E  6F71               	movwf	(___lwmod@divisor+1)& (0+255),b
  3983  001F60  0E10               	movlw	16
  3984  001F62  6F70               	movwf	___lwmod@divisor& (0+255),b
  3985  001F64  EC11  F017         	call	___lwmod	;wreg free
  3986  001F68  C06E  F104         	movff	?___lwmod,breakDouble@temp2
  3987  001F6C  C06F  F105         	movff	?___lwmod+1,breakDouble@temp2+1
  3988                           
  3989                           ;SerComm.c: 95: SerTx(temp1 + 0x30);
  3990  001F70  0101               	movlb	1	; () banked
  3991  001F72  5102               	movf	breakDouble@temp1& (0+255),w,b
  3992  001F74  0F30               	addlw	48
  3993  001F76  EC26  F01A         	call	_SerTx
  3994                           
  3995                           ;SerComm.c: 97: temp1 = temp2 / 1000;
  3996  001F7A  C104  F06E         	movff	breakDouble@temp2,___lwdiv@dividend
  3997  001F7E  C105  F06F         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  3998  001F82  0E03               	movlw	3
  3999  001F84  0100               	movlb	0	; () banked
  4000  001F86  6F71               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4001  001F88  0EE8               	movlw	232
  4002  001F8A  6F70               	movwf	___lwdiv@divisor& (0+255),b
  4003  001F8C  EC59  F016         	call	___lwdiv	;wreg free
  4004  001F90  C06E  F102         	movff	?___lwdiv,breakDouble@temp1
  4005  001F94  C06F  F103         	movff	?___lwdiv+1,breakDouble@temp1+1
  4006                           
  4007                           ;SerComm.c: 98: temp2 = temp2 % 1000;
  4008  001F98  C104  F06E         	movff	breakDouble@temp2,___lwmod@dividend
  4009  001F9C  C105  F06F         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  4010  001FA0  0E03               	movlw	3
  4011  001FA2  0100               	movlb	0	; () banked
  4012  001FA4  6F71               	movwf	(___lwmod@divisor+1)& (0+255),b
  4013  001FA6  0EE8               	movlw	232
  4014  001FA8  6F70               	movwf	___lwmod@divisor& (0+255),b
  4015  001FAA  EC11  F017         	call	___lwmod	;wreg free
  4016  001FAE  C06E  F104         	movff	?___lwmod,breakDouble@temp2
  4017  001FB2  C06F  F105         	movff	?___lwmod+1,breakDouble@temp2+1
  4018                           
  4019                           ;SerComm.c: 100: SerTx(temp1 + 0x30);
  4020  001FB6  0101               	movlb	1	; () banked
  4021  001FB8  5102               	movf	breakDouble@temp1& (0+255),w,b
  4022  001FBA  0F30               	addlw	48
  4023  001FBC  EC26  F01A         	call	_SerTx
  4024                           
  4025                           ;SerComm.c: 102: temp1 = temp2 / 100;
  4026  001FC0  C104  F06E         	movff	breakDouble@temp2,___lwdiv@dividend
  4027  001FC4  C105  F06F         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  4028  001FC8  0E00               	movlw	0
  4029  001FCA  0100               	movlb	0	; () banked
  4030  001FCC  6F71               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4031  001FCE  0E64               	movlw	100
  4032  001FD0  6F70               	movwf	___lwdiv@divisor& (0+255),b
  4033  001FD2  EC59  F016         	call	___lwdiv	;wreg free
  4034  001FD6  C06E  F102         	movff	?___lwdiv,breakDouble@temp1
  4035  001FDA  C06F  F103         	movff	?___lwdiv+1,breakDouble@temp1+1
  4036                           
  4037                           ;SerComm.c: 103: temp2 = temp2 % 100;
  4038  001FDE  C104  F06E         	movff	breakDouble@temp2,___lwmod@dividend
  4039  001FE2  C105  F06F         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  4040  001FE6  0E00               	movlw	0
  4041  001FE8  0100               	movlb	0	; () banked
  4042  001FEA  6F71               	movwf	(___lwmod@divisor+1)& (0+255),b
  4043  001FEC  0E64               	movlw	100
  4044  001FEE  6F70               	movwf	___lwmod@divisor& (0+255),b
  4045  001FF0  EC11  F017         	call	___lwmod	;wreg free
  4046  001FF4  C06E  F104         	movff	?___lwmod,breakDouble@temp2
  4047  001FF8  C06F  F105         	movff	?___lwmod+1,breakDouble@temp2+1
  4048                           
  4049                           ;SerComm.c: 105: SerTx(temp1 + 0x30);
  4050  001FFC  0101               	movlb	1	; () banked
  4051  001FFE  5102               	movf	breakDouble@temp1& (0+255),w,b
  4052  002000  0F30               	addlw	48
  4053  002002  EC26  F01A         	call	_SerTx
  4054                           
  4055                           ;SerComm.c: 106: SerTx('.');
  4056  002006  0E2E               	movlw	46
  4057  002008  EC26  F01A         	call	_SerTx
  4058                           
  4059                           ;SerComm.c: 108: temp1 = temp2 / 10;
  4060  00200C  C104  F06E         	movff	breakDouble@temp2,___lwdiv@dividend
  4061  002010  C105  F06F         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  4062  002014  0E00               	movlw	0
  4063  002016  0100               	movlb	0	; () banked
  4064  002018  6F71               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4065  00201A  0E0A               	movlw	10
  4066  00201C  6F70               	movwf	___lwdiv@divisor& (0+255),b
  4067  00201E  EC59  F016         	call	___lwdiv	;wreg free
  4068  002022  C06E  F102         	movff	?___lwdiv,breakDouble@temp1
  4069  002026  C06F  F103         	movff	?___lwdiv+1,breakDouble@temp1+1
  4070                           
  4071                           ;SerComm.c: 109: temp2 = temp2 % 10;
  4072  00202A  C104  F06E         	movff	breakDouble@temp2,___lwmod@dividend
  4073  00202E  C105  F06F         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  4074  002032  0E00               	movlw	0
  4075  002034  0100               	movlb	0	; () banked
  4076  002036  6F71               	movwf	(___lwmod@divisor+1)& (0+255),b
  4077  002038  0E0A               	movlw	10
  4078  00203A  6F70               	movwf	___lwmod@divisor& (0+255),b
  4079  00203C  EC11  F017         	call	___lwmod	;wreg free
  4080  002040  C06E  F104         	movff	?___lwmod,breakDouble@temp2
  4081  002044  C06F  F105         	movff	?___lwmod+1,breakDouble@temp2+1
  4082                           
  4083                           ;SerComm.c: 111: SerTx(temp1 + 0x30);
  4084  002048  0101               	movlb	1	; () banked
  4085  00204A  5102               	movf	breakDouble@temp1& (0+255),w,b
  4086  00204C  0F30               	addlw	48
  4087  00204E  EC26  F01A         	call	_SerTx
  4088                           
  4089                           ;SerComm.c: 112: SerTx(temp2 + 0x30);
  4090  002052  0101               	movlb	1	; () banked
  4091  002054  5104               	movf	breakDouble@temp2& (0+255),w,b
  4092  002056  0F30               	addlw	48
  4093  002058  EC26  F01A         	call	_SerTx
  4094                           
  4095                           ;SerComm.c: 113: SerTx(0x0A);
  4096  00205C  0E0A               	movlw	10
  4097  00205E  EC26  F01A         	call	_SerTx
  4098                           
  4099                           ;SerComm.c: 114: SerTx(0x0D);
  4100  002062  0E0D               	movlw	13
  4101  002064  EC26  F01A         	call	_SerTx
  4102  002068  0012               	return		;funcret
  4103  00206A                     __end_of_breakDouble:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           intcon	equ	0xFF2
  4110                           intcon2	equ	0xFF1
  4111                           indf0	equ	0xFEF
  4112                           postinc0	equ	0xFEE
  4113                           fsr0h	equ	0xFEA
  4114                           fsr0l	equ	0xFE9
  4115                           wreg	equ	0xFE8
  4116                           status	equ	0xFD8
  4117                           
  4118 ;; *************** function ___lwmod *****************
  4119 ;; Defined at:
  4120 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  dividend        2   14[BANK0 ] unsigned int 
  4123 ;;  divisor         2   16[BANK0 ] unsigned int 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  counter         1   18[BANK0 ] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  2   14[BANK0 ] unsigned int 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:        5 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    8
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_breakDouble
  4146 ;;		_LCDBreakDouble
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text22
  4151  002E22                     __ptext22:
  4152                           	opt stack 0
  4153  002E22                     ___lwmod:
  4154                           	opt stack 21
  4155                           
  4156                           ;incstack = 0
  4157  002E22  0100               	movlb	0	; () banked
  4158  002E24  5170               	movf	___lwmod@divisor& (0+255),w,b
  4159  002E26  0100               	movlb	0	; () banked
  4160  002E28  1171               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4161  002E2A  B4D8               	btfsc	status,2,c
  4162  002E2C  D02B               	goto	l1122
  4163                           
  4164                           ; BSR set to: 0
  4165  002E2E  0E01               	movlw	1
  4166  002E30  0100               	movlb	0	; () banked
  4167  002E32  6F72               	movwf	___lwmod@counter& (0+255),b
  4168  002E34  D007               	goto	l4341
  4169  002E36                     l4339:
  4170                           
  4171                           ; BSR set to: 0
  4172  002E36  0100               	movlb	0	; () banked
  4173  002E38  90D8               	bcf	status,0,c
  4174  002E3A  3770               	rlcf	___lwmod@divisor& (0+255),f,b
  4175  002E3C  3771               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4176  002E3E  0100               	movlb	0	; () banked
  4177  002E40  2B72               	incf	___lwmod@counter& (0+255),f,b
  4178  002E42  D000               	goto	l4341
  4179  002E44                     l4341:
  4180                           
  4181                           ; BSR set to: 0
  4182  002E44  0100               	movlb	0	; () banked
  4183  002E46  BF71               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  4184  002E48  D002               	goto	l4343
  4185  002E4A  D7F5               	goto	l4339
  4186                           
  4187                           ; BSR set to: 0
  4188  002E4C  D000               	goto	l4343
  4189  002E4E                     l4343:
  4190                           
  4191                           ; BSR set to: 0
  4192  002E4E  0100               	movlb	0	; () banked
  4193  002E50  5170               	movf	___lwmod@divisor& (0+255),w,b
  4194  002E52  0100               	movlb	0	; () banked
  4195  002E54  5D6E               	subwf	___lwmod@dividend& (0+255),w,b
  4196  002E56  0100               	movlb	0	; () banked
  4197  002E58  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4198  002E5A  0100               	movlb	0	; () banked
  4199  002E5C  596F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4200  002E5E  A0D8               	btfss	status,0,c
  4201  002E60  D009               	goto	l4347
  4202                           
  4203                           ; BSR set to: 0
  4204  002E62  0100               	movlb	0	; () banked
  4205  002E64  5170               	movf	___lwmod@divisor& (0+255),w,b
  4206  002E66  0100               	movlb	0	; () banked
  4207  002E68  5F6E               	subwf	___lwmod@dividend& (0+255),f,b
  4208  002E6A  0100               	movlb	0	; () banked
  4209  002E6C  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4210  002E6E  0100               	movlb	0	; () banked
  4211  002E70  5B6F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4212  002E72  D000               	goto	l4347
  4213  002E74                     l4347:
  4214                           
  4215                           ; BSR set to: 0
  4216  002E74  0100               	movlb	0	; () banked
  4217  002E76  90D8               	bcf	status,0,c
  4218  002E78  3371               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4219  002E7A  3370               	rrcf	___lwmod@divisor& (0+255),f,b
  4220                           
  4221                           ; BSR set to: 0
  4222  002E7C  0100               	movlb	0	; () banked
  4223  002E7E  2F72               	decfsz	___lwmod@counter& (0+255),f,b
  4224  002E80  D7E6               	goto	l4343
  4225  002E82  D000               	goto	l1122
  4226  002E84                     l1122:
  4227                           
  4228                           ; BSR set to: 0
  4229  002E84  C06E  F06E         	movff	___lwmod@dividend,?___lwmod
  4230  002E88  C06F  F06F         	movff	___lwmod@dividend+1,?___lwmod+1
  4231                           
  4232                           ; BSR set to: 0
  4233  002E8C  0012               	return		;funcret
  4234  002E8E                     __end_of___lwmod:
  4235                           	opt stack 0
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           intcon	equ	0xFF2
  4241                           intcon2	equ	0xFF1
  4242                           indf0	equ	0xFEF
  4243                           postinc0	equ	0xFEE
  4244                           fsr0h	equ	0xFEA
  4245                           fsr0l	equ	0xFE9
  4246                           wreg	equ	0xFE8
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function ___lwdiv *****************
  4250 ;; Defined at:
  4251 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  dividend        2   14[BANK0 ] unsigned int 
  4254 ;;  divisor         2   16[BANK0 ] unsigned int 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  quotient        2   19[BANK0 ] unsigned int 
  4257 ;;  counter         1   18[BANK0 ] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2   14[BANK0 ] unsigned int 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;Total ram usage:        7 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    8
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_breakDouble
  4278 ;;		_LCDBreakDouble
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text23
  4283  002CB2                     __ptext23:
  4284                           	opt stack 0
  4285  002CB2                     ___lwdiv:
  4286                           	opt stack 21
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;incstack = 0
  4290  002CB2  0E00               	movlw	0
  4291  002CB4  0100               	movlb	0	; () banked
  4292  002CB6  6F74               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4293  002CB8  0E00               	movlw	0
  4294  002CBA  6F73               	movwf	___lwdiv@quotient& (0+255),b
  4295                           
  4296                           ; BSR set to: 0
  4297  002CBC  0100               	movlb	0	; () banked
  4298  002CBE  5170               	movf	___lwdiv@divisor& (0+255),w,b
  4299  002CC0  0100               	movlb	0	; () banked
  4300  002CC2  1171               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4301  002CC4  B4D8               	btfsc	status,2,c
  4302  002CC6  D031               	goto	l1112
  4303                           
  4304                           ; BSR set to: 0
  4305  002CC8  0E01               	movlw	1
  4306  002CCA  0100               	movlb	0	; () banked
  4307  002CCC  6F72               	movwf	___lwdiv@counter& (0+255),b
  4308  002CCE  D007               	goto	l4321
  4309  002CD0                     l4319:
  4310                           
  4311                           ; BSR set to: 0
  4312  002CD0  0100               	movlb	0	; () banked
  4313  002CD2  90D8               	bcf	status,0,c
  4314  002CD4  3770               	rlcf	___lwdiv@divisor& (0+255),f,b
  4315  002CD6  3771               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4316  002CD8  0100               	movlb	0	; () banked
  4317  002CDA  2B72               	incf	___lwdiv@counter& (0+255),f,b
  4318  002CDC  D000               	goto	l4321
  4319  002CDE                     l4321:
  4320                           
  4321                           ; BSR set to: 0
  4322  002CDE  0100               	movlb	0	; () banked
  4323  002CE0  BF71               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  4324  002CE2  D002               	goto	l4323
  4325  002CE4  D7F5               	goto	l4319
  4326                           
  4327                           ; BSR set to: 0
  4328  002CE6  D000               	goto	l4323
  4329  002CE8                     l4323:
  4330                           
  4331                           ; BSR set to: 0
  4332  002CE8  0100               	movlb	0	; () banked
  4333  002CEA  90D8               	bcf	status,0,c
  4334  002CEC  3773               	rlcf	___lwdiv@quotient& (0+255),f,b
  4335  002CEE  3774               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4336                           
  4337                           ; BSR set to: 0
  4338  002CF0  0100               	movlb	0	; () banked
  4339  002CF2  5170               	movf	___lwdiv@divisor& (0+255),w,b
  4340  002CF4  0100               	movlb	0	; () banked
  4341  002CF6  5D6E               	subwf	___lwdiv@dividend& (0+255),w,b
  4342  002CF8  0100               	movlb	0	; () banked
  4343  002CFA  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4344  002CFC  0100               	movlb	0	; () banked
  4345  002CFE  596F               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4346  002D00  A0D8               	btfss	status,0,c
  4347  002D02  D00B               	goto	l4331
  4348                           
  4349                           ; BSR set to: 0
  4350  002D04  0100               	movlb	0	; () banked
  4351  002D06  5170               	movf	___lwdiv@divisor& (0+255),w,b
  4352  002D08  0100               	movlb	0	; () banked
  4353  002D0A  5F6E               	subwf	___lwdiv@dividend& (0+255),f,b
  4354  002D0C  0100               	movlb	0	; () banked
  4355  002D0E  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4356  002D10  0100               	movlb	0	; () banked
  4357  002D12  5B6F               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4358                           
  4359                           ; BSR set to: 0
  4360  002D14  0100               	movlb	0	; () banked
  4361  002D16  8173               	bsf	___lwdiv@quotient& (0+255),0,b
  4362  002D18  D000               	goto	l4331
  4363  002D1A                     l4331:
  4364                           
  4365                           ; BSR set to: 0
  4366  002D1A  0100               	movlb	0	; () banked
  4367  002D1C  90D8               	bcf	status,0,c
  4368  002D1E  3371               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4369  002D20  3370               	rrcf	___lwdiv@divisor& (0+255),f,b
  4370                           
  4371                           ; BSR set to: 0
  4372  002D22  0100               	movlb	0	; () banked
  4373  002D24  2F72               	decfsz	___lwdiv@counter& (0+255),f,b
  4374  002D26  D7E0               	goto	l4323
  4375  002D28  D000               	goto	l1112
  4376  002D2A                     l1112:
  4377                           
  4378                           ; BSR set to: 0
  4379  002D2A  C073  F06E         	movff	___lwdiv@quotient,?___lwdiv
  4380  002D2E  C074  F06F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4381                           
  4382                           ; BSR set to: 0
  4383  002D32  0012               	return		;funcret
  4384  002D34                     __end_of___lwdiv:
  4385                           	opt stack 0
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           intcon	equ	0xFF2
  4391                           intcon2	equ	0xFF1
  4392                           indf0	equ	0xFEF
  4393                           postinc0	equ	0xFEE
  4394                           fsr0h	equ	0xFEA
  4395                           fsr0l	equ	0xFE9
  4396                           wreg	equ	0xFE8
  4397                           status	equ	0xFD8
  4398                           
  4399 ;; *************** function ___fttol *****************
  4400 ;; Defined at:
  4401 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  f1              3   64[BANK0 ] float 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  lval            4   74[BANK0 ] unsigned long 
  4406 ;;  exp1            1   78[BANK0 ] unsigned char 
  4407 ;;  sign1           1   73[BANK0 ] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  4   64[BANK0 ] long 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;Total ram usage:       15 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    8
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_calculatePID
  4428 ;;		_breakDouble
  4429 ;;		_LCDBreakDouble
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text24
  4434  002444                     __ptext24:
  4435                           	opt stack 0
  4436  002444                     ___fttol:
  4437                           	opt stack 21
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;incstack = 0
  4441  002444  C0A2  F0A4         	movff	___fttol@f1+2,??___fttol
  4442  002448  0100               	movlb	0	; () banked
  4443  00244A  6BA5               	clrf	(??___fttol+1)& (0+255),b
  4444  00244C  6BA6               	clrf	(??___fttol+2)& (0+255),b
  4445  00244E  0100               	movlb	0	; () banked
  4446  002450  35A1               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4447  002452  0100               	movlb	0	; () banked
  4448  002454  37A4               	rlcf	??___fttol& (0+255),f,b
  4449  002456  E301               	bnc	u4761
  4450  002458  81A5               	bsf	(??___fttol+1)& (0+255),0,b
  4451  00245A                     u4761:
  4452  00245A  0100               	movlb	0	; () banked
  4453  00245C  51A4               	movf	??___fttol& (0+255),w,b
  4454  00245E  0100               	movlb	0	; () banked
  4455  002460  6FAE               	movwf	___fttol@exp1& (0+255),b
  4456  002462  0100               	movlb	0	; () banked
  4457  002464  51AE               	movf	___fttol@exp1& (0+255),w,b
  4458  002466  A4D8               	btfss	status,2,c
  4459  002468  D002               	goto	l4273
  4460  00246A  D051               	goto	l4297
  4461                           
  4462                           ; BSR set to: 0
  4463                           
  4464                           ; BSR set to: 0
  4465  00246C  D083               	goto	l1000
  4466  00246E                     l4273:
  4467                           
  4468                           ; BSR set to: 0
  4469  00246E  0E17               	movlw	23
  4470  002470  0100               	movlb	0	; () banked
  4471  002472  6FA4               	movwf	??___fttol& (0+255),b
  4472  002474  C0A0  F0A5         	movff	___fttol@f1,??___fttol+1
  4473  002478  C0A1  F0A6         	movff	___fttol@f1+1,??___fttol+2
  4474  00247C  C0A2  F0A7         	movff	___fttol@f1+2,??___fttol+3
  4475  002480  0100               	movlb	0	; () banked
  4476  002482  29A4               	incf	??___fttol& (0+255),w,b
  4477  002484  0100               	movlb	0	; () banked
  4478  002486  6FA8               	movwf	(??___fttol+4)& (0+255),b
  4479  002488  D005               	goto	u4780
  4480  00248A                     u4785:
  4481  00248A  0100               	movlb	0	; () banked
  4482  00248C  90D8               	bcf	status,0,c
  4483  00248E  33A7               	rrcf	(??___fttol+3)& (0+255),f,b
  4484  002490  33A6               	rrcf	(??___fttol+2)& (0+255),f,b
  4485  002492  33A5               	rrcf	(??___fttol+1)& (0+255),f,b
  4486  002494                     u4780:
  4487  002494  0100               	movlb	0	; () banked
  4488  002496  2FA8               	decfsz	(??___fttol+4)& (0+255),f,b
  4489  002498  D7F8               	goto	u4785
  4490  00249A  0100               	movlb	0	; () banked
  4491  00249C  51A5               	movf	(??___fttol+1)& (0+255),w,b
  4492  00249E  0100               	movlb	0	; () banked
  4493  0024A0  6FA9               	movwf	___fttol@sign1& (0+255),b
  4494                           
  4495                           ; BSR set to: 0
  4496  0024A2  0100               	movlb	0	; () banked
  4497  0024A4  8FA1               	bsf	(___fttol@f1+1)& (0+255),7,b
  4498                           
  4499                           ; BSR set to: 0
  4500  0024A6  0EFF               	movlw	255
  4501  0024A8  0100               	movlb	0	; () banked
  4502  0024AA  17A0               	andwf	___fttol@f1& (0+255),f,b
  4503  0024AC  0EFF               	movlw	255
  4504  0024AE  0100               	movlb	0	; () banked
  4505  0024B0  17A1               	andwf	(___fttol@f1+1)& (0+255),f,b
  4506  0024B2  0E00               	movlw	0
  4507  0024B4  0100               	movlb	0	; () banked
  4508  0024B6  17A2               	andwf	(___fttol@f1+2)& (0+255),f,b
  4509                           
  4510                           ; BSR set to: 0
  4511  0024B8  0100               	movlb	0	; () banked
  4512  0024BA  51A0               	movf	___fttol@f1& (0+255),w,b
  4513  0024BC  0100               	movlb	0	; () banked
  4514  0024BE  6FAA               	movwf	___fttol@lval& (0+255),b
  4515  0024C0  0100               	movlb	0	; () banked
  4516  0024C2  51A1               	movf	(___fttol@f1+1)& (0+255),w,b
  4517  0024C4  0100               	movlb	0	; () banked
  4518  0024C6  6FAB               	movwf	(___fttol@lval+1)& (0+255),b
  4519  0024C8  0100               	movlb	0	; () banked
  4520  0024CA  51A2               	movf	(___fttol@f1+2)& (0+255),w,b
  4521  0024CC  0100               	movlb	0	; () banked
  4522  0024CE  6FAC               	movwf	(___fttol@lval+2)& (0+255),b
  4523  0024D0  0100               	movlb	0	; () banked
  4524  0024D2  6BAD               	clrf	(___fttol@lval+3)& (0+255),b
  4525                           
  4526                           ; BSR set to: 0
  4527  0024D4  0E8E               	movlw	142
  4528  0024D6  0100               	movlb	0	; () banked
  4529  0024D8  5FAE               	subwf	___fttol@exp1& (0+255),f,b
  4530                           
  4531                           ; BSR set to: 0
  4532  0024DA  0100               	movlb	0	; () banked
  4533  0024DC  AFAE               	btfss	___fttol@exp1& (0+255),7,b
  4534  0024DE  D013               	goto	l4295
  4535                           
  4536                           ; BSR set to: 0
  4537  0024E0  0100               	movlb	0	; () banked
  4538  0024E2  51AE               	movf	___fttol@exp1& (0+255),w,b
  4539  0024E4  0A80               	xorlw	128
  4540  0024E6  0F8F               	addlw	143
  4541  0024E8  B0D8               	btfsc	status,0,c
  4542  0024EA  D003               	goto	l4291
  4543  0024EC  D010               	goto	l4297
  4544                           
  4545                           ; BSR set to: 0
  4546                           
  4547                           ; BSR set to: 0
  4548  0024EE  D042               	goto	l1000
  4549                           
  4550                           ; BSR set to: 0
  4551  0024F0  D000               	goto	l4291
  4552  0024F2                     l4291:
  4553                           
  4554                           ; BSR set to: 0
  4555  0024F2  0100               	movlb	0	; () banked
  4556  0024F4  90D8               	bcf	status,0,c
  4557  0024F6  33AD               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4558  0024F8  33AC               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4559  0024FA  33AB               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4560  0024FC  33AA               	rrcf	___fttol@lval& (0+255),f,b
  4561                           
  4562                           ; BSR set to: 0
  4563  0024FE  0100               	movlb	0	; () banked
  4564  002500  3FAE               	incfsz	___fttol@exp1& (0+255),f,b
  4565  002502  D7F7               	goto	l4291
  4566                           
  4567                           ; BSR set to: 0
  4568  002504  D01F               	goto	l4305
  4569  002506                     l4295:
  4570                           
  4571                           ; BSR set to: 0
  4572  002506  0E17               	movlw	23
  4573  002508  0100               	movlb	0	; () banked
  4574  00250A  65AE               	cpfsgt	___fttol@exp1& (0+255),b
  4575  00250C  D014               	goto	l4303
  4576  00250E                     l4297:
  4577                           
  4578                           ; BSR set to: 0
  4579  00250E  0E00               	movlw	0
  4580  002510  0100               	movlb	0	; () banked
  4581  002512  6FA0               	movwf	?___fttol& (0+255),b
  4582  002514  0E00               	movlw	0
  4583  002516  6FA1               	movwf	(?___fttol+1)& (0+255),b
  4584  002518  0E00               	movlw	0
  4585  00251A  6FA2               	movwf	(?___fttol+2)& (0+255),b
  4586  00251C  0E00               	movlw	0
  4587  00251E  6FA3               	movwf	(?___fttol+3)& (0+255),b
  4588                           
  4589                           ; BSR set to: 0
  4590  002520  D029               	goto	l1000
  4591                           
  4592                           ; BSR set to: 0
  4593  002522  D009               	goto	l4303
  4594  002524                     l4301:
  4595                           
  4596                           ; BSR set to: 0
  4597  002524  0100               	movlb	0	; () banked
  4598  002526  90D8               	bcf	status,0,c
  4599  002528  37AA               	rlcf	___fttol@lval& (0+255),f,b
  4600  00252A  37AB               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4601  00252C  37AC               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4602  00252E  37AD               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4603  002530  0100               	movlb	0	; () banked
  4604  002532  07AE               	decf	___fttol@exp1& (0+255),f,b
  4605  002534  D000               	goto	l4303
  4606  002536                     l4303:
  4607                           
  4608                           ; BSR set to: 0
  4609  002536  0100               	movlb	0	; () banked
  4610  002538  51AE               	movf	___fttol@exp1& (0+255),w,b
  4611  00253A  0100               	movlb	0	; () banked
  4612  00253C  B4D8               	btfsc	status,2,c
  4613  00253E  D002               	goto	l4305
  4614  002540  D7F1               	goto	l4301
  4615                           
  4616                           ; BSR set to: 0
  4617  002542  D000               	goto	l4305
  4618  002544                     l4305:
  4619                           
  4620                           ; BSR set to: 0
  4621  002544  0100               	movlb	0	; () banked
  4622  002546  51A9               	movf	___fttol@sign1& (0+255),w,b
  4623  002548  0100               	movlb	0	; () banked
  4624  00254A  B4D8               	btfsc	status,2,c
  4625  00254C  D00A               	goto	l4309
  4626                           
  4627                           ; BSR set to: 0
  4628  00254E  0100               	movlb	0	; () banked
  4629  002550  1FAD               	comf	(___fttol@lval+3)& (0+255),f,b
  4630  002552  1FAC               	comf	(___fttol@lval+2)& (0+255),f,b
  4631  002554  1FAB               	comf	(___fttol@lval+1)& (0+255),f,b
  4632  002556  6DAA               	negf	___fttol@lval& (0+255),b
  4633  002558  0E00               	movlw	0
  4634  00255A  23AB               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4635  00255C  23AC               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4636  00255E  23AD               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4637  002560  D000               	goto	l4309
  4638  002562                     l4309:
  4639                           
  4640                           ; BSR set to: 0
  4641  002562  C0AA  F0A0         	movff	___fttol@lval,?___fttol
  4642  002566  C0AB  F0A1         	movff	___fttol@lval+1,?___fttol+1
  4643  00256A  C0AC  F0A2         	movff	___fttol@lval+2,?___fttol+2
  4644  00256E  C0AD  F0A3         	movff	___fttol@lval+3,?___fttol+3
  4645  002572  D000               	goto	l1000
  4646  002574                     l1000:
  4647                           
  4648                           ; BSR set to: 0
  4649  002574  0012               	return		;funcret
  4650  002576                     __end_of___fttol:
  4651                           	opt stack 0
  4652                           tblptru	equ	0xFF8
  4653                           tblptrh	equ	0xFF7
  4654                           tblptrl	equ	0xFF6
  4655                           tablat	equ	0xFF5
  4656                           intcon	equ	0xFF2
  4657                           intcon2	equ	0xFF1
  4658                           indf0	equ	0xFEF
  4659                           postinc0	equ	0xFEE
  4660                           fsr0h	equ	0xFEA
  4661                           fsr0l	equ	0xFE9
  4662                           wreg	equ	0xFE8
  4663                           status	equ	0xFD8
  4664                           
  4665 ;; *************** function _SerTx *****************
  4666 ;; Defined at:
  4667 ;;		line 41 in file "SerComm.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  c               1    wreg     unsigned char 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  c               1   14[BANK0 ] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;		None               void
  4674 ;; Registers used:
  4675 ;;		wreg
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:        1 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    8
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_SerTxStr
  4692 ;;		_breakDouble
  4693 ;;		_SerNL
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text25
  4698  00344C                     __ptext25:
  4699                           	opt stack 0
  4700  00344C                     _SerTx:
  4701                           	opt stack 19
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;incstack = 0
  4705                           ;SerTx@c stored from wreg
  4706  00344C  0100               	movlb	0	; () banked
  4707  00344E  6F6E               	movwf	SerTx@c& (0+255),b
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;SerComm.c: 43: TXREG1 = c;
  4711  003450  C06E  FFAD         	movff	SerTx@c,4013	;volatile
  4712                           
  4713                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  4714  003454  D000               	goto	l308
  4715  003456                     l308:
  4716  003456  A89E               	btfss	3998,4,c	;volatile
  4717  003458  D7FE               	goto	l308
  4718  00345A  0012               	return		;funcret
  4719  00345C                     __end_of_SerTx:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           intcon	equ	0xFF2
  4726                           intcon2	equ	0xFF1
  4727                           indf0	equ	0xFEF
  4728                           postinc0	equ	0xFEE
  4729                           fsr0h	equ	0xFEA
  4730                           fsr0l	equ	0xFE9
  4731                           wreg	equ	0xFE8
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _ReadRTDpos *****************
  4735 ;; Defined at:
  4736 ;;		line 35 in file "ResolverToDigital.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  FullPosition    2   22[BANK0 ] unsigned int 
  4741 ;;  helloworld      2    0        unsigned int 
  4742 ;;  x               1   24[BANK0 ] unsigned char 
  4743 ;;  LowPosition     1   21[BANK0 ] unsigned char 
  4744 ;;  HighPosition    1   20[BANK0 ] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2   15[BANK0 ] unsigned int 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;Total ram usage:       10 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    9
  4761 ;; This function calls:
  4762 ;;		_Delay10TCYx
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text26
  4769  002DB0                     __ptext26:
  4770                           	opt stack 0
  4771  002DB0                     _ReadRTDpos:
  4772                           	opt stack 21
  4773                           
  4774                           ;ResolverToDigital.c: 37: unsigned char x;
  4775                           ;ResolverToDigital.c: 38: unsigned int FullPosition, helloworld;
  4776                           ;ResolverToDigital.c: 39: unsigned char HighPosition, LowPosition;
  4777                           ;ResolverToDigital.c: 41: PORTEbits.RE1 = 1;
  4778                           
  4779                           ;incstack = 0
  4780  002DB0  8284               	bsf	3972,1,c	;volatile
  4781                           
  4782                           ;ResolverToDigital.c: 42: PORTEbits.RE0 = 0;
  4783  002DB2  9084               	bcf	3972,0,c	;volatile
  4784                           
  4785                           ;ResolverToDigital.c: 43: for(x = 0; x < 8; x++)
  4786  002DB4  0E00               	movlw	0
  4787  002DB6  0100               	movlb	0	; () banked
  4788  002DB8  6F78               	movwf	ReadRTDpos@x& (0+255),b
  4789  002DBA  D004               	goto	l3845
  4790                           
  4791                           ; BSR set to: 0
  4792                           
  4793                           ; BSR set to: 0
  4794  002DBC  D007               	goto	l363
  4795  002DBE                     l362:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;ResolverToDigital.c: 44: __nop();
  4799  002DBE  F000               	nop	
  4800  002DC0  0100               	movlb	0	; () banked
  4801  002DC2  2B78               	incf	ReadRTDpos@x& (0+255),f,b
  4802  002DC4                     l3845:
  4803                           
  4804                           ; BSR set to: 0
  4805  002DC4  0E07               	movlw	7
  4806  002DC6  0100               	movlb	0	; () banked
  4807  002DC8  6578               	cpfsgt	ReadRTDpos@x& (0+255),b
  4808  002DCA  D7F9               	goto	l362
  4809  002DCC                     l363:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;ResolverToDigital.c: 45: PORTEbits.RE2 = 1;
  4813  002DCC  8484               	bsf	3972,2,c	;volatile
  4814                           
  4815                           ;ResolverToDigital.c: 46: PORTEbits.RE2 = 0;
  4816  002DCE  9484               	bcf	3972,2,c	;volatile
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;ResolverToDigital.c: 47: Delay10TCYx(1);
  4820  002DD0  0E01               	movlw	1
  4821  002DD2  EC0A  F01A         	call	_Delay10TCYx
  4822                           
  4823                           ;ResolverToDigital.c: 48: HighPosition = PORTH;
  4824  002DD6  CF87 F074          	movff	3975,ReadRTDpos@HighPosition	;volatile
  4825                           
  4826                           ;ResolverToDigital.c: 49: LowPosition = PORTD;
  4827  002DDA  CF83 F075          	movff	3971,ReadRTDpos@LowPosition	;volatile
  4828                           
  4829                           ;ResolverToDigital.c: 50: PORTEbits.RE2 = 1;
  4830  002DDE  8484               	bsf	3972,2,c	;volatile
  4831                           
  4832                           ;ResolverToDigital.c: 51: PORTEbits.RE0 = 1;
  4833  002DE0  8084               	bsf	3972,0,c	;volatile
  4834                           
  4835                           ;ResolverToDigital.c: 52: FullPosition = LowPosition;
  4836  002DE2  C075  F076         	movff	ReadRTDpos@LowPosition,ReadRTDpos@FullPosition
  4837  002DE6  0100               	movlb	0	; () banked
  4838  002DE8  6B77               	clrf	(ReadRTDpos@FullPosition+1)& (0+255),b
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;ResolverToDigital.c: 53: FullPosition = FullPosition | ((HighPosition & 0x0F) << 8);
  4842  002DEA  C074  F071         	movff	ReadRTDpos@HighPosition,??_ReadRTDpos
  4843  002DEE  0E0F               	movlw	15
  4844  002DF0  0100               	movlb	0	; () banked
  4845  002DF2  1771               	andwf	??_ReadRTDpos& (0+255),f,b
  4846  002DF4  0100               	movlb	0	; () banked
  4847  002DF6  5171               	movf	??_ReadRTDpos& (0+255),w,b
  4848  002DF8  0100               	movlb	0	; () banked
  4849  002DFA  6F73               	movwf	(??_ReadRTDpos+2)& (0+255),b
  4850  002DFC  6B72               	clrf	(??_ReadRTDpos+1)& (0+255),b
  4851  002DFE  0100               	movlb	0	; () banked
  4852  002E00  5176               	movf	ReadRTDpos@FullPosition& (0+255),w,b
  4853  002E02  0100               	movlb	0	; () banked
  4854  002E04  1172               	iorwf	(??_ReadRTDpos+1)& (0+255),w,b
  4855  002E06  0100               	movlb	0	; () banked
  4856  002E08  6F76               	movwf	ReadRTDpos@FullPosition& (0+255),b
  4857  002E0A  0100               	movlb	0	; () banked
  4858  002E0C  5177               	movf	(ReadRTDpos@FullPosition+1)& (0+255),w,b
  4859  002E0E  0100               	movlb	0	; () banked
  4860  002E10  1173               	iorwf	(??_ReadRTDpos+2)& (0+255),w,b
  4861  002E12  0100               	movlb	0	; () banked
  4862  002E14  6F77               	movwf	(ReadRTDpos@FullPosition+1)& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;ResolverToDigital.c: 54: return FullPosition;
  4866  002E16  C076  F06F         	movff	ReadRTDpos@FullPosition,?_ReadRTDpos
  4867  002E1A  C077  F070         	movff	ReadRTDpos@FullPosition+1,?_ReadRTDpos+1
  4868  002E1E  D000               	goto	l364
  4869  002E20                     l364:
  4870                           
  4871                           ; BSR set to: 0
  4872  002E20  0012               	return		;funcret
  4873  002E22                     __end_of_ReadRTDpos:
  4874                           	opt stack 0
  4875                           tblptru	equ	0xFF8
  4876                           tblptrh	equ	0xFF7
  4877                           tblptrl	equ	0xFF6
  4878                           tablat	equ	0xFF5
  4879                           intcon	equ	0xFF2
  4880                           intcon2	equ	0xFF1
  4881                           indf0	equ	0xFEF
  4882                           postinc0	equ	0xFEE
  4883                           fsr0h	equ	0xFEA
  4884                           fsr0l	equ	0xFE9
  4885                           wreg	equ	0xFE8
  4886                           status	equ	0xFD8
  4887                           
  4888 ;; *************** function _Delay10TCYx *****************
  4889 ;; Defined at:
  4890 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  unit            1    wreg     unsigned char 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  unit            1   14[BANK0 ] unsigned char 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;		None               void
  4897 ;; Registers used:
  4898 ;;		wreg
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;Total ram usage:        1 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    8
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_lcdCommand
  4915 ;;		_RTDInit
  4916 ;;		_ReadRTDpos
  4917 ;;		_lcdChar
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text27
  4922  003414                     __ptext27:
  4923                           	opt stack 0
  4924  003414                     _Delay10TCYx:
  4925                           	opt stack 19
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;incstack = 0
  4929                           ;Delay10TCYx@unit stored from wreg
  4930  003414  0100               	movlb	0	; () banked
  4931  003416  6F6E               	movwf	Delay10TCYx@unit& (0+255),b
  4932  003418                     
  4933                           ; BSR set to: 0
  4934  003418  0E03               	movlw	3
  4935  00341A                     u4987:
  4936  00341A  2EE8               	decfsz	wreg,f,c
  4937  00341C  D7FE               	goto	u4987
  4938  00341E  F000               	nop	
  4939  003420  0100               	movlb	0	; () banked
  4940  003422  2F6E               	decfsz	Delay10TCYx@unit& (0+255),f,b
  4941  003424  D7F9               	goto	l2715
  4942  003426  D000               	goto	l788
  4943  003428                     l788:
  4944                           
  4945                           ; BSR set to: 0
  4946  003428  0012               	return		;funcret
  4947  00342A                     __end_of_Delay10TCYx:
  4948                           	opt stack 0
  4949                           tblptru	equ	0xFF8
  4950                           tblptrh	equ	0xFF7
  4951                           tblptrl	equ	0xFF6
  4952                           tablat	equ	0xFF5
  4953                           intcon	equ	0xFF2
  4954                           intcon2	equ	0xFF1
  4955                           indf0	equ	0xFEF
  4956                           postinc0	equ	0xFEE
  4957                           fsr0h	equ	0xFEA
  4958                           fsr0l	equ	0xFE9
  4959                           wreg	equ	0xFE8
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _RTD2Angle *****************
  4963 ;; Defined at:
  4964 ;;		line 88 in file "ResolverToDigital.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  RTDAngle        2   52[BANK0 ] unsigned int 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  3   52[BANK0 ] unsigned int 
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4978 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;Total ram usage:        3 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:   10
  4985 ;; This function calls:
  4986 ;;		___ftmul
  4987 ;;		___lwtoft
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text28
  4994  0031D2                     __ptext28:
  4995                           	opt stack 0
  4996  0031D2                     _RTD2Angle:
  4997                           	opt stack 20
  4998                           
  4999                           ;ResolverToDigital.c: 90: return 0.087890625 * RTDAngle;
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;incstack = 0
  5003  0031D2  C094  F076         	movff	RTD2Angle@RTDAngle,___lwtoft@c
  5004  0031D6  C095  F077         	movff	RTD2Angle@RTDAngle+1,___lwtoft@c+1
  5005  0031DA  EC38  F019         	call	___lwtoft	;wreg free
  5006  0031DE  C076  F085         	movff	?___lwtoft,___ftmul@f1
  5007  0031E2  C077  F086         	movff	?___lwtoft+1,___ftmul@f1+1
  5008  0031E6  C078  F087         	movff	?___lwtoft+2,___ftmul@f1+2
  5009  0031EA  0E00               	movlw	0
  5010  0031EC  0100               	movlb	0	; () banked
  5011  0031EE  6F88               	movwf	___ftmul@f2& (0+255),b
  5012  0031F0  0EB4               	movlw	180
  5013  0031F2  0100               	movlb	0	; () banked
  5014  0031F4  6F89               	movwf	(___ftmul@f2+1)& (0+255),b
  5015  0031F6  0E3D               	movlw	61
  5016  0031F8  0100               	movlb	0	; () banked
  5017  0031FA  6F8A               	movwf	(___ftmul@f2+2)& (0+255),b
  5018  0031FC  EC35  F010         	call	___ftmul	;wreg free
  5019  003200  C085  F094         	movff	?___ftmul,?_RTD2Angle
  5020  003204  C086  F095         	movff	?___ftmul+1,?_RTD2Angle+1
  5021  003208  C087  F096         	movff	?___ftmul+2,?_RTD2Angle+2
  5022  00320C  D000               	goto	l374
  5023  00320E                     l374:
  5024  00320E  0012               	return		;funcret
  5025  003210                     __end_of_RTD2Angle:
  5026                           	opt stack 0
  5027                           tblptru	equ	0xFF8
  5028                           tblptrh	equ	0xFF7
  5029                           tblptrl	equ	0xFF6
  5030                           tablat	equ	0xFF5
  5031                           intcon	equ	0xFF2
  5032                           intcon2	equ	0xFF1
  5033                           indf0	equ	0xFEF
  5034                           postinc0	equ	0xFEE
  5035                           fsr0h	equ	0xFEA
  5036                           fsr0l	equ	0xFE9
  5037                           wreg	equ	0xFE8
  5038                           status	equ	0xFD8
  5039                           
  5040 ;; *************** function ___lwtoft *****************
  5041 ;; Defined at:
  5042 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  c               2   22[BANK0 ] unsigned int 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  3   22[BANK0 ] float 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5056 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;Total ram usage:        3 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    9
  5063 ;; This function calls:
  5064 ;;		___ftpack
  5065 ;; This function is called by:
  5066 ;;		_RTD2Angle
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text29
  5071  003270                     __ptext29:
  5072                           	opt stack 0
  5073  003270                     ___lwtoft:
  5074                           	opt stack 20
  5075                           
  5076                           ;incstack = 0
  5077  003270  C076  F06E         	movff	___lwtoft@c,___ftpack@arg
  5078  003274  C077  F06F         	movff	___lwtoft@c+1,___ftpack@arg+1
  5079  003278  0100               	movlb	0	; () banked
  5080  00327A  6B70               	clrf	(___ftpack@arg+2)& (0+255),b
  5081  00327C  0E8E               	movlw	142
  5082  00327E  0100               	movlb	0	; () banked
  5083  003280  6F71               	movwf	___ftpack@exp& (0+255),b
  5084  003282  0E00               	movlw	0
  5085  003284  0100               	movlb	0	; () banked
  5086  003286  6F72               	movwf	___ftpack@sign& (0+255),b
  5087  003288  ECBB  F012         	call	___ftpack	;wreg free
  5088  00328C  C06E  F076         	movff	?___ftpack,?___lwtoft
  5089  003290  C06F  F077         	movff	?___ftpack+1,?___lwtoft+1
  5090  003294  C070  F078         	movff	?___ftpack+2,?___lwtoft+2
  5091  003298  D000               	goto	l1139
  5092  00329A                     l1139:
  5093  00329A  0012               	return		;funcret
  5094  00329C                     __end_of___lwtoft:
  5095                           	opt stack 0
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           intcon	equ	0xFF2
  5101                           intcon2	equ	0xFF1
  5102                           indf0	equ	0xFEF
  5103                           postinc0	equ	0xFEE
  5104                           fsr0h	equ	0xFEA
  5105                           fsr0l	equ	0xFE9
  5106                           wreg	equ	0xFE8
  5107                           status	equ	0xFD8
  5108                           
  5109 ;; *************** function ___ftmul *****************
  5110 ;; Defined at:
  5111 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  f1              3   37[BANK0 ] float 
  5114 ;;  f2              3   40[BANK0 ] float 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  f3_as_produc    3   47[BANK0 ] unsigned um
  5117 ;;  sign            1   51[BANK0 ] unsigned char 
  5118 ;;  cntr            1   50[BANK0 ] unsigned char 
  5119 ;;  exp             1   46[BANK0 ] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  3   37[BANK0 ] float 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5129 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;Total ram usage:       15 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    9
  5136 ;; This function calls:
  5137 ;;		___ftpack
  5138 ;; This function is called by:
  5139 ;;		_calculatePID
  5140 ;;		_breakDouble
  5141 ;;		_RTD2Angle
  5142 ;;		_LCDBreakDouble
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text30
  5147  00206A                     __ptext30:
  5148                           	opt stack 0
  5149  00206A                     ___ftmul:
  5150                           	opt stack 20
  5151                           
  5152                           ;incstack = 0
  5153  00206A  C087  F08B         	movff	___ftmul@f1+2,??___ftmul
  5154  00206E  0100               	movlb	0	; () banked
  5155  002070  6B8C               	clrf	(??___ftmul+1)& (0+255),b
  5156  002072  6B8D               	clrf	(??___ftmul+2)& (0+255),b
  5157  002074  0100               	movlb	0	; () banked
  5158  002076  3586               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5159  002078  0100               	movlb	0	; () banked
  5160  00207A  378B               	rlcf	??___ftmul& (0+255),f,b
  5161  00207C  E301               	bnc	u4651
  5162  00207E  818C               	bsf	(??___ftmul+1)& (0+255),0,b
  5163  002080                     u4651:
  5164  002080  0100               	movlb	0	; () banked
  5165  002082  518B               	movf	??___ftmul& (0+255),w,b
  5166  002084  0100               	movlb	0	; () banked
  5167  002086  6F8E               	movwf	___ftmul@exp& (0+255),b
  5168  002088  0100               	movlb	0	; () banked
  5169  00208A  518E               	movf	___ftmul@exp& (0+255),w,b
  5170  00208C  A4D8               	btfss	status,2,c
  5171  00208E  D002               	goto	l4195
  5172  002090  D014               	goto	l4197
  5173                           
  5174                           ; BSR set to: 0
  5175                           
  5176                           ; BSR set to: 0
  5177  002092  D098               	goto	l979
  5178  002094                     l4195:
  5179                           
  5180                           ; BSR set to: 0
  5181  002094  C08A  F08B         	movff	___ftmul@f2+2,??___ftmul
  5182  002098  0100               	movlb	0	; () banked
  5183  00209A  6B8C               	clrf	(??___ftmul+1)& (0+255),b
  5184  00209C  6B8D               	clrf	(??___ftmul+2)& (0+255),b
  5185  00209E  0100               	movlb	0	; () banked
  5186  0020A0  3589               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5187  0020A2  0100               	movlb	0	; () banked
  5188  0020A4  378B               	rlcf	??___ftmul& (0+255),f,b
  5189  0020A6  E301               	bnc	u4671
  5190  0020A8  818C               	bsf	(??___ftmul+1)& (0+255),0,b
  5191  0020AA                     u4671:
  5192  0020AA  0100               	movlb	0	; () banked
  5193  0020AC  518B               	movf	??___ftmul& (0+255),w,b
  5194  0020AE  0100               	movlb	0	; () banked
  5195  0020B0  6F93               	movwf	___ftmul@sign& (0+255),b
  5196  0020B2  0100               	movlb	0	; () banked
  5197  0020B4  5193               	movf	___ftmul@sign& (0+255),w,b
  5198  0020B6  A4D8               	btfss	status,2,c
  5199  0020B8  D00A               	goto	l4201
  5200  0020BA                     l4197:
  5201                           
  5202                           ; BSR set to: 0
  5203  0020BA  0E00               	movlw	0
  5204  0020BC  0100               	movlb	0	; () banked
  5205  0020BE  6F85               	movwf	?___ftmul& (0+255),b
  5206  0020C0  0E00               	movlw	0
  5207  0020C2  0100               	movlb	0	; () banked
  5208  0020C4  6F86               	movwf	(?___ftmul+1)& (0+255),b
  5209  0020C6  0E00               	movlw	0
  5210  0020C8  0100               	movlb	0	; () banked
  5211  0020CA  6F87               	movwf	(?___ftmul+2)& (0+255),b
  5212                           
  5213                           ; BSR set to: 0
  5214  0020CC  D07B               	goto	l979
  5215  0020CE                     l4201:
  5216                           
  5217                           ; BSR set to: 0
  5218  0020CE  0100               	movlb	0	; () banked
  5219  0020D0  5193               	movf	___ftmul@sign& (0+255),w,b
  5220  0020D2  0F7B               	addlw	123
  5221  0020D4  0100               	movlb	0	; () banked
  5222  0020D6  278E               	addwf	___ftmul@exp& (0+255),f,b
  5223                           
  5224                           ; BSR set to: 0
  5225  0020D8  C087  F093         	movff	___ftmul@f1+2,___ftmul@sign
  5226  0020DC  0100               	movlb	0	; () banked
  5227  0020DE  518A               	movf	(___ftmul@f2+2)& (0+255),w,b
  5228  0020E0  0100               	movlb	0	; () banked
  5229  0020E2  1B93               	xorwf	___ftmul@sign& (0+255),f,b
  5230  0020E4  0E80               	movlw	128
  5231  0020E6  0100               	movlb	0	; () banked
  5232  0020E8  1793               	andwf	___ftmul@sign& (0+255),f,b
  5233                           
  5234                           ; BSR set to: 0
  5235  0020EA  0100               	movlb	0	; () banked
  5236  0020EC  8F86               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5237                           
  5238                           ; BSR set to: 0
  5239  0020EE  0100               	movlb	0	; () banked
  5240  0020F0  8F89               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5241                           
  5242                           ; BSR set to: 0
  5243  0020F2  0EFF               	movlw	255
  5244  0020F4  0100               	movlb	0	; () banked
  5245  0020F6  1788               	andwf	___ftmul@f2& (0+255),f,b
  5246  0020F8  0EFF               	movlw	255
  5247  0020FA  0100               	movlb	0	; () banked
  5248  0020FC  1789               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5249  0020FE  0E00               	movlw	0
  5250  002100  0100               	movlb	0	; () banked
  5251  002102  178A               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5252                           
  5253                           ; BSR set to: 0
  5254  002104  0E00               	movlw	0
  5255  002106  0100               	movlb	0	; () banked
  5256  002108  6F8F               	movwf	___ftmul@f3_as_product& (0+255),b
  5257  00210A  0E00               	movlw	0
  5258  00210C  0100               	movlb	0	; () banked
  5259  00210E  6F90               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5260  002110  0E00               	movlw	0
  5261  002112  0100               	movlb	0	; () banked
  5262  002114  6F91               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5263                           
  5264                           ; BSR set to: 0
  5265  002116  0E07               	movlw	7
  5266  002118  0100               	movlb	0	; () banked
  5267  00211A  6F92               	movwf	___ftmul@cntr& (0+255),b
  5268  00211C  D000               	goto	l4215
  5269  00211E                     l4215:
  5270                           
  5271                           ; BSR set to: 0
  5272  00211E  0100               	movlb	0	; () banked
  5273  002120  A185               	btfss	___ftmul@f1& (0+255),0,b
  5274  002122  D00D               	goto	l4219
  5275                           
  5276                           ; BSR set to: 0
  5277  002124  0100               	movlb	0	; () banked
  5278  002126  5188               	movf	___ftmul@f2& (0+255),w,b
  5279  002128  0100               	movlb	0	; () banked
  5280  00212A  278F               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5281  00212C  0100               	movlb	0	; () banked
  5282  00212E  5189               	movf	(___ftmul@f2+1)& (0+255),w,b
  5283  002130  0100               	movlb	0	; () banked
  5284  002132  2390               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5285  002134  0100               	movlb	0	; () banked
  5286  002136  518A               	movf	(___ftmul@f2+2)& (0+255),w,b
  5287  002138  0100               	movlb	0	; () banked
  5288  00213A  2391               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5289  00213C  D000               	goto	l4219
  5290  00213E                     l4219:
  5291                           
  5292                           ; BSR set to: 0
  5293  00213E  0100               	movlb	0	; () banked
  5294  002140  90D8               	bcf	status,0,c
  5295  002142  3387               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5296  002144  3386               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5297  002146  3385               	rrcf	___ftmul@f1& (0+255),f,b
  5298  002148  0100               	movlb	0	; () banked
  5299  00214A  90D8               	bcf	status,0,c
  5300  00214C  3788               	rlcf	___ftmul@f2& (0+255),f,b
  5301  00214E  3789               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5302  002150  378A               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5303                           
  5304                           ; BSR set to: 0
  5305  002152  0100               	movlb	0	; () banked
  5306  002154  2F92               	decfsz	___ftmul@cntr& (0+255),f,b
  5307  002156  D7E3               	goto	l4215
  5308  002158  D000               	goto	l4223
  5309  00215A                     l4223:
  5310                           
  5311                           ; BSR set to: 0
  5312  00215A  0E09               	movlw	9
  5313  00215C  0100               	movlb	0	; () banked
  5314  00215E  6F92               	movwf	___ftmul@cntr& (0+255),b
  5315  002160  D000               	goto	l4225
  5316  002162                     l4225:
  5317                           
  5318                           ; BSR set to: 0
  5319  002162  0100               	movlb	0	; () banked
  5320  002164  A185               	btfss	___ftmul@f1& (0+255),0,b
  5321  002166  D00D               	goto	l4229
  5322                           
  5323                           ; BSR set to: 0
  5324  002168  0100               	movlb	0	; () banked
  5325  00216A  5188               	movf	___ftmul@f2& (0+255),w,b
  5326  00216C  0100               	movlb	0	; () banked
  5327  00216E  278F               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5328  002170  0100               	movlb	0	; () banked
  5329  002172  5189               	movf	(___ftmul@f2+1)& (0+255),w,b
  5330  002174  0100               	movlb	0	; () banked
  5331  002176  2390               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5332  002178  0100               	movlb	0	; () banked
  5333  00217A  518A               	movf	(___ftmul@f2+2)& (0+255),w,b
  5334  00217C  0100               	movlb	0	; () banked
  5335  00217E  2391               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5336  002180  D000               	goto	l4229
  5337  002182                     l4229:
  5338                           
  5339                           ; BSR set to: 0
  5340  002182  0100               	movlb	0	; () banked
  5341  002184  90D8               	bcf	status,0,c
  5342  002186  3387               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5343  002188  3386               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5344  00218A  3385               	rrcf	___ftmul@f1& (0+255),f,b
  5345  00218C  0100               	movlb	0	; () banked
  5346  00218E  90D8               	bcf	status,0,c
  5347  002190  3391               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5348  002192  3390               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5349  002194  338F               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5350                           
  5351                           ; BSR set to: 0
  5352  002196  0100               	movlb	0	; () banked
  5353  002198  2F92               	decfsz	___ftmul@cntr& (0+255),f,b
  5354  00219A  D7E3               	goto	l4225
  5355  00219C  D000               	goto	l4233
  5356  00219E                     l4233:
  5357                           
  5358                           ; BSR set to: 0
  5359  00219E  C08F  F06E         	movff	___ftmul@f3_as_product,___ftpack@arg
  5360  0021A2  C090  F06F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5361  0021A6  C091  F070         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5362  0021AA  C08E  F071         	movff	___ftmul@exp,___ftpack@exp
  5363  0021AE  C093  F072         	movff	___ftmul@sign,___ftpack@sign
  5364  0021B2  ECBB  F012         	call	___ftpack	;wreg free
  5365  0021B6  C06E  F085         	movff	?___ftpack,?___ftmul
  5366  0021BA  C06F  F086         	movff	?___ftpack+1,?___ftmul+1
  5367  0021BE  C070  F087         	movff	?___ftpack+2,?___ftmul+2
  5368  0021C2  D000               	goto	l979
  5369  0021C4                     l979:
  5370  0021C4  0012               	return		;funcret
  5371  0021C6                     __end_of___ftmul:
  5372                           	opt stack 0
  5373                           tblptru	equ	0xFF8
  5374                           tblptrh	equ	0xFF7
  5375                           tblptrl	equ	0xFF6
  5376                           tablat	equ	0xFF5
  5377                           intcon	equ	0xFF2
  5378                           intcon2	equ	0xFF1
  5379                           indf0	equ	0xFEF
  5380                           postinc0	equ	0xFEE
  5381                           fsr0h	equ	0xFEA
  5382                           fsr0l	equ	0xFE9
  5383                           wreg	equ	0xFE8
  5384                           status	equ	0xFD8
  5385                           
  5386 ;; *************** function ___ftpack *****************
  5387 ;; Defined at:
  5388 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  arg             3   14[BANK0 ] unsigned um
  5391 ;;  exp             1   17[BANK0 ] unsigned char 
  5392 ;;  sign            1   18[BANK0 ] unsigned char 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  3   14[BANK0 ] float 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5404 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;Total ram usage:        8 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    8
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		___ftadd
  5415 ;;		___ftdiv
  5416 ;;		___ftmul
  5417 ;;		___lwtoft
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text31
  5422  002576                     __ptext31:
  5423                           	opt stack 0
  5424  002576                     ___ftpack:
  5425                           	opt stack 19
  5426                           
  5427                           ;incstack = 0
  5428  002576  0100               	movlb	0	; () banked
  5429  002578  5171               	movf	___ftpack@exp& (0+255),w,b
  5430  00257A  0100               	movlb	0	; () banked
  5431  00257C  B4D8               	btfsc	status,2,c
  5432  00257E  D008               	goto	l4023
  5433                           
  5434                           ; BSR set to: 0
  5435  002580  0100               	movlb	0	; () banked
  5436  002582  516E               	movf	___ftpack@arg& (0+255),w,b
  5437  002584  0100               	movlb	0	; () banked
  5438  002586  116F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  5439  002588  0100               	movlb	0	; () banked
  5440  00258A  1170               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  5441  00258C  A4D8               	btfss	status,2,c
  5442  00258E  D013               	goto	l4029
  5443  002590                     l4023:
  5444                           
  5445                           ; BSR set to: 0
  5446  002590  0E00               	movlw	0
  5447  002592  0100               	movlb	0	; () banked
  5448  002594  6F6E               	movwf	?___ftpack& (0+255),b
  5449  002596  0E00               	movlw	0
  5450  002598  0100               	movlb	0	; () banked
  5451  00259A  6F6F               	movwf	(?___ftpack+1)& (0+255),b
  5452  00259C  0E00               	movlw	0
  5453  00259E  0100               	movlb	0	; () banked
  5454  0025A0  6F70               	movwf	(?___ftpack+2)& (0+255),b
  5455                           
  5456                           ; BSR set to: 0
  5457  0025A2  D078               	goto	l892
  5458                           
  5459                           ; BSR set to: 0
  5460  0025A4  D008               	goto	l4029
  5461  0025A6                     l4027:
  5462                           
  5463                           ; BSR set to: 0
  5464  0025A6  0100               	movlb	0	; () banked
  5465  0025A8  2B71               	incf	___ftpack@exp& (0+255),f,b
  5466  0025AA  0100               	movlb	0	; () banked
  5467  0025AC  90D8               	bcf	status,0,c
  5468  0025AE  3370               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5469  0025B0  336F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5470  0025B2  336E               	rrcf	___ftpack@arg& (0+255),f,b
  5471  0025B4  D000               	goto	l4029
  5472  0025B6                     l4029:
  5473                           
  5474                           ; BSR set to: 0
  5475  0025B6  0E00               	movlw	0
  5476  0025B8  0100               	movlb	0	; () banked
  5477  0025BA  156E               	andwf	___ftpack@arg& (0+255),w,b
  5478  0025BC  0100               	movlb	0	; () banked
  5479  0025BE  6F73               	movwf	??___ftpack& (0+255),b
  5480  0025C0  0E00               	movlw	0
  5481  0025C2  0100               	movlb	0	; () banked
  5482  0025C4  156F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5483  0025C6  0100               	movlb	0	; () banked
  5484  0025C8  6F74               	movwf	(??___ftpack+1)& (0+255),b
  5485  0025CA  0EFE               	movlw	254
  5486  0025CC  0100               	movlb	0	; () banked
  5487  0025CE  1570               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5488  0025D0  0100               	movlb	0	; () banked
  5489  0025D2  6F75               	movwf	(??___ftpack+2)& (0+255),b
  5490  0025D4  0100               	movlb	0	; () banked
  5491  0025D6  5173               	movf	??___ftpack& (0+255),w,b
  5492  0025D8  0100               	movlb	0	; () banked
  5493  0025DA  1174               	iorwf	(??___ftpack+1)& (0+255),w,b
  5494  0025DC  0100               	movlb	0	; () banked
  5495  0025DE  1175               	iorwf	(??___ftpack+2)& (0+255),w,b
  5496  0025E0  B4D8               	btfsc	status,2,c
  5497  0025E2  D013               	goto	l4035
  5498  0025E4  D7E0               	goto	l4027
  5499                           
  5500                           ; BSR set to: 0
  5501  0025E6  D011               	goto	l4035
  5502  0025E8                     l4031:
  5503                           
  5504                           ; BSR set to: 0
  5505  0025E8  0100               	movlb	0	; () banked
  5506  0025EA  2B71               	incf	___ftpack@exp& (0+255),f,b
  5507                           
  5508                           ; BSR set to: 0
  5509  0025EC  0E01               	movlw	1
  5510  0025EE  0100               	movlb	0	; () banked
  5511  0025F0  276E               	addwf	___ftpack@arg& (0+255),f,b
  5512  0025F2  0E00               	movlw	0
  5513  0025F4  0100               	movlb	0	; () banked
  5514  0025F6  236F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  5515  0025F8  0E00               	movlw	0
  5516  0025FA  0100               	movlb	0	; () banked
  5517  0025FC  2370               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  5518  0025FE  0100               	movlb	0	; () banked
  5519  002600  90D8               	bcf	status,0,c
  5520  002602  3370               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5521  002604  336F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5522  002606  336E               	rrcf	___ftpack@arg& (0+255),f,b
  5523  002608  D000               	goto	l4035
  5524  00260A                     l4035:
  5525                           
  5526                           ; BSR set to: 0
  5527  00260A  0E00               	movlw	0
  5528  00260C  0100               	movlb	0	; () banked
  5529  00260E  156E               	andwf	___ftpack@arg& (0+255),w,b
  5530  002610  0100               	movlb	0	; () banked
  5531  002612  6F73               	movwf	??___ftpack& (0+255),b
  5532  002614  0E00               	movlw	0
  5533  002616  0100               	movlb	0	; () banked
  5534  002618  156F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5535  00261A  0100               	movlb	0	; () banked
  5536  00261C  6F74               	movwf	(??___ftpack+1)& (0+255),b
  5537  00261E  0EFF               	movlw	255
  5538  002620  0100               	movlb	0	; () banked
  5539  002622  1570               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5540  002624  0100               	movlb	0	; () banked
  5541  002626  6F75               	movwf	(??___ftpack+2)& (0+255),b
  5542  002628  0100               	movlb	0	; () banked
  5543  00262A  5173               	movf	??___ftpack& (0+255),w,b
  5544  00262C  0100               	movlb	0	; () banked
  5545  00262E  1174               	iorwf	(??___ftpack+1)& (0+255),w,b
  5546  002630  0100               	movlb	0	; () banked
  5547  002632  1175               	iorwf	(??___ftpack+2)& (0+255),w,b
  5548  002634  B4D8               	btfsc	status,2,c
  5549  002636  D00A               	goto	l4039
  5550  002638  D7D7               	goto	l4031
  5551                           
  5552                           ; BSR set to: 0
  5553  00263A  D008               	goto	l4039
  5554  00263C                     l4037:
  5555                           
  5556                           ; BSR set to: 0
  5557  00263C  0100               	movlb	0	; () banked
  5558  00263E  0771               	decf	___ftpack@exp& (0+255),f,b
  5559  002640  0100               	movlb	0	; () banked
  5560  002642  90D8               	bcf	status,0,c
  5561  002644  376E               	rlcf	___ftpack@arg& (0+255),f,b
  5562  002646  376F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  5563  002648  3770               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  5564  00264A  D000               	goto	l4039
  5565  00264C                     l4039:
  5566                           
  5567                           ; BSR set to: 0
  5568  00264C  0100               	movlb	0	; () banked
  5569  00264E  BF6F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  5570  002650  D005               	goto	l903
  5571                           
  5572                           ; BSR set to: 0
  5573  002652  0E02               	movlw	2
  5574  002654  0100               	movlb	0	; () banked
  5575  002656  6171               	cpfslt	___ftpack@exp& (0+255),b
  5576  002658  D7F1               	goto	l4037
  5577  00265A  D000               	goto	l903
  5578  00265C                     l903:
  5579                           
  5580                           ; BSR set to: 0
  5581  00265C  0100               	movlb	0	; () banked
  5582  00265E  B171               	btfsc	___ftpack@exp& (0+255),0,b
  5583  002660  D003               	goto	l4045
  5584                           
  5585                           ; BSR set to: 0
  5586  002662  0100               	movlb	0	; () banked
  5587  002664  9F6F               	bcf	(___ftpack@arg+1)& (0+255),7,b
  5588  002666  D000               	goto	l4045
  5589  002668                     l4045:
  5590                           
  5591                           ; BSR set to: 0
  5592  002668  0100               	movlb	0	; () banked
  5593  00266A  90D8               	bcf	status,0,c
  5594  00266C  3371               	rrcf	___ftpack@exp& (0+255),f,b
  5595  00266E  0100               	movlb	0	; () banked
  5596  002670  5171               	movf	___ftpack@exp& (0+255),w,b
  5597  002672  0100               	movlb	0	; () banked
  5598  002674  1370               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  5599                           
  5600                           ; BSR set to: 0
  5601  002676  0100               	movlb	0	; () banked
  5602  002678  5172               	movf	___ftpack@sign& (0+255),w,b
  5603  00267A  0100               	movlb	0	; () banked
  5604  00267C  B4D8               	btfsc	status,2,c
  5605  00267E  D003               	goto	l4051
  5606                           
  5607                           ; BSR set to: 0
  5608  002680  0100               	movlb	0	; () banked
  5609  002682  8F70               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5610  002684  D000               	goto	l4051
  5611  002686                     l4051:
  5612                           
  5613                           ; BSR set to: 0
  5614  002686  C06E  F06E         	movff	___ftpack@arg,?___ftpack
  5615  00268A  C06F  F06F         	movff	___ftpack@arg+1,?___ftpack+1
  5616  00268E  C070  F070         	movff	___ftpack@arg+2,?___ftpack+2
  5617  002692  D000               	goto	l892
  5618  002694                     l892:
  5619                           
  5620                           ; BSR set to: 0
  5621  002694  0012               	return		;funcret
  5622  002696                     __end_of___ftpack:
  5623                           	opt stack 0
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           intcon	equ	0xFF2
  5629                           intcon2	equ	0xFF1
  5630                           indf0	equ	0xFEF
  5631                           postinc0	equ	0xFEE
  5632                           fsr0h	equ	0xFEA
  5633                           fsr0l	equ	0xFE9
  5634                           wreg	equ	0xFE8
  5635                           status	equ	0xFD8
  5636                           
  5637 ;; *************** function _ImplementPIDMotion *****************
  5638 ;; Defined at:
  5639 ;;		line 35 in file "MotorControl.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  PIDValue        2   18[BANK0 ] int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;		None               void
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;Total ram usage:        4 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    9
  5660 ;; This function calls:
  5661 ;;		_abs
  5662 ;; This function is called by:
  5663 ;;		_main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text32
  5668  002AEE                     __ptext32:
  5669                           	opt stack 0
  5670  002AEE                     _ImplementPIDMotion:
  5671                           	opt stack 21
  5672                           
  5673                           ;MotorControl.c: 37: if (PIDValue > 255)
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;incstack = 0
  5677  002AEE  0100               	movlb	0	; () banked
  5678  002AF0  BF73               	btfsc	(ImplementPIDMotion@PIDValue+1)& (0+255),7,b
  5679  002AF2  D009               	goto	l3749
  5680  002AF4  0100               	movlb	0	; () banked
  5681  002AF6  0573               	decf	(ImplementPIDMotion@PIDValue+1)& (0+255),w,b
  5682  002AF8  A0D8               	btfss	status,0,c
  5683  002AFA  D005               	goto	l3749
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;MotorControl.c: 38: PIDValue = 255;
  5687  002AFC  0E00               	movlw	0
  5688  002AFE  0100               	movlb	0	; () banked
  5689  002B00  6F73               	movwf	(ImplementPIDMotion@PIDValue+1)& (0+255),b
  5690  002B02  6972               	setf	ImplementPIDMotion@PIDValue& (0+255),b
  5691  002B04  D010               	goto	l3753
  5692  002B06                     l3749:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;MotorControl.c: 39: else if (PIDValue < -255)
  5696  002B06  0100               	movlb	0	; () banked
  5697  002B08  AF73               	btfss	(ImplementPIDMotion@PIDValue+1)& (0+255),7,b
  5698  002B0A  D00D               	goto	l3753
  5699  002B0C  0100               	movlb	0	; () banked
  5700  002B0E  0572               	decf	ImplementPIDMotion@PIDValue& (0+255),w,b
  5701  002B10  0EFF               	movlw	255
  5702  002B12  0100               	movlb	0	; () banked
  5703  002B14  5973               	subwfb	(ImplementPIDMotion@PIDValue+1)& (0+255),w,b
  5704  002B16  B0D8               	btfsc	status,0,c
  5705  002B18  D006               	goto	l3753
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;MotorControl.c: 40: PIDValue = -255;
  5709  002B1A  0EFF               	movlw	255
  5710  002B1C  0100               	movlb	0	; () banked
  5711  002B1E  6F73               	movwf	(ImplementPIDMotion@PIDValue+1)& (0+255),b
  5712  002B20  0E01               	movlw	1
  5713  002B22  6F72               	movwf	ImplementPIDMotion@PIDValue& (0+255),b
  5714                           
  5715                           ; BSR set to: 0
  5716  002B24  D000               	goto	l3753
  5717  002B26                     l3753:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;MotorControl.c: 42: if (PIDValue < 0)
  5721  002B26  0100               	movlb	0	; () banked
  5722  002B28  AF73               	btfss	(ImplementPIDMotion@PIDValue+1)& (0+255),7,b
  5723  002B2A  D002               	goto	l3757
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;MotorControl.c: 43: CCP3CONbits.P3M1 = 1;
  5727  002B2C  8EB7               	bsf	4023,7,c	;volatile
  5728  002B2E  D00C               	goto	l3761
  5729  002B30                     l3757:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;MotorControl.c: 44: else if (PIDValue > 0)
  5733  002B30  0100               	movlb	0	; () banked
  5734  002B32  BF73               	btfsc	(ImplementPIDMotion@PIDValue+1)& (0+255),7,b
  5735  002B34  D009               	goto	l3761
  5736  002B36  0100               	movlb	0	; () banked
  5737  002B38  5173               	movf	(ImplementPIDMotion@PIDValue+1)& (0+255),w,b
  5738  002B3A  E104               	bnz	u4010
  5739  002B3C  0100               	movlb	0	; () banked
  5740  002B3E  0572               	decf	ImplementPIDMotion@PIDValue& (0+255),w,b
  5741  002B40  A0D8               	btfss	status,0,c
  5742  002B42  D002               	goto	l3761
  5743  002B44                     u4010:
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;MotorControl.c: 45: CCP3CONbits.P3M1 = 0;
  5747  002B44  9EB7               	bcf	4023,7,c	;volatile
  5748                           
  5749                           ; BSR set to: 0
  5750  002B46  D000               	goto	l3761
  5751  002B48                     l3761:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;MotorControl.c: 47: PIDValue = abs(PIDValue);
  5755  002B48  C072  F06E         	movff	ImplementPIDMotion@PIDValue,abs@a
  5756  002B4C  C073  F06F         	movff	ImplementPIDMotion@PIDValue+1,abs@a+1
  5757  002B50  EC4E  F019         	call	_abs	;wreg free
  5758  002B54  C06E  F072         	movff	?_abs,ImplementPIDMotion@PIDValue
  5759  002B58  C06F  F073         	movff	?_abs+1,ImplementPIDMotion@PIDValue+1
  5760                           
  5761                           ;MotorControl.c: 48: CCPR3L = (PIDValue >> 2) & 0xFF;
  5762  002B5C  C072  F074         	movff	ImplementPIDMotion@PIDValue,??_ImplementPIDMotion
  5763  002B60  C073  F075         	movff	ImplementPIDMotion@PIDValue+1,??_ImplementPIDMotion+1
  5764  002B64  0100               	movlb	0	; () banked
  5765  002B66  3575               	rlcf	(??_ImplementPIDMotion+1)& (0+255),w,b
  5766  002B68  3375               	rrcf	(??_ImplementPIDMotion+1)& (0+255),f,b
  5767  002B6A  3374               	rrcf	??_ImplementPIDMotion& (0+255),f,b
  5768  002B6C  0100               	movlb	0	; () banked
  5769  002B6E  3575               	rlcf	(??_ImplementPIDMotion+1)& (0+255),w,b
  5770  002B70  3375               	rrcf	(??_ImplementPIDMotion+1)& (0+255),f,b
  5771  002B72  3374               	rrcf	??_ImplementPIDMotion& (0+255),f,b
  5772  002B74  0100               	movlb	0	; () banked
  5773  002B76  5174               	movf	??_ImplementPIDMotion& (0+255),w,b
  5774  002B78  6EB8               	movwf	4024,c	;volatile
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;MotorControl.c: 49: CCP3CONbits.DC3B = (PIDValue & 0x03);
  5778  002B7A  C072  F074         	movff	ImplementPIDMotion@PIDValue,??_ImplementPIDMotion
  5779  002B7E  0E03               	movlw	3
  5780  002B80  0100               	movlb	0	; () banked
  5781  002B82  1774               	andwf	??_ImplementPIDMotion& (0+255),f,b
  5782  002B84  0100               	movlb	0	; () banked
  5783  002B86  3B74               	swapf	??_ImplementPIDMotion& (0+255),f,b
  5784  002B88  50B7               	movf	4023,w,c	;volatile
  5785  002B8A  0100               	movlb	0	; () banked
  5786  002B8C  1974               	xorwf	??_ImplementPIDMotion& (0+255),w,b
  5787  002B8E  0BCF               	andlw	-49
  5788  002B90  1974               	xorwf	??_ImplementPIDMotion& (0+255),w,b
  5789  002B92  6EB7               	movwf	4023,c	;volatile
  5790                           
  5791                           ; BSR set to: 0
  5792  002B94  0012               	return		;funcret
  5793  002B96                     __end_of_ImplementPIDMotion:
  5794                           	opt stack 0
  5795                           tblptru	equ	0xFF8
  5796                           tblptrh	equ	0xFF7
  5797                           tblptrl	equ	0xFF6
  5798                           tablat	equ	0xFF5
  5799                           intcon	equ	0xFF2
  5800                           intcon2	equ	0xFF1
  5801                           indf0	equ	0xFEF
  5802                           postinc0	equ	0xFEE
  5803                           fsr0h	equ	0xFEA
  5804                           fsr0l	equ	0xFE9
  5805                           wreg	equ	0xFE8
  5806                           status	equ	0xFD8
  5807                           
  5808 ;; *************** function _abs *****************
  5809 ;; Defined at:
  5810 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/abs.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  a               2   14[BANK0 ] int 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  2   14[BANK0 ] int 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;Total ram usage:        4 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    8
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_ImplementPIDMotion
  5835 ;;		_ImplementJSMotion
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text33
  5840  00329C                     __ptext33:
  5841                           	opt stack 0
  5842  00329C                     _abs:
  5843                           	opt stack 21
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;incstack = 0
  5847  00329C  0100               	movlb	0	; () banked
  5848  00329E  AF6F               	btfss	(abs@a+1)& (0+255),7,b
  5849  0032A0  D00E               	goto	l545
  5850                           
  5851                           ; BSR set to: 0
  5852  0032A2  C06E  F070         	movff	abs@a,??_abs
  5853  0032A6  C06F  F071         	movff	abs@a+1,??_abs+1
  5854  0032AA  0100               	movlb	0	; () banked
  5855  0032AC  1F70               	comf	??_abs& (0+255),f,b
  5856  0032AE  1F71               	comf	(??_abs+1)& (0+255),f,b
  5857  0032B0  4B70               	infsnz	??_abs& (0+255),f,b
  5858  0032B2  2B71               	incf	(??_abs+1)& (0+255),f,b
  5859  0032B4  C070  F06E         	movff	??_abs,?_abs
  5860  0032B8  C071  F06F         	movff	??_abs+1,?_abs+1
  5861  0032BC  D004               	goto	l546
  5862  0032BE                     l545:
  5863                           
  5864                           ; BSR set to: 0
  5865  0032BE  C06E  F06E         	movff	abs@a,?_abs
  5866  0032C2  C06F  F06F         	movff	abs@a+1,?_abs+1
  5867  0032C6                     l546:
  5868                           
  5869                           ; BSR set to: 0
  5870  0032C6  0012               	return		;funcret
  5871  0032C8                     __end_of_abs:
  5872                           	opt stack 0
  5873                           tblptru	equ	0xFF8
  5874                           tblptrh	equ	0xFF7
  5875                           tblptrl	equ	0xFF6
  5876                           tablat	equ	0xFF5
  5877                           intcon	equ	0xFF2
  5878                           intcon2	equ	0xFF1
  5879                           indf0	equ	0xFEF
  5880                           postinc0	equ	0xFEE
  5881                           fsr0h	equ	0xFEA
  5882                           fsr0l	equ	0xFE9
  5883                           wreg	equ	0xFE8
  5884                           status	equ	0xFD8
  5885                           
  5886 ;; *************** function _lISR *****************
  5887 ;; Defined at:
  5888 ;;		line 70 in file "PIDLoop.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;		None
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;		None               void
  5895 ;; Registers used:
  5896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;Total ram usage:       17 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    7
  5909 ;; This function calls:
  5910 ;;		_KillMotors
  5911 ;;		_RCInt
  5912 ;;		_StartMotors
  5913 ;; This function is called by:
  5914 ;;		Interrupt level 1
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	intcodelo
  5919  000018                     __pintcodelo:
  5920                           	opt stack 0
  5921  000018                     _lISR:
  5922                           	opt stack 18
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;incstack = 0
  5926  000018  CFD8 F031          	movff	status,??_lISR
  5927  00001C  CFE8 F032          	movff	wreg,??_lISR+1
  5928  000020  CFE0 F033          	movff	bsr,??_lISR+2
  5929  000024  CFFA F034          	movff	pclath,??_lISR+3
  5930  000028  CFFB F035          	movff	pclatu,??_lISR+4
  5931  00002C  CFE9 F036          	movff	fsr0l,??_lISR+5
  5932  000030  CFEA F037          	movff	fsr0h,??_lISR+6
  5933  000034  CFE1 F038          	movff	fsr1l,??_lISR+7
  5934  000038  CFE2 F039          	movff	fsr1h,??_lISR+8
  5935  00003C  CFD9 F03A          	movff	fsr2l,??_lISR+9
  5936  000040  CFDA F03B          	movff	fsr2h,??_lISR+10
  5937  000044  CFF3 F03C          	movff	prodl,??_lISR+11
  5938  000048  CFF4 F03D          	movff	prodh,??_lISR+12
  5939  00004C  CFF6 F03E          	movff	tblptrl,??_lISR+13
  5940  000050  CFF7 F03F          	movff	tblptrh,??_lISR+14
  5941  000054  CFF8 F040          	movff	tblptru,??_lISR+15
  5942  000058  CFF5 F041          	movff	tablat,??_lISR+16
  5943                           
  5944                           ;PIDLoop.c: 72: if (PIR1bits.RC1IF == 1)
  5945  00005C  AA9E               	btfss	3998,5,c	;volatile
  5946  00005E  D007               	goto	i1l453
  5947                           
  5948                           ;PIDLoop.c: 73: {
  5949                           ;PIDLoop.c: 74: KillMotors();
  5950  000060  EC3B  F01A         	call	_KillMotors	;wreg free
  5951                           
  5952                           ;PIDLoop.c: 75: RCInt();
  5953  000064  EC84  F011         	call	_RCInt	;wreg free
  5954                           
  5955                           ;PIDLoop.c: 76: StartMotors();
  5956  000068  EC35  F01A         	call	_StartMotors	;wreg free
  5957  00006C  D000               	goto	i1l453
  5958  00006E                     i1l453:
  5959  00006E  C041  FFF5         	movff	??_lISR+16,tablat
  5960  000072  C040  FFF8         	movff	??_lISR+15,tblptru
  5961  000076  C03F  FFF7         	movff	??_lISR+14,tblptrh
  5962  00007A  C03E  FFF6         	movff	??_lISR+13,tblptrl
  5963  00007E  C03D  FFF4         	movff	??_lISR+12,prodh
  5964  000082  C03C  FFF3         	movff	??_lISR+11,prodl
  5965  000086  C03B  FFDA         	movff	??_lISR+10,fsr2h
  5966  00008A  C03A  FFD9         	movff	??_lISR+9,fsr2l
  5967  00008E  C039  FFE2         	movff	??_lISR+8,fsr1h
  5968  000092  C038  FFE1         	movff	??_lISR+7,fsr1l
  5969  000096  C037  FFEA         	movff	??_lISR+6,fsr0h
  5970  00009A  C036  FFE9         	movff	??_lISR+5,fsr0l
  5971  00009E  C035  FFFB         	movff	??_lISR+4,pclatu
  5972  0000A2  C034  FFFA         	movff	??_lISR+3,pclath
  5973  0000A6  C033  FFE0         	movff	??_lISR+2,bsr
  5974  0000AA  C032  FFE8         	movff	??_lISR+1,wreg
  5975  0000AE  C031  FFD8         	movff	??_lISR,status
  5976  0000B2  0010               	retfie	
  5977  0000B4                     __end_of_lISR:
  5978                           	opt stack 0
  5979                           pclatu	equ	0xFFB
  5980                           pclath	equ	0xFFA
  5981                           tblptru	equ	0xFF8
  5982                           tblptrh	equ	0xFF7
  5983                           tblptrl	equ	0xFF6
  5984                           tablat	equ	0xFF5
  5985                           prodh	equ	0xFF4
  5986                           prodl	equ	0xFF3
  5987                           intcon	equ	0xFF2
  5988                           intcon2	equ	0xFF1
  5989                           indf0	equ	0xFEF
  5990                           postinc0	equ	0xFEE
  5991                           fsr0h	equ	0xFEA
  5992                           fsr0l	equ	0xFE9
  5993                           wreg	equ	0xFE8
  5994                           fsr1h	equ	0xFE2
  5995                           fsr1l	equ	0xFE1
  5996                           bsr	equ	0xFE0
  5997                           fsr2h	equ	0xFDA
  5998                           fsr2l	equ	0xFD9
  5999                           status	equ	0xFD8
  6000                           
  6001 ;; *************** function _StartMotors *****************
  6002 ;; Defined at:
  6003 ;;		line 29 in file "MotorControl.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;		None               void
  6010 ;; Registers used:
  6011 ;;		wreg, status,2
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;Total ram usage:        0 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    2
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_lISR
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text35
  6032  00346A                     __ptext35:
  6033                           	opt stack 0
  6034  00346A                     _StartMotors:
  6035                           	opt stack 22
  6036                           
  6037                           ;MotorControl.c: 31: PORTAbits.RA4 = 0;
  6038                           
  6039                           ;incstack = 0
  6040  00346A  9880               	bcf	3968,4,c	;volatile
  6041                           
  6042                           ;MotorControl.c: 32: CCP3CON = CCP3CON = 0x4C;
  6043  00346C  0E4C               	movlw	76
  6044  00346E  6EB7               	movwf	4023,c	;volatile
  6045  003470  CFB7 FFB7          	movff	4023,4023	;volatile
  6046  003474  0012               	return		;funcret
  6047  003476                     __end_of_StartMotors:
  6048                           	opt stack 0
  6049                           pclatu	equ	0xFFB
  6050                           pclath	equ	0xFFA
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           intcon2	equ	0xFF1
  6059                           indf0	equ	0xFEF
  6060                           postinc0	equ	0xFEE
  6061                           fsr0h	equ	0xFEA
  6062                           fsr0l	equ	0xFE9
  6063                           wreg	equ	0xFE8
  6064                           fsr1h	equ	0xFE2
  6065                           fsr1l	equ	0xFE1
  6066                           bsr	equ	0xFE0
  6067                           fsr2h	equ	0xFDA
  6068                           fsr2l	equ	0xFD9
  6069                           status	equ	0xFD8
  6070                           
  6071 ;; *************** function _RCInt *****************
  6072 ;; Defined at:
  6073 ;;		line 19 in file "KeyValue.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  counter         1   47[COMRAM] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;		None               void
  6080 ;; Registers used:
  6081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:        2 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    6
  6094 ;; This function calls:
  6095 ;;		_keyValue
  6096 ;;		i1_SerTx
  6097 ;; This function is called by:
  6098 ;;		_lISR
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text36
  6103  002308                     __ptext36:
  6104                           	opt stack 0
  6105  002308                     _RCInt:
  6106                           	opt stack 18
  6107                           
  6108                           ;KeyValue.c: 21: unsigned char counter = 0;
  6109                           
  6110                           ;incstack = 0
  6111  002308  0E00               	movlw	0
  6112  00230A  6E30               	movwf	RCInt@counter,c
  6113                           
  6114                           ;KeyValue.c: 23: {
  6115                           ;KeyValue.c: 24: while (PIR1bits.RCIF == 0);
  6116                           
  6117                           ;KeyValue.c: 22: do
  6118  00230C  D000               	goto	i1l188
  6119  00230E                     i1l188:
  6120  00230E  AA9E               	btfss	3998,5,c	;volatile
  6121  002310  D7FE               	goto	i1l188
  6122                           
  6123                           ;KeyValue.c: 25: received[counter] = RCREG;
  6124  002312  5030               	movf	RCInt@counter,w,c
  6125  002314  0D01               	mullw	1
  6126  002316  0ED1               	movlw	low _received
  6127  002318  24F3               	addwf	prodl,w,c
  6128  00231A  6ED9               	movwf	fsr2l,c
  6129  00231C  0E00               	movlw	high _received
  6130  00231E  20F4               	addwfc	prodh,w,c
  6131  002320  6EDA               	movwf	fsr2h,c
  6132  002322  CFAE FFDF          	movff	4014,indf2	;volatile
  6133                           
  6134                           ;KeyValue.c: 26: SerTx(RCREG);
  6135  002326  50AE               	movf	4014,w,c	;volatile
  6136  002328  EC2E  F01A         	call	i1_SerTx
  6137                           
  6138                           ;KeyValue.c: 27: if ((received[counter] == 0x08) || received[counter] == 0x7F)
  6139  00232C  5030               	movf	RCInt@counter,w,c
  6140  00232E  0D01               	mullw	1
  6141  002330  0ED1               	movlw	low _received
  6142  002332  24F3               	addwf	prodl,w,c
  6143  002334  6ED9               	movwf	fsr2l,c
  6144  002336  0E00               	movlw	high _received
  6145  002338  20F4               	addwfc	prodh,w,c
  6146  00233A  6EDA               	movwf	fsr2h,c
  6147  00233C  0E08               	movlw	8
  6148  00233E  18DE               	xorwf	postinc2,w,c
  6149  002340  B4D8               	btfsc	status,2,c
  6150  002342  D00C               	goto	i1l3777
  6151  002344  5030               	movf	RCInt@counter,w,c
  6152  002346  0D01               	mullw	1
  6153  002348  0ED1               	movlw	low _received
  6154  00234A  24F3               	addwf	prodl,w,c
  6155  00234C  6ED9               	movwf	fsr2l,c
  6156  00234E  0E00               	movlw	high _received
  6157  002350  20F4               	addwfc	prodh,w,c
  6158  002352  6EDA               	movwf	fsr2h,c
  6159  002354  0E7F               	movlw	127
  6160  002356  18DE               	xorwf	postinc2,w,c
  6161  002358  A4D8               	btfss	status,2,c
  6162  00235A  D010               	goto	i1l3783
  6163  00235C                     i1l3777:
  6164                           
  6165                           ;KeyValue.c: 28: {
  6166                           ;KeyValue.c: 29: if (counter != 0)
  6167  00235C  5030               	movf	RCInt@counter,w,c
  6168  00235E  B4D8               	btfsc	status,2,c
  6169  002360  D002               	goto	i1l3781
  6170                           
  6171                           ;KeyValue.c: 30: counter--;
  6172  002362  0630               	decf	RCInt@counter,f,c
  6173  002364  D000               	goto	i1l3781
  6174  002366                     i1l3781:
  6175                           
  6176                           ;KeyValue.c: 31: received[counter] = '\0';
  6177  002366  5030               	movf	RCInt@counter,w,c
  6178  002368  0D01               	mullw	1
  6179  00236A  0ED1               	movlw	low _received
  6180  00236C  24F3               	addwf	prodl,w,c
  6181  00236E  6ED9               	movwf	fsr2l,c
  6182  002370  0E00               	movlw	high _received
  6183  002372  20F4               	addwfc	prodh,w,c
  6184  002374  6EDA               	movwf	fsr2h,c
  6185  002376  0E00               	movlw	0
  6186  002378  6EDF               	movwf	indf2,c
  6187                           
  6188                           ;KeyValue.c: 32: }
  6189  00237A  D01A               	goto	i1l3789
  6190  00237C                     i1l3783:
  6191                           
  6192                           ;KeyValue.c: 33: else if ((received[counter] != 0x08) && (received[counter] != 0x0D))
  6193  00237C  5030               	movf	RCInt@counter,w,c
  6194  00237E  0D01               	mullw	1
  6195  002380  0ED1               	movlw	low _received
  6196  002382  24F3               	addwf	prodl,w,c
  6197  002384  6ED9               	movwf	fsr2l,c
  6198  002386  0E00               	movlw	high _received
  6199  002388  20F4               	addwfc	prodh,w,c
  6200  00238A  6EDA               	movwf	fsr2h,c
  6201  00238C  0E08               	movlw	8
  6202  00238E  18DE               	xorwf	postinc2,w,c
  6203  002390  B4D8               	btfsc	status,2,c
  6204  002392  D00E               	goto	i1l3789
  6205  002394  5030               	movf	RCInt@counter,w,c
  6206  002396  0D01               	mullw	1
  6207  002398  0ED1               	movlw	low _received
  6208  00239A  24F3               	addwf	prodl,w,c
  6209  00239C  6ED9               	movwf	fsr2l,c
  6210  00239E  0E00               	movlw	high _received
  6211  0023A0  20F4               	addwfc	prodh,w,c
  6212  0023A2  6EDA               	movwf	fsr2h,c
  6213  0023A4  0E0D               	movlw	13
  6214  0023A6  18DE               	xorwf	postinc2,w,c
  6215  0023A8  B4D8               	btfsc	status,2,c
  6216  0023AA  D002               	goto	i1l3789
  6217                           
  6218                           ;KeyValue.c: 34: counter++;
  6219  0023AC  2A30               	incf	RCInt@counter,f,c
  6220  0023AE  D000               	goto	i1l3789
  6221  0023B0                     i1l3789:
  6222                           
  6223                           ;KeyValue.c: 35: }
  6224                           ;KeyValue.c: 36: while (RCREG != 0x0D);
  6225  0023B0  0E0D               	movlw	13
  6226  0023B2  18AE               	xorwf	4014,w,c	;volatile
  6227  0023B4  A4D8               	btfss	status,2,c
  6228  0023B6  D7AB               	goto	i1l188
  6229                           
  6230                           ;KeyValue.c: 38: SerTx(0x0A);
  6231  0023B8  0E0A               	movlw	10
  6232  0023BA  EC2E  F01A         	call	i1_SerTx
  6233                           
  6234                           ;KeyValue.c: 39: SerTx(0x0D);
  6235  0023BE  0E0D               	movlw	13
  6236  0023C0  EC2E  F01A         	call	i1_SerTx
  6237                           
  6238                           ;KeyValue.c: 40: keyValue(received, 30);
  6239  0023C4  0ED1               	movlw	low _received
  6240  0023C6  6E24               	movwf	keyValue@str,c
  6241  0023C8  0E00               	movlw	high _received
  6242  0023CA  6E25               	movwf	keyValue@str+1,c
  6243  0023CC  0E00               	movlw	0
  6244  0023CE  6E27               	movwf	keyValue@length+1,c
  6245  0023D0  0E1E               	movlw	30
  6246  0023D2  6E26               	movwf	keyValue@length,c
  6247  0023D4  EC41  F008         	call	_keyValue	;wreg free
  6248                           
  6249                           ;KeyValue.c: 41: SerTx(0x0A);
  6250  0023D8  0E0A               	movlw	10
  6251  0023DA  EC2E  F01A         	call	i1_SerTx
  6252                           
  6253                           ;KeyValue.c: 42: SerTx(0x0D);
  6254  0023DE  0E0D               	movlw	13
  6255  0023E0  EC2E  F01A         	call	i1_SerTx
  6256                           
  6257                           ;KeyValue.c: 43: PIR1bits.RCIF = 0;
  6258  0023E4  9A9E               	bcf	3998,5,c	;volatile
  6259                           
  6260                           ;KeyValue.c: 45: if (StrippedKey == 0x01)
  6261  0023E6  0449               	decf	_StrippedKey,w,c
  6262  0023E8  A4D8               	btfss	status,2,c
  6263  0023EA  D00A               	goto	i1l3807
  6264                           
  6265                           ;KeyValue.c: 46: {
  6266                           ;KeyValue.c: 47: SetAngle = StrippedValue;
  6267  0023EC  C045  F0C1         	movff	_StrippedValue,_SetAngle
  6268  0023F0  C046  F0C2         	movff	_StrippedValue+1,_SetAngle+1
  6269  0023F4  C047  F0C3         	movff	_StrippedValue+2,_SetAngle+2
  6270                           
  6271                           ;KeyValue.c: 48: PIDEnableFlag = 3;
  6272  0023F8  0E03               	movlw	3
  6273  0023FA  0100               	movlb	0	; () banked
  6274  0023FC  6FCF               	movwf	_PIDEnableFlag& (0+255),b
  6275                           
  6276                           ;KeyValue.c: 49: }
  6277  0023FE  D021               	goto	i1l205
  6278  002400                     i1l3807:
  6279                           
  6280                           ;KeyValue.c: 51: else if (StrippedKey == 0x05)
  6281  002400  0E05               	movlw	5
  6282  002402  1849               	xorwf	_StrippedKey,w,c
  6283  002404  A4D8               	btfss	status,2,c
  6284  002406  D007               	goto	i1l3811
  6285                           
  6286                           ;KeyValue.c: 52: {
  6287                           ;KeyValue.c: 53: Kp = StrippedValue;
  6288  002408  C045  F0BE         	movff	_StrippedValue,_Kp
  6289  00240C  C046  F0BF         	movff	_StrippedValue+1,_Kp+1
  6290  002410  C047  F0C0         	movff	_StrippedValue+2,_Kp+2
  6291                           
  6292                           ;KeyValue.c: 54: }
  6293  002414  D016               	goto	i1l205
  6294  002416                     i1l3811:
  6295                           
  6296                           ;KeyValue.c: 56: else if (StrippedKey == 0x07)
  6297  002416  0E07               	movlw	7
  6298  002418  1849               	xorwf	_StrippedKey,w,c
  6299  00241A  A4D8               	btfss	status,2,c
  6300  00241C  D007               	goto	i1l3815
  6301                           
  6302                           ;KeyValue.c: 57: {
  6303                           ;KeyValue.c: 58: Ki = StrippedValue;
  6304  00241E  C045  F0BB         	movff	_StrippedValue,_Ki
  6305  002422  C046  F0BC         	movff	_StrippedValue+1,_Ki+1
  6306  002426  C047  F0BD         	movff	_StrippedValue+2,_Ki+2
  6307                           
  6308                           ;KeyValue.c: 59: }
  6309  00242A  D00B               	goto	i1l205
  6310  00242C                     i1l3815:
  6311                           
  6312                           ;KeyValue.c: 61: else if (StrippedKey == 0x09)
  6313  00242C  0E09               	movlw	9
  6314  00242E  1849               	xorwf	_StrippedKey,w,c
  6315  002430  A4D8               	btfss	status,2,c
  6316  002432  D007               	goto	i1l205
  6317                           
  6318                           ;KeyValue.c: 62: {
  6319                           ;KeyValue.c: 63: Kd = StrippedValue;
  6320  002434  C045  F0B8         	movff	_StrippedValue,_Kd
  6321  002438  C046  F0B9         	movff	_StrippedValue+1,_Kd+1
  6322  00243C  C047  F0BA         	movff	_StrippedValue+2,_Kd+2
  6323  002440  D000               	goto	i1l205
  6324  002442                     i1l205:
  6325  002442  0012               	return		;funcret
  6326  002444                     __end_of_RCInt:
  6327                           	opt stack 0
  6328                           pclatu	equ	0xFFB
  6329                           pclath	equ	0xFFA
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           intcon	equ	0xFF2
  6337                           intcon2	equ	0xFF1
  6338                           indf0	equ	0xFEF
  6339                           postinc0	equ	0xFEE
  6340                           fsr0h	equ	0xFEA
  6341                           fsr0l	equ	0xFE9
  6342                           wreg	equ	0xFE8
  6343                           fsr1h	equ	0xFE2
  6344                           fsr1l	equ	0xFE1
  6345                           bsr	equ	0xFE0
  6346                           indf2	equ	0xFDF
  6347                           postinc2	equ	0xFDE
  6348                           fsr2h	equ	0xFDA
  6349                           fsr2l	equ	0xFD9
  6350                           status	equ	0xFD8
  6351                           
  6352 ;; *************** function _keyValue *****************
  6353 ;; Defined at:
  6354 ;;		line 67 in file "KeyValue.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  str             2   35[COMRAM] PTR unsigned char 
  6357 ;;		 -> received(30), 
  6358 ;;  length          2   37[COMRAM] unsigned short 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  str_end         2   41[COMRAM] PTR unsigned char 
  6361 ;;		 -> value(10), 
  6362 ;;  x               1   45[COMRAM] unsigned char 
  6363 ;;  y               1   44[COMRAM] unsigned char 
  6364 ;;  flag            1   43[COMRAM] unsigned char 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;		None               void
  6367 ;; Registers used:
  6368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;Total ram usage:       11 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    5
  6381 ;; This function calls:
  6382 ;;		_isspace
  6383 ;;		_strcmp
  6384 ;;		_strtod
  6385 ;;		i1_SerTx
  6386 ;;		i1_SerTxStr
  6387 ;; This function is called by:
  6388 ;;		_RCInt
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text37
  6393  001082                     __ptext37:
  6394                           	opt stack 0
  6395  001082                     _keyValue:
  6396                           	opt stack 18
  6397                           
  6398                           ;KeyValue.c: 69: unsigned char x = 0;
  6399                           
  6400                           ;incstack = 0
  6401  001082  0E00               	movlw	0
  6402  001084  6E2E               	movwf	keyValue@x,c
  6403                           
  6404                           ;KeyValue.c: 70: unsigned char y = 0;
  6405  001086  0E00               	movlw	0
  6406  001088  6E2D               	movwf	keyValue@y,c
  6407  00108A  D00F               	goto	i1l3277
  6408  00108C                     i1l3271:
  6409                           
  6410                           ;KeyValue.c: 75: {
  6411                           ;KeyValue.c: 76: x++;
  6412  00108C  2A2E               	incf	keyValue@x,f,c
  6413                           
  6414                           ;KeyValue.c: 77: if (str[x] == '=')
  6415  00108E  502E               	movf	keyValue@x,w,c
  6416  001090  0D01               	mullw	1
  6417  001092  50F3               	movf	prodl,w,c
  6418  001094  2424               	addwf	keyValue@str,w,c
  6419  001096  6ED9               	movwf	fsr2l,c
  6420  001098  50F4               	movf	prodh,w,c
  6421  00109A  2025               	addwfc	keyValue@str+1,w,c
  6422  00109C  6EDA               	movwf	fsr2h,c
  6423  00109E  0E3D               	movlw	61
  6424  0010A0  18DE               	xorwf	postinc2,w,c
  6425  0010A2  A4D8               	btfss	status,2,c
  6426  0010A4  D002               	goto	i1l3277
  6427                           
  6428                           ;KeyValue.c: 78: {
  6429                           ;KeyValue.c: 79: flag = 1;
  6430  0010A6  0E01               	movlw	1
  6431  0010A8  D001               	goto	L2
  6432  0010AA                     i1l3277:
  6433                           
  6434                           ;KeyValue.c: 81: else
  6435                           ;KeyValue.c: 82: flag = 0;
  6436  0010AA  0E00               	movlw	0
  6437  0010AC                     L2:
  6438  0010AC  6E2C               	movwf	keyValue@flag,c
  6439  0010AE  D000               	goto	i1l3279
  6440  0010B0                     i1l3279:
  6441  0010B0  502E               	movf	keyValue@x,w,c
  6442  0010B2  0D01               	mullw	1
  6443  0010B4  50F3               	movf	prodl,w,c
  6444  0010B6  2424               	addwf	keyValue@str,w,c
  6445  0010B8  6ED9               	movwf	fsr2l,c
  6446  0010BA  50F4               	movf	prodh,w,c
  6447  0010BC  2025               	addwfc	keyValue@str+1,w,c
  6448  0010BE  6EDA               	movwf	fsr2h,c
  6449  0010C0  0E3D               	movlw	61
  6450  0010C2  18DE               	xorwf	postinc2,w,c
  6451  0010C4  B4D8               	btfsc	status,2,c
  6452  0010C6  D00B               	goto	i1l3283
  6453  0010C8  502E               	movf	keyValue@x,w,c
  6454  0010CA  6E28               	movwf	??_keyValue& (0+255),c
  6455  0010CC  6A29               	clrf	(??_keyValue+1)& (0+255),c
  6456  0010CE  5026               	movf	keyValue@length,w,c
  6457  0010D0  5C28               	subwf	??_keyValue,w,c
  6458  0010D2  5027               	movf	keyValue@length+1,w,c
  6459  0010D4  5829               	subwfb	??_keyValue+1,w,c
  6460  0010D6  B0D8               	btfsc	status,0,c
  6461  0010D8  D002               	goto	i1l3283
  6462  0010DA  D7D8               	goto	i1l3271
  6463  0010DC  D000               	goto	i1l3283
  6464  0010DE                     i1l3283:
  6465                           
  6466                           ;KeyValue.c: 83: }
  6467                           ;KeyValue.c: 84: if ((x < length) && flag)
  6468  0010DE  502E               	movf	keyValue@x,w,c
  6469  0010E0  6E28               	movwf	??_keyValue& (0+255),c
  6470  0010E2  6A29               	clrf	(??_keyValue+1)& (0+255),c
  6471  0010E4  5026               	movf	keyValue@length,w,c
  6472  0010E6  5C28               	subwf	??_keyValue,w,c
  6473  0010E8  5027               	movf	keyValue@length+1,w,c
  6474  0010EA  5829               	subwfb	??_keyValue+1,w,c
  6475  0010EC  B0D8               	btfsc	status,0,c
  6476  0010EE  D100               	goto	i1l3349
  6477  0010F0  502C               	movf	keyValue@flag,w,c
  6478  0010F2  B4D8               	btfsc	status,2,c
  6479  0010F4  D0FD               	goto	i1l3349
  6480                           
  6481                           ;KeyValue.c: 85: {
  6482                           ;KeyValue.c: 86: for (y = 0; y < x && y < 5; y++)
  6483  0010F6  0E00               	movlw	0
  6484  0010F8  6E2D               	movwf	keyValue@y,c
  6485  0010FA  D022               	goto	i1l3295
  6486  0010FC                     i1l3289:
  6487                           
  6488                           ;KeyValue.c: 87: {
  6489                           ;KeyValue.c: 88: if (isspace(str[y]) == 0)
  6490  0010FC  502D               	movf	keyValue@y,w,c
  6491  0010FE  0D01               	mullw	1
  6492  001100  50F3               	movf	prodl,w,c
  6493  001102  2424               	addwf	keyValue@str,w,c
  6494  001104  6ED9               	movwf	fsr2l,c
  6495  001106  50F4               	movf	prodh,w,c
  6496  001108  2025               	addwfc	keyValue@str+1,w,c
  6497  00110A  6EDA               	movwf	fsr2h,c
  6498  00110C  50DF               	movf	indf2,w,c
  6499  00110E  EC64  F019         	call	_isspace
  6500  001112  B0D8               	btfsc	status,0,c
  6501  001114  D013               	goto	i1l3293
  6502                           
  6503                           ;KeyValue.c: 89: key[y] = str[y];
  6504  001116  502D               	movf	keyValue@y,w,c
  6505  001118  0D01               	mullw	1
  6506  00111A  50F3               	movf	prodl,w,c
  6507  00111C  2424               	addwf	keyValue@str,w,c
  6508  00111E  6ED9               	movwf	fsr2l,c
  6509  001120  50F4               	movf	prodh,w,c
  6510  001122  2025               	addwfc	keyValue@str+1,w,c
  6511  001124  6EDA               	movwf	fsr2h,c
  6512  001126  502D               	movf	keyValue@y,w,c
  6513  001128  0D01               	mullw	1
  6514  00112A  0E54               	movlw	low _key
  6515  00112C  24F3               	addwf	prodl,w,c
  6516  00112E  6EE1               	movwf	fsr1l,c
  6517  001130  0E00               	movlw	high _key
  6518  001132  20F4               	addwfc	prodh,w,c
  6519  001134  6EE2               	movwf	fsr1h,c
  6520  001136  CFDF FFE7          	movff	indf2,indf1
  6521  00113A  D000               	goto	i1l3293
  6522  00113C                     i1l3293:
  6523  00113C  2A2D               	incf	keyValue@y,f,c
  6524  00113E  D000               	goto	i1l3295
  6525  001140                     i1l3295:
  6526  001140  502E               	movf	keyValue@x,w,c
  6527  001142  5C2D               	subwf	keyValue@y,w,c
  6528  001144  B0D8               	btfsc	status,0,c
  6529  001146  D004               	goto	i1l3299
  6530  001148  0E04               	movlw	4
  6531  00114A  642D               	cpfsgt	keyValue@y,c
  6532  00114C  D7D7               	goto	i1l3289
  6533  00114E  D000               	goto	i1l3299
  6534  001150                     i1l3299:
  6535                           
  6536                           ;KeyValue.c: 90: }
  6537                           ;KeyValue.c: 92: SerTxStr("Key: ");
  6538  001150  0E4E               	movlw	low STR_3
  6539  001152  6E02               	movwf	i1SerTxStr@string,c
  6540  001154  0E10               	movlw	high STR_3
  6541  001156  6E03               	movwf	i1SerTxStr@string+1,c
  6542  001158  ECD1  F017         	call	i1_SerTxStr	;wreg free
  6543                           
  6544                           ;KeyValue.c: 93: SerTxStr(key);
  6545  00115C  0E54               	movlw	low _key
  6546  00115E  6E02               	movwf	i1SerTxStr@string,c
  6547  001160  0E00               	movlw	high _key
  6548  001162  6E03               	movwf	i1SerTxStr@string+1,c
  6549  001164  ECD1  F017         	call	i1_SerTxStr	;wreg free
  6550                           
  6551                           ;KeyValue.c: 95: for (y = 0; str[x + 1] != (0); y++)
  6552  001168  0E00               	movlw	0
  6553  00116A  6E2D               	movwf	keyValue@y,c
  6554  00116C  D015               	goto	i1l3309
  6555  00116E                     i1l3303:
  6556                           
  6557                           ;KeyValue.c: 96: {
  6558                           ;KeyValue.c: 97: x++;
  6559  00116E  2A2E               	incf	keyValue@x,f,c
  6560                           
  6561                           ;KeyValue.c: 99: value[y] = str[x];
  6562  001170  502E               	movf	keyValue@x,w,c
  6563  001172  0D01               	mullw	1
  6564  001174  50F3               	movf	prodl,w,c
  6565  001176  2424               	addwf	keyValue@str,w,c
  6566  001178  6ED9               	movwf	fsr2l,c
  6567  00117A  50F4               	movf	prodh,w,c
  6568  00117C  2025               	addwfc	keyValue@str+1,w,c
  6569  00117E  6EDA               	movwf	fsr2h,c
  6570  001180  502D               	movf	keyValue@y,w,c
  6571  001182  0D01               	mullw	1
  6572  001184  0E4A               	movlw	low _value
  6573  001186  24F3               	addwf	prodl,w,c
  6574  001188  6EE1               	movwf	fsr1l,c
  6575  00118A  0E00               	movlw	high _value
  6576  00118C  20F4               	addwfc	prodh,w,c
  6577  00118E  6EE2               	movwf	fsr1h,c
  6578  001190  CFDF FFE7          	movff	indf2,indf1
  6579  001194  2A2D               	incf	keyValue@y,f,c
  6580  001196  D000               	goto	i1l3309
  6581  001198                     i1l3309:
  6582  001198  502E               	movf	keyValue@x,w,c
  6583  00119A  6E28               	movwf	??_keyValue& (0+255),c
  6584  00119C  6A29               	clrf	(??_keyValue+1)& (0+255),c
  6585  00119E  0E01               	movlw	1
  6586  0011A0  2628               	addwf	??_keyValue,f,c
  6587  0011A2  0E00               	movlw	0
  6588  0011A4  2229               	addwfc	??_keyValue+1,f,c
  6589  0011A6  5028               	movf	??_keyValue,w,c
  6590  0011A8  2424               	addwf	keyValue@str,w,c
  6591  0011AA  6ED9               	movwf	fsr2l,c
  6592  0011AC  5029               	movf	??_keyValue+1,w,c
  6593  0011AE  2025               	addwfc	keyValue@str+1,w,c
  6594  0011B0  6EDA               	movwf	fsr2h,c
  6595  0011B2  50DF               	movf	indf2,w,c
  6596  0011B4  A4D8               	btfss	status,2,c
  6597  0011B6  D7DB               	goto	i1l3303
  6598                           
  6599                           ;KeyValue.c: 100: }
  6600                           ;KeyValue.c: 101: SerTxStr("   Value: ");
  6601  0011B8  0E35               	movlw	low STR_4
  6602  0011BA  6E02               	movwf	i1SerTxStr@string,c
  6603  0011BC  0E10               	movlw	high STR_4
  6604  0011BE  6E03               	movwf	i1SerTxStr@string+1,c
  6605  0011C0  ECD1  F017         	call	i1_SerTxStr	;wreg free
  6606                           
  6607                           ;KeyValue.c: 102: SerTxStr(value);
  6608  0011C4  0E4A               	movlw	low _value
  6609  0011C6  6E02               	movwf	i1SerTxStr@string,c
  6610  0011C8  0E00               	movlw	high _value
  6611  0011CA  6E03               	movwf	i1SerTxStr@string+1,c
  6612  0011CC  ECD1  F017         	call	i1_SerTxStr	;wreg free
  6613                           
  6614                           ;KeyValue.c: 104: if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  6615  0011D0  0E54               	movlw	low _key
  6616  0011D2  6E01               	movwf	strcmp@s1,c
  6617  0011D4  0E00               	movlw	high _key
  6618  0011D6  6E02               	movwf	strcmp@s1+1,c
  6619  0011D8  0E5C               	movlw	low STR_5
  6620  0011DA  6E03               	movwf	strcmp@s2,c
  6621  0011DC  0E10               	movlw	high STR_5
  6622  0011DE  6E04               	movwf	strcmp@s2+1,c
  6623  0011E0  EC27  F018         	call	_strcmp	;wreg free
  6624  0011E4  5001               	movf	?_strcmp,w,c
  6625  0011E6  1002               	iorwf	?_strcmp+1,w,c
  6626  0011E8  B4D8               	btfsc	status,2,c
  6627  0011EA  D00E               	goto	i1l3317
  6628  0011EC  0E54               	movlw	low _key
  6629  0011EE  6E01               	movwf	strcmp@s1,c
  6630  0011F0  0E00               	movlw	high _key
  6631  0011F2  6E02               	movwf	strcmp@s1+1,c
  6632  0011F4  0E64               	movlw	low STR_6
  6633  0011F6  6E03               	movwf	strcmp@s2,c
  6634  0011F8  0E10               	movlw	high STR_6
  6635  0011FA  6E04               	movwf	strcmp@s2+1,c
  6636  0011FC  EC27  F018         	call	_strcmp	;wreg free
  6637  001200  5001               	movf	?_strcmp,w,c
  6638  001202  1002               	iorwf	?_strcmp+1,w,c
  6639  001204  A4D8               	btfss	status,2,c
  6640  001206  D006               	goto	i1l3321
  6641  001208                     i1l3317:
  6642                           
  6643                           ;KeyValue.c: 105: {
  6644                           ;KeyValue.c: 106: StrippedKey = 0x01;
  6645  001208  0E01               	movlw	1
  6646  00120A  6E49               	movwf	_StrippedKey,c
  6647                           
  6648                           ;KeyValue.c: 107: SerTx(';');
  6649  00120C  0E3B               	movlw	59
  6650  00120E  EC2E  F01A         	call	i1_SerTx
  6651                           
  6652                           ;KeyValue.c: 108: }
  6653  001212  D197               	goto	i1l3421
  6654  001214                     i1l3321:
  6655                           
  6656                           ;KeyValue.c: 110: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  6657  001214  0E54               	movlw	low _key
  6658  001216  6E01               	movwf	strcmp@s1,c
  6659  001218  0E00               	movlw	high _key
  6660  00121A  6E02               	movwf	strcmp@s1+1,c
  6661  00121C  0E6E               	movlw	low STR_7
  6662  00121E  6E03               	movwf	strcmp@s2,c
  6663  001220  0E10               	movlw	high STR_7
  6664  001222  6E04               	movwf	strcmp@s2+1,c
  6665  001224  EC27  F018         	call	_strcmp	;wreg free
  6666  001228  5001               	movf	?_strcmp,w,c
  6667  00122A  1002               	iorwf	?_strcmp+1,w,c
  6668  00122C  B4D8               	btfsc	status,2,c
  6669  00122E  D00E               	goto	i1l3325
  6670  001230  0E54               	movlw	low _key
  6671  001232  6E01               	movwf	strcmp@s1,c
  6672  001234  0E00               	movlw	high _key
  6673  001236  6E02               	movwf	strcmp@s1+1,c
  6674  001238  0E7A               	movlw	low STR_8
  6675  00123A  6E03               	movwf	strcmp@s2,c
  6676  00123C  0E10               	movlw	high STR_8
  6677  00123E  6E04               	movwf	strcmp@s2+1,c
  6678  001240  EC27  F018         	call	_strcmp	;wreg free
  6679  001244  5001               	movf	?_strcmp,w,c
  6680  001246  1002               	iorwf	?_strcmp+1,w,c
  6681  001248  A4D8               	btfss	status,2,c
  6682  00124A  D006               	goto	i1l3329
  6683  00124C                     i1l3325:
  6684                           
  6685                           ;KeyValue.c: 111: {
  6686                           ;KeyValue.c: 112: StrippedKey = 0x05;
  6687  00124C  0E05               	movlw	5
  6688  00124E  6E49               	movwf	_StrippedKey,c
  6689                           
  6690                           ;KeyValue.c: 113: SerTx(';');
  6691  001250  0E3B               	movlw	59
  6692  001252  EC2E  F01A         	call	i1_SerTx
  6693                           
  6694                           ;KeyValue.c: 114: }
  6695  001256  D175               	goto	i1l3421
  6696  001258                     i1l3329:
  6697                           
  6698                           ;KeyValue.c: 116: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  6699  001258  0E54               	movlw	low _key
  6700  00125A  6E01               	movwf	strcmp@s1,c
  6701  00125C  0E00               	movlw	high _key
  6702  00125E  6E02               	movwf	strcmp@s1+1,c
  6703  001260  0E6B               	movlw	low STR_9
  6704  001262  6E03               	movwf	strcmp@s2,c
  6705  001264  0E10               	movlw	high STR_9
  6706  001266  6E04               	movwf	strcmp@s2+1,c
  6707  001268  EC27  F018         	call	_strcmp	;wreg free
  6708  00126C  5001               	movf	?_strcmp,w,c
  6709  00126E  1002               	iorwf	?_strcmp+1,w,c
  6710  001270  B4D8               	btfsc	status,2,c
  6711  001272  D00E               	goto	i1l3333
  6712  001274  0E54               	movlw	low _key
  6713  001276  6E01               	movwf	strcmp@s1,c
  6714  001278  0E00               	movlw	high _key
  6715  00127A  6E02               	movwf	strcmp@s1+1,c
  6716  00127C  0E77               	movlw	low STR_10
  6717  00127E  6E03               	movwf	strcmp@s2,c
  6718  001280  0E10               	movlw	high STR_10
  6719  001282  6E04               	movwf	strcmp@s2+1,c
  6720  001284  EC27  F018         	call	_strcmp	;wreg free
  6721  001288  5001               	movf	?_strcmp,w,c
  6722  00128A  1002               	iorwf	?_strcmp+1,w,c
  6723  00128C  A4D8               	btfss	status,2,c
  6724  00128E  D006               	goto	i1l3337
  6725  001290                     i1l3333:
  6726                           
  6727                           ;KeyValue.c: 117: {
  6728                           ;KeyValue.c: 118: StrippedKey = 0x07;
  6729  001290  0E07               	movlw	7
  6730  001292  6E49               	movwf	_StrippedKey,c
  6731                           
  6732                           ;KeyValue.c: 119: SerTx(';');
  6733  001294  0E3B               	movlw	59
  6734  001296  EC2E  F01A         	call	i1_SerTx
  6735                           
  6736                           ;KeyValue.c: 120: }
  6737  00129A  D153               	goto	i1l3421
  6738  00129C                     i1l3337:
  6739                           
  6740                           ;KeyValue.c: 122: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  6741  00129C  0E54               	movlw	low _key
  6742  00129E  6E01               	movwf	strcmp@s1,c
  6743  0012A0  0E00               	movlw	high _key
  6744  0012A2  6E02               	movwf	strcmp@s1+1,c
  6745  0012A4  0E68               	movlw	low STR_11
  6746  0012A6  6E03               	movwf	strcmp@s2,c
  6747  0012A8  0E10               	movlw	high STR_11
  6748  0012AA  6E04               	movwf	strcmp@s2+1,c
  6749  0012AC  EC27  F018         	call	_strcmp	;wreg free
  6750  0012B0  5001               	movf	?_strcmp,w,c
  6751  0012B2  1002               	iorwf	?_strcmp+1,w,c
  6752  0012B4  B4D8               	btfsc	status,2,c
  6753  0012B6  D00E               	goto	i1l3341
  6754  0012B8  0E54               	movlw	low _key
  6755  0012BA  6E01               	movwf	strcmp@s1,c
  6756  0012BC  0E00               	movlw	high _key
  6757  0012BE  6E02               	movwf	strcmp@s1+1,c
  6758  0012C0  0E74               	movlw	low STR_12
  6759  0012C2  6E03               	movwf	strcmp@s2,c
  6760  0012C4  0E10               	movlw	high STR_12
  6761  0012C6  6E04               	movwf	strcmp@s2+1,c
  6762  0012C8  EC27  F018         	call	_strcmp	;wreg free
  6763  0012CC  5001               	movf	?_strcmp,w,c
  6764  0012CE  1002               	iorwf	?_strcmp+1,w,c
  6765  0012D0  A4D8               	btfss	status,2,c
  6766  0012D2  D006               	goto	i1l3345
  6767  0012D4                     i1l3341:
  6768                           
  6769                           ;KeyValue.c: 123: {
  6770                           ;KeyValue.c: 124: StrippedKey = 0x09;
  6771  0012D4  0E09               	movlw	9
  6772  0012D6  6E49               	movwf	_StrippedKey,c
  6773                           
  6774                           ;KeyValue.c: 125: SerTx(';');
  6775  0012D8  0E3B               	movlw	59
  6776  0012DA  EC2E  F01A         	call	i1_SerTx
  6777                           
  6778                           ;KeyValue.c: 126: }
  6779  0012DE  D131               	goto	i1l3421
  6780  0012E0                     i1l3345:
  6781                           
  6782                           ;KeyValue.c: 128: else
  6783                           ;KeyValue.c: 129: {
  6784                           ;KeyValue.c: 130: SerTxStr("???");
  6785  0012E0  0E54               	movlw	low STR_13
  6786  0012E2  6E02               	movwf	i1SerTxStr@string,c
  6787  0012E4  0E10               	movlw	high STR_13
  6788  0012E6  6E03               	movwf	i1SerTxStr@string+1,c
  6789  0012E8  ECD1  F017         	call	i1_SerTxStr	;wreg free
  6790  0012EC  D127               	goto	i1l3419
  6791                           
  6792                           ;KeyValue.c: 132: }
  6793                           ;KeyValue.c: 133: }
  6794                           
  6795                           ;KeyValue.c: 131: StrippedKey = 0;
  6796  0012EE  D129               	goto	i1l3421
  6797  0012F0                     i1l3349:
  6798                           
  6799                           ;KeyValue.c: 135: else if (flag == 0)
  6800  0012F0  502C               	movf	keyValue@flag,w,c
  6801  0012F2  A4D8               	btfss	status,2,c
  6802  0012F4  D126               	goto	i1l3421
  6803                           
  6804                           ;KeyValue.c: 136: {
  6805                           ;KeyValue.c: 137: y = 0;
  6806  0012F6  0E00               	movlw	0
  6807  0012F8  6E2D               	movwf	keyValue@y,c
  6808                           
  6809                           ;KeyValue.c: 138: while (str[y] != 0x0D)
  6810  0012FA  D014               	goto	i1l3357
  6811  0012FC                     i1l3353:
  6812                           
  6813                           ;KeyValue.c: 139: {
  6814                           ;KeyValue.c: 141: key[y] = str[y];
  6815  0012FC  502D               	movf	keyValue@y,w,c
  6816  0012FE  0D01               	mullw	1
  6817  001300  50F3               	movf	prodl,w,c
  6818  001302  2424               	addwf	keyValue@str,w,c
  6819  001304  6ED9               	movwf	fsr2l,c
  6820  001306  50F4               	movf	prodh,w,c
  6821  001308  2025               	addwfc	keyValue@str+1,w,c
  6822  00130A  6EDA               	movwf	fsr2h,c
  6823  00130C  502D               	movf	keyValue@y,w,c
  6824  00130E  0D01               	mullw	1
  6825  001310  0E54               	movlw	low _key
  6826  001312  24F3               	addwf	prodl,w,c
  6827  001314  6EE1               	movwf	fsr1l,c
  6828  001316  0E00               	movlw	high _key
  6829  001318  20F4               	addwfc	prodh,w,c
  6830  00131A  6EE2               	movwf	fsr1h,c
  6831  00131C  CFDF FFE7          	movff	indf2,indf1
  6832                           
  6833                           ;KeyValue.c: 142: y++;
  6834  001320  2A2D               	incf	keyValue@y,f,c
  6835  001322  D000               	goto	i1l3357
  6836  001324                     i1l3357:
  6837  001324  502D               	movf	keyValue@y,w,c
  6838  001326  0D01               	mullw	1
  6839  001328  50F3               	movf	prodl,w,c
  6840  00132A  2424               	addwf	keyValue@str,w,c
  6841  00132C  6ED9               	movwf	fsr2l,c
  6842  00132E  50F4               	movf	prodh,w,c
  6843  001330  2025               	addwfc	keyValue@str+1,w,c
  6844  001332  6EDA               	movwf	fsr2h,c
  6845  001334  0E0D               	movlw	13
  6846  001336  18DE               	xorwf	postinc2,w,c
  6847  001338  A4D8               	btfss	status,2,c
  6848  00133A  D7E0               	goto	i1l3353
  6849                           
  6850                           ;KeyValue.c: 143: }
  6851                           ;KeyValue.c: 145: SerTxStr("Key: ");
  6852  00133C  0E4E               	movlw	low STR_3
  6853  00133E  6E02               	movwf	i1SerTxStr@string,c
  6854  001340  0E10               	movlw	high STR_3
  6855  001342  6E03               	movwf	i1SerTxStr@string+1,c
  6856  001344  ECD1  F017         	call	i1_SerTxStr	;wreg free
  6857                           
  6858                           ;KeyValue.c: 146: SerTxStr(key);
  6859  001348  0E54               	movlw	low _key
  6860  00134A  6E02               	movwf	i1SerTxStr@string,c
  6861  00134C  0E00               	movlw	high _key
  6862  00134E  6E03               	movwf	i1SerTxStr@string+1,c
  6863  001350  ECD1  F017         	call	i1_SerTxStr	;wreg free
  6864                           
  6865                           ;KeyValue.c: 148: if ((strcmp(key, "AZ") == 0) || (strcmp(key, "az") == 0))
  6866  001354  0E54               	movlw	low _key
  6867  001356  6E01               	movwf	strcmp@s1,c
  6868  001358  0E00               	movlw	high _key
  6869  00135A  6E02               	movwf	strcmp@s1+1,c
  6870  00135C  0E71               	movlw	low STR_15
  6871  00135E  6E03               	movwf	strcmp@s2,c
  6872  001360  0E10               	movlw	high STR_15
  6873  001362  6E04               	movwf	strcmp@s2+1,c
  6874  001364  EC27  F018         	call	_strcmp	;wreg free
  6875  001368  5001               	movf	?_strcmp,w,c
  6876  00136A  1002               	iorwf	?_strcmp+1,w,c
  6877  00136C  B4D8               	btfsc	status,2,c
  6878  00136E  D00E               	goto	i1l3365
  6879  001370  0E54               	movlw	low _key
  6880  001372  6E01               	movwf	strcmp@s1,c
  6881  001374  0E00               	movlw	high _key
  6882  001376  6E02               	movwf	strcmp@s1+1,c
  6883  001378  0E7D               	movlw	low STR_16
  6884  00137A  6E03               	movwf	strcmp@s2,c
  6885  00137C  0E10               	movlw	high STR_16
  6886  00137E  6E04               	movwf	strcmp@s2+1,c
  6887  001380  EC27  F018         	call	_strcmp	;wreg free
  6888  001384  5001               	movf	?_strcmp,w,c
  6889  001386  1002               	iorwf	?_strcmp+1,w,c
  6890  001388  A4D8               	btfss	status,2,c
  6891  00138A  D006               	goto	i1l3369
  6892  00138C                     i1l3365:
  6893                           
  6894                           ;KeyValue.c: 149: {
  6895                           ;KeyValue.c: 150: AZEL = 1;
  6896  00138C  0E01               	movlw	1
  6897  00138E  6E59               	movwf	_AZEL,c
  6898                           
  6899                           ;KeyValue.c: 151: SerTx(';');
  6900  001390  0E3B               	movlw	59
  6901  001392  EC2E  F01A         	call	i1_SerTx
  6902                           
  6903                           ;KeyValue.c: 152: }
  6904  001396  D0D5               	goto	i1l3421
  6905  001398                     i1l3369:
  6906                           
  6907                           ;KeyValue.c: 154: else if ((strcmp(key, "EL") == 0) || (strcmp(key, "el") == 0))
  6908  001398  0E54               	movlw	low _key
  6909  00139A  6E01               	movwf	strcmp@s1,c
  6910  00139C  0E00               	movlw	high _key
  6911  00139E  6E02               	movwf	strcmp@s1+1,c
  6912  0013A0  0E59               	movlw	low (STR_21+1)
  6913  0013A2  6E03               	movwf	strcmp@s2,c
  6914  0013A4  0E10               	movlw	high (STR_21+1)
  6915  0013A6  6E04               	movwf	strcmp@s2+1,c
  6916  0013A8  EC27  F018         	call	_strcmp	;wreg free
  6917  0013AC  5001               	movf	?_strcmp,w,c
  6918  0013AE  1002               	iorwf	?_strcmp+1,w,c
  6919  0013B0  B4D8               	btfsc	status,2,c
  6920  0013B2  D00E               	goto	i1l3373
  6921  0013B4  0E54               	movlw	low _key
  6922  0013B6  6E01               	movwf	strcmp@s1,c
  6923  0013B8  0E00               	movlw	high _key
  6924  0013BA  6E02               	movwf	strcmp@s1+1,c
  6925  0013BC  0E61               	movlw	low (STR_22+1)
  6926  0013BE  6E03               	movwf	strcmp@s2,c
  6927  0013C0  0E10               	movlw	high (STR_22+1)
  6928  0013C2  6E04               	movwf	strcmp@s2+1,c
  6929  0013C4  EC27  F018         	call	_strcmp	;wreg free
  6930  0013C8  5001               	movf	?_strcmp,w,c
  6931  0013CA  1002               	iorwf	?_strcmp+1,w,c
  6932  0013CC  A4D8               	btfss	status,2,c
  6933  0013CE  D006               	goto	i1l3377
  6934  0013D0                     i1l3373:
  6935                           
  6936                           ;KeyValue.c: 155: {
  6937                           ;KeyValue.c: 156: AZEL = 2;
  6938  0013D0  0E02               	movlw	2
  6939  0013D2  6E59               	movwf	_AZEL,c
  6940                           
  6941                           ;KeyValue.c: 157: SerTx(';');
  6942  0013D4  0E3B               	movlw	59
  6943  0013D6  EC2E  F01A         	call	i1_SerTx
  6944                           
  6945                           ;KeyValue.c: 158: }
  6946  0013DA  D0B3               	goto	i1l3421
  6947  0013DC                     i1l3377:
  6948                           
  6949                           ;KeyValue.c: 160: else if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  6950  0013DC  0E54               	movlw	low _key
  6951  0013DE  6E01               	movwf	strcmp@s1,c
  6952  0013E0  0E00               	movlw	high _key
  6953  0013E2  6E02               	movwf	strcmp@s1+1,c
  6954  0013E4  0E5C               	movlw	low STR_5
  6955  0013E6  6E03               	movwf	strcmp@s2,c
  6956  0013E8  0E10               	movlw	high STR_5
  6957  0013EA  6E04               	movwf	strcmp@s2+1,c
  6958  0013EC  EC27  F018         	call	_strcmp	;wreg free
  6959  0013F0  5001               	movf	?_strcmp,w,c
  6960  0013F2  1002               	iorwf	?_strcmp+1,w,c
  6961  0013F4  B4D8               	btfsc	status,2,c
  6962  0013F6  D00E               	goto	i1l3381
  6963  0013F8  0E54               	movlw	low _key
  6964  0013FA  6E01               	movwf	strcmp@s1,c
  6965  0013FC  0E00               	movlw	high _key
  6966  0013FE  6E02               	movwf	strcmp@s1+1,c
  6967  001400  0E64               	movlw	low STR_6
  6968  001402  6E03               	movwf	strcmp@s2,c
  6969  001404  0E10               	movlw	high STR_6
  6970  001406  6E04               	movwf	strcmp@s2+1,c
  6971  001408  EC27  F018         	call	_strcmp	;wreg free
  6972  00140C  5001               	movf	?_strcmp,w,c
  6973  00140E  1002               	iorwf	?_strcmp+1,w,c
  6974  001410  A4D8               	btfss	status,2,c
  6975  001412  D006               	goto	i1l3385
  6976  001414                     i1l3381:
  6977                           
  6978                           ;KeyValue.c: 161: {
  6979                           ;KeyValue.c: 162: StrippedKey = 0x02;
  6980  001414  0E02               	movlw	2
  6981  001416  6E49               	movwf	_StrippedKey,c
  6982                           
  6983                           ;KeyValue.c: 163: SerTx(';');
  6984  001418  0E3B               	movlw	59
  6985  00141A  EC2E  F01A         	call	i1_SerTx
  6986                           
  6987                           ;KeyValue.c: 164: }
  6988  00141E  D091               	goto	i1l3421
  6989  001420                     i1l3385:
  6990                           
  6991                           ;KeyValue.c: 166: else if ((strcmp(key, "VEL") == 0) || (strcmp(key, "vel") == 0))
  6992  001420  0E54               	movlw	low _key
  6993  001422  6E01               	movwf	strcmp@s1,c
  6994  001424  0E00               	movlw	high _key
  6995  001426  6E02               	movwf	strcmp@s1+1,c
  6996  001428  0E58               	movlw	low STR_21
  6997  00142A  6E03               	movwf	strcmp@s2,c
  6998  00142C  0E10               	movlw	high STR_21
  6999  00142E  6E04               	movwf	strcmp@s2+1,c
  7000  001430  EC27  F018         	call	_strcmp	;wreg free
  7001  001434  5001               	movf	?_strcmp,w,c
  7002  001436  1002               	iorwf	?_strcmp+1,w,c
  7003  001438  B4D8               	btfsc	status,2,c
  7004  00143A  D00E               	goto	i1l3389
  7005  00143C  0E54               	movlw	low _key
  7006  00143E  6E01               	movwf	strcmp@s1,c
  7007  001440  0E00               	movlw	high _key
  7008  001442  6E02               	movwf	strcmp@s1+1,c
  7009  001444  0E60               	movlw	low STR_22
  7010  001446  6E03               	movwf	strcmp@s2,c
  7011  001448  0E10               	movlw	high STR_22
  7012  00144A  6E04               	movwf	strcmp@s2+1,c
  7013  00144C  EC27  F018         	call	_strcmp	;wreg free
  7014  001450  5001               	movf	?_strcmp,w,c
  7015  001452  1002               	iorwf	?_strcmp+1,w,c
  7016  001454  A4D8               	btfss	status,2,c
  7017  001456  D006               	goto	i1l3393
  7018  001458                     i1l3389:
  7019                           
  7020                           ;KeyValue.c: 167: {
  7021                           ;KeyValue.c: 168: StrippedKey = 0x03;
  7022  001458  0E03               	movlw	3
  7023  00145A  6E49               	movwf	_StrippedKey,c
  7024                           
  7025                           ;KeyValue.c: 169: SerTx(';');
  7026  00145C  0E3B               	movlw	59
  7027  00145E  EC2E  F01A         	call	i1_SerTx
  7028                           
  7029                           ;KeyValue.c: 170: }
  7030  001462  D06F               	goto	i1l3421
  7031  001464                     i1l3393:
  7032                           
  7033                           ;KeyValue.c: 172: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  7034  001464  0E54               	movlw	low _key
  7035  001466  6E01               	movwf	strcmp@s1,c
  7036  001468  0E00               	movlw	high _key
  7037  00146A  6E02               	movwf	strcmp@s1+1,c
  7038  00146C  0E6E               	movlw	low STR_7
  7039  00146E  6E03               	movwf	strcmp@s2,c
  7040  001470  0E10               	movlw	high STR_7
  7041  001472  6E04               	movwf	strcmp@s2+1,c
  7042  001474  EC27  F018         	call	_strcmp	;wreg free
  7043  001478  5001               	movf	?_strcmp,w,c
  7044  00147A  1002               	iorwf	?_strcmp+1,w,c
  7045  00147C  B4D8               	btfsc	status,2,c
  7046  00147E  D00E               	goto	i1l3397
  7047  001480  0E54               	movlw	low _key
  7048  001482  6E01               	movwf	strcmp@s1,c
  7049  001484  0E00               	movlw	high _key
  7050  001486  6E02               	movwf	strcmp@s1+1,c
  7051  001488  0E7A               	movlw	low STR_8
  7052  00148A  6E03               	movwf	strcmp@s2,c
  7053  00148C  0E10               	movlw	high STR_8
  7054  00148E  6E04               	movwf	strcmp@s2+1,c
  7055  001490  EC27  F018         	call	_strcmp	;wreg free
  7056  001494  5001               	movf	?_strcmp,w,c
  7057  001496  1002               	iorwf	?_strcmp+1,w,c
  7058  001498  A4D8               	btfss	status,2,c
  7059  00149A  D006               	goto	i1l3401
  7060  00149C                     i1l3397:
  7061                           
  7062                           ;KeyValue.c: 173: {
  7063                           ;KeyValue.c: 174: StrippedKey = 0x04;
  7064  00149C  0E04               	movlw	4
  7065  00149E  6E49               	movwf	_StrippedKey,c
  7066                           
  7067                           ;KeyValue.c: 175: SerTx(';');
  7068  0014A0  0E3B               	movlw	59
  7069  0014A2  EC2E  F01A         	call	i1_SerTx
  7070                           
  7071                           ;KeyValue.c: 176: }
  7072  0014A6  D04D               	goto	i1l3421
  7073  0014A8                     i1l3401:
  7074                           
  7075                           ;KeyValue.c: 178: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  7076  0014A8  0E54               	movlw	low _key
  7077  0014AA  6E01               	movwf	strcmp@s1,c
  7078  0014AC  0E00               	movlw	high _key
  7079  0014AE  6E02               	movwf	strcmp@s1+1,c
  7080  0014B0  0E6B               	movlw	low STR_9
  7081  0014B2  6E03               	movwf	strcmp@s2,c
  7082  0014B4  0E10               	movlw	high STR_9
  7083  0014B6  6E04               	movwf	strcmp@s2+1,c
  7084  0014B8  EC27  F018         	call	_strcmp	;wreg free
  7085  0014BC  5001               	movf	?_strcmp,w,c
  7086  0014BE  1002               	iorwf	?_strcmp+1,w,c
  7087  0014C0  B4D8               	btfsc	status,2,c
  7088  0014C2  D00E               	goto	i1l3405
  7089  0014C4  0E54               	movlw	low _key
  7090  0014C6  6E01               	movwf	strcmp@s1,c
  7091  0014C8  0E00               	movlw	high _key
  7092  0014CA  6E02               	movwf	strcmp@s1+1,c
  7093  0014CC  0E77               	movlw	low STR_10
  7094  0014CE  6E03               	movwf	strcmp@s2,c
  7095  0014D0  0E10               	movlw	high STR_10
  7096  0014D2  6E04               	movwf	strcmp@s2+1,c
  7097  0014D4  EC27  F018         	call	_strcmp	;wreg free
  7098  0014D8  5001               	movf	?_strcmp,w,c
  7099  0014DA  1002               	iorwf	?_strcmp+1,w,c
  7100  0014DC  A4D8               	btfss	status,2,c
  7101  0014DE  D006               	goto	i1l3409
  7102  0014E0                     i1l3405:
  7103                           
  7104                           ;KeyValue.c: 179: {
  7105                           ;KeyValue.c: 180: StrippedKey = 0x06;
  7106  0014E0  0E06               	movlw	6
  7107  0014E2  6E49               	movwf	_StrippedKey,c
  7108                           
  7109                           ;KeyValue.c: 181: SerTx(';');
  7110  0014E4  0E3B               	movlw	59
  7111  0014E6  EC2E  F01A         	call	i1_SerTx
  7112                           
  7113                           ;KeyValue.c: 182: }
  7114  0014EA  D02B               	goto	i1l3421
  7115  0014EC                     i1l3409:
  7116                           
  7117                           ;KeyValue.c: 184: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  7118  0014EC  0E54               	movlw	low _key
  7119  0014EE  6E01               	movwf	strcmp@s1,c
  7120  0014F0  0E00               	movlw	high _key
  7121  0014F2  6E02               	movwf	strcmp@s1+1,c
  7122  0014F4  0E68               	movlw	low STR_11
  7123  0014F6  6E03               	movwf	strcmp@s2,c
  7124  0014F8  0E10               	movlw	high STR_11
  7125  0014FA  6E04               	movwf	strcmp@s2+1,c
  7126  0014FC  EC27  F018         	call	_strcmp	;wreg free
  7127  001500  5001               	movf	?_strcmp,w,c
  7128  001502  1002               	iorwf	?_strcmp+1,w,c
  7129  001504  B4D8               	btfsc	status,2,c
  7130  001506  D00E               	goto	i1l3413
  7131  001508  0E54               	movlw	low _key
  7132  00150A  6E01               	movwf	strcmp@s1,c
  7133  00150C  0E00               	movlw	high _key
  7134  00150E  6E02               	movwf	strcmp@s1+1,c
  7135  001510  0E74               	movlw	low STR_12
  7136  001512  6E03               	movwf	strcmp@s2,c
  7137  001514  0E10               	movlw	high STR_12
  7138  001516  6E04               	movwf	strcmp@s2+1,c
  7139  001518  EC27  F018         	call	_strcmp	;wreg free
  7140  00151C  5001               	movf	?_strcmp,w,c
  7141  00151E  1002               	iorwf	?_strcmp+1,w,c
  7142  001520  A4D8               	btfss	status,2,c
  7143  001522  D006               	goto	i1l3417
  7144  001524                     i1l3413:
  7145                           
  7146                           ;KeyValue.c: 185: {
  7147                           ;KeyValue.c: 186: StrippedKey = 0x08;
  7148  001524  0E08               	movlw	8
  7149  001526  6E49               	movwf	_StrippedKey,c
  7150                           
  7151                           ;KeyValue.c: 187: SerTx(';');
  7152  001528  0E3B               	movlw	59
  7153  00152A  EC2E  F01A         	call	i1_SerTx
  7154                           
  7155                           ;KeyValue.c: 188: }
  7156  00152E  D009               	goto	i1l3421
  7157  001530                     i1l3417:
  7158                           
  7159                           ;KeyValue.c: 190: else
  7160                           ;KeyValue.c: 191: {
  7161                           ;KeyValue.c: 192: SerTxStr("???");
  7162  001530  0E54               	movlw	low STR_13
  7163  001532  6E02               	movwf	i1SerTxStr@string,c
  7164  001534  0E10               	movlw	high STR_13
  7165  001536  6E03               	movwf	i1SerTxStr@string+1,c
  7166  001538  ECD1  F017         	call	i1_SerTxStr	;wreg free
  7167  00153C                     i1l3419:
  7168                           
  7169                           ;KeyValue.c: 193: StrippedKey = 0;
  7170  00153C  0E00               	movlw	0
  7171  00153E  6E49               	movwf	_StrippedKey,c
  7172  001540  D000               	goto	i1l3421
  7173  001542                     i1l3421:
  7174                           
  7175                           ;KeyValue.c: 194: }
  7176                           ;KeyValue.c: 195: }
  7177                           ;KeyValue.c: 197: StrippedValue = strtod(value, &str_end);
  7178  001542  0E4A               	movlw	low _value
  7179  001544  6E18               	movwf	strtod@s,c
  7180  001546  0E00               	movlw	high _value
  7181  001548  6E19               	movwf	strtod@s+1,c
  7182  00154A  0E2A               	movlw	low keyValue@str_end
  7183  00154C  6E1A               	movwf	strtod@res,c
  7184  00154E  0E00               	movlw	high keyValue@str_end
  7185  001550  6E1B               	movwf	strtod@res+1,c
  7186  001552  ECEC  F00A         	call	_strtod	;wreg free
  7187  001556  C018  F045         	movff	?_strtod,_StrippedValue
  7188  00155A  C019  F046         	movff	?_strtod+1,_StrippedValue+1
  7189  00155E  C01A  F047         	movff	?_strtod+2,_StrippedValue+2
  7190                           
  7191                           ;KeyValue.c: 201: for (x = 0; x < 5; x++)
  7192  001562  0E00               	movlw	0
  7193  001564  6E2E               	movwf	keyValue@x,c
  7194  001566                     i1l3425:
  7195  001566  0E04               	movlw	4
  7196  001568  642E               	cpfsgt	keyValue@x,c
  7197  00156A  D001               	goto	i1l3429
  7198  00156C  D00C               	goto	i1l3435
  7199  00156E                     i1l3429:
  7200                           
  7201                           ;KeyValue.c: 202: {
  7202                           ;KeyValue.c: 203: key[x] = (0);
  7203  00156E  502E               	movf	keyValue@x,w,c
  7204  001570  0D01               	mullw	1
  7205  001572  0E54               	movlw	low _key
  7206  001574  24F3               	addwf	prodl,w,c
  7207  001576  6ED9               	movwf	fsr2l,c
  7208  001578  0E00               	movlw	high _key
  7209  00157A  20F4               	addwfc	prodh,w,c
  7210  00157C  6EDA               	movwf	fsr2h,c
  7211  00157E  0E00               	movlw	0
  7212  001580  6EDF               	movwf	indf2,c
  7213  001582  2A2E               	incf	keyValue@x,f,c
  7214  001584  D7F0               	goto	i1l3425
  7215  001586                     i1l3435:
  7216                           
  7217                           ;KeyValue.c: 204: }
  7218                           ;KeyValue.c: 206: for (x = 0; x < 10; x++)
  7219  001586  0E00               	movlw	0
  7220  001588  6E2E               	movwf	keyValue@x,c
  7221  00158A                     i1l3437:
  7222  00158A  0E09               	movlw	9
  7223  00158C  642E               	cpfsgt	keyValue@x,c
  7224  00158E  D001               	goto	i1l3441
  7225  001590  D00C               	goto	i1l3447
  7226  001592                     i1l3441:
  7227                           
  7228                           ;KeyValue.c: 207: {
  7229                           ;KeyValue.c: 208: value[x] = (0);
  7230  001592  502E               	movf	keyValue@x,w,c
  7231  001594  0D01               	mullw	1
  7232  001596  0E4A               	movlw	low _value
  7233  001598  24F3               	addwf	prodl,w,c
  7234  00159A  6ED9               	movwf	fsr2l,c
  7235  00159C  0E00               	movlw	high _value
  7236  00159E  20F4               	addwfc	prodh,w,c
  7237  0015A0  6EDA               	movwf	fsr2h,c
  7238  0015A2  0E00               	movlw	0
  7239  0015A4  6EDF               	movwf	indf2,c
  7240  0015A6  2A2E               	incf	keyValue@x,f,c
  7241  0015A8  D7F0               	goto	i1l3437
  7242  0015AA                     i1l3447:
  7243                           
  7244                           ;KeyValue.c: 209: }
  7245                           ;KeyValue.c: 211: for (x = 0; x < 30; x++)
  7246  0015AA  0E00               	movlw	0
  7247  0015AC  6E2E               	movwf	keyValue@x,c
  7248  0015AE                     i1l3449:
  7249  0015AE  0E1D               	movlw	29
  7250  0015B0  642E               	cpfsgt	keyValue@x,c
  7251  0015B2  D001               	goto	i1l3453
  7252  0015B4  D00C               	goto	i1l3459
  7253  0015B6                     i1l3453:
  7254                           
  7255                           ;KeyValue.c: 212: {
  7256                           ;KeyValue.c: 213: received[x] = (0);
  7257  0015B6  502E               	movf	keyValue@x,w,c
  7258  0015B8  0D01               	mullw	1
  7259  0015BA  0ED1               	movlw	low _received
  7260  0015BC  24F3               	addwf	prodl,w,c
  7261  0015BE  6ED9               	movwf	fsr2l,c
  7262  0015C0  0E00               	movlw	high _received
  7263  0015C2  20F4               	addwfc	prodh,w,c
  7264  0015C4  6EDA               	movwf	fsr2h,c
  7265  0015C6  0E00               	movlw	0
  7266  0015C8  6EDF               	movwf	indf2,c
  7267  0015CA  2A2E               	incf	keyValue@x,f,c
  7268  0015CC  D7F0               	goto	i1l3449
  7269  0015CE                     i1l3459:
  7270                           
  7271                           ;KeyValue.c: 214: }
  7272                           ;KeyValue.c: 215: flag = 0;
  7273  0015CE  0E00               	movlw	0
  7274  0015D0  6E2C               	movwf	keyValue@flag,c
  7275                           
  7276                           ;KeyValue.c: 216: RCflag = 1;
  7277  0015D2  0E01               	movlw	1
  7278  0015D4  6E48               	movwf	_RCflag,c
  7279  0015D6  0012               	return		;funcret
  7280  0015D8                     __end_of_keyValue:
  7281                           	opt stack 0
  7282                           pclatu	equ	0xFFB
  7283                           pclath	equ	0xFFA
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           intcon2	equ	0xFF1
  7292                           indf0	equ	0xFEF
  7293                           postinc0	equ	0xFEE
  7294                           fsr0h	equ	0xFEA
  7295                           fsr0l	equ	0xFE9
  7296                           wreg	equ	0xFE8
  7297                           indf1	equ	0xFE7
  7298                           fsr1h	equ	0xFE2
  7299                           fsr1l	equ	0xFE1
  7300                           bsr	equ	0xFE0
  7301                           indf2	equ	0xFDF
  7302                           postinc2	equ	0xFDE
  7303                           fsr2h	equ	0xFDA
  7304                           fsr2l	equ	0xFD9
  7305                           status	equ	0xFD8
  7306                           
  7307 ;; *************** function i1_SerTxStr *****************
  7308 ;; Defined at:
  7309 ;;		line 50 in file "SerComm.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  string          2    1[COMRAM] PTR unsigned char 
  7312 ;;		 -> STR_31(16), STR_30(36), STR_29(4), STR_14(6), 
  7313 ;;		 -> STR_13(4), STR_4(11), value(10), STR_3(6), 
  7314 ;;		 -> key(5), 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;		None
  7317 ;; Return value:  Size  Location     Type
  7318 ;;		None               void
  7319 ;; Registers used:
  7320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;Total ram usage:        2 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    3
  7333 ;; This function calls:
  7334 ;;		i1_SerTx
  7335 ;; This function is called by:
  7336 ;;		_keyValue
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text38
  7341  002FA2                     __ptext38:
  7342                           	opt stack 0
  7343  002FA2                     i1_SerTxStr:
  7344                           	opt stack 19
  7345                           
  7346                           ;SerComm.c: 52: while (*string)
  7347                           
  7348                           ;incstack = 0
  7349  002FA2  D016               	goto	i1l3235
  7350  002FA4                     i1l3231:
  7351                           
  7352                           ;SerComm.c: 53: SerTx(*string++);
  7353  002FA4  C002  FFF6         	movff	i1SerTxStr@string,tblptrl
  7354  002FA8  C003  FFF7         	movff	i1SerTxStr@string+1,tblptrh
  7355  002FAC  0E00               	movlw	low (__smallconst shr (0+16))
  7356  002FAE  6EF8               	movwf	tblptru,c
  7357  002FB0  0E0F               	movlw	(high __ramtop+-1)
  7358  002FB2  64F7               	cpfsgt	tblptrh,c
  7359  002FB4  D003               	bra	i1u320_27
  7360  002FB6  0008               	tblrd		*
  7361  002FB8  50F5               	movf	tablat,w,c
  7362  002FBA  D005               	bra	i1u320_20
  7363  002FBC                     i1u320_27:
  7364  002FBC  CFF6 FFE9          	movff	tblptrl,fsr0l
  7365  002FC0  CFF7 FFEA          	movff	tblptrh,fsr0h
  7366  002FC4  50EF               	movf	indf0,w,c
  7367  002FC6                     i1u320_20:
  7368  002FC6  EC2E  F01A         	call	i1_SerTx
  7369  002FCA  4A02               	infsnz	i1SerTxStr@string,f,c
  7370  002FCC  2A03               	incf	i1SerTxStr@string+1,f,c
  7371  002FCE  D000               	goto	i1l3235
  7372  002FD0                     i1l3235:
  7373  002FD0  C002  FFF6         	movff	i1SerTxStr@string,tblptrl
  7374  002FD4  C003  FFF7         	movff	i1SerTxStr@string+1,tblptrh
  7375  002FD8  0E00               	movlw	low (__smallconst shr (0+16))
  7376  002FDA  6EF8               	movwf	tblptru,c
  7377  002FDC  0E0F               	movlw	(high __ramtop+-1)
  7378  002FDE  64F7               	cpfsgt	tblptrh,c
  7379  002FE0  D003               	bra	i1u321_27
  7380  002FE2  0008               	tblrd		*
  7381  002FE4  50F5               	movf	tablat,w,c
  7382  002FE6  D005               	bra	i1u321_20
  7383  002FE8                     i1u321_27:
  7384  002FE8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7385  002FEC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7386  002FF0  50EF               	movf	indf0,w,c
  7387  002FF2                     i1u321_20:
  7388  002FF2  0900               	iorlw	0
  7389  002FF4  A4D8               	btfss	status,2,c
  7390  002FF6  D7D6               	goto	i1l3231
  7391  002FF8  0012               	return		;funcret
  7392  002FFA                     __end_ofi1_SerTxStr:
  7393                           	opt stack 0
  7394                           pclatu	equ	0xFFB
  7395                           pclath	equ	0xFFA
  7396                           tblptru	equ	0xFF8
  7397                           tblptrh	equ	0xFF7
  7398                           tblptrl	equ	0xFF6
  7399                           tablat	equ	0xFF5
  7400                           prodh	equ	0xFF4
  7401                           prodl	equ	0xFF3
  7402                           intcon	equ	0xFF2
  7403                           intcon2	equ	0xFF1
  7404                           indf0	equ	0xFEF
  7405                           postinc0	equ	0xFEE
  7406                           fsr0h	equ	0xFEA
  7407                           fsr0l	equ	0xFE9
  7408                           wreg	equ	0xFE8
  7409                           indf1	equ	0xFE7
  7410                           fsr1h	equ	0xFE2
  7411                           fsr1l	equ	0xFE1
  7412                           bsr	equ	0xFE0
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           fsr2h	equ	0xFDA
  7416                           fsr2l	equ	0xFD9
  7417                           status	equ	0xFD8
  7418                           
  7419 ;; *************** function i1_SerTx *****************
  7420 ;; Defined at:
  7421 ;;		line 41 in file "SerComm.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  c               1    wreg     unsigned char 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  c               1    0[COMRAM] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;		None               void
  7428 ;; Registers used:
  7429 ;;		wreg
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;Total ram usage:        1 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:    2
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_RCInt
  7446 ;;		_keyValue
  7447 ;;		i1_SerTxStr
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text39
  7452  00345C                     __ptext39:
  7453                           	opt stack 0
  7454  00345C                     i1_SerTx:
  7455                           	opt stack 21
  7456                           
  7457                           ;incstack = 0
  7458                           ;i1SerTx@c stored from wreg
  7459  00345C  6E01               	movwf	i1SerTx@c,c
  7460                           
  7461                           ;SerComm.c: 43: TXREG1 = c;
  7462  00345E  C001  FFAD         	movff	i1SerTx@c,4013	;volatile
  7463                           
  7464                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  7465  003462  D000               	goto	i1l308
  7466  003464                     i1l308:
  7467  003464  A89E               	btfss	3998,4,c	;volatile
  7468  003466  D7FE               	goto	i1l308
  7469  003468  0012               	return		;funcret
  7470  00346A                     __end_ofi1_SerTx:
  7471                           	opt stack 0
  7472                           pclatu	equ	0xFFB
  7473                           pclath	equ	0xFFA
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           intcon	equ	0xFF2
  7481                           intcon2	equ	0xFF1
  7482                           indf0	equ	0xFEF
  7483                           postinc0	equ	0xFEE
  7484                           fsr0h	equ	0xFEA
  7485                           fsr0l	equ	0xFE9
  7486                           wreg	equ	0xFE8
  7487                           indf1	equ	0xFE7
  7488                           fsr1h	equ	0xFE2
  7489                           fsr1l	equ	0xFE1
  7490                           bsr	equ	0xFE0
  7491                           indf2	equ	0xFDF
  7492                           postinc2	equ	0xFDE
  7493                           fsr2h	equ	0xFDA
  7494                           fsr2l	equ	0xFD9
  7495                           status	equ	0xFD8
  7496                           
  7497 ;; *************** function _strtod *****************
  7498 ;; Defined at:
  7499 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/common/atof.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  s               2   23[COMRAM] PTR const unsigned char 
  7502 ;;		 -> value(10), 
  7503 ;;  res             2   25[COMRAM] PTR PTR const unsigned c
  7504 ;;		 -> NULL(0), keyValue@str_end(2), 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  _u              4   31[COMRAM] struct .
  7507 ;;  expon           1   30[COMRAM] char 
  7508 ;;  flags           1   29[COMRAM] unsigned char 
  7509 ;;  eexp            1   28[COMRAM] char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  3   23[COMRAM] char 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;Total ram usage:       12 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    4
  7526 ;; This function calls:
  7527 ;;		___altoft
  7528 ;;		___lmul
  7529 ;;		_isdigit
  7530 ;;		_isspace
  7531 ;;		i1___ftdiv
  7532 ;;		i1___ftge
  7533 ;;		i1___ftmul
  7534 ;;		i1___ftneg
  7535 ;; This function is called by:
  7536 ;;		_keyValue
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text40
  7541  0015D8                     __ptext40:
  7542                           	opt stack 0
  7543  0015D8                     _strtod:
  7544                           	opt stack 18
  7545                           
  7546                           ;incstack = 0
  7547  0015D8  501A               	movf	strtod@res,w,c
  7548  0015DA  101B               	iorwf	strtod@res+1,w,c
  7549  0015DC  B4D8               	btfsc	status,2,c
  7550  0015DE  D00C               	goto	i1l2993
  7551  0015E0  C01A  FFD9         	movff	strtod@res,fsr2l
  7552  0015E4  C01B  FFDA         	movff	strtod@res+1,fsr2h
  7553  0015E8  C018  FFDE         	movff	strtod@s,postinc2
  7554  0015EC  C019  FFDD         	movff	strtod@s+1,postdec2
  7555  0015F0  D003               	goto	i1l2993
  7556  0015F2                     i1l2991:
  7557  0015F2  4A18               	infsnz	strtod@s,f,c
  7558  0015F4  2A19               	incf	strtod@s+1,f,c
  7559  0015F6  D000               	goto	i1l2993
  7560  0015F8                     i1l2993:
  7561  0015F8  C018  FFD9         	movff	strtod@s,fsr2l
  7562  0015FC  C019  FFDA         	movff	strtod@s+1,fsr2h
  7563  001600  50DF               	movf	indf2,w,c
  7564  001602  6E1D               	movwf	strtod@eexp,c
  7565  001604  501D               	movf	strtod@eexp,w,c
  7566  001606  EC64  F019         	call	_isspace
  7567  00160A  B0D8               	btfsc	status,0,c
  7568  00160C  D7F2               	goto	i1l2991
  7569  00160E  0E00               	movlw	0
  7570  001610  6E1E               	movwf	strtod@flags,c
  7571  001612  0E2D               	movlw	45
  7572  001614  181D               	xorwf	strtod@eexp,w,c
  7573  001616  A4D8               	btfss	status,2,c
  7574  001618  D003               	goto	i1l3003
  7575  00161A  0E01               	movlw	1
  7576  00161C  6E1E               	movwf	strtod@flags,c
  7577  00161E  D004               	goto	i1l3005
  7578  001620                     i1l3003:
  7579  001620  0E2B               	movlw	43
  7580  001622  181D               	xorwf	strtod@eexp,w,c
  7581  001624  A4D8               	btfss	status,2,c
  7582  001626  D003               	goto	i1l3007
  7583  001628                     i1l3005:
  7584  001628  4A18               	infsnz	strtod@s,f,c
  7585  00162A  2A19               	incf	strtod@s+1,f,c
  7586  00162C  D000               	goto	i1l3007
  7587  00162E                     i1l3007:
  7588  00162E  0E00               	movlw	0
  7589  001630  6E1D               	movwf	strtod@eexp,c
  7590  001632  0E00               	movlw	0
  7591  001634  6E20               	movwf	strtod@_u,c
  7592  001636  0E00               	movlw	0
  7593  001638  6E21               	movwf	strtod@_u+1,c
  7594  00163A  0E00               	movlw	0
  7595  00163C  6E22               	movwf	strtod@_u+2,c
  7596  00163E  0E00               	movlw	0
  7597  001640  6E23               	movwf	strtod@_u+3,c
  7598  001642  0E00               	movlw	0
  7599  001644  6E1F               	movwf	strtod@expon,c
  7600  001646  D000               	goto	i1l3013
  7601  001648                     i1l3013:
  7602  001648  B81E               	btfsc	strtod@flags,4,c
  7603  00164A  D00A               	goto	i1l3019
  7604  00164C  C018  FFD9         	movff	strtod@s,fsr2l
  7605  001650  C019  FFDA         	movff	strtod@s+1,fsr2h
  7606  001654  0E2E               	movlw	46
  7607  001656  18DE               	xorwf	postinc2,w,c
  7608  001658  A4D8               	btfss	status,2,c
  7609  00165A  D002               	goto	i1l3019
  7610  00165C  881E               	bsf	strtod@flags,4,c
  7611  00165E  D040               	goto	i1l691
  7612  001660                     i1l3019:
  7613  001660  C018  FFD9         	movff	strtod@s,fsr2l
  7614  001664  C019  FFDA         	movff	strtod@s+1,fsr2h
  7615  001668  50DF               	movf	indf2,w,c
  7616  00166A  ECB2  F019         	call	_isdigit
  7617  00166E  A0D8               	btfss	status,0,c
  7618  001670  D03A               	goto	i1l3037
  7619  001672  D001               	goto	i1l3023
  7620  001674  D038               	goto	i1l3037
  7621  001676                     i1l3023:
  7622  001676  821E               	bsf	strtod@flags,1,c
  7623  001678  0E08               	movlw	8
  7624  00167A  181D               	xorwf	strtod@eexp,w,c
  7625  00167C  B4D8               	btfsc	status,2,c
  7626  00167E  D02C               	goto	i1l689
  7627  001680  B81E               	btfsc	strtod@flags,4,c
  7628  001682  061F               	decf	strtod@expon,f,c
  7629  001684  2A1D               	incf	strtod@eexp,f,c
  7630  001686  C020  F001         	movff	strtod@_u,___lmul@multiplier
  7631  00168A  C021  F002         	movff	strtod@_u+1,___lmul@multiplier+1
  7632  00168E  C022  F003         	movff	strtod@_u+2,___lmul@multiplier+2
  7633  001692  C023  F004         	movff	strtod@_u+3,___lmul@multiplier+3
  7634  001696  0E0A               	movlw	10
  7635  001698  6E05               	movwf	___lmul@multiplicand,c
  7636  00169A  0E00               	movlw	0
  7637  00169C  6E06               	movwf	___lmul@multiplicand+1,c
  7638  00169E  0E00               	movlw	0
  7639  0016A0  6E07               	movwf	___lmul@multiplicand+2,c
  7640  0016A2  0E00               	movlw	0
  7641  0016A4  6E08               	movwf	___lmul@multiplicand+3,c
  7642  0016A6  ECA4  F017         	call	___lmul	;wreg free
  7643  0016AA  C001  F020         	movff	?___lmul,strtod@_u
  7644  0016AE  C002  F021         	movff	?___lmul+1,strtod@_u+1
  7645  0016B2  C003  F022         	movff	?___lmul+2,strtod@_u+2
  7646  0016B6  C004  F023         	movff	?___lmul+3,strtod@_u+3
  7647  0016BA  C018  FFD9         	movff	strtod@s,fsr2l
  7648  0016BE  C019  FFDA         	movff	strtod@s+1,fsr2h
  7649  0016C2  50DF               	movf	indf2,w,c
  7650  0016C4  6E1C               	movwf	??_strtod& (0+255),c
  7651  0016C6  0ED0               	movlw	208
  7652  0016C8  261C               	addwf	??_strtod,f,c
  7653  0016CA  501C               	movf	??_strtod,w,c
  7654  0016CC  2620               	addwf	strtod@_u,f,c
  7655  0016CE  0E00               	movlw	0
  7656  0016D0  2221               	addwfc	strtod@_u+1,f,c
  7657  0016D2  2222               	addwfc	strtod@_u+2,f,c
  7658  0016D4  2223               	addwfc	strtod@_u+3,f,c
  7659  0016D6  D004               	goto	i1l691
  7660  0016D8                     i1l689:
  7661  0016D8  B81E               	btfsc	strtod@flags,4,c
  7662  0016DA  D002               	goto	i1l691
  7663  0016DC  2A1F               	incf	strtod@expon,f,c
  7664  0016DE  D000               	goto	i1l691
  7665  0016E0                     i1l691:
  7666  0016E0  4A18               	infsnz	strtod@s,f,c
  7667  0016E2  2A19               	incf	strtod@s+1,f,c
  7668  0016E4  D7B1               	goto	i1l3013
  7669  0016E6                     i1l3037:
  7670  0016E6  0E00               	movlw	0
  7671  0016E8  6E1D               	movwf	strtod@eexp,c
  7672  0016EA  C018  FFD9         	movff	strtod@s,fsr2l
  7673  0016EE  C019  FFDA         	movff	strtod@s+1,fsr2h
  7674  0016F2  0E65               	movlw	101
  7675  0016F4  18DE               	xorwf	postinc2,w,c
  7676  0016F6  B4D8               	btfsc	status,2,c
  7677  0016F8  D008               	goto	i1l3043
  7678  0016FA  C018  FFD9         	movff	strtod@s,fsr2l
  7679  0016FE  C019  FFDA         	movff	strtod@s+1,fsr2h
  7680  001702  0E45               	movlw	69
  7681  001704  18DE               	xorwf	postinc2,w,c
  7682  001706  A4D8               	btfss	status,2,c
  7683  001708  D065               	goto	i1l3075
  7684  00170A                     i1l3043:
  7685  00170A  4A18               	infsnz	strtod@s,f,c
  7686  00170C  2A19               	incf	strtod@s+1,f,c
  7687  00170E  C018  FFD9         	movff	strtod@s,fsr2l
  7688  001712  C019  FFDA         	movff	strtod@s+1,fsr2h
  7689  001716  0E2D               	movlw	45
  7690  001718  18DE               	xorwf	postinc2,w,c
  7691  00171A  A4D8               	btfss	status,2,c
  7692  00171C  D002               	goto	i1l3047
  7693  00171E  861E               	bsf	strtod@flags,3,c
  7694  001720  D008               	goto	i1l3049
  7695  001722                     i1l3047:
  7696  001722  C018  FFD9         	movff	strtod@s,fsr2l
  7697  001726  C019  FFDA         	movff	strtod@s+1,fsr2h
  7698  00172A  0E2B               	movlw	43
  7699  00172C  18DE               	xorwf	postinc2,w,c
  7700  00172E  A4D8               	btfss	status,2,c
  7701  001730  D006               	goto	i1l3053
  7702  001732                     i1l3049:
  7703  001732  4A18               	infsnz	strtod@s,f,c
  7704  001734  2A19               	incf	strtod@s+1,f,c
  7705  001736  D003               	goto	i1l3053
  7706  001738                     i1l3051:
  7707  001738  4A18               	infsnz	strtod@s,f,c
  7708  00173A  2A19               	incf	strtod@s+1,f,c
  7709  00173C  D000               	goto	i1l3053
  7710  00173E                     i1l3053:
  7711  00173E  C018  FFD9         	movff	strtod@s,fsr2l
  7712  001742  C019  FFDA         	movff	strtod@s+1,fsr2h
  7713  001746  0E30               	movlw	48
  7714  001748  18DE               	xorwf	postinc2,w,c
  7715  00174A  B4D8               	btfsc	status,2,c
  7716  00174C  D7F5               	goto	i1l3051
  7717  00174E  C018  FFD9         	movff	strtod@s,fsr2l
  7718  001752  C019  FFDA         	movff	strtod@s+1,fsr2h
  7719  001756  50DF               	movf	indf2,w,c
  7720  001758  ECB2  F019         	call	_isdigit
  7721  00175C  A0D8               	btfss	status,0,c
  7722  00175E  D036               	goto	i1l3071
  7723  001760  C018  FFD9         	movff	strtod@s,fsr2l
  7724  001764  C019  FFDA         	movff	strtod@s+1,fsr2h
  7725  001768  50DF               	movf	indf2,w,c
  7726  00176A  0FD0               	addlw	208
  7727  00176C  6E1D               	movwf	strtod@eexp,c
  7728  00176E  4A18               	infsnz	strtod@s,f,c
  7729  001770  2A19               	incf	strtod@s+1,f,c
  7730  001772  C018  FFD9         	movff	strtod@s,fsr2l
  7731  001776  C019  FFDA         	movff	strtod@s+1,fsr2h
  7732  00177A  50DF               	movf	indf2,w,c
  7733  00177C  ECB2  F019         	call	_isdigit
  7734  001780  A0D8               	btfss	status,0,c
  7735  001782  D024               	goto	i1l3071
  7736  001784  C018  FFD9         	movff	strtod@s,fsr2l
  7737  001788  C019  FFDA         	movff	strtod@s+1,fsr2h
  7738  00178C  50DF               	movf	indf2,w,c
  7739  00178E  6E1C               	movwf	??_strtod& (0+255),c
  7740  001790  501D               	movf	strtod@eexp,w,c
  7741  001792  0D0A               	mullw	10
  7742  001794  50F3               	movf	prodl,w,c
  7743  001796  241C               	addwf	??_strtod,w,c
  7744  001798  0FD0               	addlw	208
  7745  00179A  6E1D               	movwf	strtod@eexp,c
  7746  00179C  4A18               	infsnz	strtod@s,f,c
  7747  00179E  2A19               	incf	strtod@s+1,f,c
  7748  0017A0  C018  FFD9         	movff	strtod@s,fsr2l
  7749  0017A4  C019  FFDA         	movff	strtod@s+1,fsr2h
  7750  0017A8  50DF               	movf	indf2,w,c
  7751  0017AA  ECB2  F019         	call	_isdigit
  7752  0017AE  A0D8               	btfss	status,0,c
  7753  0017B0  D00D               	goto	i1l3071
  7754  0017B2  C018  FFD9         	movff	strtod@s,fsr2l
  7755  0017B6  C019  FFDA         	movff	strtod@s+1,fsr2h
  7756  0017BA  50DF               	movf	indf2,w,c
  7757  0017BC  6E1C               	movwf	??_strtod& (0+255),c
  7758  0017BE  501D               	movf	strtod@eexp,w,c
  7759  0017C0  0D0A               	mullw	10
  7760  0017C2  50F3               	movf	prodl,w,c
  7761  0017C4  241C               	addwf	??_strtod,w,c
  7762  0017C6  0FD0               	addlw	208
  7763  0017C8  6E1D               	movwf	strtod@eexp,c
  7764  0017CA  D000               	goto	i1l3071
  7765  0017CC                     i1l3071:
  7766  0017CC  A61E               	btfss	strtod@flags,3,c
  7767  0017CE  D002               	goto	i1l3075
  7768  0017D0  6C1D               	negf	strtod@eexp,c
  7769  0017D2  D000               	goto	i1l3075
  7770  0017D4                     i1l3075:
  7771  0017D4  501D               	movf	strtod@eexp,w,c
  7772  0017D6  261F               	addwf	strtod@expon,f,c
  7773  0017D8  501A               	movf	strtod@res,w,c
  7774  0017DA  101B               	iorwf	strtod@res+1,w,c
  7775  0017DC  A4D8               	btfss	status,2,c
  7776  0017DE  A21E               	btfss	strtod@flags,1,c
  7777  0017E0  D009               	goto	i1l3083
  7778  0017E2  C01A  FFD9         	movff	strtod@res,fsr2l
  7779  0017E6  C01B  FFDA         	movff	strtod@res+1,fsr2h
  7780  0017EA  C018  FFDE         	movff	strtod@s,postinc2
  7781  0017EE  C019  FFDD         	movff	strtod@s+1,postdec2
  7782  0017F2  D000               	goto	i1l3083
  7783  0017F4                     i1l3083:
  7784  0017F4  C020  F009         	movff	strtod@_u,___altoft@c
  7785  0017F8  C021  F00A         	movff	strtod@_u+1,___altoft@c+1
  7786  0017FC  C022  F00B         	movff	strtod@_u+2,___altoft@c+2
  7787  001800  C023  F00C         	movff	strtod@_u+3,___altoft@c+3
  7788  001804  EC9A  F016         	call	___altoft	;wreg free
  7789  001808  C009  F020         	movff	?___altoft,strtod@_u
  7790  00180C  C00A  F021         	movff	?___altoft+1,strtod@_u+1
  7791  001810  C00B  F022         	movff	?___altoft+2,strtod@_u+2
  7792  001814  5020               	movf	strtod@_u,w,c
  7793  001816  1021               	iorwf	strtod@_u+1,w,c
  7794  001818  1022               	iorwf	strtod@_u+2,w,c
  7795  00181A  A4D8               	btfss	status,2,c
  7796  00181C  D005               	goto	i1l3091
  7797  00181E  0E00               	movlw	0
  7798  001820  6E18               	movwf	?_strtod,c
  7799  001822  0E00               	movlw	0
  7800  001824  D0A6               	goto	L9
  7801  001826  D0C2               	goto	i1l708
  7802  001828                     i1l3091:
  7803  001828  AE1F               	btfss	strtod@expon,7,c
  7804  00182A  D04C               	goto	i1l3119
  7805  00182C  6C1F               	negf	strtod@expon,c
  7806  00182E  D017               	goto	i1l3099
  7807  001830                     i1l3095:
  7808  001830  C020  F009         	movff	strtod@_u,i1___ftdiv@f1
  7809  001834  C021  F00A         	movff	strtod@_u+1,i1___ftdiv@f1+1
  7810  001838  C022  F00B         	movff	strtod@_u+2,i1___ftdiv@f1+2
  7811  00183C  0E03               	movlw	3
  7812  00183E  6E0C               	movwf	i1___ftdiv@f2,c
  7813  001840  0E15               	movlw	21
  7814  001842  6E0D               	movwf	i1___ftdiv@f2+1,c
  7815  001844  0E50               	movlw	80
  7816  001846  6E0E               	movwf	i1___ftdiv@f2+2,c
  7817  001848  EC3C  F014         	call	i1___ftdiv	;wreg free
  7818  00184C  C009  F020         	movff	?i1___ftdiv,strtod@_u
  7819  001850  C00A  F021         	movff	?i1___ftdiv+1,strtod@_u+1
  7820  001854  C00B  F022         	movff	?i1___ftdiv+2,strtod@_u+2
  7821  001858  0EF6               	movlw	246
  7822  00185A  261F               	addwf	strtod@expon,f,c
  7823  00185C  D000               	goto	i1l3099
  7824  00185E                     i1l3099:
  7825  00185E  501F               	movf	strtod@expon,w,c
  7826  001860  0A80               	xorlw	128
  7827  001862  0F76               	addlw	-138
  7828  001864  A0D8               	btfss	status,0,c
  7829  001866  D018               	goto	i1l3105
  7830  001868  D7E3               	goto	i1l3095
  7831  00186A  D016               	goto	i1l3105
  7832  00186C                     i1l3101:
  7833  00186C  C020  F009         	movff	strtod@_u,i1___ftdiv@f1
  7834  001870  C021  F00A         	movff	strtod@_u+1,i1___ftdiv@f1+1
  7835  001874  C022  F00B         	movff	strtod@_u+2,i1___ftdiv@f1+2
  7836  001878  0E00               	movlw	0
  7837  00187A  6E0C               	movwf	i1___ftdiv@f2,c
  7838  00187C  0E20               	movlw	32
  7839  00187E  6E0D               	movwf	i1___ftdiv@f2+1,c
  7840  001880  0E41               	movlw	65
  7841  001882  6E0E               	movwf	i1___ftdiv@f2+2,c
  7842  001884  EC3C  F014         	call	i1___ftdiv	;wreg free
  7843  001888  C009  F020         	movff	?i1___ftdiv,strtod@_u
  7844  00188C  C00A  F021         	movff	?i1___ftdiv+1,strtod@_u+1
  7845  001890  C00B  F022         	movff	?i1___ftdiv+2,strtod@_u+2
  7846  001894  061F               	decf	strtod@expon,f,c
  7847  001896  D000               	goto	i1l3105
  7848  001898                     i1l3105:
  7849  001898  501F               	movf	strtod@expon,w,c
  7850  00189A  A4D8               	btfss	status,2,c
  7851  00189C  D7E7               	goto	i1l3101
  7852  00189E  C020  F001         	movff	strtod@_u,i1___ftge@ff1
  7853  0018A2  C021  F002         	movff	strtod@_u+1,i1___ftge@ff1+1
  7854  0018A6  C022  F003         	movff	strtod@_u+2,i1___ftge@ff1+2
  7855  0018AA  0E00               	movlw	0
  7856  0018AC  6E04               	movwf	i1___ftge@ff2,c
  7857  0018AE  0E80               	movlw	128
  7858  0018B0  6E05               	movwf	i1___ftge@ff2+1,c
  7859  0018B2  0E00               	movlw	0
  7860  0018B4  6E06               	movwf	i1___ftge@ff2+2,c
  7861  0018B6  ECCB  F015         	call	i1___ftge	;wreg free
  7862  0018BA  D04D               	goto	L10
  7863  0018BC  D077               	goto	i1l708
  7864  0018BE  D056               	goto	i1l3143
  7865  0018C0  D075               	goto	i1l708
  7866  0018C2  D05C               	goto	i1l718
  7867  0018C4                     i1l3119:
  7868  0018C4  501F               	movf	strtod@expon,w,c
  7869  0018C6  0A80               	xorlw	128
  7870  0018C8  0F7F               	addlw	-129
  7871  0018CA  B0D8               	btfsc	status,0,c
  7872  0018CC  D019               	goto	i1l3127
  7873  0018CE  D056               	goto	i1l718
  7874  0018D0  D017               	goto	i1l3127
  7875  0018D2                     i1l3123:
  7876  0018D2  C020  F009         	movff	strtod@_u,i1___ftmul@f1
  7877  0018D6  C021  F00A         	movff	strtod@_u+1,i1___ftmul@f1+1
  7878  0018DA  C022  F00B         	movff	strtod@_u+2,i1___ftmul@f1+2
  7879  0018DE  0E03               	movlw	3
  7880  0018E0  6E0C               	movwf	i1___ftmul@f2,c
  7881  0018E2  0E15               	movlw	21
  7882  0018E4  6E0D               	movwf	i1___ftmul@f2+1,c
  7883  0018E6  0E50               	movlw	80
  7884  0018E8  6E0E               	movwf	i1___ftmul@f2+2,c
  7885  0018EA  EC4B  F013         	call	i1___ftmul	;wreg free
  7886  0018EE  C009  F020         	movff	?i1___ftmul,strtod@_u
  7887  0018F2  C00A  F021         	movff	?i1___ftmul+1,strtod@_u+1
  7888  0018F6  C00B  F022         	movff	?i1___ftmul+2,strtod@_u+2
  7889  0018FA  0EF6               	movlw	246
  7890  0018FC  261F               	addwf	strtod@expon,f,c
  7891  0018FE  D000               	goto	i1l3127
  7892  001900                     i1l3127:
  7893  001900  0E0A               	movlw	10
  7894  001902  601F               	cpfslt	strtod@expon,c
  7895  001904  D7E6               	goto	i1l3123
  7896  001906  D016               	goto	i1l3133
  7897  001908                     i1l3129:
  7898  001908  C020  F009         	movff	strtod@_u,i1___ftmul@f1
  7899  00190C  C021  F00A         	movff	strtod@_u+1,i1___ftmul@f1+1
  7900  001910  C022  F00B         	movff	strtod@_u+2,i1___ftmul@f1+2
  7901  001914  0E00               	movlw	0
  7902  001916  6E0C               	movwf	i1___ftmul@f2,c
  7903  001918  0E20               	movlw	32
  7904  00191A  6E0D               	movwf	i1___ftmul@f2+1,c
  7905  00191C  0E41               	movlw	65
  7906  00191E  6E0E               	movwf	i1___ftmul@f2+2,c
  7907  001920  EC4B  F013         	call	i1___ftmul	;wreg free
  7908  001924  C009  F020         	movff	?i1___ftmul,strtod@_u
  7909  001928  C00A  F021         	movff	?i1___ftmul+1,strtod@_u+1
  7910  00192C  C00B  F022         	movff	?i1___ftmul+2,strtod@_u+2
  7911  001930  061F               	decf	strtod@expon,f,c
  7912  001932  D000               	goto	i1l3133
  7913  001934                     i1l3133:
  7914  001934  501F               	movf	strtod@expon,w,c
  7915  001936  A4D8               	btfss	status,2,c
  7916  001938  D7E7               	goto	i1l3129
  7917  00193A  0EFF               	movlw	255
  7918  00193C  6E01               	movwf	i1___ftge@ff1,c
  7919  00193E  0E7F               	movlw	127
  7920  001940  6E02               	movwf	i1___ftge@ff1+1,c
  7921  001942  0E7F               	movlw	127
  7922  001944  6E03               	movwf	i1___ftge@ff1+2,c
  7923  001946  C020  F004         	movff	strtod@_u,i1___ftge@ff2
  7924  00194A  C021  F005         	movff	strtod@_u+1,i1___ftge@ff2+1
  7925  00194E  C022  F006         	movff	strtod@_u+2,i1___ftge@ff2+2
  7926  001952  ECCB  F015         	call	i1___ftge	;wreg free
  7927  001956                     L10:
  7928  001956  B0D8               	btfsc	status,0,c
  7929  001958  D011               	goto	i1l718
  7930  00195A  A01E               	btfss	strtod@flags,0,c
  7931  00195C  D007               	goto	i1l3143
  7932  00195E  0E00               	movlw	0
  7933  001960  6E18               	movwf	?_strtod,c
  7934  001962  0E80               	movlw	128
  7935  001964  6E19               	movwf	?_strtod+1,c
  7936  001966  0E80               	movlw	128
  7937  001968  D006               	goto	L6
  7938  00196A  D020               	goto	i1l708
  7939  00196C                     i1l3143:
  7940  00196C  0E00               	movlw	0
  7941  00196E  6E18               	movwf	?_strtod,c
  7942  001970  0E80               	movlw	128
  7943  001972                     L9:
  7944  001972  6E19               	movwf	?_strtod+1,c
  7945  001974  0E00               	movlw	0
  7946  001976                     L6:
  7947  001976  6E1A               	movwf	?_strtod+2,c
  7948  001978  D019               	goto	i1l708
  7949  00197A  D000               	goto	i1l718
  7950  00197C                     i1l718:
  7951  00197C  A01E               	btfss	strtod@flags,0,c
  7952  00197E  D00F               	goto	i1l3149
  7953  001980  C020  F001         	movff	strtod@_u,i1___ftneg@f1
  7954  001984  C021  F002         	movff	strtod@_u+1,i1___ftneg@f1+1
  7955  001988  C022  F003         	movff	strtod@_u+2,i1___ftneg@f1+2
  7956  00198C  ECA0  F019         	call	i1___ftneg	;wreg free
  7957  001990  C001  F020         	movff	?i1___ftneg,strtod@_u
  7958  001994  C002  F021         	movff	?i1___ftneg+1,strtod@_u+1
  7959  001998  C003  F022         	movff	?i1___ftneg+2,strtod@_u+2
  7960  00199C  D000               	goto	i1l3149
  7961  00199E                     i1l3149:
  7962  00199E  C020  F018         	movff	strtod@_u,?_strtod
  7963  0019A2  C021  F019         	movff	strtod@_u+1,?_strtod+1
  7964  0019A6  C022  F01A         	movff	strtod@_u+2,?_strtod+2
  7965  0019AA  D000               	goto	i1l708
  7966  0019AC                     i1l708:
  7967  0019AC  0012               	return		;funcret
  7968  0019AE                     __end_of_strtod:
  7969                           	opt stack 0
  7970                           pclatu	equ	0xFFB
  7971                           pclath	equ	0xFFA
  7972                           tblptru	equ	0xFF8
  7973                           tblptrh	equ	0xFF7
  7974                           tblptrl	equ	0xFF6
  7975                           tablat	equ	0xFF5
  7976                           prodh	equ	0xFF4
  7977                           prodl	equ	0xFF3
  7978                           intcon	equ	0xFF2
  7979                           intcon2	equ	0xFF1
  7980                           indf0	equ	0xFEF
  7981                           postinc0	equ	0xFEE
  7982                           fsr0h	equ	0xFEA
  7983                           fsr0l	equ	0xFE9
  7984                           wreg	equ	0xFE8
  7985                           indf1	equ	0xFE7
  7986                           fsr1h	equ	0xFE2
  7987                           fsr1l	equ	0xFE1
  7988                           bsr	equ	0xFE0
  7989                           indf2	equ	0xFDF
  7990                           postinc2	equ	0xFDE
  7991                           postdec2	equ	0xFDD
  7992                           fsr2h	equ	0xFDA
  7993                           fsr2l	equ	0xFD9
  7994                           status	equ	0xFD8
  7995                           
  7996 ;; *************** function i1___ftneg *****************
  7997 ;; Defined at:
  7998 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  f1              3    0[COMRAM] float 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;		None
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  3    0[COMRAM] float 
  8005 ;; Registers used:
  8006 ;;		wreg, status,2, status,0
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8012 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;Total ram usage:        3 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    2
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_strtod
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text41
  8027  003340                     __ptext41:
  8028                           	opt stack 0
  8029  003340                     i1___ftneg:
  8030                           	opt stack 19
  8031                           
  8032                           ;incstack = 0
  8033  003340  5001               	movf	i1___ftneg@f1,w,c
  8034  003342  1002               	iorwf	i1___ftneg@f1+1,w,c
  8035  003344  1003               	iorwf	i1___ftneg@f1+2,w,c
  8036  003346  B4D8               	btfsc	status,2,c
  8037  003348  D006               	goto	i1l989
  8038  00334A  0E00               	movlw	0
  8039  00334C  1A01               	xorwf	i1___ftneg@f1,f,c
  8040  00334E  0E00               	movlw	0
  8041  003350  1A02               	xorwf	i1___ftneg@f1+1,f,c
  8042  003352  0E80               	movlw	128
  8043  003354  1A03               	xorwf	i1___ftneg@f1+2,f,c
  8044  003356                     i1l989:
  8045  003356  C001  F001         	movff	i1___ftneg@f1,?i1___ftneg
  8046  00335A  C002  F002         	movff	i1___ftneg@f1+1,?i1___ftneg+1
  8047  00335E  C003  F003         	movff	i1___ftneg@f1+2,?i1___ftneg+2
  8048  003362  0012               	return		;funcret
  8049  003364                     __end_ofi1___ftneg:
  8050                           	opt stack 0
  8051                           pclatu	equ	0xFFB
  8052                           pclath	equ	0xFFA
  8053                           tblptru	equ	0xFF8
  8054                           tblptrh	equ	0xFF7
  8055                           tblptrl	equ	0xFF6
  8056                           tablat	equ	0xFF5
  8057                           prodh	equ	0xFF4
  8058                           prodl	equ	0xFF3
  8059                           intcon	equ	0xFF2
  8060                           intcon2	equ	0xFF1
  8061                           indf0	equ	0xFEF
  8062                           postinc0	equ	0xFEE
  8063                           fsr0h	equ	0xFEA
  8064                           fsr0l	equ	0xFE9
  8065                           wreg	equ	0xFE8
  8066                           indf1	equ	0xFE7
  8067                           fsr1h	equ	0xFE2
  8068                           fsr1l	equ	0xFE1
  8069                           bsr	equ	0xFE0
  8070                           indf2	equ	0xFDF
  8071                           postinc2	equ	0xFDE
  8072                           postdec2	equ	0xFDD
  8073                           fsr2h	equ	0xFDA
  8074                           fsr2l	equ	0xFD9
  8075                           status	equ	0xFD8
  8076                           
  8077 ;; *************** function i1___ftmul *****************
  8078 ;; Defined at:
  8079 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  f1              3    8[COMRAM] float 
  8082 ;;  f2              3   11[COMRAM] float 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  __ftmul         3   18[COMRAM] unsigned um
  8085 ;;  __ftmul         1   22[COMRAM] unsigned char 
  8086 ;;  __ftmul         1   21[COMRAM] unsigned char 
  8087 ;;  __ftmul         1   17[COMRAM] unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  3    8[COMRAM] float 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2, status,0, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8097 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;Total ram usage:       15 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    3
  8104 ;; This function calls:
  8105 ;;		i1___ftpack
  8106 ;; This function is called by:
  8107 ;;		_strtod
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text42
  8112  002696                     __ptext42:
  8113                           	opt stack 0
  8114  002696                     i1___ftmul:
  8115                           	opt stack 18
  8116                           
  8117                           ;incstack = 0
  8118  002696  C00B  F00F         	movff	i1___ftmul@f1+2,??i1___ftmul
  8119  00269A  6A10               	clrf	(??i1___ftmul+1)& (0+255),c
  8120  00269C  6A11               	clrf	(??i1___ftmul+2)& (0+255),c
  8121  00269E  340A               	rlcf	i1___ftmul@f1+1,w,c
  8122  0026A0  360F               	rlcf	??i1___ftmul& (0+255),f,c
  8123  0026A2  E301               	bnc	u254_21
  8124  0026A4  8010               	bsf	(??i1___ftmul+1)& (0+255),0,c
  8125  0026A6                     u254_21:
  8126  0026A6  500F               	movf	??i1___ftmul,w,c
  8127  0026A8  6E12               	movwf	i1___ftmul@exp,c
  8128  0026AA  5012               	movf	i1___ftmul@exp,w,c
  8129  0026AC  A4D8               	btfss	status,2,c
  8130  0026AE  D002               	goto	i1l2881
  8131  0026B0  D00E               	goto	i1l2883
  8132  0026B2  D06C               	goto	i1l979
  8133  0026B4                     i1l2881:
  8134  0026B4  C00E  F00F         	movff	i1___ftmul@f2+2,??i1___ftmul
  8135  0026B8  6A10               	clrf	(??i1___ftmul+1)& (0+255),c
  8136  0026BA  6A11               	clrf	(??i1___ftmul+2)& (0+255),c
  8137  0026BC  340D               	rlcf	i1___ftmul@f2+1,w,c
  8138  0026BE  360F               	rlcf	??i1___ftmul& (0+255),f,c
  8139  0026C0  E301               	bnc	u256_21
  8140  0026C2  8010               	bsf	(??i1___ftmul+1)& (0+255),0,c
  8141  0026C4                     u256_21:
  8142  0026C4  500F               	movf	??i1___ftmul,w,c
  8143  0026C6  6E17               	movwf	i1___ftmul@sign,c
  8144  0026C8  5017               	movf	i1___ftmul@sign,w,c
  8145  0026CA  A4D8               	btfss	status,2,c
  8146  0026CC  D007               	goto	i1l2887
  8147  0026CE                     i1l2883:
  8148  0026CE  0E00               	movlw	0
  8149  0026D0  6E09               	movwf	?i1___ftmul,c
  8150  0026D2  0E00               	movlw	0
  8151  0026D4  6E0A               	movwf	?i1___ftmul+1,c
  8152  0026D6  0E00               	movlw	0
  8153  0026D8  6E0B               	movwf	?i1___ftmul+2,c
  8154  0026DA  D058               	goto	i1l979
  8155  0026DC                     i1l2887:
  8156  0026DC  5017               	movf	i1___ftmul@sign,w,c
  8157  0026DE  0F7B               	addlw	123
  8158  0026E0  2612               	addwf	i1___ftmul@exp,f,c
  8159  0026E2  C00B  F017         	movff	i1___ftmul@f1+2,i1___ftmul@sign
  8160  0026E6  500E               	movf	i1___ftmul@f2+2,w,c
  8161  0026E8  1A17               	xorwf	i1___ftmul@sign,f,c
  8162  0026EA  0E80               	movlw	128
  8163  0026EC  1617               	andwf	i1___ftmul@sign,f,c
  8164  0026EE  8E0A               	bsf	i1___ftmul@f1+1,7,c
  8165  0026F0  8E0D               	bsf	i1___ftmul@f2+1,7,c
  8166  0026F2  0EFF               	movlw	255
  8167  0026F4  160C               	andwf	i1___ftmul@f2,f,c
  8168  0026F6  0EFF               	movlw	255
  8169  0026F8  160D               	andwf	i1___ftmul@f2+1,f,c
  8170  0026FA  0E00               	movlw	0
  8171  0026FC  160E               	andwf	i1___ftmul@f2+2,f,c
  8172  0026FE  0E00               	movlw	0
  8173  002700  6E13               	movwf	i1___ftmul@f3_as_product,c
  8174  002702  0E00               	movlw	0
  8175  002704  6E14               	movwf	i1___ftmul@f3_as_product+1,c
  8176  002706  0E00               	movlw	0
  8177  002708  6E15               	movwf	i1___ftmul@f3_as_product+2,c
  8178  00270A  0E07               	movlw	7
  8179  00270C  6E16               	movwf	i1___ftmul@cntr,c
  8180  00270E  D000               	goto	i1l2901
  8181  002710                     i1l2901:
  8182  002710  A009               	btfss	i1___ftmul@f1,0,c
  8183  002712  D007               	goto	i1l2905
  8184  002714  500C               	movf	i1___ftmul@f2,w,c
  8185  002716  2613               	addwf	i1___ftmul@f3_as_product,f,c
  8186  002718  500D               	movf	i1___ftmul@f2+1,w,c
  8187  00271A  2214               	addwfc	i1___ftmul@f3_as_product+1,f,c
  8188  00271C  500E               	movf	i1___ftmul@f2+2,w,c
  8189  00271E  2215               	addwfc	i1___ftmul@f3_as_product+2,f,c
  8190  002720  D000               	goto	i1l2905
  8191  002722                     i1l2905:
  8192  002722  90D8               	bcf	status,0,c
  8193  002724  320B               	rrcf	i1___ftmul@f1+2,f,c
  8194  002726  320A               	rrcf	i1___ftmul@f1+1,f,c
  8195  002728  3209               	rrcf	i1___ftmul@f1,f,c
  8196  00272A  90D8               	bcf	status,0,c
  8197  00272C  360C               	rlcf	i1___ftmul@f2,f,c
  8198  00272E  360D               	rlcf	i1___ftmul@f2+1,f,c
  8199  002730  360E               	rlcf	i1___ftmul@f2+2,f,c
  8200  002732  2E16               	decfsz	i1___ftmul@cntr,f,c
  8201  002734  D7ED               	goto	i1l2901
  8202  002736  D000               	goto	i1l2909
  8203  002738                     i1l2909:
  8204  002738  0E09               	movlw	9
  8205  00273A  6E16               	movwf	i1___ftmul@cntr,c
  8206  00273C  D000               	goto	i1l2911
  8207  00273E                     i1l2911:
  8208  00273E  A009               	btfss	i1___ftmul@f1,0,c
  8209  002740  D007               	goto	i1l2915
  8210  002742  500C               	movf	i1___ftmul@f2,w,c
  8211  002744  2613               	addwf	i1___ftmul@f3_as_product,f,c
  8212  002746  500D               	movf	i1___ftmul@f2+1,w,c
  8213  002748  2214               	addwfc	i1___ftmul@f3_as_product+1,f,c
  8214  00274A  500E               	movf	i1___ftmul@f2+2,w,c
  8215  00274C  2215               	addwfc	i1___ftmul@f3_as_product+2,f,c
  8216  00274E  D000               	goto	i1l2915
  8217  002750                     i1l2915:
  8218  002750  90D8               	bcf	status,0,c
  8219  002752  320B               	rrcf	i1___ftmul@f1+2,f,c
  8220  002754  320A               	rrcf	i1___ftmul@f1+1,f,c
  8221  002756  3209               	rrcf	i1___ftmul@f1,f,c
  8222  002758  90D8               	bcf	status,0,c
  8223  00275A  3215               	rrcf	i1___ftmul@f3_as_product+2,f,c
  8224  00275C  3214               	rrcf	i1___ftmul@f3_as_product+1,f,c
  8225  00275E  3213               	rrcf	i1___ftmul@f3_as_product,f,c
  8226  002760  2E16               	decfsz	i1___ftmul@cntr,f,c
  8227  002762  D7ED               	goto	i1l2911
  8228  002764  D000               	goto	i1l2919
  8229  002766                     i1l2919:
  8230  002766  C013  F001         	movff	i1___ftmul@f3_as_product,i1___ftpack@arg
  8231  00276A  C014  F002         	movff	i1___ftmul@f3_as_product+1,i1___ftpack@arg+1
  8232  00276E  C015  F003         	movff	i1___ftmul@f3_as_product+2,i1___ftpack@arg+2
  8233  002772  C012  F004         	movff	i1___ftmul@exp,i1___ftpack@exp
  8234  002776  C017  F005         	movff	i1___ftmul@sign,i1___ftpack@sign
  8235  00277A  EC14  F015         	call	i1___ftpack	;wreg free
  8236  00277E  C001  F009         	movff	?i1___ftpack,?i1___ftmul
  8237  002782  C002  F00A         	movff	?i1___ftpack+1,?i1___ftmul+1
  8238  002786  C003  F00B         	movff	?i1___ftpack+2,?i1___ftmul+2
  8239  00278A  D000               	goto	i1l979
  8240  00278C                     i1l979:
  8241  00278C  0012               	return		;funcret
  8242  00278E                     __end_ofi1___ftmul:
  8243                           	opt stack 0
  8244                           pclatu	equ	0xFFB
  8245                           pclath	equ	0xFFA
  8246                           tblptru	equ	0xFF8
  8247                           tblptrh	equ	0xFF7
  8248                           tblptrl	equ	0xFF6
  8249                           tablat	equ	0xFF5
  8250                           prodh	equ	0xFF4
  8251                           prodl	equ	0xFF3
  8252                           intcon	equ	0xFF2
  8253                           intcon2	equ	0xFF1
  8254                           indf0	equ	0xFEF
  8255                           postinc0	equ	0xFEE
  8256                           fsr0h	equ	0xFEA
  8257                           fsr0l	equ	0xFE9
  8258                           wreg	equ	0xFE8
  8259                           indf1	equ	0xFE7
  8260                           fsr1h	equ	0xFE2
  8261                           fsr1l	equ	0xFE1
  8262                           bsr	equ	0xFE0
  8263                           indf2	equ	0xFDF
  8264                           postinc2	equ	0xFDE
  8265                           postdec2	equ	0xFDD
  8266                           fsr2h	equ	0xFDA
  8267                           fsr2l	equ	0xFD9
  8268                           status	equ	0xFD8
  8269                           
  8270 ;; *************** function i1___ftge *****************
  8271 ;; Defined at:
  8272 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  ff1             3    0[COMRAM] float 
  8275 ;;  ff2             3    3[COMRAM] float 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;		None               void
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8287 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;Total ram usage:        9 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    2
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_strtod
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text43
  8302  002B96                     __ptext43:
  8303                           	opt stack 0
  8304  002B96                     i1___ftge:
  8305                           	opt stack 19
  8306                           
  8307                           ;incstack = 0
  8308  002B96  AE03               	btfss	i1___ftge@ff1+2,7,c
  8309  002B98  D017               	goto	i1l2861
  8310  002B9A  C001  F007         	movff	i1___ftge@ff1,??i1___ftge
  8311  002B9E  C002  F008         	movff	i1___ftge@ff1+1,??i1___ftge+1
  8312  002BA2  C003  F009         	movff	i1___ftge@ff1+2,??i1___ftge+2
  8313  002BA6  1E07               	comf	??i1___ftge,f,c
  8314  002BA8  1E08               	comf	??i1___ftge+1,f,c
  8315  002BAA  1E09               	comf	??i1___ftge+2,f,c
  8316  002BAC  2A07               	incf	??i1___ftge,f,c
  8317  002BAE  0E00               	movlw	0
  8318  002BB0  2208               	addwfc	??i1___ftge+1,f,c
  8319  002BB2  2209               	addwfc	??i1___ftge+2,f,c
  8320  002BB4  0E00               	movlw	0
  8321  002BB6  2407               	addwf	??i1___ftge,w,c
  8322  002BB8  6E01               	movwf	i1___ftge@ff1,c
  8323  002BBA  0E00               	movlw	0
  8324  002BBC  2008               	addwfc	??i1___ftge+1,w,c
  8325  002BBE  6E02               	movwf	i1___ftge@ff1+1,c
  8326  002BC0  0E80               	movlw	128
  8327  002BC2  2009               	addwfc	??i1___ftge+2,w,c
  8328  002BC4  6E03               	movwf	i1___ftge@ff1+2,c
  8329  002BC6  D000               	goto	i1l2861
  8330  002BC8                     i1l2861:
  8331  002BC8  AE06               	btfss	i1___ftge@ff2+2,7,c
  8332  002BCA  D017               	goto	i1l2865
  8333  002BCC  C004  F007         	movff	i1___ftge@ff2,??i1___ftge
  8334  002BD0  C005  F008         	movff	i1___ftge@ff2+1,??i1___ftge+1
  8335  002BD4  C006  F009         	movff	i1___ftge@ff2+2,??i1___ftge+2
  8336  002BD8  1E07               	comf	??i1___ftge,f,c
  8337  002BDA  1E08               	comf	??i1___ftge+1,f,c
  8338  002BDC  1E09               	comf	??i1___ftge+2,f,c
  8339  002BDE  2A07               	incf	??i1___ftge,f,c
  8340  002BE0  0E00               	movlw	0
  8341  002BE2  2208               	addwfc	??i1___ftge+1,f,c
  8342  002BE4  2209               	addwfc	??i1___ftge+2,f,c
  8343  002BE6  0E00               	movlw	0
  8344  002BE8  2407               	addwf	??i1___ftge,w,c
  8345  002BEA  6E04               	movwf	i1___ftge@ff2,c
  8346  002BEC  0E00               	movlw	0
  8347  002BEE  2008               	addwfc	??i1___ftge+1,w,c
  8348  002BF0  6E05               	movwf	i1___ftge@ff2+1,c
  8349  002BF2  0E80               	movlw	128
  8350  002BF4  2009               	addwfc	??i1___ftge+2,w,c
  8351  002BF6  6E06               	movwf	i1___ftge@ff2+2,c
  8352  002BF8  D000               	goto	i1l2865
  8353  002BFA                     i1l2865:
  8354  002BFA  0E00               	movlw	0
  8355  002BFC  1A01               	xorwf	i1___ftge@ff1,f,c
  8356  002BFE  0E00               	movlw	0
  8357  002C00  1A02               	xorwf	i1___ftge@ff1+1,f,c
  8358  002C02  0E80               	movlw	128
  8359  002C04  1A03               	xorwf	i1___ftge@ff1+2,f,c
  8360  002C06  0E00               	movlw	0
  8361  002C08  1A04               	xorwf	i1___ftge@ff2,f,c
  8362  002C0A  0E00               	movlw	0
  8363  002C0C  1A05               	xorwf	i1___ftge@ff2+1,f,c
  8364  002C0E  0E80               	movlw	128
  8365  002C10  1A06               	xorwf	i1___ftge@ff2+2,f,c
  8366  002C12  5004               	movf	i1___ftge@ff2,w,c
  8367  002C14  5C01               	subwf	i1___ftge@ff1,w,c
  8368  002C16  5005               	movf	i1___ftge@ff2+1,w,c
  8369  002C18  5802               	subwfb	i1___ftge@ff1+1,w,c
  8370  002C1A  5006               	movf	i1___ftge@ff2+2,w,c
  8371  002C1C  5803               	subwfb	i1___ftge@ff1+2,w,c
  8372  002C1E  B0D8               	btfsc	status,0,c
  8373  002C20  D002               	goto	i1l2871
  8374  002C22  90D8               	bcf	status,0,c
  8375  002C24  D002               	goto	i1l973
  8376  002C26                     i1l2871:
  8377  002C26  80D8               	bsf	status,0,c
  8378  002C28  D000               	goto	i1l973
  8379  002C2A                     i1l973:
  8380  002C2A  0012               	return		;funcret
  8381  002C2C                     __end_ofi1___ftge:
  8382                           	opt stack 0
  8383                           pclatu	equ	0xFFB
  8384                           pclath	equ	0xFFA
  8385                           tblptru	equ	0xFF8
  8386                           tblptrh	equ	0xFF7
  8387                           tblptrl	equ	0xFF6
  8388                           tablat	equ	0xFF5
  8389                           prodh	equ	0xFF4
  8390                           prodl	equ	0xFF3
  8391                           intcon	equ	0xFF2
  8392                           intcon2	equ	0xFF1
  8393                           indf0	equ	0xFEF
  8394                           postinc0	equ	0xFEE
  8395                           fsr0h	equ	0xFEA
  8396                           fsr0l	equ	0xFE9
  8397                           wreg	equ	0xFE8
  8398                           indf1	equ	0xFE7
  8399                           fsr1h	equ	0xFE2
  8400                           fsr1l	equ	0xFE1
  8401                           bsr	equ	0xFE0
  8402                           indf2	equ	0xFDF
  8403                           postinc2	equ	0xFDE
  8404                           postdec2	equ	0xFDD
  8405                           fsr2h	equ	0xFDA
  8406                           fsr2l	equ	0xFD9
  8407                           status	equ	0xFD8
  8408                           
  8409 ;; *************** function i1___ftdiv *****************
  8410 ;; Defined at:
  8411 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  f1              3    8[COMRAM] float 
  8414 ;;  f2              3   11[COMRAM] float 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  __ftdiv         3   18[COMRAM] float 
  8417 ;;  __ftdiv         1   22[COMRAM] unsigned char 
  8418 ;;  __ftdiv         1   21[COMRAM] unsigned char 
  8419 ;;  __ftdiv         1   17[COMRAM] unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  3    8[COMRAM] float 
  8422 ;; Registers used:
  8423 ;;		wreg, status,2, status,0, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8429 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;Total ram usage:       15 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    3
  8436 ;; This function calls:
  8437 ;;		i1___ftpack
  8438 ;; This function is called by:
  8439 ;;		_strtod
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text44
  8444  002878                     __ptext44:
  8445                           	opt stack 0
  8446  002878                     i1___ftdiv:
  8447                           	opt stack 18
  8448                           
  8449                           ;incstack = 0
  8450  002878  C00B  F00F         	movff	i1___ftdiv@f1+2,??i1___ftdiv
  8451  00287C  6A10               	clrf	(??i1___ftdiv+1)& (0+255),c
  8452  00287E  6A11               	clrf	(??i1___ftdiv+2)& (0+255),c
  8453  002880  340A               	rlcf	i1___ftdiv@f1+1,w,c
  8454  002882  360F               	rlcf	??i1___ftdiv& (0+255),f,c
  8455  002884  E301               	bnc	u246_21
  8456  002886  8010               	bsf	(??i1___ftdiv+1)& (0+255),0,c
  8457  002888                     u246_21:
  8458  002888  500F               	movf	??i1___ftdiv,w,c
  8459  00288A  6E16               	movwf	i1___ftdiv@exp,c
  8460  00288C  5016               	movf	i1___ftdiv@exp,w,c
  8461  00288E  A4D8               	btfss	status,2,c
  8462  002890  D002               	goto	i1l2817
  8463  002892  D00E               	goto	i1l2819
  8464  002894  D061               	goto	i1l964
  8465  002896                     i1l2817:
  8466  002896  C00E  F00F         	movff	i1___ftdiv@f2+2,??i1___ftdiv
  8467  00289A  6A10               	clrf	(??i1___ftdiv+1)& (0+255),c
  8468  00289C  6A11               	clrf	(??i1___ftdiv+2)& (0+255),c
  8469  00289E  340D               	rlcf	i1___ftdiv@f2+1,w,c
  8470  0028A0  360F               	rlcf	??i1___ftdiv& (0+255),f,c
  8471  0028A2  E301               	bnc	u248_21
  8472  0028A4  8010               	bsf	(??i1___ftdiv+1)& (0+255),0,c
  8473  0028A6                     u248_21:
  8474  0028A6  500F               	movf	??i1___ftdiv,w,c
  8475  0028A8  6E17               	movwf	i1___ftdiv@sign,c
  8476  0028AA  5017               	movf	i1___ftdiv@sign,w,c
  8477  0028AC  A4D8               	btfss	status,2,c
  8478  0028AE  D007               	goto	i1l2823
  8479  0028B0                     i1l2819:
  8480  0028B0  0E00               	movlw	0
  8481  0028B2  6E09               	movwf	?i1___ftdiv,c
  8482  0028B4  0E00               	movlw	0
  8483  0028B6  6E0A               	movwf	?i1___ftdiv+1,c
  8484  0028B8  0E00               	movlw	0
  8485  0028BA  6E0B               	movwf	?i1___ftdiv+2,c
  8486  0028BC  D04D               	goto	i1l964
  8487  0028BE                     i1l2823:
  8488  0028BE  0E00               	movlw	0
  8489  0028C0  6E13               	movwf	i1___ftdiv@f3,c
  8490  0028C2  0E00               	movlw	0
  8491  0028C4  6E14               	movwf	i1___ftdiv@f3+1,c
  8492  0028C6  0E00               	movlw	0
  8493  0028C8  6E15               	movwf	i1___ftdiv@f3+2,c
  8494  0028CA  5017               	movf	i1___ftdiv@sign,w,c
  8495  0028CC  0F89               	addlw	137
  8496  0028CE  5E16               	subwf	i1___ftdiv@exp,f,c
  8497  0028D0  C00B  F017         	movff	i1___ftdiv@f1+2,i1___ftdiv@sign
  8498  0028D4  500E               	movf	i1___ftdiv@f2+2,w,c
  8499  0028D6  1A17               	xorwf	i1___ftdiv@sign,f,c
  8500  0028D8  0E80               	movlw	128
  8501  0028DA  1617               	andwf	i1___ftdiv@sign,f,c
  8502  0028DC  8E0A               	bsf	i1___ftdiv@f1+1,7,c
  8503  0028DE  0EFF               	movlw	255
  8504  0028E0  1609               	andwf	i1___ftdiv@f1,f,c
  8505  0028E2  0EFF               	movlw	255
  8506  0028E4  160A               	andwf	i1___ftdiv@f1+1,f,c
  8507  0028E6  0E00               	movlw	0
  8508  0028E8  160B               	andwf	i1___ftdiv@f1+2,f,c
  8509  0028EA  8E0D               	bsf	i1___ftdiv@f2+1,7,c
  8510  0028EC  0EFF               	movlw	255
  8511  0028EE  160C               	andwf	i1___ftdiv@f2,f,c
  8512  0028F0  0EFF               	movlw	255
  8513  0028F2  160D               	andwf	i1___ftdiv@f2+1,f,c
  8514  0028F4  0E00               	movlw	0
  8515  0028F6  160E               	andwf	i1___ftdiv@f2+2,f,c
  8516  0028F8  0E18               	movlw	24
  8517  0028FA  6E12               	movwf	i1___ftdiv@cntr,c
  8518  0028FC  D000               	goto	i1l2843
  8519  0028FE                     i1l2843:
  8520  0028FE  90D8               	bcf	status,0,c
  8521  002900  3613               	rlcf	i1___ftdiv@f3,f,c
  8522  002902  3614               	rlcf	i1___ftdiv@f3+1,f,c
  8523  002904  3615               	rlcf	i1___ftdiv@f3+2,f,c
  8524  002906  500C               	movf	i1___ftdiv@f2,w,c
  8525  002908  5C09               	subwf	i1___ftdiv@f1,w,c
  8526  00290A  500D               	movf	i1___ftdiv@f2+1,w,c
  8527  00290C  580A               	subwfb	i1___ftdiv@f1+1,w,c
  8528  00290E  500E               	movf	i1___ftdiv@f2+2,w,c
  8529  002910  580B               	subwfb	i1___ftdiv@f1+2,w,c
  8530  002912  A0D8               	btfss	status,0,c
  8531  002914  D007               	goto	i1l967
  8532  002916  500C               	movf	i1___ftdiv@f2,w,c
  8533  002918  5E09               	subwf	i1___ftdiv@f1,f,c
  8534  00291A  500D               	movf	i1___ftdiv@f2+1,w,c
  8535  00291C  5A0A               	subwfb	i1___ftdiv@f1+1,f,c
  8536  00291E  500E               	movf	i1___ftdiv@f2+2,w,c
  8537  002920  5A0B               	subwfb	i1___ftdiv@f1+2,f,c
  8538  002922  8013               	bsf	i1___ftdiv@f3,0,c
  8539  002924                     i1l967:
  8540  002924  90D8               	bcf	status,0,c
  8541  002926  3609               	rlcf	i1___ftdiv@f1,f,c
  8542  002928  360A               	rlcf	i1___ftdiv@f1+1,f,c
  8543  00292A  360B               	rlcf	i1___ftdiv@f1+2,f,c
  8544  00292C  2E12               	decfsz	i1___ftdiv@cntr,f,c
  8545  00292E  D7E7               	goto	i1l2843
  8546  002930  D000               	goto	i1l2853
  8547  002932                     i1l2853:
  8548  002932  C013  F001         	movff	i1___ftdiv@f3,i1___ftpack@arg
  8549  002936  C014  F002         	movff	i1___ftdiv@f3+1,i1___ftpack@arg+1
  8550  00293A  C015  F003         	movff	i1___ftdiv@f3+2,i1___ftpack@arg+2
  8551  00293E  C016  F004         	movff	i1___ftdiv@exp,i1___ftpack@exp
  8552  002942  C017  F005         	movff	i1___ftdiv@sign,i1___ftpack@sign
  8553  002946  EC14  F015         	call	i1___ftpack	;wreg free
  8554  00294A  C001  F009         	movff	?i1___ftpack,?i1___ftdiv
  8555  00294E  C002  F00A         	movff	?i1___ftpack+1,?i1___ftdiv+1
  8556  002952  C003  F00B         	movff	?i1___ftpack+2,?i1___ftdiv+2
  8557  002956  D000               	goto	i1l964
  8558  002958                     i1l964:
  8559  002958  0012               	return		;funcret
  8560  00295A                     __end_ofi1___ftdiv:
  8561                           	opt stack 0
  8562                           pclatu	equ	0xFFB
  8563                           pclath	equ	0xFFA
  8564                           tblptru	equ	0xFF8
  8565                           tblptrh	equ	0xFF7
  8566                           tblptrl	equ	0xFF6
  8567                           tablat	equ	0xFF5
  8568                           prodh	equ	0xFF4
  8569                           prodl	equ	0xFF3
  8570                           intcon	equ	0xFF2
  8571                           intcon2	equ	0xFF1
  8572                           indf0	equ	0xFEF
  8573                           postinc0	equ	0xFEE
  8574                           fsr0h	equ	0xFEA
  8575                           fsr0l	equ	0xFE9
  8576                           wreg	equ	0xFE8
  8577                           indf1	equ	0xFE7
  8578                           fsr1h	equ	0xFE2
  8579                           fsr1l	equ	0xFE1
  8580                           bsr	equ	0xFE0
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588 ;; *************** function _isspace *****************
  8589 ;; Defined at:
  8590 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isspace.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  c               1    wreg     unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  c               1    2[COMRAM] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;		None               void
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;Total ram usage:        3 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    2
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_keyValue
  8615 ;;		_strtod
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text45
  8620  0032C8                     __ptext45:
  8621                           	opt stack 0
  8622  0032C8                     _isspace:
  8623                           	opt stack 19
  8624                           
  8625                           ;incstack = 0
  8626                           ;isspace@c stored from wreg
  8627  0032C8  6E03               	movwf	isspace@c,c
  8628  0032CA  0E01               	movlw	1
  8629  0032CC  6E02               	movwf	_isspace$2365,c
  8630  0032CE  0E20               	movlw	32
  8631  0032D0  1803               	xorwf	isspace@c,w,c
  8632  0032D2  B4D8               	btfsc	status,2,c
  8633  0032D4  D00A               	goto	i1l2731
  8634  0032D6  0E0E               	movlw	14
  8635  0032D8  6003               	cpfslt	isspace@c,c
  8636  0032DA  D004               	goto	i1l2729
  8637  0032DC  0E09               	movlw	9
  8638  0032DE  6003               	cpfslt	isspace@c,c
  8639  0032E0  D004               	goto	i1l2731
  8640  0032E2  D000               	goto	i1l2729
  8641  0032E4                     i1l2729:
  8642  0032E4  0E00               	movlw	0
  8643  0032E6  6E02               	movwf	_isspace$2365,c
  8644  0032E8  D000               	goto	i1l2731
  8645  0032EA                     i1l2731:
  8646  0032EA  C002  F001         	movff	_isspace$2365,??_isspace
  8647  0032EE  3001               	rrcf	??_isspace,w,c
  8648  0032F0  D000               	goto	i1l1020
  8649  0032F2                     i1l1020:
  8650  0032F2  0012               	return		;funcret
  8651  0032F4                     __end_of_isspace:
  8652                           	opt stack 0
  8653                           pclatu	equ	0xFFB
  8654                           pclath	equ	0xFFA
  8655                           tblptru	equ	0xFF8
  8656                           tblptrh	equ	0xFF7
  8657                           tblptrl	equ	0xFF6
  8658                           tablat	equ	0xFF5
  8659                           prodh	equ	0xFF4
  8660                           prodl	equ	0xFF3
  8661                           intcon	equ	0xFF2
  8662                           intcon2	equ	0xFF1
  8663                           indf0	equ	0xFEF
  8664                           postinc0	equ	0xFEE
  8665                           fsr0h	equ	0xFEA
  8666                           fsr0l	equ	0xFE9
  8667                           wreg	equ	0xFE8
  8668                           indf1	equ	0xFE7
  8669                           fsr1h	equ	0xFE2
  8670                           fsr1l	equ	0xFE1
  8671                           bsr	equ	0xFE0
  8672                           indf2	equ	0xFDF
  8673                           postinc2	equ	0xFDE
  8674                           postdec2	equ	0xFDD
  8675                           fsr2h	equ	0xFDA
  8676                           fsr2l	equ	0xFD9
  8677                           status	equ	0xFD8
  8678                           
  8679 ;; *************** function _isdigit *****************
  8680 ;; Defined at:
  8681 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  c               1    wreg     unsigned char 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  c               1    2[COMRAM] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;		None               void
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8698 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8699 ;;Total ram usage:        3 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:    2
  8702 ;; This function calls:
  8703 ;;		Nothing
  8704 ;; This function is called by:
  8705 ;;		_strtod
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text46
  8710  003364                     __ptext46:
  8711                           	opt stack 0
  8712  003364                     _isdigit:
  8713                           	opt stack 19
  8714                           
  8715                           ;incstack = 0
  8716                           ;isdigit@c stored from wreg
  8717  003364  6E03               	movwf	isdigit@c,c
  8718  003366  0E00               	movlw	0
  8719  003368  6E02               	movwf	_isdigit$2362,c
  8720  00336A  0E3A               	movlw	58
  8721  00336C  6003               	cpfslt	isdigit@c,c
  8722  00336E  D006               	goto	i1l2805
  8723  003370  0E2F               	movlw	47
  8724  003372  6403               	cpfsgt	isdigit@c,c
  8725  003374  D003               	goto	i1l2805
  8726  003376  0E01               	movlw	1
  8727  003378  6E02               	movwf	_isdigit$2362,c
  8728  00337A  D000               	goto	i1l2805
  8729  00337C                     i1l2805:
  8730  00337C  C002  F001         	movff	_isdigit$2362,??_isdigit
  8731  003380  3001               	rrcf	??_isdigit,w,c
  8732  003382  D000               	goto	i1l1015
  8733  003384                     i1l1015:
  8734  003384  0012               	return		;funcret
  8735  003386                     __end_of_isdigit:
  8736                           	opt stack 0
  8737                           pclatu	equ	0xFFB
  8738                           pclath	equ	0xFFA
  8739                           tblptru	equ	0xFF8
  8740                           tblptrh	equ	0xFF7
  8741                           tblptrl	equ	0xFF6
  8742                           tablat	equ	0xFF5
  8743                           prodh	equ	0xFF4
  8744                           prodl	equ	0xFF3
  8745                           intcon	equ	0xFF2
  8746                           intcon2	equ	0xFF1
  8747                           indf0	equ	0xFEF
  8748                           postinc0	equ	0xFEE
  8749                           fsr0h	equ	0xFEA
  8750                           fsr0l	equ	0xFE9
  8751                           wreg	equ	0xFE8
  8752                           indf1	equ	0xFE7
  8753                           fsr1h	equ	0xFE2
  8754                           fsr1l	equ	0xFE1
  8755                           bsr	equ	0xFE0
  8756                           indf2	equ	0xFDF
  8757                           postinc2	equ	0xFDE
  8758                           postdec2	equ	0xFDD
  8759                           fsr2h	equ	0xFDA
  8760                           fsr2l	equ	0xFD9
  8761                           status	equ	0xFD8
  8762                           
  8763 ;; *************** function ___lmul *****************
  8764 ;; Defined at:
  8765 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul32.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  multiplier      4    0[COMRAM] unsigned long 
  8768 ;;  multiplicand    4    4[COMRAM] unsigned long 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  product         4    8[COMRAM] unsigned long 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  4    0[COMRAM] unsigned long 
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8780 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;Total ram usage:       12 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    2
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_strtod
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text47
  8795  002F48                     __ptext47:
  8796                           	opt stack 0
  8797  002F48                     ___lmul:
  8798                           	opt stack 19
  8799                           
  8800                           ;incstack = 0
  8801  002F48  0E00               	movlw	0
  8802  002F4A  6E09               	movwf	___lmul@product,c
  8803  002F4C  0E00               	movlw	0
  8804  002F4E  6E0A               	movwf	___lmul@product+1,c
  8805  002F50  0E00               	movlw	0
  8806  002F52  6E0B               	movwf	___lmul@product+2,c
  8807  002F54  0E00               	movlw	0
  8808  002F56  6E0C               	movwf	___lmul@product+3,c
  8809  002F58  D000               	goto	i1l2737
  8810  002F5A                     i1l2737:
  8811  002F5A  A001               	btfss	___lmul@multiplier,0,c
  8812  002F5C  D009               	goto	i1l2741
  8813  002F5E  5005               	movf	___lmul@multiplicand,w,c
  8814  002F60  2609               	addwf	___lmul@product,f,c
  8815  002F62  5006               	movf	___lmul@multiplicand+1,w,c
  8816  002F64  220A               	addwfc	___lmul@product+1,f,c
  8817  002F66  5007               	movf	___lmul@multiplicand+2,w,c
  8818  002F68  220B               	addwfc	___lmul@product+2,f,c
  8819  002F6A  5008               	movf	___lmul@multiplicand+3,w,c
  8820  002F6C  220C               	addwfc	___lmul@product+3,f,c
  8821  002F6E  D000               	goto	i1l2741
  8822  002F70                     i1l2741:
  8823  002F70  90D8               	bcf	status,0,c
  8824  002F72  3605               	rlcf	___lmul@multiplicand,f,c
  8825  002F74  3606               	rlcf	___lmul@multiplicand+1,f,c
  8826  002F76  3607               	rlcf	___lmul@multiplicand+2,f,c
  8827  002F78  3608               	rlcf	___lmul@multiplicand+3,f,c
  8828  002F7A  90D8               	bcf	status,0,c
  8829  002F7C  3204               	rrcf	___lmul@multiplier+3,f,c
  8830  002F7E  3203               	rrcf	___lmul@multiplier+2,f,c
  8831  002F80  3202               	rrcf	___lmul@multiplier+1,f,c
  8832  002F82  3201               	rrcf	___lmul@multiplier,f,c
  8833  002F84  5001               	movf	___lmul@multiplier,w,c
  8834  002F86  1002               	iorwf	___lmul@multiplier+1,w,c
  8835  002F88  1003               	iorwf	___lmul@multiplier+2,w,c
  8836  002F8A  1004               	iorwf	___lmul@multiplier+3,w,c
  8837  002F8C  A4D8               	btfss	status,2,c
  8838  002F8E  D7E5               	goto	i1l2737
  8839  002F90  C009  F001         	movff	___lmul@product,?___lmul
  8840  002F94  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  8841  002F98  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  8842  002F9C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  8843  002FA0  0012               	return		;funcret
  8844  002FA2                     __end_of___lmul:
  8845                           	opt stack 0
  8846                           pclatu	equ	0xFFB
  8847                           pclath	equ	0xFFA
  8848                           tblptru	equ	0xFF8
  8849                           tblptrh	equ	0xFF7
  8850                           tblptrl	equ	0xFF6
  8851                           tablat	equ	0xFF5
  8852                           prodh	equ	0xFF4
  8853                           prodl	equ	0xFF3
  8854                           intcon	equ	0xFF2
  8855                           intcon2	equ	0xFF1
  8856                           indf0	equ	0xFEF
  8857                           postinc0	equ	0xFEE
  8858                           fsr0h	equ	0xFEA
  8859                           fsr0l	equ	0xFE9
  8860                           wreg	equ	0xFE8
  8861                           indf1	equ	0xFE7
  8862                           fsr1h	equ	0xFE2
  8863                           fsr1l	equ	0xFE1
  8864                           bsr	equ	0xFE0
  8865                           indf2	equ	0xFDF
  8866                           postinc2	equ	0xFDE
  8867                           postdec2	equ	0xFDD
  8868                           fsr2h	equ	0xFDA
  8869                           fsr2l	equ	0xFD9
  8870                           status	equ	0xFD8
  8871                           
  8872 ;; *************** function ___altoft *****************
  8873 ;; Defined at:
  8874 ;;		line 42 in file "/opt/microchip/xc8/v1.34/sources/common/altoft.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  c               4    8[COMRAM] long 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  sign            1   17[COMRAM] unsigned char 
  8879 ;;  exp             1   16[COMRAM] unsigned char 
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  3    8[COMRAM] float 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0, cstack
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;Total ram usage:       10 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    3
  8896 ;; This function calls:
  8897 ;;		i1___ftpack
  8898 ;; This function is called by:
  8899 ;;		_strtod
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text48
  8904  002D34                     __ptext48:
  8905                           	opt stack 0
  8906  002D34                     ___altoft:
  8907                           	opt stack 18
  8908                           
  8909                           ;incstack = 0
  8910  002D34  0E00               	movlw	0
  8911  002D36  6E12               	movwf	___altoft@sign,c
  8912  002D38  0E8E               	movlw	142
  8913  002D3A  6E11               	movwf	___altoft@exp,c
  8914  002D3C  AE0C               	btfss	___altoft@c+3,7,c
  8915  002D3E  D012               	goto	i1l2791
  8916  002D40  1E0C               	comf	___altoft@c+3,f,c
  8917  002D42  1E0B               	comf	___altoft@c+2,f,c
  8918  002D44  1E0A               	comf	___altoft@c+1,f,c
  8919  002D46  6C09               	negf	___altoft@c,c
  8920  002D48  0E00               	movlw	0
  8921  002D4A  220A               	addwfc	___altoft@c+1,f,c
  8922  002D4C  220B               	addwfc	___altoft@c+2,f,c
  8923  002D4E  220C               	addwfc	___altoft@c+3,f,c
  8924  002D50  0E01               	movlw	1
  8925  002D52  6E12               	movwf	___altoft@sign,c
  8926  002D54  D007               	goto	i1l2791
  8927  002D56                     i1l2789:
  8928  002D56  90D8               	bcf	status,0,c
  8929  002D58  320C               	rrcf	___altoft@c+3,f,c
  8930  002D5A  320B               	rrcf	___altoft@c+2,f,c
  8931  002D5C  320A               	rrcf	___altoft@c+1,f,c
  8932  002D5E  3209               	rrcf	___altoft@c,f,c
  8933  002D60  2A11               	incf	___altoft@exp,f,c
  8934  002D62  D000               	goto	i1l2791
  8935  002D64                     i1l2791:
  8936  002D64  0E00               	movlw	0
  8937  002D66  1409               	andwf	___altoft@c,w,c
  8938  002D68  6E0D               	movwf	??___altoft& (0+255),c
  8939  002D6A  0E00               	movlw	0
  8940  002D6C  140A               	andwf	___altoft@c+1,w,c
  8941  002D6E  6E0E               	movwf	(??___altoft+1)& (0+255),c
  8942  002D70  0E00               	movlw	0
  8943  002D72  140B               	andwf	___altoft@c+2,w,c
  8944  002D74  6E0F               	movwf	(??___altoft+2)& (0+255),c
  8945  002D76  0EFF               	movlw	255
  8946  002D78  140C               	andwf	___altoft@c+3,w,c
  8947  002D7A  6E10               	movwf	(??___altoft+3)& (0+255),c
  8948  002D7C  500D               	movf	??___altoft,w,c
  8949  002D7E  100E               	iorwf	??___altoft+1,w,c
  8950  002D80  100F               	iorwf	??___altoft+2,w,c
  8951  002D82  1010               	iorwf	??___altoft+3,w,c
  8952  002D84  A4D8               	btfss	status,2,c
  8953  002D86  D7E7               	goto	i1l2789
  8954  002D88  C009  F001         	movff	___altoft@c,i1___ftpack@arg
  8955  002D8C  C00A  F002         	movff	___altoft@c+1,i1___ftpack@arg+1
  8956  002D90  C00B  F003         	movff	___altoft@c+2,i1___ftpack@arg+2
  8957  002D94  C011  F004         	movff	___altoft@exp,i1___ftpack@exp
  8958  002D98  C012  F005         	movff	___altoft@sign,i1___ftpack@sign
  8959  002D9C  EC14  F015         	call	i1___ftpack	;wreg free
  8960  002DA0  C001  F009         	movff	?i1___ftpack,?___altoft
  8961  002DA4  C002  F00A         	movff	?i1___ftpack+1,?___altoft+1
  8962  002DA8  C003  F00B         	movff	?i1___ftpack+2,?___altoft+2
  8963  002DAC  D000               	goto	i1l599
  8964  002DAE                     i1l599:
  8965  002DAE  0012               	return		;funcret
  8966  002DB0                     __end_of___altoft:
  8967                           	opt stack 0
  8968                           pclatu	equ	0xFFB
  8969                           pclath	equ	0xFFA
  8970                           tblptru	equ	0xFF8
  8971                           tblptrh	equ	0xFF7
  8972                           tblptrl	equ	0xFF6
  8973                           tablat	equ	0xFF5
  8974                           prodh	equ	0xFF4
  8975                           prodl	equ	0xFF3
  8976                           intcon	equ	0xFF2
  8977                           intcon2	equ	0xFF1
  8978                           indf0	equ	0xFEF
  8979                           postinc0	equ	0xFEE
  8980                           fsr0h	equ	0xFEA
  8981                           fsr0l	equ	0xFE9
  8982                           wreg	equ	0xFE8
  8983                           indf1	equ	0xFE7
  8984                           fsr1h	equ	0xFE2
  8985                           fsr1l	equ	0xFE1
  8986                           bsr	equ	0xFE0
  8987                           indf2	equ	0xFDF
  8988                           postinc2	equ	0xFDE
  8989                           postdec2	equ	0xFDD
  8990                           fsr2h	equ	0xFDA
  8991                           fsr2l	equ	0xFD9
  8992                           status	equ	0xFD8
  8993                           
  8994 ;; *************** function i1___ftpack *****************
  8995 ;; Defined at:
  8996 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  arg             3    0[COMRAM] unsigned um
  8999 ;;  exp             1    3[COMRAM] unsigned char 
  9000 ;;  sign            1    4[COMRAM] unsigned char 
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;		None
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  3    0[COMRAM] float 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9012 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9014 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9015 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9016 ;;Total ram usage:        8 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    2
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		___altoft
  9023 ;;		i1___ftdiv
  9024 ;;		i1___ftmul
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text49
  9029  002A28                     __ptext49:
  9030                           	opt stack 0
  9031  002A28                     i1___ftpack:
  9032                           	opt stack 18
  9033                           
  9034                           ;incstack = 0
  9035  002A28  5004               	movf	i1___ftpack@exp,w,c
  9036  002A2A  B4D8               	btfsc	status,2,c
  9037  002A2C  D005               	goto	i1l2673
  9038  002A2E  5001               	movf	i1___ftpack@arg,w,c
  9039  002A30  1002               	iorwf	i1___ftpack@arg+1,w,c
  9040  002A32  1003               	iorwf	i1___ftpack@arg+2,w,c
  9041  002A34  A4D8               	btfss	status,2,c
  9042  002A36  D00E               	goto	i1l2679
  9043  002A38                     i1l2673:
  9044  002A38  0E00               	movlw	0
  9045  002A3A  6E01               	movwf	?i1___ftpack,c
  9046  002A3C  0E00               	movlw	0
  9047  002A3E  6E02               	movwf	?i1___ftpack+1,c
  9048  002A40  0E00               	movlw	0
  9049  002A42  6E03               	movwf	?i1___ftpack+2,c
  9050  002A44  D053               	goto	i1l892
  9051  002A46  D006               	goto	i1l2679
  9052  002A48                     i1l2677:
  9053  002A48  2A04               	incf	i1___ftpack@exp,f,c
  9054  002A4A  90D8               	bcf	status,0,c
  9055  002A4C  3203               	rrcf	i1___ftpack@arg+2,f,c
  9056  002A4E  3202               	rrcf	i1___ftpack@arg+1,f,c
  9057  002A50  3201               	rrcf	i1___ftpack@arg,f,c
  9058  002A52  D000               	goto	i1l2679
  9059  002A54                     i1l2679:
  9060  002A54  0E00               	movlw	0
  9061  002A56  1401               	andwf	i1___ftpack@arg,w,c
  9062  002A58  6E06               	movwf	??i1___ftpack& (0+255),c
  9063  002A5A  0E00               	movlw	0
  9064  002A5C  1402               	andwf	i1___ftpack@arg+1,w,c
  9065  002A5E  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
  9066  002A60  0EFE               	movlw	254
  9067  002A62  1403               	andwf	i1___ftpack@arg+2,w,c
  9068  002A64  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
  9069  002A66  5006               	movf	??i1___ftpack,w,c
  9070  002A68  1007               	iorwf	??i1___ftpack+1,w,c
  9071  002A6A  1008               	iorwf	??i1___ftpack+2,w,c
  9072  002A6C  B4D8               	btfsc	status,2,c
  9073  002A6E  D00E               	goto	i1l2685
  9074  002A70  D7EB               	goto	i1l2677
  9075  002A72  D00C               	goto	i1l2685
  9076  002A74                     i1l2681:
  9077  002A74  2A04               	incf	i1___ftpack@exp,f,c
  9078  002A76  0E01               	movlw	1
  9079  002A78  2601               	addwf	i1___ftpack@arg,f,c
  9080  002A7A  0E00               	movlw	0
  9081  002A7C  2202               	addwfc	i1___ftpack@arg+1,f,c
  9082  002A7E  0E00               	movlw	0
  9083  002A80  2203               	addwfc	i1___ftpack@arg+2,f,c
  9084  002A82  90D8               	bcf	status,0,c
  9085  002A84  3203               	rrcf	i1___ftpack@arg+2,f,c
  9086  002A86  3202               	rrcf	i1___ftpack@arg+1,f,c
  9087  002A88  3201               	rrcf	i1___ftpack@arg,f,c
  9088  002A8A  D000               	goto	i1l2685
  9089  002A8C                     i1l2685:
  9090  002A8C  0E00               	movlw	0
  9091  002A8E  1401               	andwf	i1___ftpack@arg,w,c
  9092  002A90  6E06               	movwf	??i1___ftpack& (0+255),c
  9093  002A92  0E00               	movlw	0
  9094  002A94  1402               	andwf	i1___ftpack@arg+1,w,c
  9095  002A96  6E07               	movwf	(??i1___ftpack+1)& (0+255),c
  9096  002A98  0EFF               	movlw	255
  9097  002A9A  1403               	andwf	i1___ftpack@arg+2,w,c
  9098  002A9C  6E08               	movwf	(??i1___ftpack+2)& (0+255),c
  9099  002A9E  5006               	movf	??i1___ftpack,w,c
  9100  002AA0  1007               	iorwf	??i1___ftpack+1,w,c
  9101  002AA2  1008               	iorwf	??i1___ftpack+2,w,c
  9102  002AA4  B4D8               	btfsc	status,2,c
  9103  002AA6  D008               	goto	i1l2689
  9104  002AA8  D7E5               	goto	i1l2681
  9105  002AAA  D006               	goto	i1l2689
  9106  002AAC                     i1l2687:
  9107  002AAC  0604               	decf	i1___ftpack@exp,f,c
  9108  002AAE  90D8               	bcf	status,0,c
  9109  002AB0  3601               	rlcf	i1___ftpack@arg,f,c
  9110  002AB2  3602               	rlcf	i1___ftpack@arg+1,f,c
  9111  002AB4  3603               	rlcf	i1___ftpack@arg+2,f,c
  9112  002AB6  D000               	goto	i1l2689
  9113  002AB8                     i1l2689:
  9114  002AB8  BE02               	btfsc	i1___ftpack@arg+1,7,c
  9115  002ABA  D004               	goto	i1l903
  9116  002ABC  0E02               	movlw	2
  9117  002ABE  6004               	cpfslt	i1___ftpack@exp,c
  9118  002AC0  D7F5               	goto	i1l2687
  9119  002AC2  D000               	goto	i1l903
  9120  002AC4                     i1l903:
  9121  002AC4  B004               	btfsc	i1___ftpack@exp,0,c
  9122  002AC6  D002               	goto	i1l2695
  9123  002AC8  9E02               	bcf	i1___ftpack@arg+1,7,c
  9124  002ACA  D000               	goto	i1l2695
  9125  002ACC                     i1l2695:
  9126  002ACC  90D8               	bcf	status,0,c
  9127  002ACE  3204               	rrcf	i1___ftpack@exp,f,c
  9128  002AD0  5004               	movf	i1___ftpack@exp,w,c
  9129  002AD2  1203               	iorwf	i1___ftpack@arg+2,f,c
  9130  002AD4  5005               	movf	i1___ftpack@sign,w,c
  9131  002AD6  B4D8               	btfsc	status,2,c
  9132  002AD8  D002               	goto	i1l2701
  9133  002ADA  8E03               	bsf	i1___ftpack@arg+2,7,c
  9134  002ADC  D000               	goto	i1l2701
  9135  002ADE                     i1l2701:
  9136  002ADE  C001  F001         	movff	i1___ftpack@arg,?i1___ftpack
  9137  002AE2  C002  F002         	movff	i1___ftpack@arg+1,?i1___ftpack+1
  9138  002AE6  C003  F003         	movff	i1___ftpack@arg+2,?i1___ftpack+2
  9139  002AEA  D000               	goto	i1l892
  9140  002AEC                     i1l892:
  9141  002AEC  0012               	return		;funcret
  9142  002AEE                     __end_ofi1___ftpack:
  9143                           	opt stack 0
  9144                           pclatu	equ	0xFFB
  9145                           pclath	equ	0xFFA
  9146                           tblptru	equ	0xFF8
  9147                           tblptrh	equ	0xFF7
  9148                           tblptrl	equ	0xFF6
  9149                           tablat	equ	0xFF5
  9150                           prodh	equ	0xFF4
  9151                           prodl	equ	0xFF3
  9152                           intcon	equ	0xFF2
  9153                           intcon2	equ	0xFF1
  9154                           indf0	equ	0xFEF
  9155                           postinc0	equ	0xFEE
  9156                           fsr0h	equ	0xFEA
  9157                           fsr0l	equ	0xFE9
  9158                           wreg	equ	0xFE8
  9159                           indf1	equ	0xFE7
  9160                           fsr1h	equ	0xFE2
  9161                           fsr1l	equ	0xFE1
  9162                           bsr	equ	0xFE0
  9163                           indf2	equ	0xFDF
  9164                           postinc2	equ	0xFDE
  9165                           postdec2	equ	0xFDD
  9166                           fsr2h	equ	0xFDA
  9167                           fsr2l	equ	0xFD9
  9168                           status	equ	0xFD8
  9169                           
  9170 ;; *************** function _strcmp *****************
  9171 ;; Defined at:
  9172 ;;		line 33 in file "/opt/microchip/xc8/v1.34/sources/common/strcmp.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  9175 ;;		 -> key(5), 
  9176 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  9177 ;;		 -> STR_28(3), STR_27(3), STR_26(3), STR_25(3), 
  9178 ;;		 -> STR_24(3), STR_23(3), STR_22(4), STR_21(4), 
  9179 ;;		 -> STR_20(4), STR_19(4), STR_18(3), STR_17(3), 
  9180 ;;		 -> STR_16(3), STR_15(3), STR_12(3), STR_11(3), 
  9181 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  9182 ;;		 -> STR_6(4), STR_5(4), 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;  r               1    5[COMRAM] char 
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  2    0[COMRAM] int 
  9187 ;; Registers used:
  9188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9198 ;;Total ram usage:        6 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    2
  9201 ;; This function calls:
  9202 ;;		Nothing
  9203 ;; This function is called by:
  9204 ;;		_keyValue
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text50
  9209  00304E                     __ptext50:
  9210                           	opt stack 0
  9211  00304E                     _strcmp:
  9212                           	opt stack 20
  9213                           
  9214                           ;incstack = 0
  9215  00304E  D005               	goto	i1l2979
  9216  003050                     i1l2977:
  9217  003050  4A01               	infsnz	strcmp@s1,f,c
  9218  003052  2A02               	incf	strcmp@s1+1,f,c
  9219  003054  4A03               	infsnz	strcmp@s2,f,c
  9220  003056  2A04               	incf	strcmp@s2+1,f,c
  9221  003058  D000               	goto	i1l2979
  9222  00305A                     i1l2979:
  9223  00305A  C001  FFD9         	movff	strcmp@s1,fsr2l
  9224  00305E  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  9225  003062  50DF               	movf	indf2,w,c
  9226  003064  6E05               	movwf	??_strcmp& (0+255),c
  9227  003066  C003  FFF6         	movff	strcmp@s2,tblptrl
  9228  00306A  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  9229  00306E                     	if	0	;tblptru may be non-zero
  9230  00306E                     	endif
  9231  00306E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9232  00306E  0E00               	movlw	low (__mediumconst shr (0+16))
  9233  003070  6EF8               	movwf	tblptru,c
  9234  003072                     	endif
  9235  003072  0008               	tblrd		*
  9236  003074  50F5               	movf	tablat,w,c
  9237  003076  0800               	sublw	0
  9238  003078  2405               	addwf	??_strcmp,w,c
  9239  00307A  6E06               	movwf	strcmp@r,c
  9240  00307C  5006               	movf	strcmp@r,w,c
  9241  00307E  A4D8               	btfss	status,2,c
  9242  003080  D009               	goto	i1l2983
  9243  003082  C001  FFD9         	movff	strcmp@s1,fsr2l
  9244  003086  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  9245  00308A  50DF               	movf	indf2,w,c
  9246  00308C  B4D8               	btfsc	status,2,c
  9247  00308E  D002               	goto	i1l2983
  9248  003090  D7DF               	goto	i1l2977
  9249  003092  D000               	goto	i1l2983
  9250  003094                     i1l2983:
  9251  003094  5006               	movf	strcmp@r,w,c
  9252  003096  6E01               	movwf	?_strcmp,c
  9253  003098  6A02               	clrf	?_strcmp+1,c
  9254  00309A  BE01               	btfsc	?_strcmp,7,c
  9255  00309C  0602               	decf	?_strcmp+1,f,c
  9256  00309E  D000               	goto	i1l1147
  9257  0030A0                     i1l1147:
  9258  0030A0  0012               	return		;funcret
  9259  0030A2                     __end_of_strcmp:
  9260                           	opt stack 0
  9261                           pclatu	equ	0xFFB
  9262                           pclath	equ	0xFFA
  9263                           tblptru	equ	0xFF8
  9264                           tblptrh	equ	0xFF7
  9265                           tblptrl	equ	0xFF6
  9266                           tablat	equ	0xFF5
  9267                           prodh	equ	0xFF4
  9268                           prodl	equ	0xFF3
  9269                           intcon	equ	0xFF2
  9270                           intcon2	equ	0xFF1
  9271                           indf0	equ	0xFEF
  9272                           postinc0	equ	0xFEE
  9273                           fsr0h	equ	0xFEA
  9274                           fsr0l	equ	0xFE9
  9275                           wreg	equ	0xFE8
  9276                           indf1	equ	0xFE7
  9277                           fsr1h	equ	0xFE2
  9278                           fsr1l	equ	0xFE1
  9279                           bsr	equ	0xFE0
  9280                           indf2	equ	0xFDF
  9281                           postinc2	equ	0xFDE
  9282                           postdec2	equ	0xFDD
  9283                           fsr2h	equ	0xFDA
  9284                           fsr2l	equ	0xFD9
  9285                           status	equ	0xFD8
  9286                           
  9287 ;; *************** function _KillMotors *****************
  9288 ;; Defined at:
  9289 ;;		line 23 in file "MotorControl.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;		None               void
  9296 ;; Registers used:
  9297 ;;		wreg, status,2, status,0
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    2
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_lISR
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           	psect	text51
  9318  003476                     __ptext51:
  9319                           	opt stack 0
  9320  003476                     _KillMotors:
  9321                           	opt stack 22
  9322                           
  9323                           ;MotorControl.c: 25: PORTAbits.RA4 = 1;
  9324                           
  9325                           ;incstack = 0
  9326  003476  8880               	bsf	3968,4,c	;volatile
  9327                           
  9328                           ;MotorControl.c: 26: CCP3CON = CCP3CON & 0xF0;
  9329  003478  50B7               	movf	4023,w,c	;volatile
  9330  00347A  0BF0               	andlw	240
  9331  00347C  6EB7               	movwf	4023,c	;volatile
  9332  00347E  0012               	return		;funcret
  9333  003480                     __end_of_KillMotors:
  9334                           	opt stack 0
  9335                           pclatu	equ	0xFFB
  9336                           pclath	equ	0xFFA
  9337                           tblptru	equ	0xFF8
  9338                           tblptrh	equ	0xFF7
  9339                           tblptrl	equ	0xFF6
  9340                           tablat	equ	0xFF5
  9341                           prodh	equ	0xFF4
  9342                           prodl	equ	0xFF3
  9343                           intcon	equ	0xFF2
  9344                           intcon2	equ	0xFF1
  9345                           indf0	equ	0xFEF
  9346                           postinc0	equ	0xFEE
  9347                           fsr0h	equ	0xFEA
  9348                           fsr0l	equ	0xFE9
  9349                           wreg	equ	0xFE8
  9350                           indf1	equ	0xFE7
  9351                           fsr1h	equ	0xFE2
  9352                           fsr1l	equ	0xFE1
  9353                           bsr	equ	0xFE0
  9354                           indf2	equ	0xFDF
  9355                           postinc2	equ	0xFDE
  9356                           postdec2	equ	0xFDD
  9357                           fsr2h	equ	0xFDA
  9358                           fsr2l	equ	0xFD9
  9359                           status	equ	0xFD8
  9360                           
  9361 ;; *************** function _hISR *****************
  9362 ;; Defined at:
  9363 ;;		line 64 in file "PIDLoop.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;		None               void
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9381 ;;Total ram usage:       14 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    1
  9384 ;; This function calls:
  9385 ;;		_TMR0Int
  9386 ;; This function is called by:
  9387 ;;		Interrupt level 2
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	intcode
  9392  000008                     __pintcode:
  9393                           	opt stack 0
  9394  000008                     _hISR:
  9395                           	opt stack 18
  9396                           
  9397                           ;incstack = 0
  9398  000008  CFFA F060          	movff	pclath,??_hISR
  9399  00000C  CFFB F061          	movff	pclatu,??_hISR+1
  9400  000010  CFE9 F062          	movff	fsr0l,??_hISR+2
  9401  000014  ED16  F016         	call	int_func,f	;refresh shadow registers
  9402                           pclatu	equ	0xFFB
  9403                           pclath	equ	0xFFA
  9404                           tblptru	equ	0xFF8
  9405                           tblptrh	equ	0xFF7
  9406                           tblptrl	equ	0xFF6
  9407                           tablat	equ	0xFF5
  9408                           prodh	equ	0xFF4
  9409                           prodl	equ	0xFF3
  9410                           intcon	equ	0xFF2
  9411                           intcon2	equ	0xFF1
  9412                           indf0	equ	0xFEF
  9413                           postinc0	equ	0xFEE
  9414                           fsr0h	equ	0xFEA
  9415                           fsr0l	equ	0xFE9
  9416                           wreg	equ	0xFE8
  9417                           indf1	equ	0xFE7
  9418                           fsr1h	equ	0xFE2
  9419                           fsr1l	equ	0xFE1
  9420                           bsr	equ	0xFE0
  9421                           indf2	equ	0xFDF
  9422                           postinc2	equ	0xFDE
  9423                           postdec2	equ	0xFDD
  9424                           fsr2h	equ	0xFDA
  9425                           fsr2l	equ	0xFD9
  9426                           status	equ	0xFD8
  9427                           
  9428                           	psect	intcode_body
  9429  002C2C                     __pintcode_body:
  9430                           	opt stack 18
  9431  002C2C                     int_func:
  9432                           	opt stack 18
  9433  002C2C  0006               	pop		; remove dummy address from shadow register refresh
  9434  002C2E  CFEA F063          	movff	fsr0h,??_hISR+3
  9435  002C32  CFE1 F064          	movff	fsr1l,??_hISR+4
  9436  002C36  CFE2 F065          	movff	fsr1h,??_hISR+5
  9437  002C3A  CFD9 F066          	movff	fsr2l,??_hISR+6
  9438  002C3E  CFDA F067          	movff	fsr2h,??_hISR+7
  9439  002C42  CFF3 F068          	movff	prodl,??_hISR+8
  9440  002C46  CFF4 F069          	movff	prodh,??_hISR+9
  9441  002C4A  CFF6 F06A          	movff	tblptrl,??_hISR+10
  9442  002C4E  CFF7 F06B          	movff	tblptrh,??_hISR+11
  9443  002C52  CFF8 F06C          	movff	tblptru,??_hISR+12
  9444  002C56  CFF5 F06D          	movff	tablat,??_hISR+13
  9445                           
  9446                           ;PIDLoop.c: 66: if ((INTCONbits.TMR0IF == 1) && (INTCONbits.TMR0IE == 1) && ((PIDEnableF
      +                          lag == 1) || (PIDEnableFlag == 3)))
  9447  002C5A  B4F2               	btfsc	intcon,2,c	;volatile
  9448  002C5C  AAF2               	btfss	intcon,5,c	;volatile
  9449  002C5E  D00C               	goto	i2l449
  9450  002C60  0100               	movlb	0	; () banked
  9451  002C62  05CF               	decf	_PIDEnableFlag& (0+255),w,b
  9452  002C64  B4D8               	btfsc	status,2,c
  9453  002C66  D005               	goto	i2l4003
  9454                           
  9455                           ; BSR set to: 0
  9456  002C68  0E03               	movlw	3
  9457  002C6A  0100               	movlb	0	; () banked
  9458  002C6C  19CF               	xorwf	_PIDEnableFlag& (0+255),w,b
  9459  002C6E  A4D8               	btfss	status,2,c
  9460  002C70  D003               	goto	i2l449
  9461  002C72                     i2l4003:
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;PIDLoop.c: 67: TMR0Int();
  9465  002C72  EC15  F01A         	call	_TMR0Int	;wreg free
  9466  002C76  D000               	goto	i2l449
  9467  002C78                     i2l449:
  9468  002C78  C06D  FFF5         	movff	??_hISR+13,tablat
  9469  002C7C  C06C  FFF8         	movff	??_hISR+12,tblptru
  9470  002C80  C06B  FFF7         	movff	??_hISR+11,tblptrh
  9471  002C84  C06A  FFF6         	movff	??_hISR+10,tblptrl
  9472  002C88  C069  FFF4         	movff	??_hISR+9,prodh
  9473  002C8C  C068  FFF3         	movff	??_hISR+8,prodl
  9474  002C90  C067  FFDA         	movff	??_hISR+7,fsr2h
  9475  002C94  C066  FFD9         	movff	??_hISR+6,fsr2l
  9476  002C98  C065  FFE2         	movff	??_hISR+5,fsr1h
  9477  002C9C  C064  FFE1         	movff	??_hISR+4,fsr1l
  9478  002CA0  C063  FFEA         	movff	??_hISR+3,fsr0h
  9479  002CA4  C062  FFE9         	movff	??_hISR+2,fsr0l
  9480  002CA8  C061  FFFB         	movff	??_hISR+1,pclatu
  9481  002CAC  C060  FFFA         	movff	??_hISR,pclath
  9482  002CB0  0011               	retfie		f
  9483  002CB2                     __end_of_hISR:
  9484                           	opt stack 0
  9485                           pclatu	equ	0xFFB
  9486                           pclath	equ	0xFFA
  9487                           tblptru	equ	0xFF8
  9488                           tblptrh	equ	0xFF7
  9489                           tblptrl	equ	0xFF6
  9490                           tablat	equ	0xFF5
  9491                           prodh	equ	0xFF4
  9492                           prodl	equ	0xFF3
  9493                           intcon	equ	0xFF2
  9494                           intcon2	equ	0xFF1
  9495                           indf0	equ	0xFEF
  9496                           postinc0	equ	0xFEE
  9497                           fsr0h	equ	0xFEA
  9498                           fsr0l	equ	0xFE9
  9499                           wreg	equ	0xFE8
  9500                           indf1	equ	0xFE7
  9501                           fsr1h	equ	0xFE2
  9502                           fsr1l	equ	0xFE1
  9503                           bsr	equ	0xFE0
  9504                           indf2	equ	0xFDF
  9505                           postinc2	equ	0xFDE
  9506                           postdec2	equ	0xFDD
  9507                           fsr2h	equ	0xFDA
  9508                           fsr2l	equ	0xFD9
  9509                           status	equ	0xFD8
  9510                           
  9511 ;; *************** function _TMR0Int *****************
  9512 ;; Defined at:
  9513 ;;		line 62 in file "PID.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;		None
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;		None
  9518 ;; Return value:  Size  Location     Type
  9519 ;;		None               void
  9520 ;; Registers used:
  9521 ;;		wreg, status,2
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;Total ram usage:        0 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_hISR
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           	psect	text53
  9541  00342A                     __ptext53:
  9542                           	opt stack 0
  9543  00342A                     _TMR0Int:
  9544                           	opt stack 18
  9545                           
  9546                           ;PID.c: 64: TMR0H = 0xDB;
  9547                           
  9548                           ;incstack = 0
  9549  00342A  0EDB               	movlw	219
  9550  00342C  6ED7               	movwf	4055,c	;volatile
  9551                           
  9552                           ;PID.c: 65: TMR0L = 0x60;
  9553  00342E  0E60               	movlw	96
  9554  003430  6ED6               	movwf	4054,c	;volatile
  9555                           
  9556                           ;PID.c: 68: TMR0Flag = 1;
  9557  003432  0E01               	movlw	1
  9558  003434  0100               	movlb	0	; () banked
  9559  003436  6FD0               	movwf	_TMR0Flag& (0+255),b
  9560                           
  9561                           ; BSR set to: 0
  9562                           ;PID.c: 69: INTCONbits.TMR0IF = 0;
  9563  003438  94F2               	bcf	intcon,2,c	;volatile
  9564                           
  9565                           ; BSR set to: 0
  9566  00343A  0012               	return		;funcret
  9567  00343C                     __end_of_TMR0Int:
  9568                           	opt stack 0
  9569                           pclatu	equ	0xFFB
  9570                           pclath	equ	0xFFA
  9571                           tblptru	equ	0xFF8
  9572                           tblptrh	equ	0xFF7
  9573                           tblptrl	equ	0xFF6
  9574                           tablat	equ	0xFF5
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           intcon	equ	0xFF2
  9578                           intcon2	equ	0xFF1
  9579                           indf0	equ	0xFEF
  9580                           postinc0	equ	0xFEE
  9581                           fsr0h	equ	0xFEA
  9582                           fsr0l	equ	0xFE9
  9583                           wreg	equ	0xFE8
  9584                           indf1	equ	0xFE7
  9585                           fsr1h	equ	0xFE2
  9586                           fsr1l	equ	0xFE1
  9587                           bsr	equ	0xFE0
  9588                           indf2	equ	0xFDF
  9589                           postinc2	equ	0xFDE
  9590                           postdec2	equ	0xFDD
  9591                           fsr2h	equ	0xFDA
  9592                           fsr2l	equ	0xFD9
  9593                           status	equ	0xFD8
  9594                           pclatu	equ	0xFFB
  9595                           pclath	equ	0xFFA
  9596                           tblptru	equ	0xFF8
  9597                           tblptrh	equ	0xFF7
  9598                           tblptrl	equ	0xFF6
  9599                           tablat	equ	0xFF5
  9600                           prodh	equ	0xFF4
  9601                           prodl	equ	0xFF3
  9602                           intcon	equ	0xFF2
  9603                           intcon2	equ	0xFF1
  9604                           indf0	equ	0xFEF
  9605                           postinc0	equ	0xFEE
  9606                           fsr0h	equ	0xFEA
  9607                           fsr0l	equ	0xFE9
  9608                           wreg	equ	0xFE8
  9609                           indf1	equ	0xFE7
  9610                           fsr1h	equ	0xFE2
  9611                           fsr1l	equ	0xFE1
  9612                           bsr	equ	0xFE0
  9613                           indf2	equ	0xFDF
  9614                           postinc2	equ	0xFDE
  9615                           postdec2	equ	0xFDD
  9616                           fsr2h	equ	0xFDA
  9617                           fsr2l	equ	0xFD9
  9618                           status	equ	0xFD8
  9619                           
  9620                           	psect	param0
  9621  0000                     pclatu	equ	0xFFB
  9622                           pclath	equ	0xFFA
  9623                           tblptru	equ	0xFF8
  9624                           tblptrh	equ	0xFF7
  9625                           tblptrl	equ	0xFF6
  9626                           tablat	equ	0xFF5
  9627                           prodh	equ	0xFF4
  9628                           prodl	equ	0xFF3
  9629                           intcon	equ	0xFF2
  9630                           intcon2	equ	0xFF1
  9631                           indf0	equ	0xFEF
  9632                           postinc0	equ	0xFEE
  9633                           fsr0h	equ	0xFEA
  9634                           fsr0l	equ	0xFE9
  9635                           wreg	equ	0xFE8
  9636                           indf1	equ	0xFE7
  9637                           fsr1h	equ	0xFE2
  9638                           fsr1l	equ	0xFE1
  9639                           bsr	equ	0xFE0
  9640                           indf2	equ	0xFDF
  9641                           postinc2	equ	0xFDE
  9642                           postdec2	equ	0xFDD
  9643                           fsr2h	equ	0xFDA
  9644                           fsr2l	equ	0xFD9
  9645                           status	equ	0xFD8


Data Sizes:
    Strings     127
    Constant    0
    Data        4
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      89
    BANK0           160     85     146
    BANK1           256      9       9
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[3]), STR_17(CODE[3]), 
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> key(COMRAM[5]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), keyValue@str_end(COMRAM[2]), 

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 36
		 -> STR_31(CODE[16]), STR_30(CODE[36]), STR_29(CODE[4]), STR_14(CODE[6]), 
		 -> STR_13(CODE[4]), STR_4(CODE[11]), value(COMRAM[10]), STR_3(CODE[6]), 
		 -> key(COMRAM[5]), 

    keyValue@str_end	PTR unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    keyValue@str	PTR unsigned char  size(2) Largest target is 30
		 -> received(BANK0[30]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _hISR in COMRAM

    None.

Critical Paths under _lISR in COMRAM

    _lISR->_RCInt
    _RCInt->_keyValue
    _keyValue->_strtod
    i1_SerTxStr->i1_SerTx
    _strtod->i1___ftdiv
    _strtod->i1___ftmul
    i1___ftmul->i1___ftpack
    i1___ftdiv->i1___ftpack
    ___altoft->i1___ftpack

Critical Paths under _main in BANK0

    _main->_calculatePID
    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _lcdCommand->_setGPIO
    _setGPIO->_WriteSPI1
    _SerInit->_SerTxStr
    _SerTxStr->_SerTx
    _RTDInit->_Delay10TCYx
    _RTDInit->_Delay1KTCYx
    _RTDInit->_Delay1TCYx
    _calculatePID->___fttol
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    _breakDouble->___fttol
    ___fttol->___ftadd
    _ReadRTDpos->_Delay10TCYx
    _RTD2Angle->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    _ImplementPIDMotion->_abs

Critical Paths under _hISR in BANK0

    None.

Critical Paths under _lISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_calculatePID

Critical Paths under _hISR in BANK1

    None.

Critical Paths under _lISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hISR in BANK2

    None.

Critical Paths under _lISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hISR in BANK3

    None.

Critical Paths under _lISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hISR in BANK4

    None.

Critical Paths under _lISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _hISR in BANK5

    None.

Critical Paths under _lISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _hISR in BANK6

    None.

Critical Paths under _lISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _hISR in BANK7

    None.

Critical Paths under _lISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _hISR in BANK8

    None.

Critical Paths under _lISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _hISR in BANK9

    None.

Critical Paths under _lISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _hISR in BANK10

    None.

Critical Paths under _lISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _hISR in BANK11

    None.

Critical Paths under _lISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _hISR in BANK12

    None.

Critical Paths under _lISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _hISR in BANK13

    None.

Critical Paths under _lISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _hISR in BANK14

    None.

Critical Paths under _lISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _hISR in BANK15

    None.

Critical Paths under _lISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   38713
                 _ImplementPIDMotion
                          _RTD2Angle
                         _ReadRTDpos
                           _SerTxStr
                        _breakDouble
                       _calculatePID
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    2393
                    _MotorDriverInit
                            _PIDInit
                            _RTDInit
                            _SerInit
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1741
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     195
                                             16 BANK0      2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     687
                                             18 BANK0      1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     643
                                             16 BANK0      2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      23
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     216
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0     586
                           _SerTxStr
 ---------------------------------------------------------------------------------
 (3) _SerTxStr                                             2     0      2     586
                                             15 BANK0      2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (2) _RTDInit                                              0     0      0      66
                        _Delay10TCYx
                        _Delay1KTCYx
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1TCYx                                           1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIDInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorDriverInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calculatePID                                        15     9      6   19741
                                             79 BANK0      6     0      6
                                              0 BANK1      9     9      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    5200
                                             64 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4836
                                             52 BANK0     12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     261
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     828
                                             14 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3275
                                             22 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _breakDouble                                          9     6      3    8375
                                             79 BANK0      3     0      3
                                              0 BANK1      6     6      0
                              _SerTx
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1464
                                             14 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1473
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     602
                                             64 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _SerTx                                                1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadRTDpos                                          12    10      2     160
                                             15 BANK0     10     8      2
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTD2Angle                                            3     0      3    6979
                                             52 BANK0      3     0      3
                         _ReadRTDpos (ARG)
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2527
                                             22 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4267
                                             37 BANK0     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2419
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ImplementPIDMotion                                   4     2      2     479
                                             18 BANK0      4     2      2
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     194
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _lISR                                                17    17      0    9122
                                             48 COMRAM    17    17      0
                         _KillMotors
                              _RCInt
                        _StartMotors
 ---------------------------------------------------------------------------------
 (7) _StartMotors                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _RCInt                                                2     2      0    9122
                                             46 COMRAM     2     2      0
                           _keyValue
                            i1_SerTx
 ---------------------------------------------------------------------------------
 (8) _keyValue                                            11     7      4    8943
                                             35 COMRAM    11     7      4
                            _isspace
                             _strcmp
                             _strtod
                            i1_SerTx
                         i1_SerTxStr
 ---------------------------------------------------------------------------------
 (9) i1_SerTxStr                                           2     0      2     275
                                              1 COMRAM     2     0      2
                            i1_SerTx
 ---------------------------------------------------------------------------------
 (8) i1_SerTx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _strtod                                              12     8      4    4661
                                             23 COMRAM    12     8      4
                           ___altoft
                             ___lmul
                            _isdigit
                            _isspace
                          i1___ftdiv
                           i1___ftge
                          i1___ftmul
                          i1___ftneg
 ---------------------------------------------------------------------------------
 (10) i1___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i1___ftmul                                          15     9      6     895
                                              8 COMRAM    15     9      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (10) i1___ftge                                            9     3      6     240
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (10) i1___ftdiv                                          15     9      6     849
                                              8 COMRAM    15     9      6
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (10) _isspace                                             3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) _isdigit                                             3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) ___lmul                                             12     4      8     322
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___altoft                                           10     6      4     667
                                              8 COMRAM    10     6      4
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (11) i1___ftpack                                          8     3      5     465
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) _strcmp                                               6     2      4    2907
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _KillMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _hISR                                               14    14      0       0
                                              0 BANK0     14    14      0
                            _TMR0Int
 ---------------------------------------------------------------------------------
 (13) _TMR0Int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ImplementPIDMotion
     _abs
   _RTD2Angle
     _ReadRTDpos (ARG)
       _Delay10TCYx
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _ReadRTDpos
     _Delay10TCYx
   _SerTxStr
     _SerTx
   _breakDouble
     _SerTx
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___lwdiv
     ___lwmod
   _calculatePID
     ___ftadd
       ___ftdiv (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
     ___fttol
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
   _initialize
     _MotorDriverInit
     _PIDInit
     _RTDInit
       _Delay10TCYx
       _Delay1KTCYx
       _Delay1TCYx
     _SerInit
       _SerTxStr
         _SerTx
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1

 _lISR (ROOT)
   _KillMotors
   _RCInt
     _keyValue
       _isspace
       _strcmp
       _strtod
         ___altoft
           i1___ftpack
         ___lmul
         _isdigit
         _isspace
         i1___ftdiv
           i1___ftpack
         i1___ftge
         i1___ftmul
           i1___ftpack
         i1___ftneg
       i1_SerTx
       i1_SerTxStr
         i1_SerTx
     i1_SerTx
   _StartMotors

 _hISR (ROOT)
   _TMR0Int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9       9       7        3.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      92       5       91.2%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      59       1       93.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4      32        0.0%
DATA                 0      0      F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 27 01:12:10 2015

               ___altoft@exp 0011     __size_of_MotorDriverInit 001C                   i1___ftpack 2A28  
              ___altoft@sign 0012                           l82 1ADE                           _Kd 00B8  
                         _Ki 00BB                           _Kp 00BE                           bsr 000FE0  
               ___ftadd@exp1 009F                 ___ftadd@exp2 009E                 ___ftadd@sign 009D  
                        l308 3456                          l362 2DBE                          l363 2DCC  
                        l364 2E20                          l374 320E                          l471 2EAC  
                        l800 3440                          l472 2EAE                          l545 32BE  
                        l546 32C6                          l802 344A                          l475 2ECA  
                        l491 333E                          l476 2EE6                          l477 2ECC  
                        l469 2EA8                          l493 3336                          l478 2ED0  
                        l903 265C                          l932 1CE4                          l933 1EF8  
                        l936 1D1E                          l938 1D48                          l947 1E2C  
                        l795 3412                          l892 2694                          l788 3428  
                        l964 2306                          l956 1E56                          l973 2A26  
                        l967 22CE                          l979 21C4                          l996 30F0  
                        l989 3262                          _PR2 000FCB                 i1___ftge@ff1 0001  
               i1___ftge@ff2 0004                          _abs 329C                          _key 0054  
               i1___ftdiv@f1 0009                 i1___ftdiv@f2 000C                 i1___ftdiv@f3 0013  
          lcdCommand@command 0072                          prod 000FF3                 i1___ftneg@f1 0001  
                        wreg 000FE8                 i1___ftmul@f1 0009                 i1___ftmul@f2 000C  
               ___ftdiv@cntr 007F                   _Delay1TCYx 343C                 ___ftdiv@sign 0084  
               __CFG_WDT$OFF 000000                         l1000 2574                         l1112 2D2A  
                       l1122 2E84                         ?_abs 006E                         l1139 329A  
                       l4101 1DC0                         l4031 25E8                         l4023 2590  
                       l4111 1E0C                         l4103 1DD0                         l4201 20CE  
                       l4113 1E1C                         l4105 1DDC                         l3153 3402  
                       l4051 2686                         l4035 260A                         l4027 25A6  
                       l4045 2668                         l4037 263C                         l4029 25B6  
                       l4301 2524                         l4061 2F1E                         l4039 264C  
                       l4223 215A                         l4215 211E                         l4303 2536  
                       l4151 2216                         l4119 1E82                         l4071 1CF2  
                       l4233 219E                         l4225 2162                         l4305 2544  
                       l4321 2CDE                         l4129 1ED2                         l4241 30C6  
                       l4057 2EF0                         l4219 213E                         l2715 3418  
                       l4331 2D1A                         l4323 2CE8                         l4155 222A  
                       l4083 1D3E                         l4229 2182                         l4309 2562  
                       l4341 2E44                         l4149 21F0                         l4253 29DE  
                       l4093 1D80                         l4077 1D2C                         l4319 2CD0  
                       l4343 2E4E                         l4175 228C                         l4273 246E  
                       l4185 22E0                         l4249 299C                         l4195 2094  
                       l4291 24F2                         l4347 2E74                         l4339 2E36  
                       l4259 2A22                         l4099 1DB0                         l4371 1B7A  
                       l4197 20BA                         l4365 1A86                         l4461 2814  
                       l4445 2794                         l4295 2506                         l4359 19F6  
                       l3761 2B48                         l3753 2B26                         l4297 250E  
                       l2963 2ED4                         l3757 2B30                         l3749 2B06  
                       l3845 2DC4                         l2959 2EB2                         STR_1 1047  
                       STR_2 1040                         STR_3 104E                         STR_4 1035  
                       STR_5 105C                         STR_6 1064                         STR_7 106E  
                       STR_8 107A                         STR_9 106B                         _AZEL 0059  
                       u4010 2B44                         u4401 1CB0                         u4360 2F12  
                       u4601 21DC                         u4370 2F40                         u4621 2206  
                       u4391 1C92                         u4367 2F08                         u4377 2F36  
                       u4651 2080                         u4671 20AA                         u4761 245A  
                       u4780 2494                         u4785 248A                         u4977 3404  
                       u4987 341A              __end_of_PIDInit 31D2                         _hISR 0008  
                       _lISR 0018              __end_of_TMR0Int 343C                         abs@a 006E  
                       _main 278E                 ___ftpack@arg 006E              __end_ofi1_SerTx 346A  
               ___ftpack@exp 0071              __end_of_RTDInit 3240                         fsr0h 000FEA  
                       fsr1h 000FE2                         indf0 000FEF                         fsr0l 000FE9  
                       fsr2h 000FDA                         indf1 000FE7                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         pclat 000FFA  
              i1___ftdiv@exp 0016                         prodh 000FF4                         prodl 000FF3  
                       start 00B4                 ___ftmul@cntr 0092                 ___param_bank 000000  
               ___ftmul@sign 0093                i1___ftmul@exp 0012                  _Delay10TCYx 3414  
               ___fttol@exp1 00AE                        ??_abs 0070              __end_of_SerInit 331C  
               ___fttol@lval 00AA                  _Delay1KTCYx 33FE      i1___ftmul@f3_as_product 0013  
                      ?_hISR 0001                        ?_lISR 0001                  ReadRTDpos@x 0078  
          RTD2Angle@RTDAngle 0094                        ?_main 0001              __end_of___ftadd 1EFA  
                      STR_10 1077                        STR_11 1068                        STR_20 1064  
                      STR_12 1074                        STR_21 1058                        STR_13 1054  
                      STR_14 104E                        STR_22 1060                        STR_30 1001  
                      STR_23 106E                        STR_15 1071                        STR_31 1025  
                      STR_24 107A                        STR_16 107D                        STR_25 106B  
                      STR_17 1059                        STR_26 1077                        STR_18 1061  
                      STR_27 1068                        STR_19 105C                        STR_28 1074  
                      STR_29 1054              __end_of___ftdiv 2308              __end_of___ftneg 3270  
            __end_of___ftmul 21C6                        _T0CON 000FD5              __end_of___ftsub 30F2  
            __end_of___fttol 2576                        _T2CON 000FCA                        _T3CON 000FB1  
            __end_of___lwdiv 2D34                        i1l205 2442                        i1l308 3464  
            __end_of___lwmod 2E8E                        i1l188 230E                        i1l453 006E  
                      i1l708 19AC                        i1l718 197C                        i1l903 2AC4  
                      i1l691 16E0                        i1l599 2DAE                        i2l449 2C78  
                      i1l689 16D8                        i1l892 2AEC                        i1l964 2958  
                      i1l973 2C2A                        i1l967 2924                        i1l979 278C  
                      i1l989 3356                        _RCREG 000FAE           __size_of_RTD2Angle 003E  
                      _TMR0H 000FD7                        _TMR0L 000FD6                        _SPBRG 000FAF  
                      _PORTD 000F83                        _RCInt 2308                        _PORTH 000F87  
                      _TRISD 000F95                        _TRISH 000F99          ___lmul@multiplicand 0005  
            __end_of_lcdInit 304E               __CFG_FCMEN$OFF 000000                        _SerTx 344C  
                      _error 00C4              __end_of_setGPIO 33C6              __end_of_isdigit 3386  
              ___ftpack@sign 0072                        _value 004A              __end_of_isspace 32F4  
           __end_ofi1___ftge 2C2C                        tablat 000FF5               i1___ftdiv@cntr 0012  
             i1___ftdiv@sign 0017                        status 000FD8                  ?i1_SerTxStr 0002  
         __size_ofi1___ftdiv 00E2           __size_ofi1___ftneg 0024           __size_ofi1___ftmul 00F8  
             i1___ftpack@arg 0001               i1___ftpack@exp 0004                   _ReadRTDpos 2DB0  
                 _KillMotors 3476              __initialization 30F2                 __end_of_hISR 2CB2  
               __end_of_lISR 00B4                 __end_of_main 2878                  ?i1___ftpack 0001  
             i1___ftmul@cntr 0016               i1___ftmul@sign 0017               __CFG_OSC$HSPLL 000000  
                     ??_hISR 0060                       ??_lISR 0031                _StrippedValue 0045  
           __end_of_OpenSPI1 2EEE                  keyValue@str 0024                       ??_main 00B5  
              ___fttol@sign1 00A9         __size_of_breakDouble 0170             __end_of_SerTxStr 2F48  
              __activetblptr 000003            ??_MotorDriverInit 006E                       ?_RCInt 0001  
                  ??_PIDInit 006E                       ?_SerTx 0001                    ??_TMR0Int 0060  
           __end_of___altoft 2DB0                    ??i1_SerTx 0001                    ??_RTDInit 006F  
                ?_Delay1TCYx 0001                       _CCPR3L 000FB8             __end_of___ftpack 2696  
      __size_of_calculatePID 02CE                       i1l1020 32F2                       i1l1015 3384  
                     i1l1147 30A0                       i1l3003 1620                       i1l3101 186C  
                     i1l3013 1648                       i1l3005 1628                       i1l3023 1676  
                     i1l3007 162E                       i1l3105 1898                       i1l3123 18D2  
                     i1l3051 1738                       i1l3043 170A                       i1l3019 1660  
                     i1l3133 1934                       i1l3053 173E                       i1l3037 16E6  
                     i1l3143 196C                       i1l3127 1900                       i1l3119 18C4  
                     i1l3071 17CC                       i1l3047 1722                       i1l3231 2FA4  
                     i1l3303 116E                       i1l3129 1908                       i1l3049 1732  
                     i1l3401 14A8                       i1l3321 1214                       i1l3091 1828  
                     i1l3083 17F4                       i1l3075 17D4                       i1l3235 2FD0  
                     i1l2701 2ADE                       i1l3149 199E                       i1l3413 1524  
                     i1l3405 14E0                       i1l3341 12D4                       i1l3333 1290  
                     i1l3325 124C                       i1l3421 1542                       i1l3317 1208  
                     i1l3309 1198                       i1l3095 1830                       i1l3271 108C  
                     i1l3441 1592                       i1l3425 1566                       i1l3417 1530  
                     i1l3409 14EC                       i1l3353 12FC                       i1l3345 12E0  
                     i1l3337 129C                       i1l3329 1258                       i1l2731 32EA  
                     i1l3099 185E                       i1l3435 1586                       i1l3419 153C  
                     i1l3283 10DE                       i1l2741 2F70                       i1l2805 337C  
                     i1l2901 2710                       i1l3453 15B6                       i1l3437 158A  
                     i1l3429 156E                       i1l3381 1414                       i1l3373 13D0  
                     i1l3365 138C                       i1l3357 1324                       i1l3293 113C  
                     i1l3349 12F0                       i1l3277 10AA                       i1l2823 28BE  
                     i1l2911 273E                       i1l3447 15AA                       i1l3295 1140  
                     i1l3279 10B0                       i1l2681 2A74                       i1l2673 2A38  
                     i1l2737 2F5A                       i1l2729 32E4                       i1l2817 2896  
                     i1l2905 2722                       i1l3449 15AE                       i1l3393 1464  
                     i1l3385 1420                       i1l3377 13DC                       i1l3369 1398  
                     i1l3289 10FC                       i1l2843 28FE                       i1l2819 28B0  
                     i1l2915 2750                       i1l3459 15CE                       i1l3299 1150  
                     i1l3811 2416                       i1l2685 2A8C                       i1l2677 2A48  
                     i1l2853 2932                       i1l2861 2BC8                       i1l2909 2738  
                     i1l3397 149C                       i1l3389 1458                       i1l2695 2ACC  
                     i1l2687 2AAC                       i1l2679 2A54                       i1l2791 2D64  
                     i1l2871 2C26                       i1l2919 2766                       i1l3815 242C  
                     i1l3807 2400                       i1l2689 2AB8                       i1l2865 2BFA  
                     i1l2881 26B4                       i2l4003 2C72                       i1l2883 26CE  
                     i1l2789 2D56                       i1l3781 2366                       i1l2983 3094  
                     i1l2887 26DC                       i1l2991 15F2                       i1l3783 237C  
                     i1l2977 3050                       i1l2993 15F8                       i1l3777 235C  
                     i1l2979 305A                       i1l3789 23B0                       u246_21 2888  
                     u254_21 26A6                       u248_21 28A6                       u256_21 26C4  
                     _RCREG1 000FAE             __end_of___lwtoft 329C                       _RCSTA1 000FAB  
                     _TXREG1 000FAD                       _RCflag 0048                       _TXSTA1 000FAC  
          __end_of_RTD2Angle 3210                       SerTx@c 006E                    ??_SerInit 0071  
           OpenSPI1@bus_mode 006E                       ___ftge 295A                       ___lmul 2F48  
                  ??___ftadd 009A               keyValue@length 0026                    ??___ftdiv 007C  
                  ??___ftneg 0071                    ??___ftmul 008B                    ??___ftsub 00A6  
                  ??___fttol 00A4             __end_of_keyValue 15D8                    ??___lwdiv 0072  
                  ??___lwmod 0072                       _intErr 00C7             __end_of_setIODIR 33A6  
                     clear_0 30F8                       clear_1 3104                  setIODIR@dir 0070  
                  ??_lcdInit 0073                       _strcmp 304E                       _strtod 15D8  
      ___ftmul@f3_as_product 008F            __end_ofi1___ftdiv 295A            __end_ofi1___ftneg 3364  
__size_of_ImplementPIDMotion 00A8            __end_ofi1___ftmul 278E          __size_ofi1_SerTxStr 0058  
               __pdataCOMRAM 0059                    ??_setGPIO 0071                 _calculatePID 19AE  
                  ??_isdigit 0001            _calculatePID$2660 0103            _calculatePID$2661 0106  
               __mediumconst 0000                    ??_isspace 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8          __size_ofi1___ftpack 00C6  
                 __accesstop 0060      __end_of__initialization 313A                   ___altoft@c 0009  
         __size_of_WriteSPI1 0024                   ___ftadd@f1 0094                   ___ftadd@f2 0097  
                 ___ftge@ff1 006E                   ___ftge@ff2 0071              i1___ftpack@sign 0005  
              ___rparam_used 000000                   ___ftdiv@f1 0076                   ___ftdiv@f2 0079  
                 ___ftdiv@f3 0080                   ___ftneg@f1 006E                  ?_ReadRTDpos 006F  
              __end_of_RCInt 2444                  ?_KillMotors 0001                   ___ftmul@f1 0085  
                 ___ftmul@f2 0088                   ___ftsub@f1 00A0                   ___ftsub@f2 00A3  
                 ___fttol@f1 00A0               __pcstackCOMRAM 0001                __end_of_SerTx 345C  
               __pidataBANK0 3480                ??_StartMotors 0001          __size_of_Delay1TCYx 0010  
                  ?i1___ftge 0001                   ___lwtoft@c 0076                      ??_RCInt 002F  
                    ??_SerTx 006E                 keyValue@flag 002C                   __pbssBANK0 00B5  
           WriteSPI1@TempVar 006E                    ?_OpenSPI1 006E                    ?_SerTxStr 006F  
                    ?___ftge 006E                      ?___lmul 0001                 ?_Delay10TCYx 0001  
                 _lcdCommand 3140                      _CCP3CON 000FB7                 ?_Delay1KTCYx 0001  
                  ?___altoft 0009                      _BAUDCON 000F7E               ___lmul@product 0009  
                  ?___ftpack 006E                   ??i1___ftge 0007                      ?_strcmp 0001  
          __end_of_WriteSPI1 3340                    ?___lwtoft 0076                      ?_strtod 0018  
        __end_of_StartMotors 3476                      _PIDInit 318C          __size_of_ReadRTDpos 0072  
        __size_of_KillMotors 000A                _PIDEnableFlag 00CF                      _SSP1BUF 000FC9  
                    _TMR0Int 342A   ImplementPIDMotion@PIDValue 0072                      i1_SerTx 345C  
                    _RTDInit 3210               SerTxStr@string 006F                    ?_keyValue 0024  
                  ?_setIODIR 0070                 ??i1_SerTxStr 0004                   ??_OpenSPI1 0070  
                 ??_SerTxStr 0071                      __Hparam 0000                      _SerInit 32F4  
                    __Lparam 0000              _MotorDriverInit 33E2              __size_of___ftge 00CE  
               ??i1___ftpack 0006              __size_of___lmul 005A                      ___ftadd 1C7C  
                    ___ftdiv 21C6                      ___ftneg 3240                      ___ftmul 206A  
                    ___ftsub 30A2                      ___fttol 2444                      ___lwdiv 2CB2  
                    ___lwmod 2E22                 __psmallconst 1000                   ??___altoft 000D  
                    __pcinit 30F2                   ??___ftpack 0073              Delay10TCYx@unit 006E  
                    __ramtop 1000                   _initialize 33C6                      _lcdInit 2FFA  
                    __ptext0 278E                      __ptext1 33C6                      __ptext2 2FFA  
                    __ptext3 3386                      __ptext4 3140                      __ptext5 33A6  
                    __ptext6 331C                      __ptext7 2E8E                      __ptext8 32F4  
                    __ptext9 2EEE                   ??___lwtoft 0079                    _T0CONbits 000FD5  
            __size_of_strcmp 0054              __size_of_strtod 03D6                 __size_of_abs 002C  
                    _setGPIO 33A6                      _isdigit 3364              keyValue@str_end 002A  
         __end_ofi1_SerTxStr 2FFA                      _isspace 32C8                      _prevErr 00CA  
            setIODIR@address 0071                 setGPIO@value 0070                 ??_Delay1TCYx 006E  
             __pintcode_body 2C2C         end_of_initialization 313A                   ??_keyValue 0028  
         __end_ofi1___ftpack 2AEE                   ??_setIODIR 0071                      int_func 2C2C  
          OpenSPI1@smp_phase 006F        ReadRTDpos@LowPosition 0075                      postdec2 000FDD  
                ?_lcdCommand 0001                   _motorInput 00CD                    _RTD2Angle 31D2  
                    postinc0 000FEE                      postinc2 000FDE            OpenSPI1@sync_mode 0070  
              ??_breakDouble 00B2                  _StartMotors 346A                      strcmp@r 0006  
         __end_of_Delay1TCYx 344C                      strtod@s 0018                    _PORTAbits 000F80  
                  _PORTEbits 000F84                    _PORTJbits 000F88                    _TRISAbits 000F92  
                  _TRISBbits 000F93                    _TRISCbits 000F94                    _TRISEbits 000F96  
                  _TRISFbits 000F97                    _TRISGbits 000F98                    _TRISJbits 000F9A  
                  i1___ftdiv 2878                    i1___ftneg 3340                    i1___ftmul 2696  
    __end_of_MotorDriverInit 33FE                  ___ftdiv@exp 0083                  _CCP3CONbits 000FB7  
               ??_ReadRTDpos 0071                 ??_KillMotors 0001                  ___ftmul@exp 008E  
                _StrippedKey 0049                   ?_RTD2Angle 0094               __end_of___ftge 2A28  
             __end_of___lmul 2FA2         __size_of_Delay10TCYx 0016                __pidataCOMRAM 3483  
 __end_of_ImplementPIDMotion 2B96                  ?_initialize 0001         __size_of_Delay1KTCYx 0016  
             __end_of_strcmp 30A2            __size_ofi1___ftge 0096               __end_of_strtod 19AE  
        __end_of_breakDouble 206A          start_initialization 30F2              _CurrentVelocity 0042  
               _CurrentAngle 00B5                  __end_of_abs 32C8                   ?i1___ftdiv 0009  
                 ?i1___ftneg 0001           __end_of_ReadRTDpos 2E22                   ?i1___ftmul 0009  
         __end_of_KillMotors 3480          __size_of_lcdCommand 004C         calculatePID@setpoint 00B2  
     ReadRTDpos@HighPosition 0074            __size_of_OpenSPI1 0060                     ??___ftge 0074  
                   ??___lmul 0009            __size_of_SerTxStr 005A                  __pdataBANK0 00EF  
                   ??_strcmp 0005                     ??_strtod 001C            __size_of___altoft 007C  
          __size_of___ftpack 0120                  __pbssCOMRAM 0042            __size_of___lwtoft 002C  
              __pcstackBANK0 0060                __pcstackBANK1 0100                     ?_PIDInit 0001  
                  _WriteSPI1 331C                     ?_TMR0Int 0001           calculatePID@derErr 0100  
               _isdigit$2362 0002                     ?i1_SerTx 0001                     ?_RTDInit 0001  
            Delay1KTCYx@unit 006E             ?_MotorDriverInit 0001          __size_of_initialize 001C  
          __size_of_keyValue 0556            WriteSPI1@data_out 006F            __size_of_setIODIR 0020  
                   ?_SerInit 0001             ___lwdiv@dividend 006E             i1SerTxStr@string 0002  
                  __pintcode 0008             breakDouble@temp1 0102             breakDouble@temp2 0104  
                ??_RTD2Angle 0097                     ?___ftadd 0094                     ?___ftdiv 0076  
                   ?___ftneg 006E                     ?___ftmul 0085                     ?___ftsub 00A0  
                   ?___fttol 00A0                     ?___lwdiv 006E                     ?___lwmod 006E  
                _breakDouble 1EFA                  __pintcodelo 0018           breakDouble@tempDub 0100  
                   ?_lcdInit 0001                  __smallconst 1000                     ?_setGPIO 0070  
                   ?_isdigit 0001               __size_of_RCInt 013C                     ?_isspace 0001  
                 ?_WriteSPI1 0001               __size_of_SerTx 0010                  ??i1___ftdiv 000F  
                ??i1___ftneg 0004                  ??i1___ftmul 000F             ___lwdiv@quotient 0073  
                   _IPR1bits 000F9F                     _PIE1bits 000F9D                     i1u320_20 2FC6  
                   i1u320_27 2FBC                     i1u321_20 2FF2                     i1u321_27 2FE8  
                   _PIR1bits 000F9E               setGPIO@address 0071                     _RCONbits 000FD0  
               ??_lcdCommand 0072                     _SSP1CON1 000FC6                     _TMR0Flag 00D0  
                strtod@flags 001E                     _SSP1STAT 000FC7                 ?_StartMotors 0001  
                   i1SerTx@c 0001                  strtod@expon 001F                     i1___ftge 2B96  
              ?_calculatePID 00AF                 _isspace$2365 0002             __size_of_PIDInit 0046  
          ___lmul@multiplier 0001                  _INTCON2bits 000FF1             __size_of_TMR0Int 0012  
           __size_ofi1_SerTx 000E             __size_of_RTDInit 0030           __end_of_lcdCommand 318C  
                  keyValue@x 002E                    keyValue@y 002D                     _SetAngle 00C1  
                   _OpenSPI1 2E8E                     __Hparam0 0000       ReadRTDpos@FullPosition 0076  
                   _SerTxStr 2EEE                     __Lparam0 0000             __size_of_SerInit 0028  
           __size_of___ftadd 027E             __size_of___ftdiv 0142             __size_of___ftneg 0030  
                   ___altoft 2D34             __size_of___ftmul 015C             __size_of___ftsub 0050  
           __size_of___fttol 0132             __size_of___lwdiv 0082             __size_of___lwmod 006C  
               ??_initialize 0073                     ___ftpack 2576            calculatePID@angle 00AF  
             ??_calculatePID 00B5                     ___lwtoft 3270             __size_of_lcdInit 0054  
           __size_of_setGPIO 0020             __size_of_isdigit 0022                  ??_WriteSPI1 006E  
            ___lwdiv@divisor 0070              breakDouble@dubs 00AF             __size_of_isspace 002C  
            ___lwdiv@counter 0072                 RCInt@counter 0030                     __ptext10 3210  
                   __ptext11 343C                     __ptext20 21C6                     __ptext12 33FE  
                   __ptext21 1EFA                     __ptext13 318C                     __ptext30 206A  
                   __ptext22 2E22                     __ptext14 33E2                     __ptext31 2576  
                   __ptext23 2CB2                     __ptext15 19AE                     __ptext40 15D8  
                   __ptext32 2AEE                     __ptext24 2444                     __ptext16 30A2  
                   __ptext41 3340                     __ptext33 329C                     __ptext25 344C  
                   __ptext17 1C7C                     __ptext50 304E                     __ptext42 2696  
                   __ptext26 2DB0                     __ptext18 3240                     __ptext51 3476  
                   __ptext43 2B96                     __ptext35 346A                     __ptext27 3414  
                   __ptext19 295A                     __ptext44 2878                     __ptext36 2308  
                   __ptext28 31D2                     __ptext53 342A                     __ptext45 32C8  
                   __ptext37 1082                     __ptext29 3270                     __ptext46 3364  
                   __ptext38 2FA2                     __ptext47 2F48                     __ptext39 345C  
                   __ptext48 2D34                     __ptext49 2A28                 _SSP1CON1bits 000FC6  
         _ImplementPIDMotion 2AEE                     _keyValue 1082                __size_of_hISR 2CAA  
              __size_of_lISR 009C                     _setIODIR 3386                __size_of_main 00EA  
             Delay1TCYx@unit 006E                     _received 00D1          ?_ImplementPIDMotion 0072  
         __end_of_initialize 33E2                     _loopTime 00EF                ??_Delay10TCYx 006E  
                 strtod@eexp 001D                ??_Delay1KTCYx 006E                 _SSP1STATbits 000FC7  
       ??_ImplementPIDMotion 0074                   _INTCONbits 000FF2                     isdigit@c 0003  
                   intlevel1 0000                     intlevel2 0000             ___lwmod@dividend 006E  
                   isspace@c 0003                    strtod@res 001A                 ?_breakDouble 00AF  
       __size_of_StartMotors 000C          __end_of_Delay10TCYx 342A                     strcmp@s1 0001  
                   strcmp@s2 0003              ___lwmod@divisor 0070          __end_of_Delay1KTCYx 3414  
            ___lwmod@counter 0072                     strtod@_u 0020                   i1_SerTxStr 2FA2  
       __end_of_calculatePID 1C7C  
