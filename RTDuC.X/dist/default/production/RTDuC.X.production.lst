

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Oct 19 03:35:54 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54 ;; Function _ReadRTDpos is unused but had its address taken
    55  0000                     _ADCON0	set	4034
    56  0000                     _ADCON0bits	set	4034
    57  0000                     _ADCON1	set	4033
    58  0000                     _ADCON2	set	4032
    59  0000                     _ADRESH	set	4036
    60  0000                     _ADRESL	set	4035
    61  0000                     _CCP3CON	set	4023
    62  0000                     _CCP3CONbits	set	4023
    63  0000                     _CCPR3L	set	4024
    64  0000                     _EEADR	set	4009
    65  0000                     _EEADRH	set	4010
    66  0000                     _EECON1bits	set	4006
    67  0000                     _EECON2	set	4007
    68  0000                     _EEDATA	set	4008
    69  0000                     _HLVDCON	set	4050
    70  0000                     _INTCON	set	4082
    71  0000                     _INTCON2bits	set	4081
    72  0000                     _INTCONbits	set	4082
    73  0000                     _IPR1bits	set	3999
    74  0000                     _IPR2bits	set	4002
    75  0000                     _OSCCONbits	set	4051
    76  0000                     _PIE2bits	set	4000
    77  0000                     _PIE3bits	set	4003
    78  0000                     _PIR2bits	set	4001
    79  0000                     _PIR3bits	set	4004
    80  0000                     _PORTA	set	3968
    81  0000                     _PORTAbits	set	3968
    82  0000                     _PORTB	set	3969
    83  0000                     _PORTBbits	set	3969
    84  0000                     _PORTC	set	3970
    85  0000                     _PORTCbits	set	3970
    86  0000                     _PORTD	set	3971
    87  0000                     _PORTE	set	3972
    88  0000                     _PORTEbits	set	3972
    89  0000                     _PORTF	set	3973
    90  0000                     _PORTG	set	3974
    91  0000                     _PORTH	set	3975
    92  0000                     _PORTJ	set	3976
    93  0000                     _PORTJbits	set	3976
    94  0000                     _PR2	set	4043
    95  0000                     _RCONbits	set	4048
    96  0000                     _SSP2BUF	set	3942
    97  0000                     _SSP2CON1	set	3939
    98  0000                     _SSP2CON1bits	set	3939
    99  0000                     _SSP2STAT	set	3940
   100  0000                     _SSP2STATbits	set	3940
   101  0000                     _T0CON	set	4053
   102  0000                     _T2CON	set	4042
   103  0000                     _T3CON	set	4017
   104  0000                     _TMR0H	set	4055
   105  0000                     _TMR0L	set	4054
   106  0000                     _TRISAbits	set	3986
   107  0000                     _TRISBbits	set	3987
   108  0000                     _TRISCbits	set	3988
   109  0000                     _TRISD	set	3989
   110  0000                     _TRISDbits	set	3989
   111  0000                     _TRISEbits	set	3990
   112  0000                     _TRISGbits	set	3992
   113  0000                     _TRISH	set	3993
   114  0000                     _TRISJbits	set	3994
   115                           
   116                           ; 0 bytes @ 0x53
   117 ;;
   118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   119 ;;
   120 ;; *************** function _main *****************
   121 ;; Defined at:
   122 ;;		line 18 in file "RTDuC.c"
   123 ;; Parameters:    Size  Location     Type
   124 ;;		None
   125 ;; Auto vars:     Size  Location     Type
   126 ;;		None
   127 ;; Return value:  Size  Location     Type
   128 ;;		None               void
   129 ;; Registers used:
   130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   140 ;;Total ram usage:        0 bytes
   141 ;; Hardware stack levels required when called:   10
   142 ;; This function calls:
   143 ;;		_initialize
   144 ;; This function is called by:
   145 ;;		Startup code after reset
   146 ;; This function uses a non-reentrant model
   147 ;;
   148                           
   149                           	psect	text0
   150  001406                     __ptext0:
   151                           	opt stack 0
   152  001406                     _main:
   153                           	opt stack 21
   154                           
   155                           ;RTDuC.c: 20: initialize();
   156                           
   157                           ;incstack = 0
   158  001406  EC2D  F009         	call	_initialize	;wreg free
   159  00140A  D7FF               	goto	l256
   160  00140C  EF0C  F000         	goto	start
   161  001410                     __end_of_main:
   162                           	opt stack 0
   163                           
   164                           	psect	cinit
   165  001360                     __pcinit:
   166                           	opt stack 0
   167  001360                     start_initialization:
   168                           	opt stack 0
   169  001360                     __initialization:
   170                           	opt stack 0
   171                           
   172                           ; Clear objects allocated to BANK0 (35 bytes)
   173  001360  EE00  F060         	lfsr	0,__pbssBANK0
   174  001364  0E23               	movlw	35
   175  001366                     clear_0:
   176  001366  6AEE               	clrf	postinc0,c
   177  001368  06E8               	decf	wreg,f,c
   178  00136A  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to COMRAM (12 bytes)
   181  00136C  EE00  F054         	lfsr	0,__pbssCOMRAM
   182  001370  0E0C               	movlw	12
   183  001372                     clear_1:
   184  001372  6AEE               	clrf	postinc0,c
   185  001374  06E8               	decf	wreg,f,c
   186  001376  E1FD               	bnz	clear_1
   187  001378                     end_of_initialization:
   188                           	opt stack 0
   189  001378                     __end_of__initialization:
   190                           	opt stack 0
   191  001378  0100               	movlb	0
   192  00137A  EF03  F00A         	goto	_main	;jump to C main() function
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	bssCOMRAM
   197  000054                     __pbssCOMRAM:
   198                           	opt stack 0
   199  000054                     _StartAngle:
   200                           	opt stack 0
   201  000054                     	ds	3
   202  000057                     _err:
   203                           	opt stack 0
   204  000057                     	ds	3
   205  00005A                     _DoublePtr:
   206                           	opt stack 0
   207  00005A                     	ds	2
   208  00005C                     _motorInput:
   209                           	opt stack 0
   210  00005C                     	ds	2
   211  00005E                     _JSEnableFlag:
   212                           	opt stack 0
   213  00005E                     	ds	1
   214  00005F                     _PIDEnableFlag:
   215                           	opt stack 0
   216  00005F                     	ds	1
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	bssBANK0
   221  000060                     __pbssBANK0:
   222                           	opt stack 0
   223  000060                     _DoubleSPIS:
   224                           	opt stack 0
   225  000060                     	ds	4
   226  000064                     _CurrentAngle:
   227                           	opt stack 0
   228  000064                     	ds	3
   229  000067                     _CurrentVelocity:
   230                           	opt stack 0
   231  000067                     	ds	3
   232  00006A                     _DDouble:
   233                           	opt stack 0
   234  00006A                     	ds	3
   235  00006D                     _Kd:
   236                           	opt stack 0
   237  00006D                     	ds	3
   238  000070                     _Ki:
   239                           	opt stack 0
   240  000070                     	ds	3
   241  000073                     _Kp:
   242                           	opt stack 0
   243  000073                     	ds	3
   244  000076                     _SetAngle:
   245                           	opt stack 0
   246  000076                     	ds	3
   247  000079                     _intErr:
   248                           	opt stack 0
   249  000079                     	ds	3
   250  00007C                     _prevErr:
   251                           	opt stack 0
   252  00007C                     	ds	3
   253  00007F                     _Command:
   254                           	opt stack 0
   255  00007F                     	ds	1
   256  000080                     _MotorFailFlag:
   257                           	opt stack 0
   258  000080                     	ds	1
   259  000081                     _SPIflag:
   260                           	opt stack 0
   261  000081                     	ds	1
   262  000082                     _dummy_byte:
   263                           	opt stack 0
   264  000082                     	ds	1
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	cstackBANK0
   269  000083                     __pcstackBANK0:
   270                           	opt stack 0
   271  000083                     ??_ISR:
   272                           
   273                           ; 0 bytes @ 0x0
   274  000083                     	ds	14
   275  000091                     ?_EEReassembleDouble:
   276                           	opt stack 0
   277  000091                     OpenSPI2@bus_mode:
   278                           	opt stack 0
   279  000091                     Delay10TCYx@unit:
   280                           	opt stack 0
   281  000091                     Delay1KTCYx@unit:
   282                           	opt stack 0
   283  000091                     Delay1TCYx@unit:
   284                           	opt stack 0
   285  000091                     Read_b_eep@badd:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0xE
   289  000091                     	ds	1
   290  000092                     OpenSPI2@smp_phase:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0xF
   294  000092                     	ds	1
   295  000093                     EEReadChar@location:
   296                           	opt stack 0
   297  000093                     OpenSPI2@sync_mode:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x10
   301  000093                     	ds	1
   302  000094                     EEReadChar@ch:
   303                           	opt stack 0
   304  000094                     EEReassembleDouble@dub:
   305                           	opt stack 0
   306                           
   307                           ; 3 bytes @ 0x11
   308  000094                     	ds	3
   309  000097                     ?_EEReadDouble:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x14
   313  000097                     	ds	3
   314  00009A                     EEReadDouble@location:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x17
   318  00009A                     	ds	1
   319  00009B                     EEReadDouble@x:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x18
   323  00009B                     	ds	1
   324  00009C                     ??_EEBootUp:
   325                           
   326                           ; 0 bytes @ 0x19
   327  00009C                     	ds	2
   328  00009E                     postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           
   331                           ; 0 bytes @ 0x1B
   332                           
   333                           	psect	cstackCOMRAM
   334  000001                     __pcstackCOMRAM:
   335                           	opt stack 0
   336  000001                     ?_abs:
   337                           	opt stack 0
   338  000001                     ?___ftpack:
   339                           	opt stack 0
   340  000001                     ?___ftneg:
   341                           	opt stack 0
   342  000001                     Write_b_eep@badd:
   343                           	opt stack 0
   344  000001                     abs@a:
   345                           	opt stack 0
   346  000001                     EEDisassembleDouble@dub:
   347                           	opt stack 0
   348  000001                     ___ftpack@arg:
   349                           	opt stack 0
   350  000001                     ___ftneg@f1:
   351                           	opt stack 0
   352                           
   353                           ; 3 bytes @ 0x0
   354  000001                     	ds	2
   355  000003                     ??_abs:
   356  000003                     Write_b_eep@bdat:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x2
   360  000003                     	ds	1
   361  000004                     Write_b_eep@GIE_BIT_VAL:
   362                           	opt stack 0
   363  000004                     ___ftpack@exp:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x3
   367  000004                     	ds	1
   368  000005                     EEWriteChar@ch:
   369                           	opt stack 0
   370  000005                     ___ftpack@sign:
   371                           	opt stack 0
   372  000005                     ImplementPIDMotion@PIDValue:
   373                           	opt stack 0
   374  000005                     EEWriteDouble@dub:
   375                           	opt stack 0
   376                           
   377                           ; 3 bytes @ 0x4
   378  000005                     	ds	1
   379  000006                     ??___ftpack:
   380  000006                     EEWriteChar@location:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x5
   384  000006                     	ds	1
   385  000007                     ??_ImplementPIDMotion:
   386                           
   387                           ; 0 bytes @ 0x6
   388  000007                     	ds	1
   389  000008                     EEWriteDouble@location:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x7
   393  000008                     	ds	1
   394  000009                     ?___ftdiv:
   395                           	opt stack 0
   396  000009                     ?___lwtoft:
   397                           	opt stack 0
   398  000009                     EEWriteDouble@x:
   399                           	opt stack 0
   400  000009                     ___lwtoft@c:
   401                           	opt stack 0
   402  000009                     ___ftdiv@f1:
   403                           	opt stack 0
   404                           
   405                           ; 3 bytes @ 0x8
   406  000009                     	ds	1
   407  00000A                     
   408                           ; 0 bytes @ 0x9
   409  00000A                     	ds	2
   410  00000C                     ___ftdiv@f2:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0xB
   414  00000C                     	ds	3
   415  00000F                     ??___ftdiv:
   416                           
   417                           ; 0 bytes @ 0xE
   418  00000F                     	ds	3
   419  000012                     ___ftdiv@cntr:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x11
   423  000012                     	ds	1
   424  000013                     ___ftdiv@f3:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x12
   428  000013                     	ds	3
   429  000016                     ___ftdiv@exp:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x15
   433  000016                     	ds	1
   434  000017                     ___ftdiv@sign:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x16
   438  000017                     	ds	1
   439  000018                     ?___ftmul:
   440                           	opt stack 0
   441  000018                     ___ftmul@f1:
   442                           	opt stack 0
   443                           
   444                           ; 3 bytes @ 0x17
   445  000018                     	ds	3
   446  00001B                     ___ftmul@f2:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0x1A
   450  00001B                     	ds	3
   451  00001E                     ??___ftmul:
   452                           
   453                           ; 0 bytes @ 0x1D
   454  00001E                     	ds	3
   455  000021                     ___ftmul@exp:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x20
   459  000021                     	ds	1
   460  000022                     ___ftmul@f3_as_product:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0x21
   464  000022                     	ds	3
   465  000025                     ___ftmul@cntr:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x24
   469  000025                     	ds	1
   470  000026                     ___ftmul@sign:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x25
   474  000026                     	ds	1
   475  000027                     ?_RTD2Angle:
   476                           	opt stack 0
   477  000027                     ?___ftadd:
   478                           	opt stack 0
   479  000027                     RTD2Angle@RTDAngle:
   480                           	opt stack 0
   481  000027                     ___ftadd@f1:
   482                           	opt stack 0
   483                           
   484                           ; 3 bytes @ 0x26
   485  000027                     	ds	3
   486  00002A                     ___ftadd@f2:
   487                           	opt stack 0
   488                           
   489                           ; 3 bytes @ 0x29
   490  00002A                     	ds	3
   491  00002D                     ??___ftadd:
   492                           
   493                           ; 0 bytes @ 0x2C
   494  00002D                     	ds	3
   495  000030                     ___ftadd@sign:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x2F
   499  000030                     	ds	1
   500  000031                     ___ftadd@exp2:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x30
   504  000031                     	ds	1
   505  000032                     ___ftadd@exp1:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x31
   509  000032                     	ds	1
   510  000033                     ?___fttol:
   511                           	opt stack 0
   512  000033                     ___ftge@ff1:
   513                           	opt stack 0
   514  000033                     ___fttol@f1:
   515                           	opt stack 0
   516                           
   517                           ; 3 bytes @ 0x32
   518  000033                     	ds	3
   519  000036                     ___ftge@ff2:
   520                           	opt stack 0
   521                           
   522                           ; 3 bytes @ 0x35
   523  000036                     	ds	1
   524  000037                     ??___fttol:
   525                           
   526                           ; 0 bytes @ 0x36
   527  000037                     	ds	2
   528  000039                     ??___ftge:
   529                           
   530                           ; 0 bytes @ 0x38
   531  000039                     	ds	3
   532  00003C                     ___fttol@sign1:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x3B
   536  00003C                     	ds	1
   537  00003D                     ___fttol@lval:
   538                           	opt stack 0
   539                           
   540                           ; 4 bytes @ 0x3C
   541  00003D                     	ds	4
   542  000041                     ___fttol@exp1:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x40
   546  000041                     	ds	1
   547  000042                     calculatePID@angle:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0x41
   551  000042                     	ds	3
   552  000045                     calculatePID@setpoint:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x44
   556  000045                     	ds	3
   557  000048                     calculatePID@derErr:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0x47
   561  000048                     	ds	3
   562  00004B                     _calculatePID$3397:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x4A
   566  00004B                     	ds	3
   567  00004E                     _calculatePID$3398:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0x4D
   571  00004E                     	ds	3
   572  000051                     _calculatePID$3396:
   573                           	opt stack 0
   574                           
   575                           ; 3 bytes @ 0x50
   576  000051                     	ds	3
   577  000054                     postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           
   580 ;; *************** function _initialize *****************
   581 ;; Defined at:
   582 ;;		line 28 in file "RTDuC.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;		None               void
   589 ;; Registers used:
   590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    9
   603 ;; This function calls:
   604 ;;		_EEPROMInit
   605 ;;		_JoystickInit
   606 ;;		_MotorDriverInit
   607 ;;		_PIDInit
   608 ;;		_RTDInit
   609 ;;		_SPIInit
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text1
   616  00125A                     __ptext1:
   617                           	opt stack 0
   618  00125A                     _initialize:
   619                           	opt stack 21
   620                           
   621                           ;RTDuC.c: 30: while(OSCCONbits.OSTS == 0);
   622                           
   623                           ;incstack = 0
   624  00125A  D000               	goto	l261
   625  00125C                     l261:
   626  00125C  A6D3               	btfss	4051,3,c	;volatile
   627  00125E  D7FE               	goto	l261
   628                           
   629                           ;RTDuC.c: 32: RTDInit();
   630  001260  ECFF  F008         	call	_RTDInit	;wreg free
   631                           
   632                           ;RTDuC.c: 33: JoystickInit();
   633  001264  EC17  F009         	call	_JoystickInit	;wreg free
   634                           
   635                           ;RTDuC.c: 34: MotorDriverInit();
   636  001268  ECA0  F009         	call	_MotorDriverInit	;wreg free
   637                           
   638                           ;RTDuC.c: 35: PIDInit();
   639  00126C  EC85  F008         	call	_PIDInit	;wreg free
   640                           
   641                           ;RTDuC.c: 36: SPIInit();
   642  001270  ECBF  F009         	call	_SPIInit	;wreg free
   643                           
   644                           ;RTDuC.c: 37: EEPROMInit();
   645  001274  ECF1  F009         	call	_EEPROMInit	;wreg free
   646                           
   647                           ;RTDuC.c: 39: INTCONbits.GIE = 1;
   648  001278  8EF2               	bsf	intcon,7,c	;volatile
   649                           
   650                           ;RTDuC.c: 40: INTCONbits.PEIE = 1;
   651  00127A  8CF2               	bsf	intcon,6,c	;volatile
   652                           
   653                           ;RTDuC.c: 41: RCONbits.IPEN = 1;
   654  00127C  8ED0               	bsf	4048,7,c	;volatile
   655                           
   656                           ;RTDuC.c: 43: PIE2bits.OSCFIE = 1;
   657  00127E  8EA0               	bsf	4000,7,c	;volatile
   658                           
   659                           ;RTDuC.c: 44: IPR2bits.OSCFIP = 1;
   660  001280  8EA2               	bsf	4002,7,c	;volatile
   661  001282  0012               	return		;funcret
   662  001284                     __end_of_initialize:
   663                           	opt stack 0
   664                           intcon	equ	0xFF2
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           
   668 ;; *************** function _SPIInit *****************
   669 ;; Defined at:
   670 ;;		line 16 in file "SPISlave.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;		None               void
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    6
   691 ;; This function calls:
   692 ;;		_OpenSPI2
   693 ;; This function is called by:
   694 ;;		_initialize
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text2
   699  00137E                     __ptext2:
   700                           	opt stack 0
   701  00137E                     _SPIInit:
   702                           	opt stack 23
   703                           
   704                           ;SPISlave.c: 18: TRISCbits.RC6 = 0;
   705                           
   706                           ;incstack = 0
   707  00137E  9C94               	bcf	3988,6,c	;volatile
   708                           
   709                           ;SPISlave.c: 19: TRISDbits.RD7 = 1;
   710  001380  8E95               	bsf	3989,7,c	;volatile
   711                           
   712                           ;SPISlave.c: 20: OpenSPI2(0b00000100, 0b00000000, 0b00000000);
   713  001382  0E00               	movlw	0
   714  001384  0100               	movlb	0	; () banked
   715  001386  6F91               	movwf	OpenSPI2@bus_mode& (0+255),b
   716  001388  0E00               	movlw	0
   717  00138A  0100               	movlb	0	; () banked
   718  00138C  6F92               	movwf	OpenSPI2@smp_phase& (0+255),b
   719  00138E  0E04               	movlw	4
   720  001390  ECB5  F007         	call	_OpenSPI2
   721                           
   722                           ;SPISlave.c: 21: PIE3bits.SSP2IE = 1;
   723  001394  8EA3               	bsf	4003,7,c	;volatile
   724                           
   725                           ;SPISlave.c: 22: IPR1bits.SSP1IP = 0;
   726  001396  969F               	bcf	3999,3,c	;volatile
   727  001398  0012               	return		;funcret
   728  00139A                     __end_of_SPIInit:
   729                           	opt stack 0
   730                           intcon	equ	0xFF2
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           
   734 ;; *************** function _OpenSPI2 *****************
   735 ;; Defined at:
   736 ;;		line 14 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi2open.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  sync_mode       1    wreg     unsigned char 
   739 ;;  bus_mode        1   14[BANK0 ] unsigned char 
   740 ;;  smp_phase       1   15[BANK0 ] unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  sync_mode       1   16[BANK0 ] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;		None               void
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;Total ram usage:        3 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    5
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_SPIInit
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text3
   767  000F6A                     __ptext3:
   768                           	opt stack 0
   769  000F6A                     _OpenSPI2:
   770                           	opt stack 23
   771                           
   772                           ;incstack = 0
   773                           ;OpenSPI2@sync_mode stored from wreg
   774  000F6A  0100               	movlb	0	; () banked
   775  000F6C  6F93               	movwf	OpenSPI2@sync_mode& (0+255),b
   776                           
   777                           ; BSR set to: 0
   778  000F6E  0E3F               	movlw	63
   779  000F70  1664               	andwf	3940,f,c	;volatile
   780                           
   781                           ; BSR set to: 0
   782  000F72  0E00               	movlw	0
   783  000F74  6E63               	movwf	3939,c	;volatile
   784                           
   785                           ; BSR set to: 0
   786  000F76  0100               	movlb	0	; () banked
   787  000F78  5193               	movf	OpenSPI2@sync_mode& (0+255),w,b
   788  000F7A  1263               	iorwf	3939,f,c	;volatile
   789                           
   790                           ; BSR set to: 0
   791  000F7C  0100               	movlb	0	; () banked
   792  000F7E  5192               	movf	OpenSPI2@smp_phase& (0+255),w,b
   793  000F80  1264               	iorwf	3940,f,c	;volatile
   794  000F82  D005               	goto	l2065
   795  000F84                     l490:
   796                           
   797                           ; BSR set to: 0
   798  000F84  8C64               	bsf	3940,6,c	;volatile
   799  000F86  D014               	goto	l2069
   800  000F88                     l492:
   801                           
   802                           ; BSR set to: 0
   803  000F88  8C64               	bsf	3940,6,c	;volatile
   804  000F8A                     l493:
   805                           
   806                           ; BSR set to: 0
   807  000F8A  8863               	bsf	3939,4,c	;volatile
   808                           
   809                           ; BSR set to: 0
   810                           
   811                           ; BSR set to: 0
   812  000F8C  D011               	goto	l2069
   813  000F8E                     l2065:
   814                           
   815                           ; BSR set to: 0
   816  000F8E  0100               	movlb	0	; () banked
   817  000F90  5191               	movf	OpenSPI2@bus_mode& (0+255),w,b
   818                           
   819                           ; Switch size 1, requested type "space"
   820                           ; Number of cases is 3, Range of values is 0 to 3
   821                           ; switch strategies available:
   822                           ; Name         Instructions Cycles
   823                           ; simple_byte           10     6 (average)
   824                           ;	Chosen strategy is simple_byte
   825  000F92  0A00               	xorlw	0	; case 0
   826  000F94  B4D8               	btfsc	status,2,c
   827  000F96  D7F6               	goto	l490
   828  000F98  0A02               	xorlw	2	; case 2
   829  000F9A  B4D8               	btfsc	status,2,c
   830  000F9C  D7F5               	goto	l492
   831  000F9E  0A01               	xorlw	1	; case 3
   832  000FA0  B4D8               	btfsc	status,2,c
   833  000FA2  D7F3               	goto	l493
   834                           
   835                           ; BSR set to: 0
   836  000FA4  D005               	goto	l2069
   837  000FA6                     l496:
   838                           
   839                           ; BSR set to: 0
   840  000FA6  8E95               	bsf	3989,7,c	;volatile
   841  000FA8                     l498:
   842                           
   843                           ; BSR set to: 0
   844  000FA8  8C95               	bsf	3989,6,c	;volatile
   845  000FAA  D00B               	goto	l497
   846  000FAC                     l499:
   847                           
   848                           ; BSR set to: 0
   849  000FAC  9C95               	bcf	3989,6,c	;volatile
   850                           
   851                           ; BSR set to: 0
   852  000FAE  D009               	goto	l497
   853  000FB0                     l2069:
   854                           
   855                           ; BSR set to: 0
   856  000FB0  0100               	movlb	0	; () banked
   857  000FB2  5193               	movf	OpenSPI2@sync_mode& (0+255),w,b
   858                           
   859                           ; Switch size 1, requested type "space"
   860                           ; Number of cases is 2, Range of values is 4 to 5
   861                           ; switch strategies available:
   862                           ; Name         Instructions Cycles
   863                           ; simple_byte            7     4 (average)
   864                           ;	Chosen strategy is simple_byte
   865  000FB4  0A04               	xorlw	4	; case 4
   866  000FB6  B4D8               	btfsc	status,2,c
   867  000FB8  D7F6               	goto	l496
   868  000FBA  0A01               	xorlw	1	; case 5
   869  000FBC  B4D8               	btfsc	status,2,c
   870  000FBE  D7F4               	goto	l498
   871  000FC0  D7F5               	goto	l499
   872  000FC2                     l497:
   873                           
   874                           ; BSR set to: 0
   875  000FC2  8A95               	bsf	3989,5,c	;volatile
   876  000FC4  9895               	bcf	3989,4,c	;volatile
   877                           
   878                           ; BSR set to: 0
   879  000FC6  8A63               	bsf	3939,5,c	;volatile
   880                           
   881                           ; BSR set to: 0
   882  000FC8  0012               	return		;funcret
   883  000FCA                     __end_of_OpenSPI2:
   884                           	opt stack 0
   885                           intcon	equ	0xFF2
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           status	equ	0xFD8
   889                           
   890 ;; *************** function _RTDInit *****************
   891 ;; Defined at:
   892 ;;		line 3 in file "ResolverToDigital.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    6
   913 ;; This function calls:
   914 ;;		_Delay10TCYx
   915 ;;		_Delay1KTCYx
   916 ;;		_Delay1TCYx
   917 ;; This function is called by:
   918 ;;		_initialize
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text4
   923  0011FE                     __ptext4:
   924                           	opt stack 0
   925  0011FE                     _RTDInit:
   926                           	opt stack 23
   927                           
   928                           ;ResolverToDigital.c: 5: TRISD = 0xFF;
   929                           
   930                           ; BSR set to: 0
   931                           ;incstack = 0
   932  0011FE  6895               	setf	3989,c	;volatile
   933                           
   934                           ;ResolverToDigital.c: 6: TRISH = 0xFF;
   935  001200  6899               	setf	3993,c	;volatile
   936                           
   937                           ;ResolverToDigital.c: 7: TRISEbits.RE0 = 0;
   938  001202  9096               	bcf	3990,0,c	;volatile
   939                           
   940                           ;ResolverToDigital.c: 8: TRISEbits.RE1 = 0;
   941  001204  9296               	bcf	3990,1,c	;volatile
   942                           
   943                           ;ResolverToDigital.c: 9: TRISEbits.RE2 = 0;
   944  001206  9496               	bcf	3990,2,c	;volatile
   945                           
   946                           ;ResolverToDigital.c: 10: TRISJbits.RJ0 = 0;
   947  001208  909A               	bcf	3994,0,c	;volatile
   948                           
   949                           ;ResolverToDigital.c: 11: TRISEbits.RE5 = 1;
   950  00120A  8A96               	bsf	3990,5,c	;volatile
   951                           
   952                           ;ResolverToDigital.c: 12: TRISEbits.RE6 = 1;
   953  00120C  8C96               	bsf	3990,6,c	;volatile
   954                           
   955                           ;ResolverToDigital.c: 13: TRISEbits.RE7 = 1;
   956  00120E  8E96               	bsf	3990,7,c	;volatile
   957                           
   958                           ;ResolverToDigital.c: 21: PORTJbits.RJ0 = 0;
   959  001210  9088               	bcf	3976,0,c	;volatile
   960                           
   961                           ;ResolverToDigital.c: 22: Delay10TCYx(10);
   962  001212  0E0A               	movlw	10
   963  001214  ECE6  F009         	call	_Delay10TCYx
   964                           
   965                           ;ResolverToDigital.c: 23: PORTJbits.RJ0 = 1;
   966  001218  8088               	bsf	3976,0,c	;volatile
   967                           
   968                           ;ResolverToDigital.c: 24: Delay1KTCYx(20);
   969  00121A  0E14               	movlw	20
   970  00121C  ECDB  F009         	call	_Delay1KTCYx
   971                           
   972                           ;ResolverToDigital.c: 25: PORTEbits.RE0 = 0;
   973  001220  9084               	bcf	3972,0,c	;volatile
   974                           
   975                           ;ResolverToDigital.c: 26: Delay1TCYx(1);
   976  001222  0E01               	movlw	1
   977  001224  ECFB  F009         	call	_Delay1TCYx
   978                           
   979                           ;ResolverToDigital.c: 27: PORTEbits.RE0 = 1;
   980  001228  8084               	bsf	3972,0,c	;volatile
   981                           
   982                           ;ResolverToDigital.c: 29: PORTEbits.RE2 = 0;
   983  00122A  9484               	bcf	3972,2,c	;volatile
   984  00122C  0012               	return		;funcret
   985  00122E                     __end_of_RTDInit:
   986                           	opt stack 0
   987                           intcon	equ	0xFF2
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _Delay1TCYx *****************
   993 ;; Defined at:
   994 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1tcyx.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  unit            1    wreg     unsigned char 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  unit            1   14[BANK0 ] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        1 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    5
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_RTDInit
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text5
  1023  0013F6                     __ptext5:
  1024                           	opt stack 0
  1025  0013F6                     _Delay1TCYx:
  1026                           	opt stack 23
  1027                           
  1028                           ;incstack = 0
  1029                           ;Delay1TCYx@unit stored from wreg
  1030  0013F6  0100               	movlb	0	; () banked
  1031  0013F8  6F91               	movwf	Delay1TCYx@unit& (0+255),b
  1032  0013FA                     l744:
  1033                           
  1034                           ; BSR set to: 0
  1035  0013FA  F000               	nop	
  1036  0013FC  0100               	movlb	0	; () banked
  1037  0013FE  2F91               	decfsz	Delay1TCYx@unit& (0+255),f,b
  1038  001400  D7FC               	goto	l744
  1039  001402  D000               	goto	l746
  1040  001404                     l746:
  1041                           
  1042                           ; BSR set to: 0
  1043  001404  0012               	return		;funcret
  1044  001406                     __end_of_Delay1TCYx:
  1045                           	opt stack 0
  1046                           intcon	equ	0xFF2
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           status	equ	0xFD8
  1050                           
  1051 ;; *************** function _Delay1KTCYx *****************
  1052 ;; Defined at:
  1053 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1ktcyx.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  unit            1    wreg     unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  unit            1   14[BANK0 ] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:        1 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    5
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_RTDInit
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text6
  1082  0013B6                     __ptext6:
  1083                           	opt stack 0
  1084  0013B6                     _Delay1KTCYx:
  1085                           	opt stack 23
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;incstack = 0
  1089                           ;Delay1KTCYx@unit stored from wreg
  1090  0013B6  0100               	movlb	0	; () banked
  1091  0013B8  6F91               	movwf	Delay1KTCYx@unit& (0+255),b
  1092  0013BA                     
  1093                           ; BSR set to: 0
  1094  0013BA  0EFA               	movlw	250
  1095  0013BC                     u2047:
  1096  0013BC  F000               	nop	
  1097  0013BE  2EE8               	decfsz	wreg,f,c
  1098  0013C0  D7FD               	goto	u2047
  1099  0013C2  0100               	movlb	0	; () banked
  1100  0013C4  2F91               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  1101  0013C6  D7F9               	goto	l2049
  1102  0013C8  D000               	goto	l739
  1103  0013CA                     l739:
  1104                           
  1105                           ; BSR set to: 0
  1106  0013CA  0012               	return		;funcret
  1107  0013CC                     __end_of_Delay1KTCYx:
  1108                           	opt stack 0
  1109                           intcon	equ	0xFF2
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _Delay10TCYx *****************
  1115 ;; Defined at:
  1116 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  unit            1    wreg     unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  unit            1   14[BANK0 ] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;		None               void
  1123 ;; Registers used:
  1124 ;;		wreg
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        1 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    5
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_RTDInit
  1141 ;;		_ReadRTDpos
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text7
  1146  0013CC                     __ptext7:
  1147                           	opt stack 0
  1148  0013CC                     _Delay10TCYx:
  1149                           	opt stack 23
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;incstack = 0
  1153                           ;Delay10TCYx@unit stored from wreg
  1154  0013CC  0100               	movlb	0	; () banked
  1155  0013CE  6F91               	movwf	Delay10TCYx@unit& (0+255),b
  1156  0013D0                     
  1157                           ; BSR set to: 0
  1158  0013D0  0E03               	movlw	3
  1159  0013D2                     u2057:
  1160  0013D2  2EE8               	decfsz	wreg,f,c
  1161  0013D4  D7FE               	goto	u2057
  1162  0013D6  F000               	nop	
  1163  0013D8  0100               	movlb	0	; () banked
  1164  0013DA  2F91               	decfsz	Delay10TCYx@unit& (0+255),f,b
  1165  0013DC  D7F9               	goto	l2045
  1166  0013DE  D000               	goto	l732
  1167  0013E0                     l732:
  1168                           
  1169                           ; BSR set to: 0
  1170  0013E0  0012               	return		;funcret
  1171  0013E2                     __end_of_Delay10TCYx:
  1172                           	opt stack 0
  1173                           intcon	equ	0xFF2
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           status	equ	0xFD8
  1177                           
  1178 ;; *************** function _PIDInit *****************
  1179 ;; Defined at:
  1180 ;;		line 15 in file "PID.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;		None               void
  1187 ;; Registers used:
  1188 ;;		wreg, status,2
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    5
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_initialize
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text8
  1209  00110A                     __ptext8:
  1210                           	opt stack 0
  1211  00110A                     _PIDInit:
  1212                           	opt stack 24
  1213                           
  1214                           ;PID.c: 18: err = 0;
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;incstack = 0
  1218  00110A  0E00               	movlw	0
  1219  00110C  6E57               	movwf	_err,c
  1220  00110E  0E00               	movlw	0
  1221  001110  6E58               	movwf	_err+1,c
  1222  001112  0E00               	movlw	0
  1223  001114  6E59               	movwf	_err+2,c
  1224                           
  1225                           ;PID.c: 19: prevErr = 0;
  1226  001116  0E00               	movlw	0
  1227  001118  0100               	movlb	0	; () banked
  1228  00111A  6F7C               	movwf	_prevErr& (0+255),b
  1229  00111C  0E00               	movlw	0
  1230  00111E  0100               	movlb	0	; () banked
  1231  001120  6F7D               	movwf	(_prevErr+1)& (0+255),b
  1232  001122  0E00               	movlw	0
  1233  001124  0100               	movlb	0	; () banked
  1234  001126  6F7E               	movwf	(_prevErr+2)& (0+255),b
  1235                           
  1236                           ;PID.c: 20: intErr = 0;
  1237  001128  0E00               	movlw	0
  1238  00112A  0100               	movlb	0	; () banked
  1239  00112C  6F79               	movwf	_intErr& (0+255),b
  1240  00112E  0E00               	movlw	0
  1241  001130  0100               	movlb	0	; () banked
  1242  001132  6F7A               	movwf	(_intErr+1)& (0+255),b
  1243  001134  0E00               	movlw	0
  1244  001136  0100               	movlb	0	; () banked
  1245  001138  6F7B               	movwf	(_intErr+2)& (0+255),b
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;PID.c: 23: INTCON2bits.TMR0IP = 1;
  1249  00113A  84F1               	bsf	intcon2,2,c	;volatile
  1250                           
  1251                           ;PID.c: 24: T0CON = 0x84;
  1252  00113C  0E84               	movlw	132
  1253  00113E  6ED5               	movwf	4053,c	;volatile
  1254                           
  1255                           ;PID.c: 25: TMR0H = 0xDB;
  1256  001140  0EDB               	movlw	219
  1257  001142  6ED7               	movwf	4055,c	;volatile
  1258                           
  1259                           ;PID.c: 26: TMR0L = 0x60;
  1260  001144  0E60               	movlw	96
  1261  001146  6ED6               	movwf	4054,c	;volatile
  1262                           
  1263                           ; BSR set to: 0
  1264  001148  0012               	return		;funcret
  1265  00114A                     __end_of_PIDInit:
  1266                           	opt stack 0
  1267                           intcon	equ	0xFF2
  1268                           intcon2	equ	0xFF1
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           status	equ	0xFD8
  1272                           
  1273 ;; *************** function _MotorDriverInit *****************
  1274 ;; Defined at:
  1275 ;;		line 6 in file "MotorControl.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;		None               void
  1282 ;; Registers used:
  1283 ;;		wreg, status,2
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    5
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_initialize
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text9
  1304  001340                     __ptext9:
  1305                           	opt stack 0
  1306  001340                     _MotorDriverInit:
  1307                           	opt stack 24
  1308                           
  1309                           ;MotorControl.c: 8: TRISGbits.RG0 = 0;
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;incstack = 0
  1313  001340  9098               	bcf	3992,0,c	;volatile
  1314                           
  1315                           ;MotorControl.c: 9: TRISGbits.RG3 = 0;
  1316  001342  9698               	bcf	3992,3,c	;volatile
  1317                           
  1318                           ;MotorControl.c: 10: TRISEbits.RE3 = 0;
  1319  001344  9696               	bcf	3990,3,c	;volatile
  1320                           
  1321                           ;MotorControl.c: 11: TRISEbits.RE4 = 0;
  1322  001346  9896               	bcf	3990,4,c	;volatile
  1323                           
  1324                           ;MotorControl.c: 12: TRISBbits.RB0 = 1;
  1325  001348  8093               	bsf	3987,0,c	;volatile
  1326                           
  1327                           ;MotorControl.c: 14: TRISAbits.RA4 = 0;
  1328  00134A  9892               	bcf	3986,4,c	;volatile
  1329                           
  1330                           ;MotorControl.c: 16: INTCONbits.INT0IE = 1;
  1331  00134C  88F2               	bsf	intcon,4,c	;volatile
  1332                           
  1333                           ;MotorControl.c: 17: INTCON2bits.INTEDG0 = 0;
  1334  00134E  9CF1               	bcf	intcon2,6,c	;volatile
  1335                           
  1336                           ;MotorControl.c: 20: CCP3CON = 0x4C;
  1337  001350  0E4C               	movlw	76
  1338  001352  6EB7               	movwf	4023,c	;volatile
  1339                           
  1340                           ;MotorControl.c: 21: PR2 = 0xFF;
  1341  001354  68CB               	setf	4043,c	;volatile
  1342                           
  1343                           ;MotorControl.c: 22: T3CON = 0x00;
  1344  001356  0E00               	movlw	0
  1345  001358  6EB1               	movwf	4017,c	;volatile
  1346                           
  1347                           ;MotorControl.c: 23: T2CON = 0x04;
  1348  00135A  0E04               	movlw	4
  1349  00135C  6ECA               	movwf	4042,c	;volatile
  1350  00135E  0012               	return		;funcret
  1351  001360                     __end_of_MotorDriverInit:
  1352                           	opt stack 0
  1353                           intcon	equ	0xFF2
  1354                           intcon2	equ	0xFF1
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           status	equ	0xFD8
  1358                           
  1359 ;; *************** function _JoystickInit *****************
  1360 ;; Defined at:
  1361 ;;		line 6 in file "Joystick.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;		None               void
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    5
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_initialize
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text10
  1390  00122E                     __ptext10:
  1391                           	opt stack 0
  1392  00122E                     _JoystickInit:
  1393                           	opt stack 24
  1394                           
  1395                           ;Joystick.c: 8: TRISAbits.RA2 = 0;
  1396                           
  1397                           ;incstack = 0
  1398  00122E  9492               	bcf	3986,2,c	;volatile
  1399                           
  1400                           ;Joystick.c: 9: TRISBbits.RB1 = 1;
  1401  001230  8293               	bsf	3987,1,c	;volatile
  1402                           
  1403                           ;Joystick.c: 10: if (PORTBbits.RB1 == 1)
  1404  001232  A281               	btfss	3969,1,c	;volatile
  1405  001234  D003               	goto	l27
  1406                           
  1407                           ;Joystick.c: 11: {
  1408                           ;Joystick.c: 12: PORTAbits.RA2 = 1;
  1409  001236  8480               	bsf	3968,2,c	;volatile
  1410                           
  1411                           ;Joystick.c: 13: JSEnableFlag = 1;
  1412  001238  0E01               	movlw	1
  1413  00123A  D004               	goto	L1
  1414  00123C                     l27:
  1415                           
  1416                           ;Joystick.c: 15: else if (PORTBbits.RB1 == 0)
  1417  00123C  B281               	btfsc	3969,1,c	;volatile
  1418  00123E  D004               	goto	l2363
  1419                           
  1420                           ;Joystick.c: 16: {
  1421                           ;Joystick.c: 17: PORTAbits.RA2 = 0;
  1422  001240  9480               	bcf	3968,2,c	;volatile
  1423                           
  1424                           ;Joystick.c: 18: JSEnableFlag = 0;
  1425  001242  0E00               	movlw	0
  1426  001244                     L1:
  1427  001244  6E5E               	movwf	_JSEnableFlag,c
  1428  001246  D000               	goto	l2363
  1429  001248                     l2363:
  1430                           
  1431                           ;Joystick.c: 19: }
  1432                           ;Joystick.c: 21: ADCON0bits.ADON = 1;
  1433  001248  80C2               	bsf	4034,0,c	;volatile
  1434                           
  1435                           ;Joystick.c: 22: ADCON0 = ADCON0 & 0x01;
  1436  00124A  50C2               	movf	4034,w,c	;volatile
  1437  00124C  0B01               	andlw	1
  1438  00124E  6EC2               	movwf	4034,c	;volatile
  1439                           
  1440                           ;Joystick.c: 23: ADCON1 = 0x0D;
  1441  001250  0E0D               	movlw	13
  1442  001252  6EC1               	movwf	4033,c	;volatile
  1443                           
  1444                           ;Joystick.c: 24: ADCON2 = 0xB4;
  1445  001254  0EB4               	movlw	180
  1446  001256  6EC0               	movwf	4032,c	;volatile
  1447  001258  0012               	return		;funcret
  1448  00125A                     __end_of_JoystickInit:
  1449                           	opt stack 0
  1450                           intcon	equ	0xFF2
  1451                           intcon2	equ	0xFF1
  1452                           postinc0	equ	0xFEE
  1453                           wreg	equ	0xFE8
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _EEPROMInit *****************
  1457 ;; Defined at:
  1458 ;;		line 13 in file "EEPROM.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    8
  1479 ;; This function calls:
  1480 ;;		_EEBootUp
  1481 ;; This function is called by:
  1482 ;;		_initialize
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text11
  1487  0013E2                     __ptext11:
  1488                           	opt stack 0
  1489  0013E2                     _EEPROMInit:
  1490                           	opt stack 21
  1491                           
  1492                           ;EEPROM.c: 15: EECON1bits.EEPGD = 0;
  1493                           
  1494                           ;incstack = 0
  1495  0013E2  9EA6               	bcf	4006,7,c	;volatile
  1496                           
  1497                           ;EEPROM.c: 16: EECON1bits.CFGS = 0;
  1498  0013E4  9CA6               	bcf	4006,6,c	;volatile
  1499                           
  1500                           ;EEPROM.c: 17: EECON1bits.WREN = 1;
  1501  0013E6  84A6               	bsf	4006,2,c	;volatile
  1502                           
  1503                           ;EEPROM.c: 19: EEBootUp();
  1504  0013E8  EC3F  F007         	call	_EEBootUp	;wreg free
  1505                           
  1506                           ;EEPROM.c: 21: HLVDCON = 0x3D;
  1507  0013EC  0E3D               	movlw	61
  1508  0013EE  6ED2               	movwf	4050,c	;volatile
  1509                           
  1510                           ;EEPROM.c: 22: PIE2bits.HLVDIE = 1;
  1511  0013F0  84A0               	bsf	4000,2,c	;volatile
  1512                           
  1513                           ;EEPROM.c: 23: IPR2bits.HLVDIP = 1;
  1514  0013F2  84A2               	bsf	4002,2,c	;volatile
  1515  0013F4  0012               	return		;funcret
  1516  0013F6                     __end_of_EEPROMInit:
  1517                           	opt stack 0
  1518                           intcon	equ	0xFF2
  1519                           intcon2	equ	0xFF1
  1520                           postinc0	equ	0xFEE
  1521                           wreg	equ	0xFE8
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _EEBootUp *****************
  1525 ;; Defined at:
  1526 ;;		line 27 in file "EEPROM.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;		None               void
  1533 ;; Registers used:
  1534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    7
  1547 ;; This function calls:
  1548 ;;		_EEReadChar
  1549 ;;		_EEReadDouble
  1550 ;; This function is called by:
  1551 ;;		_EEPROMInit
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text12
  1556  000E7E                     __ptext12:
  1557                           	opt stack 0
  1558  000E7E                     _EEBootUp:
  1559                           	opt stack 21
  1560                           
  1561                           ;EEPROM.c: 29: if (EEReadChar(0x16))
  1562                           
  1563                           ;incstack = 0
  1564  000E7E  0E16               	movlw	22
  1565  000E80  EC42  F009         	call	_EEReadChar
  1566  000E84  0900               	iorlw	0
  1567  000E86  B4D8               	btfsc	status,2,c
  1568  000E88  D03A               	goto	l412
  1569                           
  1570                           ;EEPROM.c: 30: {
  1571                           ;EEPROM.c: 31: SetAngle = EEReadDouble(0x00);
  1572  000E8A  0E00               	movlw	0
  1573  000E8C  EC80  F007         	call	_EEReadDouble
  1574  000E90  C097  F076         	movff	?_EEReadDouble,_SetAngle
  1575  000E94  C098  F077         	movff	?_EEReadDouble+1,_SetAngle+1
  1576  000E98  C099  F078         	movff	?_EEReadDouble+2,_SetAngle+2
  1577                           
  1578                           ;EEPROM.c: 32: Kp = EEReadDouble(0x03);
  1579  000E9C  0E03               	movlw	3
  1580  000E9E  EC80  F007         	call	_EEReadDouble
  1581  000EA2  C097  F073         	movff	?_EEReadDouble,_Kp
  1582  000EA6  C098  F074         	movff	?_EEReadDouble+1,_Kp+1
  1583  000EAA  C099  F075         	movff	?_EEReadDouble+2,_Kp+2
  1584                           
  1585                           ;EEPROM.c: 33: Ki = EEReadDouble(0x06);
  1586  000EAE  0E06               	movlw	6
  1587  000EB0  EC80  F007         	call	_EEReadDouble
  1588  000EB4  C097  F070         	movff	?_EEReadDouble,_Ki
  1589  000EB8  C098  F071         	movff	?_EEReadDouble+1,_Ki+1
  1590  000EBC  C099  F072         	movff	?_EEReadDouble+2,_Ki+2
  1591                           
  1592                           ;EEPROM.c: 34: Kd = EEReadDouble(0x09);
  1593  000EC0  0E09               	movlw	9
  1594  000EC2  EC80  F007         	call	_EEReadDouble
  1595  000EC6  C097  F06D         	movff	?_EEReadDouble,_Kd
  1596  000ECA  C098  F06E         	movff	?_EEReadDouble+1,_Kd+1
  1597  000ECE  C099  F06F         	movff	?_EEReadDouble+2,_Kd+2
  1598                           
  1599                           ;EEPROM.c: 35: PIDEnableFlag = EEReadChar(0x15);
  1600  000ED2  0E15               	movlw	21
  1601  000ED4  EC42  F009         	call	_EEReadChar
  1602  000ED8  6E5F               	movwf	_PIDEnableFlag,c
  1603                           
  1604                           ;EEPROM.c: 36: if((PIDEnableFlag | 0x01) == 0x01)
  1605  000EDA  505F               	movf	_PIDEnableFlag,w,c
  1606  000EDC  0100               	movlb	0	; () banked
  1607  000EDE  6F9C               	movwf	??_EEBootUp& (0+255),b
  1608  000EE0  6B9D               	clrf	(??_EEBootUp+1)& (0+255),b
  1609  000EE2  0E01               	movlw	1
  1610  000EE4  0100               	movlb	0	; () banked
  1611  000EE6  139C               	iorwf	??_EEBootUp& (0+255),f,b
  1612  000EE8  0E00               	movlw	0
  1613  000EEA  139D               	iorwf	(??_EEBootUp+1)& (0+255),f,b
  1614  000EEC  0100               	movlb	0	; () banked
  1615  000EEE  059C               	decf	??_EEBootUp& (0+255),w,b
  1616  000EF0  0100               	movlb	0	; () banked
  1617  000EF2  119D               	iorwf	(??_EEBootUp+1)& (0+255),w,b
  1618  000EF4  A4D8               	btfss	status,2,c
  1619  000EF6  D003               	goto	l412
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;EEPROM.c: 37: {
  1623                           ;EEPROM.c: 38: PIDEnableFlag = 0x03;
  1624  000EF8  0E03               	movlw	3
  1625  000EFA  6E5F               	movwf	_PIDEnableFlag,c
  1626                           
  1627                           ; BSR set to: 0
  1628  000EFC  D000               	goto	l412
  1629  000EFE                     l412:
  1630  000EFE  0012               	return		;funcret
  1631  000F00                     __end_of_EEBootUp:
  1632                           	opt stack 0
  1633                           intcon	equ	0xFF2
  1634                           intcon2	equ	0xFF1
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           status	equ	0xFD8
  1638                           
  1639 ;; *************** function _EEReadDouble *****************
  1640 ;; Defined at:
  1641 ;;		line 100 in file "EEPROM.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  location        1    wreg     unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  location        1   23[BANK0 ] unsigned char 
  1646 ;;  x               1   24[BANK0 ] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  3   20[BANK0 ] unsigned char 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:        5 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    6
  1663 ;; This function calls:
  1664 ;;		_Busy_eep
  1665 ;;		_EEReassembleDouble
  1666 ;;		_Read_b_eep
  1667 ;; This function is called by:
  1668 ;;		_EEBootUp
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text13
  1673  000F00                     __ptext13:
  1674                           	opt stack 0
  1675  000F00                     _EEReadDouble:
  1676                           	opt stack 21
  1677                           
  1678                           ;incstack = 0
  1679                           ;EEReadDouble@location stored from wreg
  1680  000F00  0100               	movlb	0	; () banked
  1681  000F02  6F9A               	movwf	EEReadDouble@location& (0+255),b
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;EEPROM.c: 102: unsigned char x;
  1685                           ;EEPROM.c: 104: INTCON = INTCON & 0x3F;
  1686  000F04  50F2               	movf	intcon,w,c	;volatile
  1687  000F06  0B3F               	andlw	63
  1688  000F08  6EF2               	movwf	intcon,c	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;EEPROM.c: 106: for (x = 0; x < 3; x++)
  1692  000F0A  0E00               	movlw	0
  1693  000F0C  0100               	movlb	0	; () banked
  1694  000F0E  6F9B               	movwf	EEReadDouble@x& (0+255),b
  1695  000F10                     l1987:
  1696                           
  1697                           ; BSR set to: 0
  1698  000F10  0E02               	movlw	2
  1699  000F12  0100               	movlb	0	; () banked
  1700  000F14  659B               	cpfsgt	EEReadDouble@x& (0+255),b
  1701  000F16  D001               	goto	l1991
  1702                           
  1703                           ; BSR set to: 0
  1704  000F18  D01B               	goto	l1999
  1705  000F1A                     l1991:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;EEPROM.c: 107: {
  1709                           ;EEPROM.c: 108: DDouble[x] = Read_b_eep(location + x);
  1710  000F1A  0100               	movlb	0	; () banked
  1711  000F1C  519B               	movf	EEReadDouble@x& (0+255),w,b
  1712  000F1E  0D01               	mullw	1
  1713  000F20  0E6A               	movlw	low _DDouble
  1714  000F22  24F3               	addwf	prodl,w,c
  1715  000F24  6ED9               	movwf	fsr2l,c
  1716  000F26  0E00               	movlw	high _DDouble
  1717  000F28  20F4               	addwfc	prodh,w,c
  1718  000F2A  6EDA               	movwf	fsr2h,c
  1719  000F2C  0100               	movlb	0	; () banked
  1720  000F2E  519A               	movf	EEReadDouble@location& (0+255),w,b
  1721  000F30  0100               	movlb	0	; () banked
  1722  000F32  259B               	addwf	EEReadDouble@x& (0+255),w,b
  1723  000F34  0100               	movlb	0	; () banked
  1724  000F36  6F91               	movwf	Read_b_eep@badd& (0+255),b
  1725  000F38  0100               	movlb	0	; () banked
  1726  000F3A  6B92               	clrf	(Read_b_eep@badd+1)& (0+255),b
  1727  000F3C  0100               	movlb	0	; () banked
  1728  000F3E  3792               	rlcf	(Read_b_eep@badd+1)& (0+255),f,b
  1729  000F40  ECCD  F009         	call	_Read_b_eep	;wreg free
  1730  000F44  6EDF               	movwf	indf2,c
  1731                           
  1732                           ;EEPROM.c: 109: Busy_eep();
  1733  000F46  EC0D  F00A         	call	_Busy_eep	;wreg free
  1734  000F4A  0100               	movlb	0	; () banked
  1735  000F4C  2B9B               	incf	EEReadDouble@x& (0+255),f,b
  1736  000F4E  D7E0               	goto	l1987
  1737  000F50                     l1999:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;EEPROM.c: 110: }
  1741                           ;EEPROM.c: 112: INTCON = INTCON | 0xC0;
  1742  000F50  50F2               	movf	intcon,w,c	;volatile
  1743  000F52  09C0               	iorlw	192
  1744  000F54  6EF2               	movwf	intcon,c	;volatile
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;EEPROM.c: 114: return EEReassembleDouble();
  1748  000F56  EC63  F008         	call	_EEReassembleDouble	;wreg free
  1749  000F5A  C091  F097         	movff	?_EEReassembleDouble,?_EEReadDouble
  1750  000F5E  C092  F098         	movff	?_EEReassembleDouble+1,?_EEReadDouble+1
  1751  000F62  C093  F099         	movff	?_EEReassembleDouble+2,?_EEReadDouble+2
  1752  000F66  D000               	goto	l428
  1753  000F68                     l428:
  1754  000F68  0012               	return		;funcret
  1755  000F6A                     __end_of_EEReadDouble:
  1756                           	opt stack 0
  1757                           prodh	equ	0xFF4
  1758                           prodl	equ	0xFF3
  1759                           intcon	equ	0xFF2
  1760                           intcon2	equ	0xFF1
  1761                           postinc0	equ	0xFEE
  1762                           wreg	equ	0xFE8
  1763                           indf2	equ	0xFDF
  1764                           fsr2h	equ	0xFDA
  1765                           fsr2l	equ	0xFD9
  1766                           status	equ	0xFD8
  1767                           
  1768 ;; *************** function _EEReassembleDouble *****************
  1769 ;; Defined at:
  1770 ;;		line 62 in file "EEPROM.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  dub             3   17[BANK0 ] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  3   14[BANK0 ] unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        6 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    5
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_EEReadDouble
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text14
  1799  0010C6                     __ptext14:
  1800                           	opt stack 0
  1801  0010C6                     _EEReassembleDouble:
  1802                           	opt stack 21
  1803                           
  1804                           ;EEPROM.c: 64: double dub;
  1805                           ;EEPROM.c: 65: DoublePtr = (unsigned char*) &dub;
  1806                           
  1807                           ;incstack = 0
  1808  0010C6  0E94               	movlw	low EEReassembleDouble@dub
  1809  0010C8  6E5A               	movwf	_DoublePtr,c
  1810  0010CA  0E00               	movlw	high EEReassembleDouble@dub
  1811  0010CC  6E5B               	movwf	_DoublePtr+1,c
  1812                           
  1813                           ;EEPROM.c: 66: DoublePtr[0] = DDouble[0];
  1814  0010CE  C05A  FFD9         	movff	_DoublePtr,fsr2l
  1815  0010D2  C05B  FFDA         	movff	_DoublePtr+1,fsr2h
  1816  0010D6  C06A  FFDF         	movff	_DDouble,indf2
  1817                           
  1818                           ;EEPROM.c: 67: DoublePtr[1] = DDouble[1];
  1819  0010DA  EE20 F001          	lfsr	2,1
  1820  0010DE  505A               	movf	_DoublePtr,w,c
  1821  0010E0  26D9               	addwf	fsr2l,f,c
  1822  0010E2  505B               	movf	_DoublePtr+1,w,c
  1823  0010E4  22DA               	addwfc	fsr2h,f,c
  1824  0010E6  C06B  FFDF         	movff	_DDouble+1,indf2
  1825                           
  1826                           ;EEPROM.c: 68: DoublePtr[2] = DDouble[2];
  1827  0010EA  EE20 F002          	lfsr	2,2
  1828  0010EE  505A               	movf	_DoublePtr,w,c
  1829  0010F0  26D9               	addwf	fsr2l,f,c
  1830  0010F2  505B               	movf	_DoublePtr+1,w,c
  1831  0010F4  22DA               	addwfc	fsr2h,f,c
  1832  0010F6  C06C  FFDF         	movff	_DDouble+2,indf2
  1833                           
  1834                           ;EEPROM.c: 69: return dub;
  1835  0010FA  C094  F091         	movff	EEReassembleDouble@dub,?_EEReassembleDouble
  1836  0010FE  C095  F092         	movff	EEReassembleDouble@dub+1,?_EEReassembleDouble+1
  1837  001102  C096  F093         	movff	EEReassembleDouble@dub+2,?_EEReassembleDouble+2
  1838  001106  D000               	goto	l418
  1839  001108                     l418:
  1840  001108  0012               	return		;funcret
  1841  00110A                     __end_of_EEReassembleDouble:
  1842                           	opt stack 0
  1843                           prodh	equ	0xFF4
  1844                           prodl	equ	0xFF3
  1845                           intcon	equ	0xFF2
  1846                           intcon2	equ	0xFF1
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           indf2	equ	0xFDF
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function _Busy_eep *****************
  1855 ;; Defined at:
  1856 ;;		line 12 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/EEP/busy_eep.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;		None               void
  1863 ;; Registers used:
  1864 ;;		None
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    5
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_EEReadDouble
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text15
  1885  00141A                     __ptext15:
  1886                           	opt stack 0
  1887  00141A                     _Busy_eep:
  1888                           	opt stack 21
  1889                           
  1890                           ;incstack = 0
  1891  00141A  D000               	goto	l442
  1892  00141C                     l442:
  1893  00141C  B2A6               	btfsc	4006,1,c	;volatile
  1894  00141E  D7FE               	goto	l442
  1895  001420  0012               	return		;funcret
  1896  001422                     __end_of_Busy_eep:
  1897                           	opt stack 0
  1898                           prodh	equ	0xFF4
  1899                           prodl	equ	0xFF3
  1900                           intcon	equ	0xFF2
  1901                           intcon2	equ	0xFF1
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           indf2	equ	0xFDF
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function _EEReadChar *****************
  1910 ;; Defined at:
  1911 ;;		line 136 in file "EEPROM.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  location        1    wreg     unsigned char 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  location        1   16[BANK0 ] unsigned char 
  1916 ;;  ch              1   17[BANK0 ] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      unsigned char 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;Total ram usage:        2 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    6
  1933 ;; This function calls:
  1934 ;;		_Read_b_eep
  1935 ;; This function is called by:
  1936 ;;		_EEBootUp
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text16
  1941  001284                     __ptext16:
  1942                           	opt stack 0
  1943  001284                     _EEReadChar:
  1944                           	opt stack 21
  1945                           
  1946                           ;incstack = 0
  1947                           ;EEReadChar@location stored from wreg
  1948  001284  0100               	movlb	0	; () banked
  1949  001286  6F93               	movwf	EEReadChar@location& (0+255),b
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;EEPROM.c: 138: unsigned char ch;
  1953                           ;EEPROM.c: 140: INTCON = INTCON & 0x3F;
  1954  001288  50F2               	movf	intcon,w,c	;volatile
  1955  00128A  0B3F               	andlw	63
  1956  00128C  6EF2               	movwf	intcon,c	;volatile
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;EEPROM.c: 142: ch = Read_b_eep(location);
  1960  00128E  C093  F091         	movff	EEReadChar@location,Read_b_eep@badd
  1961  001292  0100               	movlb	0	; () banked
  1962  001294  6B92               	clrf	(Read_b_eep@badd+1)& (0+255),b
  1963  001296  ECCD  F009         	call	_Read_b_eep	;wreg free
  1964  00129A  0100               	movlb	0	; () banked
  1965  00129C  6F94               	movwf	EEReadChar@ch& (0+255),b
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;EEPROM.c: 144: INTCON = INTCON | 0xC0;
  1969  00129E  50F2               	movf	intcon,w,c	;volatile
  1970  0012A0  09C0               	iorlw	192
  1971  0012A2  6EF2               	movwf	intcon,c	;volatile
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;EEPROM.c: 146: return ch;
  1975  0012A4  0100               	movlb	0	; () banked
  1976  0012A6  5194               	movf	EEReadChar@ch& (0+255),w,b
  1977  0012A8  D000               	goto	l434
  1978  0012AA                     l434:
  1979                           
  1980                           ; BSR set to: 0
  1981  0012AA  0012               	return		;funcret
  1982  0012AC                     __end_of_EEReadChar:
  1983                           	opt stack 0
  1984                           prodh	equ	0xFF4
  1985                           prodl	equ	0xFF3
  1986                           intcon	equ	0xFF2
  1987                           intcon2	equ	0xFF1
  1988                           postinc0	equ	0xFEE
  1989                           wreg	equ	0xFE8
  1990                           indf2	equ	0xFDF
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _Read_b_eep *****************
  1996 ;; Defined at:
  1997 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/EEP/read_B.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  badd            2   14[BANK0 ] unsigned int 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2011 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;Total ram usage:        2 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    5
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_EEReadDouble
  2022 ;;		_EEReadChar
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text17
  2027  00139A                     __ptext17:
  2028                           	opt stack 0
  2029  00139A                     _Read_b_eep:
  2030                           	opt stack 21
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;incstack = 0
  2034  00139A  0100               	movlb	0	; () banked
  2035  00139C  5192               	movf	(Read_b_eep@badd+1)& (0+255),w,b
  2036  00139E  0B03               	andlw	3
  2037  0013A0  6EAA               	movwf	4010,c	;volatile
  2038                           
  2039                           ; BSR set to: 0
  2040  0013A2  C091  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  2041                           
  2042                           ; BSR set to: 0
  2043  0013A6  9CA6               	bcf	4006,6,c	;volatile
  2044                           
  2045                           ; BSR set to: 0
  2046  0013A8  9EA6               	bcf	4006,7,c	;volatile
  2047                           
  2048                           ; BSR set to: 0
  2049  0013AA  80A6               	bsf	4006,0,c	;volatile
  2050                           
  2051                           ; BSR set to: 0
  2052  0013AC  F000               	nop	
  2053  0013AE  F000               	nop	
  2054  0013B0  50A8               	movf	4008,w,c	;volatile
  2055  0013B2  D000               	goto	l458
  2056  0013B4                     l458:
  2057  0013B4  0012               	return		;funcret
  2058  0013B6                     __end_of_Read_b_eep:
  2059                           	opt stack 0
  2060                           prodh	equ	0xFF4
  2061                           prodl	equ	0xFF3
  2062                           intcon	equ	0xFF2
  2063                           intcon2	equ	0xFF1
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           indf2	equ	0xFDF
  2067                           fsr2h	equ	0xFDA
  2068                           fsr2l	equ	0xFD9
  2069                           status	equ	0xFD8
  2070                           
  2071 ;; *************** function _ISR *****************
  2072 ;; Defined at:
  2073 ;;		line 47 in file "RTDuC.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;Total ram usage:       14 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    4
  2094 ;; This function calls:
  2095 ;;		_HLVDInt
  2096 ;;		_INT0Int
  2097 ;;		_TMR0Int
  2098 ;; This function is called by:
  2099 ;;		Interrupt level 2
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	intcode
  2104  000008                     __pintcode:
  2105                           	opt stack 0
  2106  000008                     _ISR:
  2107                           	opt stack 21
  2108                           
  2109                           ;incstack = 0
  2110  000008  CFFA F083          	movff	pclath,??_ISR
  2111  00000C  CFFB F084          	movff	pclatu,??_ISR+1
  2112  000010  CFE9 F085          	movff	fsr0l,??_ISR+2
  2113  000014  EDF5  F006         	call	int_func,f	;refresh shadow registers
  2114                           pclatu	equ	0xFFB
  2115                           pclath	equ	0xFFA
  2116                           prodh	equ	0xFF4
  2117                           prodl	equ	0xFF3
  2118                           intcon	equ	0xFF2
  2119                           intcon2	equ	0xFF1
  2120                           postinc0	equ	0xFEE
  2121                           fsr0l	equ	0xFE9
  2122                           wreg	equ	0xFE8
  2123                           indf2	equ	0xFDF
  2124                           fsr2h	equ	0xFDA
  2125                           fsr2l	equ	0xFD9
  2126                           status	equ	0xFD8
  2127                           
  2128                           	psect	intcode_body
  2129  000DEA                     __pintcode_body:
  2130                           	opt stack 21
  2131  000DEA                     int_func:
  2132                           	opt stack 21
  2133  000DEA  0006               	pop		; remove dummy address from shadow register refresh
  2134  000DEC  CFEA F086          	movff	fsr0h,??_ISR+3
  2135  000DF0  CFE1 F087          	movff	fsr1l,??_ISR+4
  2136  000DF4  CFE2 F088          	movff	fsr1h,??_ISR+5
  2137  000DF8  CFD9 F089          	movff	fsr2l,??_ISR+6
  2138  000DFC  CFDA F08A          	movff	fsr2h,??_ISR+7
  2139  000E00  CFF3 F08B          	movff	prodl,??_ISR+8
  2140  000E04  CFF4 F08C          	movff	prodh,??_ISR+9
  2141  000E08  CFF6 F08D          	movff	tblptrl,??_ISR+10
  2142  000E0C  CFF7 F08E          	movff	tblptrh,??_ISR+11
  2143  000E10  CFF8 F08F          	movff	tblptru,??_ISR+12
  2144  000E14  CFF5 F090          	movff	tablat,??_ISR+13
  2145                           
  2146                           ;RTDuC.c: 49: if(INTCONbits.TMR0IF == 1)
  2147  000E18  A4F2               	btfss	intcon,2,c	;volatile
  2148  000E1A  D003               	goto	i2l2633
  2149                           
  2150                           ;RTDuC.c: 50: {
  2151                           ;RTDuC.c: 51: TMR0Int();
  2152  000E1C  EC3D  F008         	call	_TMR0Int	;wreg free
  2153  000E20  D000               	goto	i2l2633
  2154  000E22                     i2l2633:
  2155                           
  2156                           ;RTDuC.c: 52: }
  2157                           ;RTDuC.c: 54: if(INTCONbits.INT0IF == 1)
  2158  000E22  A2F2               	btfss	intcon,1,c	;volatile
  2159  000E24  D003               	goto	i2l2637
  2160                           
  2161                           ;RTDuC.c: 55: {
  2162                           ;RTDuC.c: 56: INT0Int();
  2163  000E26  EC11  F00A         	call	_INT0Int	;wreg free
  2164  000E2A  D000               	goto	i2l2637
  2165  000E2C                     i2l2637:
  2166                           
  2167                           ;RTDuC.c: 57: }
  2168                           ;RTDuC.c: 59: if(PIR2bits.HLVDIF == 1)
  2169  000E2C  A4A1               	btfss	4001,2,c	;volatile
  2170  000E2E  D006               	goto	i2l2643
  2171                           
  2172                           ;RTDuC.c: 60: {
  2173                           ;RTDuC.c: 61: PORTAbits.RA4 = 0;
  2174  000E30  9880               	bcf	3968,4,c	;volatile
  2175                           
  2176                           ;RTDuC.c: 62: PORTAbits.RA3 = 0;
  2177  000E32  9680               	bcf	3968,3,c	;volatile
  2178                           
  2179                           ;RTDuC.c: 63: PORTAbits.RA2 = 0;
  2180  000E34  9480               	bcf	3968,2,c	;volatile
  2181                           
  2182                           ;RTDuC.c: 64: HLVDInt();
  2183  000E36  EC4E  F006         	call	_HLVDInt	;wreg free
  2184  000E3A  D000               	goto	i2l2643
  2185  000E3C                     i2l2643:
  2186                           
  2187                           ;RTDuC.c: 65: }
  2188                           ;RTDuC.c: 67: if(PIR2bits.OSCFIF == 1)
  2189  000E3C  AEA1               	btfss	4001,7,c	;volatile
  2190  000E3E  D002               	goto	i2l271
  2191  000E40  00FF               	reset		;# 
  2192  000E42  D000               	goto	i2l271
  2193  000E44                     i2l271:
  2194  000E44  C090  FFF5         	movff	??_ISR+13,tablat
  2195  000E48  C08F  FFF8         	movff	??_ISR+12,tblptru
  2196  000E4C  C08E  FFF7         	movff	??_ISR+11,tblptrh
  2197  000E50  C08D  FFF6         	movff	??_ISR+10,tblptrl
  2198  000E54  C08C  FFF4         	movff	??_ISR+9,prodh
  2199  000E58  C08B  FFF3         	movff	??_ISR+8,prodl
  2200  000E5C  C08A  FFDA         	movff	??_ISR+7,fsr2h
  2201  000E60  C089  FFD9         	movff	??_ISR+6,fsr2l
  2202  000E64  C088  FFE2         	movff	??_ISR+5,fsr1h
  2203  000E68  C087  FFE1         	movff	??_ISR+4,fsr1l
  2204  000E6C  C086  FFEA         	movff	??_ISR+3,fsr0h
  2205  000E70  C085  FFE9         	movff	??_ISR+2,fsr0l
  2206  000E74  C084  FFFB         	movff	??_ISR+1,pclatu
  2207  000E78  C083  FFFA         	movff	??_ISR,pclath
  2208  000E7C  0011               	retfie		f
  2209  000E7E                     __end_of_ISR:
  2210                           	opt stack 0
  2211                           pclatu	equ	0xFFB
  2212                           pclath	equ	0xFFA
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           prodh	equ	0xFF4
  2218                           prodl	equ	0xFF3
  2219                           intcon	equ	0xFF2
  2220                           intcon2	equ	0xFF1
  2221                           postinc0	equ	0xFEE
  2222                           fsr0h	equ	0xFEA
  2223                           fsr0l	equ	0xFE9
  2224                           wreg	equ	0xFE8
  2225                           fsr1h	equ	0xFE2
  2226                           fsr1l	equ	0xFE1
  2227                           indf2	equ	0xFDF
  2228                           fsr2h	equ	0xFDA
  2229                           fsr2l	equ	0xFD9
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function _TMR0Int *****************
  2233 ;; Defined at:
  2234 ;;		line 89 in file "PID.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;		None               void
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    3
  2255 ;; This function calls:
  2256 ;;		_ImplementPIDMotion
  2257 ;;		_RTD2Angle
  2258 ;;		_calculatePID
  2259 ;; This function is called by:
  2260 ;;		_ISR
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text19
  2265  00107A                     __ptext19:
  2266                           	opt stack 0
  2267  00107A                     _TMR0Int:
  2268                           	opt stack 21
  2269                           
  2270                           ;PID.c: 91: CurrentAngle = RTD2Angle(ReadRTDpos);
  2271                           
  2272                           ;incstack = 0
  2273  00107A  0E00               	movlw	0
  2274  00107C  6E28               	movwf	RTD2Angle@RTDAngle+1,c
  2275  00107E  0E00               	movlw	0
  2276  001080  6E27               	movwf	RTD2Angle@RTDAngle,c
  2277  001082  ECE3  F008         	call	_RTD2Angle	;wreg free
  2278  001086  C027  F064         	movff	?_RTD2Angle,_CurrentAngle
  2279  00108A  C028  F065         	movff	?_RTD2Angle+1,_CurrentAngle+1
  2280  00108E  C029  F066         	movff	?_RTD2Angle+2,_CurrentAngle+2
  2281                           
  2282                           ;PID.c: 92: calculatePID(CurrentAngle, SetAngle);
  2283  001092  C064  F042         	movff	_CurrentAngle,calculatePID@angle
  2284  001096  C065  F043         	movff	_CurrentAngle+1,calculatePID@angle+1
  2285  00109A  C066  F044         	movff	_CurrentAngle+2,calculatePID@angle+2
  2286  00109E  C076  F045         	movff	_SetAngle,calculatePID@setpoint
  2287  0010A2  C077  F046         	movff	_SetAngle+1,calculatePID@setpoint+1
  2288  0010A6  C078  F047         	movff	_SetAngle+2,calculatePID@setpoint+2
  2289  0010AA  EC0E  F000         	call	_calculatePID	;wreg free
  2290                           
  2291                           ;PID.c: 93: ImplementPIDMotion(motorInput);
  2292  0010AE  C05C  F005         	movff	_motorInput,ImplementPIDMotion@PIDValue
  2293  0010B2  C05D  F006         	movff	_motorInput+1,ImplementPIDMotion@PIDValue+1
  2294  0010B6  ECE5  F007         	call	_ImplementPIDMotion	;wreg free
  2295                           
  2296                           ;PID.c: 94: TMR0H = 0xDB;
  2297  0010BA  0EDB               	movlw	219
  2298  0010BC  6ED7               	movwf	4055,c	;volatile
  2299                           
  2300                           ;PID.c: 95: TMR0L = 0x60;
  2301  0010BE  0E60               	movlw	96
  2302  0010C0  6ED6               	movwf	4054,c	;volatile
  2303                           
  2304                           ;PID.c: 97: INTCONbits.TMR0IF = 0;
  2305  0010C2  94F2               	bcf	intcon,2,c	;volatile
  2306  0010C4  0012               	return		;funcret
  2307  0010C6                     __end_of_TMR0Int:
  2308                           	opt stack 0
  2309                           pclatu	equ	0xFFB
  2310                           pclath	equ	0xFFA
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           intcon2	equ	0xFF1
  2319                           postinc0	equ	0xFEE
  2320                           fsr0h	equ	0xFEA
  2321                           fsr0l	equ	0xFE9
  2322                           wreg	equ	0xFE8
  2323                           fsr1h	equ	0xFE2
  2324                           fsr1l	equ	0xFE1
  2325                           indf2	equ	0xFDF
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _calculatePID *****************
  2331 ;; Defined at:
  2332 ;;		line 29 in file "PID.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  angle           3   65[COMRAM] unsigned char 
  2335 ;;  setpoint        3   68[COMRAM] unsigned char 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  derErr          3   71[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;		None               void
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:       18 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    2
  2354 ;; This function calls:
  2355 ;;		___ftadd
  2356 ;;		___ftdiv
  2357 ;;		___ftge
  2358 ;;		___ftmul
  2359 ;;		___ftneg
  2360 ;;		___fttol
  2361 ;; This function is called by:
  2362 ;;		_TMR0Int
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text20
  2367  00001C                     __ptext20:
  2368                           	opt stack 0
  2369  00001C                     _calculatePID:
  2370                           	opt stack 21
  2371                           
  2372                           ;PID.c: 31: double derErr;
  2373                           ;PID.c: 32: if((PIDEnableFlag & 0x02) == 0x02)
  2374                           
  2375                           ;incstack = 0
  2376  00001C  A25F               	btfss	_PIDEnableFlag,1,c
  2377  00001E  D022               	goto	i2l2403
  2378                           
  2379                           ;PID.c: 33: {
  2380                           ;PID.c: 34: StartAngle = angle;
  2381  000020  C042  F054         	movff	calculatePID@angle,_StartAngle
  2382  000024  C043  F055         	movff	calculatePID@angle+1,_StartAngle+1
  2383  000028  C044  F056         	movff	calculatePID@angle+2,_StartAngle+2
  2384                           
  2385                           ;PID.c: 35: err = 0;
  2386  00002C  0E00               	movlw	0
  2387  00002E  6E57               	movwf	_err,c
  2388  000030  0E00               	movlw	0
  2389  000032  6E58               	movwf	_err+1,c
  2390  000034  0E00               	movlw	0
  2391  000036  6E59               	movwf	_err+2,c
  2392                           
  2393                           ;PID.c: 36: prevErr = 0;
  2394  000038  0E00               	movlw	0
  2395  00003A  0100               	movlb	0	; () banked
  2396  00003C  6F7C               	movwf	_prevErr& (0+255),b
  2397  00003E  0E00               	movlw	0
  2398  000040  0100               	movlb	0	; () banked
  2399  000042  6F7D               	movwf	(_prevErr+1)& (0+255),b
  2400  000044  0E00               	movlw	0
  2401  000046  0100               	movlb	0	; () banked
  2402  000048  6F7E               	movwf	(_prevErr+2)& (0+255),b
  2403                           
  2404                           ;PID.c: 37: intErr = 0;
  2405  00004A  0E00               	movlw	0
  2406  00004C  0100               	movlb	0	; () banked
  2407  00004E  6F79               	movwf	_intErr& (0+255),b
  2408  000050  0E00               	movlw	0
  2409  000052  0100               	movlb	0	; () banked
  2410  000054  6F7A               	movwf	(_intErr+1)& (0+255),b
  2411  000056  0E00               	movlw	0
  2412  000058  0100               	movlb	0	; () banked
  2413  00005A  6F7B               	movwf	(_intErr+2)& (0+255),b
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;PID.c: 38: PIDEnableFlag = PIDEnableFlag & 0x01;
  2417  00005C  505F               	movf	_PIDEnableFlag,w,c
  2418  00005E  0B01               	andlw	1
  2419  000060  6E5F               	movwf	_PIDEnableFlag,c
  2420  000062  D000               	goto	i2l2403
  2421  000064                     i2l2403:
  2422                           
  2423                           ;PID.c: 39: }
  2424                           ;PID.c: 41: if(((StartAngle - setpoint) > 180) || ((StartAngle - setpoint) < -180))
  2425  000064  0E00               	movlw	0
  2426  000066  6E33               	movwf	___ftge@ff1,c
  2427  000068  0E34               	movlw	52
  2428  00006A  6E34               	movwf	___ftge@ff1+1,c
  2429  00006C  0E43               	movlw	67
  2430  00006E  6E35               	movwf	___ftge@ff1+2,c
  2431  000070  C054  F02A         	movff	_StartAngle,___ftadd@f2
  2432  000074  C055  F02B         	movff	_StartAngle+1,___ftadd@f2+1
  2433  000078  C056  F02C         	movff	_StartAngle+2,___ftadd@f2+2
  2434  00007C  C045  F001         	movff	calculatePID@setpoint,___ftneg@f1
  2435  000080  C046  F002         	movff	calculatePID@setpoint+1,___ftneg@f1+1
  2436  000084  C047  F003         	movff	calculatePID@setpoint+2,___ftneg@f1+2
  2437  000088  EC7D  F009         	call	___ftneg	;wreg free
  2438  00008C  C001  F027         	movff	?___ftneg,___ftadd@f1
  2439  000090  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2440  000094  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2441  000098  ECA9  F003         	call	___ftadd	;wreg free
  2442  00009C  C027  F036         	movff	?___ftadd,___ftge@ff2
  2443  0000A0  C028  F037         	movff	?___ftadd+1,___ftge@ff2+1
  2444  0000A4  C029  F038         	movff	?___ftadd+2,___ftge@ff2+2
  2445  0000A8  ECAA  F006         	call	___ftge	;wreg free
  2446  0000AC  A0D8               	btfss	status,0,c
  2447  0000AE  D026               	goto	i2l2407
  2448  0000B0  C054  F02A         	movff	_StartAngle,___ftadd@f2
  2449  0000B4  C055  F02B         	movff	_StartAngle+1,___ftadd@f2+1
  2450  0000B8  C056  F02C         	movff	_StartAngle+2,___ftadd@f2+2
  2451  0000BC  C045  F001         	movff	calculatePID@setpoint,___ftneg@f1
  2452  0000C0  C046  F002         	movff	calculatePID@setpoint+1,___ftneg@f1+1
  2453  0000C4  C047  F003         	movff	calculatePID@setpoint+2,___ftneg@f1+2
  2454  0000C8  EC7D  F009         	call	___ftneg	;wreg free
  2455  0000CC  C001  F027         	movff	?___ftneg,___ftadd@f1
  2456  0000D0  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2457  0000D4  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2458  0000D8  ECA9  F003         	call	___ftadd	;wreg free
  2459  0000DC  C027  F033         	movff	?___ftadd,___ftge@ff1
  2460  0000E0  C028  F034         	movff	?___ftadd+1,___ftge@ff1+1
  2461  0000E4  C029  F035         	movff	?___ftadd+2,___ftge@ff1+2
  2462  0000E8  0E00               	movlw	0
  2463  0000EA  6E36               	movwf	___ftge@ff2,c
  2464  0000EC  0E34               	movlw	52
  2465  0000EE  6E37               	movwf	___ftge@ff2+1,c
  2466  0000F0  0EC3               	movlw	195
  2467  0000F2  6E38               	movwf	___ftge@ff2+2,c
  2468  0000F4  ECAA  F006         	call	___ftge	;wreg free
  2469  0000F8  B0D8               	btfsc	status,0,c
  2470  0000FA  D0F2               	goto	i2l2423
  2471  0000FC                     i2l2407:
  2472                           
  2473                           ;PID.c: 42: {
  2474                           ;PID.c: 43: if((StartAngle - setpoint) > 180)
  2475  0000FC  0E00               	movlw	0
  2476  0000FE  6E33               	movwf	___ftge@ff1,c
  2477  000100  0E34               	movlw	52
  2478  000102  6E34               	movwf	___ftge@ff1+1,c
  2479  000104  0E43               	movlw	67
  2480  000106  6E35               	movwf	___ftge@ff1+2,c
  2481  000108  C054  F02A         	movff	_StartAngle,___ftadd@f2
  2482  00010C  C055  F02B         	movff	_StartAngle+1,___ftadd@f2+1
  2483  000110  C056  F02C         	movff	_StartAngle+2,___ftadd@f2+2
  2484  000114  C045  F001         	movff	calculatePID@setpoint,___ftneg@f1
  2485  000118  C046  F002         	movff	calculatePID@setpoint+1,___ftneg@f1+1
  2486  00011C  C047  F003         	movff	calculatePID@setpoint+2,___ftneg@f1+2
  2487  000120  EC7D  F009         	call	___ftneg	;wreg free
  2488  000124  C001  F027         	movff	?___ftneg,___ftadd@f1
  2489  000128  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2490  00012C  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2491  000130  ECA9  F003         	call	___ftadd	;wreg free
  2492  000134  C027  F036         	movff	?___ftadd,___ftge@ff2
  2493  000138  C028  F037         	movff	?___ftadd+1,___ftge@ff2+1
  2494  00013C  C029  F038         	movff	?___ftadd+2,___ftge@ff2+2
  2495  000140  ECAA  F006         	call	___ftge	;wreg free
  2496  000144  B0D8               	btfsc	status,0,c
  2497  000146  D053               	goto	i2l2415
  2498                           
  2499                           ;PID.c: 44: {
  2500                           ;PID.c: 45: if(angle > StartAngle)
  2501  000148  C054  F033         	movff	_StartAngle,___ftge@ff1
  2502  00014C  C055  F034         	movff	_StartAngle+1,___ftge@ff1+1
  2503  000150  C056  F035         	movff	_StartAngle+2,___ftge@ff1+2
  2504  000154  C042  F036         	movff	calculatePID@angle,___ftge@ff2
  2505  000158  C043  F037         	movff	calculatePID@angle+1,___ftge@ff2+1
  2506  00015C  C044  F038         	movff	calculatePID@angle+2,___ftge@ff2+2
  2507  000160  ECAA  F006         	call	___ftge	;wreg free
  2508  000164  B0D8               	btfsc	status,0,c
  2509  000166  D02B               	goto	i2l2413
  2510                           
  2511                           ;PID.c: 46: err = 360 - angle + setpoint;
  2512  000168  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2513  00016C  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2514  000170  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2515  000174  C042  F001         	movff	calculatePID@angle,___ftneg@f1
  2516  000178  C043  F002         	movff	calculatePID@angle+1,___ftneg@f1+1
  2517  00017C  C044  F003         	movff	calculatePID@angle+2,___ftneg@f1+2
  2518  000180  EC7D  F009         	call	___ftneg	;wreg free
  2519  000184  C001  F027         	movff	?___ftneg,___ftadd@f1
  2520  000188  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2521  00018C  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2522  000190  ECA9  F003         	call	___ftadd	;wreg free
  2523  000194  C027  F051         	movff	?___ftadd,_calculatePID$3396
  2524  000198  C028  F052         	movff	?___ftadd+1,_calculatePID$3396+1
  2525  00019C  C029  F053         	movff	?___ftadd+2,_calculatePID$3396+2
  2526                           
  2527                           ;PID.c: 46: err = 360 - angle + setpoint;
  2528  0001A0  C051  F027         	movff	_calculatePID$3396,___ftadd@f1
  2529  0001A4  C052  F028         	movff	_calculatePID$3396+1,___ftadd@f1+1
  2530  0001A8  C053  F029         	movff	_calculatePID$3396+2,___ftadd@f1+2
  2531  0001AC  0E00               	movlw	0
  2532  0001AE  6E2A               	movwf	___ftadd@f2,c
  2533  0001B0  0EB4               	movlw	180
  2534  0001B2  6E2B               	movwf	___ftadd@f2+1,c
  2535  0001B4  0E43               	movlw	67
  2536  0001B6  6E2C               	movwf	___ftadd@f2+2,c
  2537  0001B8  ECA9  F003         	call	___ftadd	;wreg free
  2538  0001BC  D1FD               	goto	L8
  2539  0001BE                     i2l2413:
  2540                           
  2541                           ;PID.c: 47: else
  2542                           ;PID.c: 48: err = setpoint - angle;
  2543  0001BE  C042  F001         	movff	calculatePID@angle,___ftneg@f1
  2544  0001C2  C043  F002         	movff	calculatePID@angle+1,___ftneg@f1+1
  2545  0001C6  C044  F003         	movff	calculatePID@angle+2,___ftneg@f1+2
  2546  0001CA  EC7D  F009         	call	___ftneg	;wreg free
  2547  0001CE  C001  F027         	movff	?___ftneg,___ftadd@f1
  2548  0001D2  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2549  0001D6  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2550  0001DA  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2551  0001DE  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2552  0001E2  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2553  0001E6  ECA9  F003         	call	___ftadd	;wreg free
  2554  0001EA  D1E6               	goto	L8
  2555                           
  2556                           ;PID.c: 49: }
  2557  0001EC  D1EC               	goto	i2l158
  2558  0001EE                     i2l2415:
  2559                           
  2560                           ;PID.c: 50: else if((StartAngle - setpoint) < -180)
  2561  0001EE  C054  F02A         	movff	_StartAngle,___ftadd@f2
  2562  0001F2  C055  F02B         	movff	_StartAngle+1,___ftadd@f2+1
  2563  0001F6  C056  F02C         	movff	_StartAngle+2,___ftadd@f2+2
  2564  0001FA  C045  F001         	movff	calculatePID@setpoint,___ftneg@f1
  2565  0001FE  C046  F002         	movff	calculatePID@setpoint+1,___ftneg@f1+1
  2566  000202  C047  F003         	movff	calculatePID@setpoint+2,___ftneg@f1+2
  2567  000206  EC7D  F009         	call	___ftneg	;wreg free
  2568  00020A  C001  F027         	movff	?___ftneg,___ftadd@f1
  2569  00020E  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2570  000212  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2571  000216  ECA9  F003         	call	___ftadd	;wreg free
  2572  00021A  C027  F033         	movff	?___ftadd,___ftge@ff1
  2573  00021E  C028  F034         	movff	?___ftadd+1,___ftge@ff1+1
  2574  000222  C029  F035         	movff	?___ftadd+2,___ftge@ff1+2
  2575  000226  0E00               	movlw	0
  2576  000228  6E36               	movwf	___ftge@ff2,c
  2577  00022A  0E34               	movlw	52
  2578  00022C  6E37               	movwf	___ftge@ff2+1,c
  2579  00022E  0EC3               	movlw	195
  2580  000230  6E38               	movwf	___ftge@ff2+2,c
  2581  000232  ECAA  F006         	call	___ftge	;wreg free
  2582  000236  B0D8               	btfsc	status,0,c
  2583  000238  D1C6               	goto	i2l158
  2584                           
  2585                           ;PID.c: 51: {
  2586                           ;PID.c: 52: if(angle < StartAngle)
  2587  00023A  C042  F033         	movff	calculatePID@angle,___ftge@ff1
  2588  00023E  C043  F034         	movff	calculatePID@angle+1,___ftge@ff1+1
  2589  000242  C044  F035         	movff	calculatePID@angle+2,___ftge@ff1+2
  2590  000246  C054  F036         	movff	_StartAngle,___ftge@ff2
  2591  00024A  C055  F037         	movff	_StartAngle+1,___ftge@ff2+1
  2592  00024E  C056  F038         	movff	_StartAngle+2,___ftge@ff2+2
  2593  000252  ECAA  F006         	call	___ftge	;wreg free
  2594  000256  B0D8               	btfsc	status,0,c
  2595  000258  D02B               	goto	i2l2421
  2596                           
  2597                           ;PID.c: 53: err = setpoint - 360 - angle;
  2598  00025A  0E00               	movlw	0
  2599  00025C  6E2A               	movwf	___ftadd@f2,c
  2600  00025E  0EB4               	movlw	180
  2601  000260  6E2B               	movwf	___ftadd@f2+1,c
  2602  000262  0E43               	movlw	67
  2603  000264  6E2C               	movwf	___ftadd@f2+2,c
  2604  000266  C042  F027         	movff	calculatePID@angle,___ftadd@f1
  2605  00026A  C043  F028         	movff	calculatePID@angle+1,___ftadd@f1+1
  2606  00026E  C044  F029         	movff	calculatePID@angle+2,___ftadd@f1+2
  2607  000272  ECA9  F003         	call	___ftadd	;wreg free
  2608  000276  C027  F001         	movff	?___ftadd,___ftneg@f1
  2609  00027A  C028  F002         	movff	?___ftadd+1,___ftneg@f1+1
  2610  00027E  C029  F003         	movff	?___ftadd+2,___ftneg@f1+2
  2611  000282  EC7D  F009         	call	___ftneg	;wreg free
  2612  000286  C001  F051         	movff	?___ftneg,_calculatePID$3396
  2613  00028A  C002  F052         	movff	?___ftneg+1,_calculatePID$3396+1
  2614  00028E  C003  F053         	movff	?___ftneg+2,_calculatePID$3396+2
  2615                           
  2616                           ;PID.c: 53: err = setpoint - 360 - angle;
  2617  000292  C051  F027         	movff	_calculatePID$3396,___ftadd@f1
  2618  000296  C052  F028         	movff	_calculatePID$3396+1,___ftadd@f1+1
  2619  00029A  C053  F029         	movff	_calculatePID$3396+2,___ftadd@f1+2
  2620  00029E  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2621  0002A2  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2622  0002A6  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2623  0002AA  ECA9  F003         	call	___ftadd	;wreg free
  2624  0002AE  D184               	goto	L8
  2625  0002B0                     i2l2421:
  2626                           
  2627                           ;PID.c: 54: else
  2628                           ;PID.c: 55: err = setpoint - angle;
  2629  0002B0  C042  F001         	movff	calculatePID@angle,___ftneg@f1
  2630  0002B4  C043  F002         	movff	calculatePID@angle+1,___ftneg@f1+1
  2631  0002B8  C044  F003         	movff	calculatePID@angle+2,___ftneg@f1+2
  2632  0002BC  EC7D  F009         	call	___ftneg	;wreg free
  2633  0002C0  C001  F027         	movff	?___ftneg,___ftadd@f1
  2634  0002C4  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2635  0002C8  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2636  0002CC  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2637  0002D0  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2638  0002D4  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2639  0002D8  ECA9  F003         	call	___ftadd	;wreg free
  2640  0002DC  D16D               	goto	L8
  2641                           
  2642                           ;PID.c: 56: }
  2643                           ;PID.c: 57: }
  2644  0002DE  D173               	goto	i2l158
  2645  0002E0                     i2l2423:
  2646                           
  2647                           ;PID.c: 58: else if(((StartAngle - setpoint) <= 180) && ((StartAngle - setpoint) > -180)
      +                          )
  2648  0002E0  0E00               	movlw	0
  2649  0002E2  6E33               	movwf	___ftge@ff1,c
  2650  0002E4  0E34               	movlw	52
  2651  0002E6  6E34               	movwf	___ftge@ff1+1,c
  2652  0002E8  0E43               	movlw	67
  2653  0002EA  6E35               	movwf	___ftge@ff1+2,c
  2654  0002EC  C054  F02A         	movff	_StartAngle,___ftadd@f2
  2655  0002F0  C055  F02B         	movff	_StartAngle+1,___ftadd@f2+1
  2656  0002F4  C056  F02C         	movff	_StartAngle+2,___ftadd@f2+2
  2657  0002F8  C045  F001         	movff	calculatePID@setpoint,___ftneg@f1
  2658  0002FC  C046  F002         	movff	calculatePID@setpoint+1,___ftneg@f1+1
  2659  000300  C047  F003         	movff	calculatePID@setpoint+2,___ftneg@f1+2
  2660  000304  EC7D  F009         	call	___ftneg	;wreg free
  2661  000308  C001  F027         	movff	?___ftneg,___ftadd@f1
  2662  00030C  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2663  000310  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2664  000314  ECA9  F003         	call	___ftadd	;wreg free
  2665  000318  C027  F036         	movff	?___ftadd,___ftge@ff2
  2666  00031C  C028  F037         	movff	?___ftadd+1,___ftge@ff2+1
  2667  000320  C029  F038         	movff	?___ftadd+2,___ftge@ff2+2
  2668  000324  ECAA  F006         	call	___ftge	;wreg free
  2669  000328  A0D8               	btfss	status,0,c
  2670  00032A  D14D               	goto	i2l158
  2671  00032C  0E00               	movlw	0
  2672  00032E  6E33               	movwf	___ftge@ff1,c
  2673  000330  0E34               	movlw	52
  2674  000332  6E34               	movwf	___ftge@ff1+1,c
  2675  000334  0EC3               	movlw	195
  2676  000336  6E35               	movwf	___ftge@ff1+2,c
  2677  000338  C054  F02A         	movff	_StartAngle,___ftadd@f2
  2678  00033C  C055  F02B         	movff	_StartAngle+1,___ftadd@f2+1
  2679  000340  C056  F02C         	movff	_StartAngle+2,___ftadd@f2+2
  2680  000344  C045  F001         	movff	calculatePID@setpoint,___ftneg@f1
  2681  000348  C046  F002         	movff	calculatePID@setpoint+1,___ftneg@f1+1
  2682  00034C  C047  F003         	movff	calculatePID@setpoint+2,___ftneg@f1+2
  2683  000350  EC7D  F009         	call	___ftneg	;wreg free
  2684  000354  C001  F027         	movff	?___ftneg,___ftadd@f1
  2685  000358  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2686  00035C  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2687  000360  ECA9  F003         	call	___ftadd	;wreg free
  2688  000364  C027  F036         	movff	?___ftadd,___ftge@ff2
  2689  000368  C028  F037         	movff	?___ftadd+1,___ftge@ff2+1
  2690  00036C  C029  F038         	movff	?___ftadd+2,___ftge@ff2+2
  2691  000370  ECAA  F006         	call	___ftge	;wreg free
  2692  000374  B0D8               	btfsc	status,0,c
  2693  000376  D127               	goto	i2l158
  2694                           
  2695                           ;PID.c: 59: {
  2696                           ;PID.c: 60: if(((setpoint - StartAngle) > -180) && (setpoint - StartAngle < 0))
  2697  000378  0E00               	movlw	0
  2698  00037A  6E33               	movwf	___ftge@ff1,c
  2699  00037C  0E34               	movlw	52
  2700  00037E  6E34               	movwf	___ftge@ff1+1,c
  2701  000380  0EC3               	movlw	195
  2702  000382  6E35               	movwf	___ftge@ff1+2,c
  2703  000384  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2704  000388  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2705  00038C  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2706  000390  C054  F001         	movff	_StartAngle,___ftneg@f1
  2707  000394  C055  F002         	movff	_StartAngle+1,___ftneg@f1+1
  2708  000398  C056  F003         	movff	_StartAngle+2,___ftneg@f1+2
  2709  00039C  EC7D  F009         	call	___ftneg	;wreg free
  2710  0003A0  C001  F027         	movff	?___ftneg,___ftadd@f1
  2711  0003A4  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2712  0003A8  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2713  0003AC  ECA9  F003         	call	___ftadd	;wreg free
  2714  0003B0  C027  F036         	movff	?___ftadd,___ftge@ff2
  2715  0003B4  C028  F037         	movff	?___ftadd+1,___ftge@ff2+1
  2716  0003B8  C029  F038         	movff	?___ftadd+2,___ftge@ff2+2
  2717  0003BC  ECAA  F006         	call	___ftge	;wreg free
  2718  0003C0  B0D8               	btfsc	status,0,c
  2719  0003C2  D06B               	goto	i2l2437
  2720  0003C4  C054  F001         	movff	_StartAngle,___ftneg@f1
  2721  0003C8  C055  F002         	movff	_StartAngle+1,___ftneg@f1+1
  2722  0003CC  C056  F003         	movff	_StartAngle+2,___ftneg@f1+2
  2723  0003D0  EC7D  F009         	call	___ftneg	;wreg free
  2724  0003D4  C001  F027         	movff	?___ftneg,___ftadd@f1
  2725  0003D8  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2726  0003DC  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2727  0003E0  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2728  0003E4  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2729  0003E8  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2730  0003EC  ECA9  F003         	call	___ftadd	;wreg free
  2731  0003F0  AE29               	btfss	?___ftadd+2,7,c
  2732  0003F2  D053               	goto	i2l2437
  2733                           
  2734                           ;PID.c: 61: {
  2735                           ;PID.c: 62: if(angle <= StartAngle)
  2736  0003F4  C054  F033         	movff	_StartAngle,___ftge@ff1
  2737  0003F8  C055  F034         	movff	_StartAngle+1,___ftge@ff1+1
  2738  0003FC  C056  F035         	movff	_StartAngle+2,___ftge@ff1+2
  2739  000400  C042  F036         	movff	calculatePID@angle,___ftge@ff2
  2740  000404  C043  F037         	movff	calculatePID@angle+1,___ftge@ff2+1
  2741  000408  C044  F038         	movff	calculatePID@angle+2,___ftge@ff2+2
  2742  00040C  ECAA  F006         	call	___ftge	;wreg free
  2743  000410  A0D8               	btfss	status,0,c
  2744  000412  D017               	goto	i2l2435
  2745                           
  2746                           ;PID.c: 63: err = setpoint - angle;
  2747  000414  C042  F001         	movff	calculatePID@angle,___ftneg@f1
  2748  000418  C043  F002         	movff	calculatePID@angle+1,___ftneg@f1+1
  2749  00041C  C044  F003         	movff	calculatePID@angle+2,___ftneg@f1+2
  2750  000420  EC7D  F009         	call	___ftneg	;wreg free
  2751  000424  C001  F027         	movff	?___ftneg,___ftadd@f1
  2752  000428  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2753  00042C  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2754  000430  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2755  000434  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2756  000438  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2757  00043C  ECA9  F003         	call	___ftadd	;wreg free
  2758  000440  D0BB               	goto	L8
  2759  000442                     i2l2435:
  2760                           
  2761                           ;PID.c: 64: else
  2762                           ;PID.c: 65: err = setpoint + 360 - angle;
  2763  000442  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2764  000446  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2765  00044A  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2766  00044E  C042  F001         	movff	calculatePID@angle,___ftneg@f1
  2767  000452  C043  F002         	movff	calculatePID@angle+1,___ftneg@f1+1
  2768  000456  C044  F003         	movff	calculatePID@angle+2,___ftneg@f1+2
  2769  00045A  EC7D  F009         	call	___ftneg	;wreg free
  2770  00045E  C001  F027         	movff	?___ftneg,___ftadd@f1
  2771  000462  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2772  000466  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2773  00046A  ECA9  F003         	call	___ftadd	;wreg free
  2774  00046E  C027  F051         	movff	?___ftadd,_calculatePID$3396
  2775  000472  C028  F052         	movff	?___ftadd+1,_calculatePID$3396+1
  2776  000476  C029  F053         	movff	?___ftadd+2,_calculatePID$3396+2
  2777                           
  2778                           ;PID.c: 64: else
  2779                           ;PID.c: 65: err = setpoint + 360 - angle;
  2780  00047A  C051  F027         	movff	_calculatePID$3396,___ftadd@f1
  2781  00047E  C052  F028         	movff	_calculatePID$3396+1,___ftadd@f1+1
  2782  000482  C053  F029         	movff	_calculatePID$3396+2,___ftadd@f1+2
  2783  000486  0E00               	movlw	0
  2784  000488  6E2A               	movwf	___ftadd@f2,c
  2785  00048A  0EB4               	movlw	180
  2786  00048C  6E2B               	movwf	___ftadd@f2+1,c
  2787  00048E  0E43               	movlw	67
  2788  000490  6E2C               	movwf	___ftadd@f2+2,c
  2789  000492  ECA9  F003         	call	___ftadd	;wreg free
  2790  000496  D090               	goto	L8
  2791                           
  2792                           ;PID.c: 66: }
  2793  000498  D096               	goto	i2l158
  2794  00049A                     i2l2437:
  2795                           
  2796                           ;PID.c: 67: else if(((setpoint - StartAngle) < 180) && (setpoint - StartAngle >= 0))
  2797  00049A  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2798  00049E  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2799  0004A2  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2800  0004A6  C054  F001         	movff	_StartAngle,___ftneg@f1
  2801  0004AA  C055  F002         	movff	_StartAngle+1,___ftneg@f1+1
  2802  0004AE  C056  F003         	movff	_StartAngle+2,___ftneg@f1+2
  2803  0004B2  EC7D  F009         	call	___ftneg	;wreg free
  2804  0004B6  C001  F027         	movff	?___ftneg,___ftadd@f1
  2805  0004BA  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2806  0004BE  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2807  0004C2  ECA9  F003         	call	___ftadd	;wreg free
  2808  0004C6  C027  F033         	movff	?___ftadd,___ftge@ff1
  2809  0004CA  C028  F034         	movff	?___ftadd+1,___ftge@ff1+1
  2810  0004CE  C029  F035         	movff	?___ftadd+2,___ftge@ff1+2
  2811  0004D2  0E00               	movlw	0
  2812  0004D4  6E36               	movwf	___ftge@ff2,c
  2813  0004D6  0E34               	movlw	52
  2814  0004D8  6E37               	movwf	___ftge@ff2+1,c
  2815  0004DA  0E43               	movlw	67
  2816  0004DC  6E38               	movwf	___ftge@ff2+2,c
  2817  0004DE  ECAA  F006         	call	___ftge	;wreg free
  2818  0004E2  B0D8               	btfsc	status,0,c
  2819  0004E4  D070               	goto	i2l158
  2820  0004E6  C054  F001         	movff	_StartAngle,___ftneg@f1
  2821  0004EA  C055  F002         	movff	_StartAngle+1,___ftneg@f1+1
  2822  0004EE  C056  F003         	movff	_StartAngle+2,___ftneg@f1+2
  2823  0004F2  EC7D  F009         	call	___ftneg	;wreg free
  2824  0004F6  C001  F027         	movff	?___ftneg,___ftadd@f1
  2825  0004FA  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2826  0004FE  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2827  000502  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2828  000506  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2829  00050A  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2830  00050E  ECA9  F003         	call	___ftadd	;wreg free
  2831  000512  BE29               	btfsc	?___ftadd+2,7,c
  2832  000514  D058               	goto	i2l158
  2833                           
  2834                           ;PID.c: 68: {
  2835                           ;PID.c: 69: if(angle <= StartAngle)
  2836  000516  C054  F033         	movff	_StartAngle,___ftge@ff1
  2837  00051A  C055  F034         	movff	_StartAngle+1,___ftge@ff1+1
  2838  00051E  C056  F035         	movff	_StartAngle+2,___ftge@ff1+2
  2839  000522  C042  F036         	movff	calculatePID@angle,___ftge@ff2
  2840  000526  C043  F037         	movff	calculatePID@angle+1,___ftge@ff2+1
  2841  00052A  C044  F038         	movff	calculatePID@angle+2,___ftge@ff2+2
  2842  00052E  ECAA  F006         	call	___ftge	;wreg free
  2843  000532  A0D8               	btfss	status,0,c
  2844  000534  D017               	goto	i2l2445
  2845                           
  2846                           ;PID.c: 70: err = setpoint - angle;
  2847  000536  C042  F001         	movff	calculatePID@angle,___ftneg@f1
  2848  00053A  C043  F002         	movff	calculatePID@angle+1,___ftneg@f1+1
  2849  00053E  C044  F003         	movff	calculatePID@angle+2,___ftneg@f1+2
  2850  000542  EC7D  F009         	call	___ftneg	;wreg free
  2851  000546  C001  F027         	movff	?___ftneg,___ftadd@f1
  2852  00054A  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2853  00054E  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2854  000552  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2855  000556  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2856  00055A  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2857  00055E  ECA9  F003         	call	___ftadd	;wreg free
  2858  000562  D02A               	goto	L8
  2859  000564                     i2l2445:
  2860                           
  2861                           ;PID.c: 71: else
  2862                           ;PID.c: 72: err = setpoint - 360 - angle;
  2863  000564  0E00               	movlw	0
  2864  000566  6E2A               	movwf	___ftadd@f2,c
  2865  000568  0EB4               	movlw	180
  2866  00056A  6E2B               	movwf	___ftadd@f2+1,c
  2867  00056C  0E43               	movlw	67
  2868  00056E  6E2C               	movwf	___ftadd@f2+2,c
  2869  000570  C042  F027         	movff	calculatePID@angle,___ftadd@f1
  2870  000574  C043  F028         	movff	calculatePID@angle+1,___ftadd@f1+1
  2871  000578  C044  F029         	movff	calculatePID@angle+2,___ftadd@f1+2
  2872  00057C  ECA9  F003         	call	___ftadd	;wreg free
  2873  000580  C027  F001         	movff	?___ftadd,___ftneg@f1
  2874  000584  C028  F002         	movff	?___ftadd+1,___ftneg@f1+1
  2875  000588  C029  F003         	movff	?___ftadd+2,___ftneg@f1+2
  2876  00058C  EC7D  F009         	call	___ftneg	;wreg free
  2877  000590  C001  F051         	movff	?___ftneg,_calculatePID$3396
  2878  000594  C002  F052         	movff	?___ftneg+1,_calculatePID$3396+1
  2879  000598  C003  F053         	movff	?___ftneg+2,_calculatePID$3396+2
  2880                           
  2881                           ;PID.c: 71: else
  2882                           ;PID.c: 72: err = setpoint - 360 - angle;
  2883  00059C  C051  F027         	movff	_calculatePID$3396,___ftadd@f1
  2884  0005A0  C052  F028         	movff	_calculatePID$3396+1,___ftadd@f1+1
  2885  0005A4  C053  F029         	movff	_calculatePID$3396+2,___ftadd@f1+2
  2886  0005A8  C045  F02A         	movff	calculatePID@setpoint,___ftadd@f2
  2887  0005AC  C046  F02B         	movff	calculatePID@setpoint+1,___ftadd@f2+1
  2888  0005B0  C047  F02C         	movff	calculatePID@setpoint+2,___ftadd@f2+2
  2889  0005B4  ECA9  F003         	call	___ftadd	;wreg free
  2890  0005B8                     L8:
  2891  0005B8  C027  F057         	movff	?___ftadd,_err
  2892  0005BC  C028  F058         	movff	?___ftadd+1,_err+1
  2893  0005C0  C029  F059         	movff	?___ftadd+2,_err+2
  2894  0005C4  D000               	goto	i2l158
  2895  0005C6                     i2l158:
  2896                           
  2897                           ;PID.c: 73: }
  2898                           ;PID.c: 74: }
  2899                           ;PID.c: 76: intErr = err + prevErr;
  2900  0005C6  C057  F027         	movff	_err,___ftadd@f1
  2901  0005CA  C058  F028         	movff	_err+1,___ftadd@f1+1
  2902  0005CE  C059  F029         	movff	_err+2,___ftadd@f1+2
  2903  0005D2  C07C  F02A         	movff	_prevErr,___ftadd@f2
  2904  0005D6  C07D  F02B         	movff	_prevErr+1,___ftadd@f2+1
  2905  0005DA  C07E  F02C         	movff	_prevErr+2,___ftadd@f2+2
  2906  0005DE  ECA9  F003         	call	___ftadd	;wreg free
  2907  0005E2  C027  F079         	movff	?___ftadd,_intErr
  2908  0005E6  C028  F07A         	movff	?___ftadd+1,_intErr+1
  2909  0005EA  C029  F07B         	movff	?___ftadd+2,_intErr+2
  2910                           
  2911                           ;PID.c: 77: derErr = err - prevErr;
  2912  0005EE  C07C  F001         	movff	_prevErr,___ftneg@f1
  2913  0005F2  C07D  F002         	movff	_prevErr+1,___ftneg@f1+1
  2914  0005F6  C07E  F003         	movff	_prevErr+2,___ftneg@f1+2
  2915  0005FA  EC7D  F009         	call	___ftneg	;wreg free
  2916  0005FE  C001  F027         	movff	?___ftneg,___ftadd@f1
  2917  000602  C002  F028         	movff	?___ftneg+1,___ftadd@f1+1
  2918  000606  C003  F029         	movff	?___ftneg+2,___ftadd@f1+2
  2919  00060A  C057  F02A         	movff	_err,___ftadd@f2
  2920  00060E  C058  F02B         	movff	_err+1,___ftadd@f2+1
  2921  000612  C059  F02C         	movff	_err+2,___ftadd@f2+2
  2922  000616  ECA9  F003         	call	___ftadd	;wreg free
  2923  00061A  C027  F048         	movff	?___ftadd,calculatePID@derErr
  2924  00061E  C028  F049         	movff	?___ftadd+1,calculatePID@derErr+1
  2925  000622  C029  F04A         	movff	?___ftadd+2,calculatePID@derErr+2
  2926                           
  2927                           ;PID.c: 79: motorInput = Kp * err + (Ki * intErr * 0.03) + (Kd * (derErr/0.03));
  2928  000626  C079  F01B         	movff	_intErr,___ftmul@f2
  2929  00062A  C07A  F01C         	movff	_intErr+1,___ftmul@f2+1
  2930  00062E  C07B  F01D         	movff	_intErr+2,___ftmul@f2+2
  2931  000632  C070  F018         	movff	_Ki,___ftmul@f1
  2932  000636  C071  F019         	movff	_Ki+1,___ftmul@f1+1
  2933  00063A  C072  F01A         	movff	_Ki+2,___ftmul@f1+2
  2934  00063E  EC8B  F004         	call	___ftmul	;wreg free
  2935  000642  C018  F04B         	movff	?___ftmul,_calculatePID$3397
  2936  000646  C019  F04C         	movff	?___ftmul+1,_calculatePID$3397+1
  2937  00064A  C01A  F04D         	movff	?___ftmul+2,_calculatePID$3397+2
  2938                           
  2939                           ;PID.c: 79: motorInput = Kp * err + (Ki * intErr * 0.03) + (Kd * (derErr/0.03));
  2940  00064E  0EC3               	movlw	195
  2941  000650  6E1B               	movwf	___ftmul@f2,c
  2942  000652  0EF5               	movlw	245
  2943  000654  6E1C               	movwf	___ftmul@f2+1,c
  2944  000656  0E3C               	movlw	60
  2945  000658  6E1D               	movwf	___ftmul@f2+2,c
  2946  00065A  C04B  F018         	movff	_calculatePID$3397,___ftmul@f1
  2947  00065E  C04C  F019         	movff	_calculatePID$3397+1,___ftmul@f1+1
  2948  000662  C04D  F01A         	movff	_calculatePID$3397+2,___ftmul@f1+2
  2949  000666  EC8B  F004         	call	___ftmul	;wreg free
  2950  00066A  C018  F02A         	movff	?___ftmul,___ftadd@f2
  2951  00066E  C019  F02B         	movff	?___ftmul+1,___ftadd@f2+1
  2952  000672  C01A  F02C         	movff	?___ftmul+2,___ftadd@f2+2
  2953  000676  C057  F01B         	movff	_err,___ftmul@f2
  2954  00067A  C058  F01C         	movff	_err+1,___ftmul@f2+1
  2955  00067E  C059  F01D         	movff	_err+2,___ftmul@f2+2
  2956  000682  C073  F018         	movff	_Kp,___ftmul@f1
  2957  000686  C074  F019         	movff	_Kp+1,___ftmul@f1+1
  2958  00068A  C075  F01A         	movff	_Kp+2,___ftmul@f1+2
  2959  00068E  EC8B  F004         	call	___ftmul	;wreg free
  2960  000692  C018  F027         	movff	?___ftmul,___ftadd@f1
  2961  000696  C019  F028         	movff	?___ftmul+1,___ftadd@f1+1
  2962  00069A  C01A  F029         	movff	?___ftmul+2,___ftadd@f1+2
  2963  00069E  ECA9  F003         	call	___ftadd	;wreg free
  2964  0006A2  C027  F04E         	movff	?___ftadd,_calculatePID$3398
  2965  0006A6  C028  F04F         	movff	?___ftadd+1,_calculatePID$3398+1
  2966  0006AA  C029  F050         	movff	?___ftadd+2,_calculatePID$3398+2
  2967                           
  2968                           ;PID.c: 79: motorInput = Kp * err + (Ki * intErr * 0.03) + (Kd * (derErr/0.03));
  2969  0006AE  C06D  F01B         	movff	_Kd,___ftmul@f2
  2970  0006B2  C06E  F01C         	movff	_Kd+1,___ftmul@f2+1
  2971  0006B6  C06F  F01D         	movff	_Kd+2,___ftmul@f2+2
  2972  0006BA  0EC3               	movlw	195
  2973  0006BC  6E0C               	movwf	___ftdiv@f2,c
  2974  0006BE  0EF5               	movlw	245
  2975  0006C0  6E0D               	movwf	___ftdiv@f2+1,c
  2976  0006C2  0E3C               	movlw	60
  2977  0006C4  6E0E               	movwf	___ftdiv@f2+2,c
  2978  0006C6  C048  F009         	movff	calculatePID@derErr,___ftdiv@f1
  2979  0006CA  C049  F00A         	movff	calculatePID@derErr+1,___ftdiv@f1+1
  2980  0006CE  C04A  F00B         	movff	calculatePID@derErr+2,___ftdiv@f1+2
  2981  0006D2  EC7A  F005         	call	___ftdiv	;wreg free
  2982  0006D6  C009  F018         	movff	?___ftdiv,___ftmul@f1
  2983  0006DA  C00A  F019         	movff	?___ftdiv+1,___ftmul@f1+1
  2984  0006DE  C00B  F01A         	movff	?___ftdiv+2,___ftmul@f1+2
  2985  0006E2  EC8B  F004         	call	___ftmul	;wreg free
  2986  0006E6  C018  F02A         	movff	?___ftmul,___ftadd@f2
  2987  0006EA  C019  F02B         	movff	?___ftmul+1,___ftadd@f2+1
  2988  0006EE  C01A  F02C         	movff	?___ftmul+2,___ftadd@f2+2
  2989  0006F2  C04E  F027         	movff	_calculatePID$3398,___ftadd@f1
  2990  0006F6  C04F  F028         	movff	_calculatePID$3398+1,___ftadd@f1+1
  2991  0006FA  C050  F029         	movff	_calculatePID$3398+2,___ftadd@f1+2
  2992  0006FE  ECA9  F003         	call	___ftadd	;wreg free
  2993  000702  C027  F033         	movff	?___ftadd,___fttol@f1
  2994  000706  C028  F034         	movff	?___ftadd+1,___fttol@f1+1
  2995  00070A  C029  F035         	movff	?___ftadd+2,___fttol@f1+2
  2996  00070E  EC07  F005         	call	___fttol	;wreg free
  2997  000712  C033  F05C         	movff	?___fttol,_motorInput
  2998  000716  C034  F05D         	movff	?___fttol+1,_motorInput+1
  2999                           
  3000                           ;PID.c: 81: if(motorInput > 255)
  3001  00071A  BE5D               	btfsc	_motorInput+1,7,c
  3002  00071C  D007               	goto	i2l2451
  3003  00071E  045D               	decf	_motorInput+1,w,c
  3004  000720  A0D8               	btfss	status,0,c
  3005  000722  D004               	goto	i2l2451
  3006                           
  3007                           ;PID.c: 82: motorInput = 255;
  3008  000724  0E00               	movlw	0
  3009  000726  6E5D               	movwf	_motorInput+1,c
  3010  000728  685C               	setf	_motorInput,c
  3011  00072A  D00C               	goto	i2l2455
  3012  00072C                     i2l2451:
  3013                           
  3014                           ;PID.c: 83: else if (motorInput < -255)
  3015  00072C  AE5D               	btfss	_motorInput+1,7,c
  3016  00072E  D00A               	goto	i2l2455
  3017  000730  045C               	decf	_motorInput,w,c
  3018  000732  0EFF               	movlw	255
  3019  000734  585D               	subwfb	_motorInput+1,w,c
  3020  000736  B0D8               	btfsc	status,0,c
  3021  000738  D005               	goto	i2l2455
  3022                           
  3023                           ;PID.c: 84: motorInput = -255;
  3024  00073A  0EFF               	movlw	255
  3025  00073C  6E5D               	movwf	_motorInput+1,c
  3026  00073E  0E01               	movlw	1
  3027  000740  6E5C               	movwf	_motorInput,c
  3028  000742  D000               	goto	i2l2455
  3029  000744                     i2l2455:
  3030                           
  3031                           ;PID.c: 86: prevErr = err;
  3032  000744  C057  F07C         	movff	_err,_prevErr
  3033  000748  C058  F07D         	movff	_err+1,_prevErr+1
  3034  00074C  C059  F07E         	movff	_err+2,_prevErr+2
  3035  000750  0012               	return		;funcret
  3036  000752                     __end_of_calculatePID:
  3037                           	opt stack 0
  3038                           pclatu	equ	0xFFB
  3039                           pclath	equ	0xFFA
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           intcon	equ	0xFF2
  3047                           intcon2	equ	0xFF1
  3048                           postinc0	equ	0xFEE
  3049                           fsr0h	equ	0xFEA
  3050                           fsr0l	equ	0xFE9
  3051                           wreg	equ	0xFE8
  3052                           fsr1h	equ	0xFE2
  3053                           fsr1l	equ	0xFE1
  3054                           indf2	equ	0xFDF
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function ___fttol *****************
  3060 ;; Defined at:
  3061 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  f1              3   50[COMRAM] float 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  lval            4   60[COMRAM] unsigned long 
  3066 ;;  exp1            1   64[COMRAM] unsigned char 
  3067 ;;  sign1           1   59[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  4   50[COMRAM] long 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;Total ram usage:       15 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_calculatePID
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text21
  3091  000A0E                     __ptext21:
  3092                           	opt stack 0
  3093  000A0E                     ___fttol:
  3094                           	opt stack 22
  3095                           
  3096                           ;incstack = 0
  3097  000A0E  C035  F037         	movff	___fttol@f1+2,??___fttol
  3098  000A12  6A38               	clrf	(??___fttol+1)& (0+255),c
  3099  000A14  6A39               	clrf	(??___fttol+2)& (0+255),c
  3100  000A16  3434               	rlcf	___fttol@f1+1,w,c
  3101  000A18  3637               	rlcf	??___fttol& (0+255),f,c
  3102  000A1A  E301               	bnc	u159_41
  3103  000A1C  8038               	bsf	(??___fttol+1)& (0+255),0,c
  3104  000A1E                     u159_41:
  3105  000A1E  5037               	movf	??___fttol,w,c
  3106  000A20  6E41               	movwf	___fttol@exp1,c
  3107  000A22  5041               	movf	___fttol@exp1,w,c
  3108  000A24  A4D8               	btfss	status,2,c
  3109  000A26  D002               	goto	i2l2307
  3110  000A28  D039               	goto	i2l2331
  3111  000A2A  D063               	goto	i2l944
  3112  000A2C                     i2l2307:
  3113  000A2C  0E17               	movlw	23
  3114  000A2E  6E37               	movwf	??___fttol& (0+255),c
  3115  000A30  C033  F038         	movff	___fttol@f1,??___fttol+1
  3116  000A34  C034  F039         	movff	___fttol@f1+1,??___fttol+2
  3117  000A38  C035  F03A         	movff	___fttol@f1+2,??___fttol+3
  3118  000A3C  2837               	incf	??___fttol,w,c
  3119  000A3E  6E3B               	movwf	(??___fttol+4)& (0+255),c
  3120  000A40  D004               	goto	i2u161_40
  3121  000A42                     i2u161_45:
  3122  000A42  90D8               	bcf	status,0,c
  3123  000A44  323A               	rrcf	??___fttol+3,f,c
  3124  000A46  3239               	rrcf	??___fttol+2,f,c
  3125  000A48  3238               	rrcf	??___fttol+1,f,c
  3126  000A4A                     i2u161_40:
  3127  000A4A  2E3B               	decfsz	(??___fttol+4)& (0+255),f,c
  3128  000A4C  D7FA               	goto	i2u161_45
  3129  000A4E  5038               	movf	??___fttol+1,w,c
  3130  000A50  6E3C               	movwf	___fttol@sign1,c
  3131  000A52  8E34               	bsf	___fttol@f1+1,7,c
  3132  000A54  0EFF               	movlw	255
  3133  000A56  1633               	andwf	___fttol@f1,f,c
  3134  000A58  0EFF               	movlw	255
  3135  000A5A  1634               	andwf	___fttol@f1+1,f,c
  3136  000A5C  0E00               	movlw	0
  3137  000A5E  1635               	andwf	___fttol@f1+2,f,c
  3138  000A60  5033               	movf	___fttol@f1,w,c
  3139  000A62  6E3D               	movwf	___fttol@lval,c
  3140  000A64  5034               	movf	___fttol@f1+1,w,c
  3141  000A66  6E3E               	movwf	___fttol@lval+1,c
  3142  000A68  5035               	movf	___fttol@f1+2,w,c
  3143  000A6A  6E3F               	movwf	___fttol@lval+2,c
  3144  000A6C  6A40               	clrf	___fttol@lval+3,c
  3145  000A6E  0E8E               	movlw	142
  3146  000A70  5E41               	subwf	___fttol@exp1,f,c
  3147  000A72  AE41               	btfss	___fttol@exp1,7,c
  3148  000A74  D010               	goto	i2l2329
  3149  000A76  5041               	movf	___fttol@exp1,w,c
  3150  000A78  0A80               	xorlw	128
  3151  000A7A  0F8F               	addlw	143
  3152  000A7C  B0D8               	btfsc	status,0,c
  3153  000A7E  D003               	goto	i2l2325
  3154  000A80  D00D               	goto	i2l2331
  3155  000A82  D037               	goto	i2l944
  3156  000A84  D000               	goto	i2l2325
  3157  000A86                     i2l2325:
  3158  000A86  90D8               	bcf	status,0,c
  3159  000A88  3240               	rrcf	___fttol@lval+3,f,c
  3160  000A8A  323F               	rrcf	___fttol@lval+2,f,c
  3161  000A8C  323E               	rrcf	___fttol@lval+1,f,c
  3162  000A8E  323D               	rrcf	___fttol@lval,f,c
  3163  000A90  3E41               	incfsz	___fttol@exp1,f,c
  3164  000A92  D7F9               	goto	i2l2325
  3165  000A94  D019               	goto	i2l2339
  3166  000A96                     i2l2329:
  3167  000A96  0E17               	movlw	23
  3168  000A98  6441               	cpfsgt	___fttol@exp1,c
  3169  000A9A  D011               	goto	i2l2337
  3170  000A9C                     i2l2331:
  3171  000A9C  0E00               	movlw	0
  3172  000A9E  6E33               	movwf	?___fttol,c
  3173  000AA0  0E00               	movlw	0
  3174  000AA2  6E34               	movwf	?___fttol+1,c
  3175  000AA4  0E00               	movlw	0
  3176  000AA6  6E35               	movwf	?___fttol+2,c
  3177  000AA8  0E00               	movlw	0
  3178  000AAA  6E36               	movwf	?___fttol+3,c
  3179  000AAC  D022               	goto	i2l944
  3180  000AAE  D007               	goto	i2l2337
  3181  000AB0                     i2l2335:
  3182  000AB0  90D8               	bcf	status,0,c
  3183  000AB2  363D               	rlcf	___fttol@lval,f,c
  3184  000AB4  363E               	rlcf	___fttol@lval+1,f,c
  3185  000AB6  363F               	rlcf	___fttol@lval+2,f,c
  3186  000AB8  3640               	rlcf	___fttol@lval+3,f,c
  3187  000ABA  0641               	decf	___fttol@exp1,f,c
  3188  000ABC  D000               	goto	i2l2337
  3189  000ABE                     i2l2337:
  3190  000ABE  5041               	movf	___fttol@exp1,w,c
  3191  000AC0  B4D8               	btfsc	status,2,c
  3192  000AC2  D002               	goto	i2l2339
  3193  000AC4  D7F5               	goto	i2l2335
  3194  000AC6  D000               	goto	i2l2339
  3195  000AC8                     i2l2339:
  3196  000AC8  503C               	movf	___fttol@sign1,w,c
  3197  000ACA  B4D8               	btfsc	status,2,c
  3198  000ACC  D009               	goto	i2l2343
  3199  000ACE  1E40               	comf	___fttol@lval+3,f,c
  3200  000AD0  1E3F               	comf	___fttol@lval+2,f,c
  3201  000AD2  1E3E               	comf	___fttol@lval+1,f,c
  3202  000AD4  6C3D               	negf	___fttol@lval,c
  3203  000AD6  0E00               	movlw	0
  3204  000AD8  223E               	addwfc	___fttol@lval+1,f,c
  3205  000ADA  223F               	addwfc	___fttol@lval+2,f,c
  3206  000ADC  2240               	addwfc	___fttol@lval+3,f,c
  3207  000ADE  D000               	goto	i2l2343
  3208  000AE0                     i2l2343:
  3209  000AE0  C03D  F033         	movff	___fttol@lval,?___fttol
  3210  000AE4  C03E  F034         	movff	___fttol@lval+1,?___fttol+1
  3211  000AE8  C03F  F035         	movff	___fttol@lval+2,?___fttol+2
  3212  000AEC  C040  F036         	movff	___fttol@lval+3,?___fttol+3
  3213  000AF0  D000               	goto	i2l944
  3214  000AF2                     i2l944:
  3215  000AF2  0012               	return		;funcret
  3216  000AF4                     __end_of___fttol:
  3217                           	opt stack 0
  3218                           pclatu	equ	0xFFB
  3219                           pclath	equ	0xFFA
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           prodh	equ	0xFF4
  3225                           prodl	equ	0xFF3
  3226                           intcon	equ	0xFF2
  3227                           intcon2	equ	0xFF1
  3228                           postinc0	equ	0xFEE
  3229                           fsr0h	equ	0xFEA
  3230                           fsr0l	equ	0xFE9
  3231                           wreg	equ	0xFE8
  3232                           fsr1h	equ	0xFE2
  3233                           fsr1l	equ	0xFE1
  3234                           indf2	equ	0xFDF
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function ___ftneg *****************
  3240 ;; Defined at:
  3241 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  f1              3    0[COMRAM] float 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  3    0[COMRAM] float 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3255 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;Total ram usage:        3 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_calculatePID
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text22
  3269  0012FA                     __ptext22:
  3270                           	opt stack 0
  3271  0012FA                     ___ftneg:
  3272                           	opt stack 22
  3273                           
  3274                           ;incstack = 0
  3275  0012FA  5001               	movf	___ftneg@f1,w,c
  3276  0012FC  1002               	iorwf	___ftneg@f1+1,w,c
  3277  0012FE  1003               	iorwf	___ftneg@f1+2,w,c
  3278  001300  B4D8               	btfsc	status,2,c
  3279  001302  D006               	goto	i2l933
  3280  001304  0E00               	movlw	0
  3281  001306  1A01               	xorwf	___ftneg@f1,f,c
  3282  001308  0E00               	movlw	0
  3283  00130A  1A02               	xorwf	___ftneg@f1+1,f,c
  3284  00130C  0E80               	movlw	128
  3285  00130E  1A03               	xorwf	___ftneg@f1+2,f,c
  3286  001310                     i2l933:
  3287  001310  C001  F001         	movff	___ftneg@f1,?___ftneg
  3288  001314  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  3289  001318  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  3290  00131C  0012               	return		;funcret
  3291  00131E                     __end_of___ftneg:
  3292                           	opt stack 0
  3293                           pclatu	equ	0xFFB
  3294                           pclath	equ	0xFFA
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           intcon	equ	0xFF2
  3302                           intcon2	equ	0xFF1
  3303                           postinc0	equ	0xFEE
  3304                           fsr0h	equ	0xFEA
  3305                           fsr0l	equ	0xFE9
  3306                           wreg	equ	0xFE8
  3307                           fsr1h	equ	0xFE2
  3308                           fsr1l	equ	0xFE1
  3309                           indf2	equ	0xFDF
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function ___ftge *****************
  3315 ;; Defined at:
  3316 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  ff1             3   50[COMRAM] float 
  3319 ;;  ff2             3   53[COMRAM] float 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;		None               void
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3331 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;Total ram usage:        9 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_calculatePID
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text23
  3345  000D54                     __ptext23:
  3346                           	opt stack 0
  3347  000D54                     ___ftge:
  3348                           	opt stack 22
  3349                           
  3350                           ;incstack = 0
  3351  000D54  AE35               	btfss	___ftge@ff1+2,7,c
  3352  000D56  D017               	goto	i2l2283
  3353  000D58  C033  F039         	movff	___ftge@ff1,??___ftge
  3354  000D5C  C034  F03A         	movff	___ftge@ff1+1,??___ftge+1
  3355  000D60  C035  F03B         	movff	___ftge@ff1+2,??___ftge+2
  3356  000D64  1E39               	comf	??___ftge,f,c
  3357  000D66  1E3A               	comf	??___ftge+1,f,c
  3358  000D68  1E3B               	comf	??___ftge+2,f,c
  3359  000D6A  2A39               	incf	??___ftge,f,c
  3360  000D6C  0E00               	movlw	0
  3361  000D6E  223A               	addwfc	??___ftge+1,f,c
  3362  000D70  223B               	addwfc	??___ftge+2,f,c
  3363  000D72  0E00               	movlw	0
  3364  000D74  2439               	addwf	??___ftge,w,c
  3365  000D76  6E33               	movwf	___ftge@ff1,c
  3366  000D78  0E00               	movlw	0
  3367  000D7A  203A               	addwfc	??___ftge+1,w,c
  3368  000D7C  6E34               	movwf	___ftge@ff1+1,c
  3369  000D7E  0E80               	movlw	128
  3370  000D80  203B               	addwfc	??___ftge+2,w,c
  3371  000D82  6E35               	movwf	___ftge@ff1+2,c
  3372  000D84  D000               	goto	i2l2283
  3373  000D86                     i2l2283:
  3374  000D86  AE38               	btfss	___ftge@ff2+2,7,c
  3375  000D88  D017               	goto	i2l2287
  3376  000D8A  C036  F039         	movff	___ftge@ff2,??___ftge
  3377  000D8E  C037  F03A         	movff	___ftge@ff2+1,??___ftge+1
  3378  000D92  C038  F03B         	movff	___ftge@ff2+2,??___ftge+2
  3379  000D96  1E39               	comf	??___ftge,f,c
  3380  000D98  1E3A               	comf	??___ftge+1,f,c
  3381  000D9A  1E3B               	comf	??___ftge+2,f,c
  3382  000D9C  2A39               	incf	??___ftge,f,c
  3383  000D9E  0E00               	movlw	0
  3384  000DA0  223A               	addwfc	??___ftge+1,f,c
  3385  000DA2  223B               	addwfc	??___ftge+2,f,c
  3386  000DA4  0E00               	movlw	0
  3387  000DA6  2439               	addwf	??___ftge,w,c
  3388  000DA8  6E36               	movwf	___ftge@ff2,c
  3389  000DAA  0E00               	movlw	0
  3390  000DAC  203A               	addwfc	??___ftge+1,w,c
  3391  000DAE  6E37               	movwf	___ftge@ff2+1,c
  3392  000DB0  0E80               	movlw	128
  3393  000DB2  203B               	addwfc	??___ftge+2,w,c
  3394  000DB4  6E38               	movwf	___ftge@ff2+2,c
  3395  000DB6  D000               	goto	i2l2287
  3396  000DB8                     i2l2287:
  3397  000DB8  0E00               	movlw	0
  3398  000DBA  1A33               	xorwf	___ftge@ff1,f,c
  3399  000DBC  0E00               	movlw	0
  3400  000DBE  1A34               	xorwf	___ftge@ff1+1,f,c
  3401  000DC0  0E80               	movlw	128
  3402  000DC2  1A35               	xorwf	___ftge@ff1+2,f,c
  3403  000DC4  0E00               	movlw	0
  3404  000DC6  1A36               	xorwf	___ftge@ff2,f,c
  3405  000DC8  0E00               	movlw	0
  3406  000DCA  1A37               	xorwf	___ftge@ff2+1,f,c
  3407  000DCC  0E80               	movlw	128
  3408  000DCE  1A38               	xorwf	___ftge@ff2+2,f,c
  3409  000DD0  5036               	movf	___ftge@ff2,w,c
  3410  000DD2  5C33               	subwf	___ftge@ff1,w,c
  3411  000DD4  5037               	movf	___ftge@ff2+1,w,c
  3412  000DD6  5834               	subwfb	___ftge@ff1+1,w,c
  3413  000DD8  5038               	movf	___ftge@ff2+2,w,c
  3414  000DDA  5835               	subwfb	___ftge@ff1+2,w,c
  3415  000DDC  B0D8               	btfsc	status,0,c
  3416  000DDE  D002               	goto	i2l2293
  3417  000DE0  90D8               	bcf	status,0,c
  3418  000DE2  D002               	goto	i2l917
  3419  000DE4                     i2l2293:
  3420  000DE4  80D8               	bsf	status,0,c
  3421  000DE6  D000               	goto	i2l917
  3422  000DE8                     i2l917:
  3423  000DE8  0012               	return		;funcret
  3424  000DEA                     __end_of___ftge:
  3425                           	opt stack 0
  3426                           pclatu	equ	0xFFB
  3427                           pclath	equ	0xFFA
  3428                           tblptru	equ	0xFF8
  3429                           tblptrh	equ	0xFF7
  3430                           tblptrl	equ	0xFF6
  3431                           tablat	equ	0xFF5
  3432                           prodh	equ	0xFF4
  3433                           prodl	equ	0xFF3
  3434                           intcon	equ	0xFF2
  3435                           intcon2	equ	0xFF1
  3436                           postinc0	equ	0xFEE
  3437                           fsr0h	equ	0xFEA
  3438                           fsr0l	equ	0xFE9
  3439                           wreg	equ	0xFE8
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           indf2	equ	0xFDF
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function ___ftdiv *****************
  3448 ;; Defined at:
  3449 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  f1              3    8[COMRAM] float 
  3452 ;;  f2              3   11[COMRAM] float 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  f3              3   18[COMRAM] float 
  3455 ;;  sign            1   22[COMRAM] unsigned char 
  3456 ;;  exp             1   21[COMRAM] unsigned char 
  3457 ;;  cntr            1   17[COMRAM] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  3    8[COMRAM] float 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3467 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;Total ram usage:       15 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    1
  3474 ;; This function calls:
  3475 ;;		___ftpack
  3476 ;; This function is called by:
  3477 ;;		_calculatePID
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text24
  3482  000AF4                     __ptext24:
  3483                           	opt stack 0
  3484  000AF4                     ___ftdiv:
  3485                           	opt stack 21
  3486                           
  3487                           ;incstack = 0
  3488  000AF4  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  3489  000AF8  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  3490  000AFA  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  3491  000AFC  340A               	rlcf	___ftdiv@f1+1,w,c
  3492  000AFE  360F               	rlcf	??___ftdiv& (0+255),f,c
  3493  000B00  E301               	bnc	u144_41
  3494  000B02  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  3495  000B04                     u144_41:
  3496  000B04  500F               	movf	??___ftdiv,w,c
  3497  000B06  6E16               	movwf	___ftdiv@exp,c
  3498  000B08  5016               	movf	___ftdiv@exp,w,c
  3499  000B0A  A4D8               	btfss	status,2,c
  3500  000B0C  D002               	goto	i2l2191
  3501  000B0E  D00E               	goto	i2l2193
  3502  000B10  D061               	goto	i2l908
  3503  000B12                     i2l2191:
  3504  000B12  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  3505  000B16  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  3506  000B18  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  3507  000B1A  340D               	rlcf	___ftdiv@f2+1,w,c
  3508  000B1C  360F               	rlcf	??___ftdiv& (0+255),f,c
  3509  000B1E  E301               	bnc	u146_41
  3510  000B20  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  3511  000B22                     u146_41:
  3512  000B22  500F               	movf	??___ftdiv,w,c
  3513  000B24  6E17               	movwf	___ftdiv@sign,c
  3514  000B26  5017               	movf	___ftdiv@sign,w,c
  3515  000B28  A4D8               	btfss	status,2,c
  3516  000B2A  D007               	goto	i2l2197
  3517  000B2C                     i2l2193:
  3518  000B2C  0E00               	movlw	0
  3519  000B2E  6E09               	movwf	?___ftdiv,c
  3520  000B30  0E00               	movlw	0
  3521  000B32  6E0A               	movwf	?___ftdiv+1,c
  3522  000B34  0E00               	movlw	0
  3523  000B36  6E0B               	movwf	?___ftdiv+2,c
  3524  000B38  D04D               	goto	i2l908
  3525  000B3A                     i2l2197:
  3526  000B3A  0E00               	movlw	0
  3527  000B3C  6E13               	movwf	___ftdiv@f3,c
  3528  000B3E  0E00               	movlw	0
  3529  000B40  6E14               	movwf	___ftdiv@f3+1,c
  3530  000B42  0E00               	movlw	0
  3531  000B44  6E15               	movwf	___ftdiv@f3+2,c
  3532  000B46  5017               	movf	___ftdiv@sign,w,c
  3533  000B48  0F89               	addlw	137
  3534  000B4A  5E16               	subwf	___ftdiv@exp,f,c
  3535  000B4C  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  3536  000B50  500E               	movf	___ftdiv@f2+2,w,c
  3537  000B52  1A17               	xorwf	___ftdiv@sign,f,c
  3538  000B54  0E80               	movlw	128
  3539  000B56  1617               	andwf	___ftdiv@sign,f,c
  3540  000B58  8E0A               	bsf	___ftdiv@f1+1,7,c
  3541  000B5A  0EFF               	movlw	255
  3542  000B5C  1609               	andwf	___ftdiv@f1,f,c
  3543  000B5E  0EFF               	movlw	255
  3544  000B60  160A               	andwf	___ftdiv@f1+1,f,c
  3545  000B62  0E00               	movlw	0
  3546  000B64  160B               	andwf	___ftdiv@f1+2,f,c
  3547  000B66  8E0D               	bsf	___ftdiv@f2+1,7,c
  3548  000B68  0EFF               	movlw	255
  3549  000B6A  160C               	andwf	___ftdiv@f2,f,c
  3550  000B6C  0EFF               	movlw	255
  3551  000B6E  160D               	andwf	___ftdiv@f2+1,f,c
  3552  000B70  0E00               	movlw	0
  3553  000B72  160E               	andwf	___ftdiv@f2+2,f,c
  3554  000B74  0E18               	movlw	24
  3555  000B76  6E12               	movwf	___ftdiv@cntr,c
  3556  000B78  D000               	goto	i2l2217
  3557  000B7A                     i2l2217:
  3558  000B7A  90D8               	bcf	status,0,c
  3559  000B7C  3613               	rlcf	___ftdiv@f3,f,c
  3560  000B7E  3614               	rlcf	___ftdiv@f3+1,f,c
  3561  000B80  3615               	rlcf	___ftdiv@f3+2,f,c
  3562  000B82  500C               	movf	___ftdiv@f2,w,c
  3563  000B84  5C09               	subwf	___ftdiv@f1,w,c
  3564  000B86  500D               	movf	___ftdiv@f2+1,w,c
  3565  000B88  580A               	subwfb	___ftdiv@f1+1,w,c
  3566  000B8A  500E               	movf	___ftdiv@f2+2,w,c
  3567  000B8C  580B               	subwfb	___ftdiv@f1+2,w,c
  3568  000B8E  A0D8               	btfss	status,0,c
  3569  000B90  D007               	goto	i2l911
  3570  000B92  500C               	movf	___ftdiv@f2,w,c
  3571  000B94  5E09               	subwf	___ftdiv@f1,f,c
  3572  000B96  500D               	movf	___ftdiv@f2+1,w,c
  3573  000B98  5A0A               	subwfb	___ftdiv@f1+1,f,c
  3574  000B9A  500E               	movf	___ftdiv@f2+2,w,c
  3575  000B9C  5A0B               	subwfb	___ftdiv@f1+2,f,c
  3576  000B9E  8013               	bsf	___ftdiv@f3,0,c
  3577  000BA0                     i2l911:
  3578  000BA0  90D8               	bcf	status,0,c
  3579  000BA2  3609               	rlcf	___ftdiv@f1,f,c
  3580  000BA4  360A               	rlcf	___ftdiv@f1+1,f,c
  3581  000BA6  360B               	rlcf	___ftdiv@f1+2,f,c
  3582  000BA8  2E12               	decfsz	___ftdiv@cntr,f,c
  3583  000BAA  D7E7               	goto	i2l2217
  3584  000BAC  D000               	goto	i2l2227
  3585  000BAE                     i2l2227:
  3586  000BAE  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  3587  000BB2  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3588  000BB6  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3589  000BBA  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  3590  000BBE  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  3591  000BC2  ECEB  F005         	call	___ftpack	;wreg free
  3592  000BC6  C001  F009         	movff	?___ftpack,?___ftdiv
  3593  000BCA  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  3594  000BCE  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  3595  000BD2  D000               	goto	i2l908
  3596  000BD4                     i2l908:
  3597  000BD4  0012               	return		;funcret
  3598  000BD6                     __end_of___ftdiv:
  3599                           	opt stack 0
  3600                           pclatu	equ	0xFFB
  3601                           pclath	equ	0xFFA
  3602                           tblptru	equ	0xFF8
  3603                           tblptrh	equ	0xFF7
  3604                           tblptrl	equ	0xFF6
  3605                           tablat	equ	0xFF5
  3606                           prodh	equ	0xFF4
  3607                           prodl	equ	0xFF3
  3608                           intcon	equ	0xFF2
  3609                           intcon2	equ	0xFF1
  3610                           postinc0	equ	0xFEE
  3611                           fsr0h	equ	0xFEA
  3612                           fsr0l	equ	0xFE9
  3613                           wreg	equ	0xFE8
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function ___ftadd *****************
  3622 ;; Defined at:
  3623 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  f1              3   38[COMRAM] float 
  3626 ;;  f2              3   41[COMRAM] float 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  exp1            1   49[COMRAM] unsigned char 
  3629 ;;  exp2            1   48[COMRAM] unsigned char 
  3630 ;;  sign            1   47[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  3   38[COMRAM] float 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:       12 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    1
  3647 ;; This function calls:
  3648 ;;		___ftpack
  3649 ;; This function is called by:
  3650 ;;		_calculatePID
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text25
  3655  000752                     __ptext25:
  3656                           	opt stack 0
  3657  000752                     ___ftadd:
  3658                           	opt stack 21
  3659                           
  3660                           ;incstack = 0
  3661  000752  C029  F02D         	movff	___ftadd@f1+2,??___ftadd
  3662  000756  6A2E               	clrf	(??___ftadd+1)& (0+255),c
  3663  000758  6A2F               	clrf	(??___ftadd+2)& (0+255),c
  3664  00075A  3428               	rlcf	___ftadd@f1+1,w,c
  3665  00075C  362D               	rlcf	??___ftadd& (0+255),f,c
  3666  00075E  E301               	bnc	u123_41
  3667  000760  802E               	bsf	(??___ftadd+1)& (0+255),0,c
  3668  000762                     u123_41:
  3669  000762  502D               	movf	??___ftadd,w,c
  3670  000764  6E32               	movwf	___ftadd@exp1,c
  3671  000766  C02C  F02D         	movff	___ftadd@f2+2,??___ftadd
  3672  00076A  6A2E               	clrf	(??___ftadd+1)& (0+255),c
  3673  00076C  6A2F               	clrf	(??___ftadd+2)& (0+255),c
  3674  00076E  342B               	rlcf	___ftadd@f2+1,w,c
  3675  000770  362D               	rlcf	??___ftadd& (0+255),f,c
  3676  000772  E301               	bnc	u124_41
  3677  000774  802E               	bsf	(??___ftadd+1)& (0+255),0,c
  3678  000776                     u124_41:
  3679  000776  502D               	movf	??___ftadd,w,c
  3680  000778  6E31               	movwf	___ftadd@exp2,c
  3681  00077A  5032               	movf	___ftadd@exp1,w,c
  3682  00077C  B4D8               	btfsc	status,2,c
  3683  00077E  D00B               	goto	i2l876
  3684  000780  5031               	movf	___ftadd@exp2,w,c
  3685  000782  5C32               	subwf	___ftadd@exp1,w,c
  3686  000784  B0D8               	btfsc	status,0,c
  3687  000786  D00E               	goto	i2l2123
  3688  000788  5032               	movf	___ftadd@exp1,w,c
  3689  00078A  0800               	sublw	0
  3690  00078C  2431               	addwf	___ftadd@exp2,w,c
  3691  00078E  6E2D               	movwf	??___ftadd& (0+255),c
  3692  000790  0E18               	movlw	24
  3693  000792  642D               	cpfsgt	??___ftadd,c
  3694  000794  D007               	goto	i2l2123
  3695  000796                     i2l876:
  3696  000796  C02A  F027         	movff	___ftadd@f2,?___ftadd
  3697  00079A  C02B  F028         	movff	___ftadd@f2+1,?___ftadd+1
  3698  00079E  C02C  F029         	movff	___ftadd@f2+2,?___ftadd+2
  3699  0007A2  D0B8               	goto	i2l877
  3700  0007A4                     i2l2123:
  3701  0007A4  5031               	movf	___ftadd@exp2,w,c
  3702  0007A6  B4D8               	btfsc	status,2,c
  3703  0007A8  D00B               	goto	i2l880
  3704  0007AA  5032               	movf	___ftadd@exp1,w,c
  3705  0007AC  5C31               	subwf	___ftadd@exp2,w,c
  3706  0007AE  B0D8               	btfsc	status,0,c
  3707  0007B0  D00E               	goto	i2l2129
  3708  0007B2  5031               	movf	___ftadd@exp2,w,c
  3709  0007B4  0800               	sublw	0
  3710  0007B6  2432               	addwf	___ftadd@exp1,w,c
  3711  0007B8  6E2D               	movwf	??___ftadd& (0+255),c
  3712  0007BA  0E18               	movlw	24
  3713  0007BC  642D               	cpfsgt	??___ftadd,c
  3714  0007BE  D007               	goto	i2l2129
  3715  0007C0                     i2l880:
  3716  0007C0  C027  F027         	movff	___ftadd@f1,?___ftadd
  3717  0007C4  C028  F028         	movff	___ftadd@f1+1,?___ftadd+1
  3718  0007C8  C029  F029         	movff	___ftadd@f1+2,?___ftadd+2
  3719  0007CC  D0A3               	goto	i2l877
  3720  0007CE                     i2l2129:
  3721  0007CE  0E06               	movlw	6
  3722  0007D0  6E30               	movwf	___ftadd@sign,c
  3723  0007D2  AE29               	btfss	___ftadd@f1+2,7,c
  3724  0007D4  D002               	goto	i2l2135
  3725  0007D6  8E30               	bsf	___ftadd@sign,7,c
  3726  0007D8  D000               	goto	i2l2135
  3727  0007DA                     i2l2135:
  3728  0007DA  BE2C               	btfsc	___ftadd@f2+2,7,c
  3729  0007DC  8C30               	bsf	___ftadd@sign,6,c
  3730  0007DE  8E28               	bsf	___ftadd@f1+1,7,c
  3731  0007E0  0EFF               	movlw	255
  3732  0007E2  1627               	andwf	___ftadd@f1,f,c
  3733  0007E4  0EFF               	movlw	255
  3734  0007E6  1628               	andwf	___ftadd@f1+1,f,c
  3735  0007E8  0E00               	movlw	0
  3736  0007EA  1629               	andwf	___ftadd@f1+2,f,c
  3737  0007EC  8E2B               	bsf	___ftadd@f2+1,7,c
  3738  0007EE  0EFF               	movlw	255
  3739  0007F0  162A               	andwf	___ftadd@f2,f,c
  3740  0007F2  0EFF               	movlw	255
  3741  0007F4  162B               	andwf	___ftadd@f2+1,f,c
  3742  0007F6  0E00               	movlw	0
  3743  0007F8  162C               	andwf	___ftadd@f2+2,f,c
  3744  0007FA  5031               	movf	___ftadd@exp2,w,c
  3745  0007FC  5C32               	subwf	___ftadd@exp1,w,c
  3746  0007FE  B0D8               	btfsc	status,0,c
  3747  000800  D01E               	goto	i2l2155
  3748  000802                     i2l2145:
  3749  000802  90D8               	bcf	status,0,c
  3750  000804  362A               	rlcf	___ftadd@f2,f,c
  3751  000806  362B               	rlcf	___ftadd@f2+1,f,c
  3752  000808  362C               	rlcf	___ftadd@f2+2,f,c
  3753  00080A  0631               	decf	___ftadd@exp2,f,c
  3754  00080C  5032               	movf	___ftadd@exp1,w,c
  3755  00080E  1831               	xorwf	___ftadd@exp2,w,c
  3756  000810  B4D8               	btfsc	status,2,c
  3757  000812  D00F               	goto	i2l2153
  3758  000814  0630               	decf	___ftadd@sign,f,c
  3759  000816  C030  F02D         	movff	___ftadd@sign,??___ftadd
  3760  00081A  0E07               	movlw	7
  3761  00081C  162D               	andwf	??___ftadd,f,c
  3762  00081E  B4D8               	btfsc	status,2,c
  3763  000820  D008               	goto	i2l2153
  3764  000822  D7EF               	goto	i2l2145
  3765  000824  D006               	goto	i2l2153
  3766  000826                     i2l2151:
  3767  000826  90D8               	bcf	status,0,c
  3768  000828  3229               	rrcf	___ftadd@f1+2,f,c
  3769  00082A  3228               	rrcf	___ftadd@f1+1,f,c
  3770  00082C  3227               	rrcf	___ftadd@f1,f,c
  3771  00082E  2A32               	incf	___ftadd@exp1,f,c
  3772  000830  D000               	goto	i2l2153
  3773  000832                     i2l2153:
  3774  000832  5031               	movf	___ftadd@exp2,w,c
  3775  000834  1832               	xorwf	___ftadd@exp1,w,c
  3776  000836  B4D8               	btfsc	status,2,c
  3777  000838  D024               	goto	i2l891
  3778  00083A  D7F5               	goto	i2l2151
  3779  00083C  D022               	goto	i2l891
  3780  00083E                     i2l2155:
  3781  00083E  5032               	movf	___ftadd@exp1,w,c
  3782  000840  5C31               	subwf	___ftadd@exp2,w,c
  3783  000842  B0D8               	btfsc	status,0,c
  3784  000844  D01E               	goto	i2l891
  3785  000846                     i2l2157:
  3786  000846  90D8               	bcf	status,0,c
  3787  000848  3627               	rlcf	___ftadd@f1,f,c
  3788  00084A  3628               	rlcf	___ftadd@f1+1,f,c
  3789  00084C  3629               	rlcf	___ftadd@f1+2,f,c
  3790  00084E  0632               	decf	___ftadd@exp1,f,c
  3791  000850  5032               	movf	___ftadd@exp1,w,c
  3792  000852  1831               	xorwf	___ftadd@exp2,w,c
  3793  000854  B4D8               	btfsc	status,2,c
  3794  000856  D00F               	goto	i2l2165
  3795  000858  0630               	decf	___ftadd@sign,f,c
  3796  00085A  C030  F02D         	movff	___ftadd@sign,??___ftadd
  3797  00085E  0E07               	movlw	7
  3798  000860  162D               	andwf	??___ftadd,f,c
  3799  000862  B4D8               	btfsc	status,2,c
  3800  000864  D008               	goto	i2l2165
  3801  000866  D7EF               	goto	i2l2157
  3802  000868  D006               	goto	i2l2165
  3803  00086A                     i2l2163:
  3804  00086A  90D8               	bcf	status,0,c
  3805  00086C  322C               	rrcf	___ftadd@f2+2,f,c
  3806  00086E  322B               	rrcf	___ftadd@f2+1,f,c
  3807  000870  322A               	rrcf	___ftadd@f2,f,c
  3808  000872  2A31               	incf	___ftadd@exp2,f,c
  3809  000874  D000               	goto	i2l2165
  3810  000876                     i2l2165:
  3811  000876  5031               	movf	___ftadd@exp2,w,c
  3812  000878  1832               	xorwf	___ftadd@exp1,w,c
  3813  00087A  B4D8               	btfsc	status,2,c
  3814  00087C  D002               	goto	i2l891
  3815  00087E  D7F5               	goto	i2l2163
  3816  000880  D000               	goto	i2l891
  3817  000882                     i2l891:
  3818  000882  AE30               	btfss	___ftadd@sign,7,c
  3819  000884  D00C               	goto	i2l900
  3820  000886  0EFF               	movlw	255
  3821  000888  1A27               	xorwf	___ftadd@f1,f,c
  3822  00088A  0EFF               	movlw	255
  3823  00088C  1A28               	xorwf	___ftadd@f1+1,f,c
  3824  00088E  0EFF               	movlw	255
  3825  000890  1A29               	xorwf	___ftadd@f1+2,f,c
  3826  000892  0E01               	movlw	1
  3827  000894  2627               	addwf	___ftadd@f1,f,c
  3828  000896  0E00               	movlw	0
  3829  000898  2228               	addwfc	___ftadd@f1+1,f,c
  3830  00089A  0E00               	movlw	0
  3831  00089C  2229               	addwfc	___ftadd@f1+2,f,c
  3832  00089E                     i2l900:
  3833  00089E  AC30               	btfss	___ftadd@sign,6,c
  3834  0008A0  D00D               	goto	i2l2171
  3835  0008A2  0EFF               	movlw	255
  3836  0008A4  1A2A               	xorwf	___ftadd@f2,f,c
  3837  0008A6  0EFF               	movlw	255
  3838  0008A8  1A2B               	xorwf	___ftadd@f2+1,f,c
  3839  0008AA  0EFF               	movlw	255
  3840  0008AC  1A2C               	xorwf	___ftadd@f2+2,f,c
  3841  0008AE  0E01               	movlw	1
  3842  0008B0  262A               	addwf	___ftadd@f2,f,c
  3843  0008B2  0E00               	movlw	0
  3844  0008B4  222B               	addwfc	___ftadd@f2+1,f,c
  3845  0008B6  0E00               	movlw	0
  3846  0008B8  222C               	addwfc	___ftadd@f2+2,f,c
  3847  0008BA  D000               	goto	i2l2171
  3848  0008BC                     i2l2171:
  3849  0008BC  0E00               	movlw	0
  3850  0008BE  6E30               	movwf	___ftadd@sign,c
  3851  0008C0  5027               	movf	___ftadd@f1,w,c
  3852  0008C2  262A               	addwf	___ftadd@f2,f,c
  3853  0008C4  5028               	movf	___ftadd@f1+1,w,c
  3854  0008C6  222B               	addwfc	___ftadd@f2+1,f,c
  3855  0008C8  5029               	movf	___ftadd@f1+2,w,c
  3856  0008CA  222C               	addwfc	___ftadd@f2+2,f,c
  3857  0008CC  AE2C               	btfss	___ftadd@f2+2,7,c
  3858  0008CE  D00F               	goto	i2l2181
  3859  0008D0  0EFF               	movlw	255
  3860  0008D2  1A2A               	xorwf	___ftadd@f2,f,c
  3861  0008D4  0EFF               	movlw	255
  3862  0008D6  1A2B               	xorwf	___ftadd@f2+1,f,c
  3863  0008D8  0EFF               	movlw	255
  3864  0008DA  1A2C               	xorwf	___ftadd@f2+2,f,c
  3865  0008DC  0E01               	movlw	1
  3866  0008DE  262A               	addwf	___ftadd@f2,f,c
  3867  0008E0  0E00               	movlw	0
  3868  0008E2  222B               	addwfc	___ftadd@f2+1,f,c
  3869  0008E4  0E00               	movlw	0
  3870  0008E6  222C               	addwfc	___ftadd@f2+2,f,c
  3871  0008E8  0E01               	movlw	1
  3872  0008EA  6E30               	movwf	___ftadd@sign,c
  3873  0008EC  D000               	goto	i2l2181
  3874  0008EE                     i2l2181:
  3875  0008EE  C02A  F001         	movff	___ftadd@f2,___ftpack@arg
  3876  0008F2  C02B  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3877  0008F6  C02C  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3878  0008FA  C032  F004         	movff	___ftadd@exp1,___ftpack@exp
  3879  0008FE  C030  F005         	movff	___ftadd@sign,___ftpack@sign
  3880  000902  ECEB  F005         	call	___ftpack	;wreg free
  3881  000906  C001  F027         	movff	?___ftpack,?___ftadd
  3882  00090A  C002  F028         	movff	?___ftpack+1,?___ftadd+1
  3883  00090E  C003  F029         	movff	?___ftpack+2,?___ftadd+2
  3884  000912  D000               	goto	i2l877
  3885  000914                     i2l877:
  3886  000914  0012               	return		;funcret
  3887  000916                     __end_of___ftadd:
  3888                           	opt stack 0
  3889                           pclatu	equ	0xFFB
  3890                           pclath	equ	0xFFA
  3891                           tblptru	equ	0xFF8
  3892                           tblptrh	equ	0xFF7
  3893                           tblptrl	equ	0xFF6
  3894                           tablat	equ	0xFF5
  3895                           prodh	equ	0xFF4
  3896                           prodl	equ	0xFF3
  3897                           intcon	equ	0xFF2
  3898                           intcon2	equ	0xFF1
  3899                           postinc0	equ	0xFEE
  3900                           fsr0h	equ	0xFEA
  3901                           fsr0l	equ	0xFE9
  3902                           wreg	equ	0xFE8
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _RTD2Angle *****************
  3911 ;; Defined at:
  3912 ;;		line 97 in file "ResolverToDigital.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  RTDAngle        2   38[COMRAM] unsigned int 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  3   38[COMRAM] unsigned int 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        3 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    2
  3933 ;; This function calls:
  3934 ;;		___ftmul
  3935 ;;		___lwtoft
  3936 ;; This function is called by:
  3937 ;;		_TMR0Int
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text26
  3942  0011C6                     __ptext26:
  3943                           	opt stack 0
  3944  0011C6                     _RTD2Angle:
  3945                           	opt stack 21
  3946                           
  3947                           ;ResolverToDigital.c: 99: return 0.087890625 * RTDAngle;
  3948                           
  3949                           ;incstack = 0
  3950  0011C6  C027  F009         	movff	RTD2Angle@RTDAngle,___lwtoft@c
  3951  0011CA  C028  F00A         	movff	RTD2Angle@RTDAngle+1,___lwtoft@c+1
  3952  0011CE  EC6A  F009         	call	___lwtoft	;wreg free
  3953  0011D2  C009  F018         	movff	?___lwtoft,___ftmul@f1
  3954  0011D6  C00A  F019         	movff	?___lwtoft+1,___ftmul@f1+1
  3955  0011DA  C00B  F01A         	movff	?___lwtoft+2,___ftmul@f1+2
  3956  0011DE  0E00               	movlw	0
  3957  0011E0  6E1B               	movwf	___ftmul@f2,c
  3958  0011E2  0EB4               	movlw	180
  3959  0011E4  6E1C               	movwf	___ftmul@f2+1,c
  3960  0011E6  0E3D               	movlw	61
  3961  0011E8  6E1D               	movwf	___ftmul@f2+2,c
  3962  0011EA  EC8B  F004         	call	___ftmul	;wreg free
  3963  0011EE  C018  F027         	movff	?___ftmul,?_RTD2Angle
  3964  0011F2  C019  F028         	movff	?___ftmul+1,?_RTD2Angle+1
  3965  0011F6  C01A  F029         	movff	?___ftmul+2,?_RTD2Angle+2
  3966  0011FA  D000               	goto	i2l213
  3967  0011FC                     i2l213:
  3968  0011FC  0012               	return		;funcret
  3969  0011FE                     __end_of_RTD2Angle:
  3970                           	opt stack 0
  3971                           pclatu	equ	0xFFB
  3972                           pclath	equ	0xFFA
  3973                           tblptru	equ	0xFF8
  3974                           tblptrh	equ	0xFF7
  3975                           tblptrl	equ	0xFF6
  3976                           tablat	equ	0xFF5
  3977                           prodh	equ	0xFF4
  3978                           prodl	equ	0xFF3
  3979                           intcon	equ	0xFF2
  3980                           intcon2	equ	0xFF1
  3981                           postinc0	equ	0xFEE
  3982                           fsr0h	equ	0xFEA
  3983                           fsr0l	equ	0xFE9
  3984                           wreg	equ	0xFE8
  3985                           fsr1h	equ	0xFE2
  3986                           fsr1l	equ	0xFE1
  3987                           indf2	equ	0xFDF
  3988                           fsr2h	equ	0xFDA
  3989                           fsr2l	equ	0xFD9
  3990                           status	equ	0xFD8
  3991                           
  3992 ;; *************** function ___lwtoft *****************
  3993 ;; Defined at:
  3994 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  c               2    8[COMRAM] unsigned int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  3    8[COMRAM] float 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4008 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;Total ram usage:        3 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		___ftpack
  4017 ;; This function is called by:
  4018 ;;		_RTD2Angle
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text27
  4023  0012D4                     __ptext27:
  4024                           	opt stack 0
  4025  0012D4                     ___lwtoft:
  4026                           	opt stack 21
  4027                           
  4028                           ;incstack = 0
  4029  0012D4  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  4030  0012D8  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  4031  0012DC  6A03               	clrf	___ftpack@arg+2,c
  4032  0012DE  0E8E               	movlw	142
  4033  0012E0  6E04               	movwf	___ftpack@exp,c
  4034  0012E2  0E00               	movlw	0
  4035  0012E4  6E05               	movwf	___ftpack@sign,c
  4036  0012E6  ECEB  F005         	call	___ftpack	;wreg free
  4037  0012EA  C001  F009         	movff	?___ftpack,?___lwtoft
  4038  0012EE  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  4039  0012F2  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  4040  0012F6  D000               	goto	i2l1073
  4041  0012F8                     i2l1073:
  4042  0012F8  0012               	return		;funcret
  4043  0012FA                     __end_of___lwtoft:
  4044                           	opt stack 0
  4045                           pclatu	equ	0xFFB
  4046                           pclath	equ	0xFFA
  4047                           tblptru	equ	0xFF8
  4048                           tblptrh	equ	0xFF7
  4049                           tblptrl	equ	0xFF6
  4050                           tablat	equ	0xFF5
  4051                           prodh	equ	0xFF4
  4052                           prodl	equ	0xFF3
  4053                           intcon	equ	0xFF2
  4054                           intcon2	equ	0xFF1
  4055                           postinc0	equ	0xFEE
  4056                           fsr0h	equ	0xFEA
  4057                           fsr0l	equ	0xFE9
  4058                           wreg	equ	0xFE8
  4059                           fsr1h	equ	0xFE2
  4060                           fsr1l	equ	0xFE1
  4061                           indf2	equ	0xFDF
  4062                           fsr2h	equ	0xFDA
  4063                           fsr2l	equ	0xFD9
  4064                           status	equ	0xFD8
  4065                           
  4066 ;; *************** function ___ftmul *****************
  4067 ;; Defined at:
  4068 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  f1              3   23[COMRAM] float 
  4071 ;;  f2              3   26[COMRAM] float 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  f3_as_produc    3   33[COMRAM] unsigned um
  4074 ;;  sign            1   37[COMRAM] unsigned char 
  4075 ;;  cntr            1   36[COMRAM] unsigned char 
  4076 ;;  exp             1   32[COMRAM] unsigned char 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  3   23[COMRAM] float 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4086 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;Total ram usage:       15 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    1
  4093 ;; This function calls:
  4094 ;;		___ftpack
  4095 ;; This function is called by:
  4096 ;;		_calculatePID
  4097 ;;		_RTD2Angle
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text28
  4102  000916                     __ptext28:
  4103                           	opt stack 0
  4104  000916                     ___ftmul:
  4105                           	opt stack 21
  4106                           
  4107                           ;incstack = 0
  4108  000916  C01A  F01E         	movff	___ftmul@f1+2,??___ftmul
  4109  00091A  6A1F               	clrf	(??___ftmul+1)& (0+255),c
  4110  00091C  6A20               	clrf	(??___ftmul+2)& (0+255),c
  4111  00091E  3419               	rlcf	___ftmul@f1+1,w,c
  4112  000920  361E               	rlcf	??___ftmul& (0+255),f,c
  4113  000922  E301               	bnc	u149_41
  4114  000924  801F               	bsf	(??___ftmul+1)& (0+255),0,c
  4115  000926                     u149_41:
  4116  000926  501E               	movf	??___ftmul,w,c
  4117  000928  6E21               	movwf	___ftmul@exp,c
  4118  00092A  5021               	movf	___ftmul@exp,w,c
  4119  00092C  A4D8               	btfss	status,2,c
  4120  00092E  D002               	goto	i2l2237
  4121  000930  D00E               	goto	i2l2239
  4122  000932  D06C               	goto	i2l923
  4123  000934                     i2l2237:
  4124  000934  C01D  F01E         	movff	___ftmul@f2+2,??___ftmul
  4125  000938  6A1F               	clrf	(??___ftmul+1)& (0+255),c
  4126  00093A  6A20               	clrf	(??___ftmul+2)& (0+255),c
  4127  00093C  341C               	rlcf	___ftmul@f2+1,w,c
  4128  00093E  361E               	rlcf	??___ftmul& (0+255),f,c
  4129  000940  E301               	bnc	u151_41
  4130  000942  801F               	bsf	(??___ftmul+1)& (0+255),0,c
  4131  000944                     u151_41:
  4132  000944  501E               	movf	??___ftmul,w,c
  4133  000946  6E26               	movwf	___ftmul@sign,c
  4134  000948  5026               	movf	___ftmul@sign,w,c
  4135  00094A  A4D8               	btfss	status,2,c
  4136  00094C  D007               	goto	i2l2243
  4137  00094E                     i2l2239:
  4138  00094E  0E00               	movlw	0
  4139  000950  6E18               	movwf	?___ftmul,c
  4140  000952  0E00               	movlw	0
  4141  000954  6E19               	movwf	?___ftmul+1,c
  4142  000956  0E00               	movlw	0
  4143  000958  6E1A               	movwf	?___ftmul+2,c
  4144  00095A  D058               	goto	i2l923
  4145  00095C                     i2l2243:
  4146  00095C  5026               	movf	___ftmul@sign,w,c
  4147  00095E  0F7B               	addlw	123
  4148  000960  2621               	addwf	___ftmul@exp,f,c
  4149  000962  C01A  F026         	movff	___ftmul@f1+2,___ftmul@sign
  4150  000966  501D               	movf	___ftmul@f2+2,w,c
  4151  000968  1A26               	xorwf	___ftmul@sign,f,c
  4152  00096A  0E80               	movlw	128
  4153  00096C  1626               	andwf	___ftmul@sign,f,c
  4154  00096E  8E19               	bsf	___ftmul@f1+1,7,c
  4155  000970  8E1C               	bsf	___ftmul@f2+1,7,c
  4156  000972  0EFF               	movlw	255
  4157  000974  161B               	andwf	___ftmul@f2,f,c
  4158  000976  0EFF               	movlw	255
  4159  000978  161C               	andwf	___ftmul@f2+1,f,c
  4160  00097A  0E00               	movlw	0
  4161  00097C  161D               	andwf	___ftmul@f2+2,f,c
  4162  00097E  0E00               	movlw	0
  4163  000980  6E22               	movwf	___ftmul@f3_as_product,c
  4164  000982  0E00               	movlw	0
  4165  000984  6E23               	movwf	___ftmul@f3_as_product+1,c
  4166  000986  0E00               	movlw	0
  4167  000988  6E24               	movwf	___ftmul@f3_as_product+2,c
  4168  00098A  0E07               	movlw	7
  4169  00098C  6E25               	movwf	___ftmul@cntr,c
  4170  00098E  D000               	goto	i2l2257
  4171  000990                     i2l2257:
  4172  000990  A018               	btfss	___ftmul@f1,0,c
  4173  000992  D007               	goto	i2l2261
  4174  000994  501B               	movf	___ftmul@f2,w,c
  4175  000996  2622               	addwf	___ftmul@f3_as_product,f,c
  4176  000998  501C               	movf	___ftmul@f2+1,w,c
  4177  00099A  2223               	addwfc	___ftmul@f3_as_product+1,f,c
  4178  00099C  501D               	movf	___ftmul@f2+2,w,c
  4179  00099E  2224               	addwfc	___ftmul@f3_as_product+2,f,c
  4180  0009A0  D000               	goto	i2l2261
  4181  0009A2                     i2l2261:
  4182  0009A2  90D8               	bcf	status,0,c
  4183  0009A4  321A               	rrcf	___ftmul@f1+2,f,c
  4184  0009A6  3219               	rrcf	___ftmul@f1+1,f,c
  4185  0009A8  3218               	rrcf	___ftmul@f1,f,c
  4186  0009AA  90D8               	bcf	status,0,c
  4187  0009AC  361B               	rlcf	___ftmul@f2,f,c
  4188  0009AE  361C               	rlcf	___ftmul@f2+1,f,c
  4189  0009B0  361D               	rlcf	___ftmul@f2+2,f,c
  4190  0009B2  2E25               	decfsz	___ftmul@cntr,f,c
  4191  0009B4  D7ED               	goto	i2l2257
  4192  0009B6  D000               	goto	i2l2265
  4193  0009B8                     i2l2265:
  4194  0009B8  0E09               	movlw	9
  4195  0009BA  6E25               	movwf	___ftmul@cntr,c
  4196  0009BC  D000               	goto	i2l2267
  4197  0009BE                     i2l2267:
  4198  0009BE  A018               	btfss	___ftmul@f1,0,c
  4199  0009C0  D007               	goto	i2l2271
  4200  0009C2  501B               	movf	___ftmul@f2,w,c
  4201  0009C4  2622               	addwf	___ftmul@f3_as_product,f,c
  4202  0009C6  501C               	movf	___ftmul@f2+1,w,c
  4203  0009C8  2223               	addwfc	___ftmul@f3_as_product+1,f,c
  4204  0009CA  501D               	movf	___ftmul@f2+2,w,c
  4205  0009CC  2224               	addwfc	___ftmul@f3_as_product+2,f,c
  4206  0009CE  D000               	goto	i2l2271
  4207  0009D0                     i2l2271:
  4208  0009D0  90D8               	bcf	status,0,c
  4209  0009D2  321A               	rrcf	___ftmul@f1+2,f,c
  4210  0009D4  3219               	rrcf	___ftmul@f1+1,f,c
  4211  0009D6  3218               	rrcf	___ftmul@f1,f,c
  4212  0009D8  90D8               	bcf	status,0,c
  4213  0009DA  3224               	rrcf	___ftmul@f3_as_product+2,f,c
  4214  0009DC  3223               	rrcf	___ftmul@f3_as_product+1,f,c
  4215  0009DE  3222               	rrcf	___ftmul@f3_as_product,f,c
  4216  0009E0  2E25               	decfsz	___ftmul@cntr,f,c
  4217  0009E2  D7ED               	goto	i2l2267
  4218  0009E4  D000               	goto	i2l2275
  4219  0009E6                     i2l2275:
  4220  0009E6  C022  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4221  0009EA  C023  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4222  0009EE  C024  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4223  0009F2  C021  F004         	movff	___ftmul@exp,___ftpack@exp
  4224  0009F6  C026  F005         	movff	___ftmul@sign,___ftpack@sign
  4225  0009FA  ECEB  F005         	call	___ftpack	;wreg free
  4226  0009FE  C001  F018         	movff	?___ftpack,?___ftmul
  4227  000A02  C002  F019         	movff	?___ftpack+1,?___ftmul+1
  4228  000A06  C003  F01A         	movff	?___ftpack+2,?___ftmul+2
  4229  000A0A  D000               	goto	i2l923
  4230  000A0C                     i2l923:
  4231  000A0C  0012               	return		;funcret
  4232  000A0E                     __end_of___ftmul:
  4233                           	opt stack 0
  4234                           pclatu	equ	0xFFB
  4235                           pclath	equ	0xFFA
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           intcon	equ	0xFF2
  4243                           intcon2	equ	0xFF1
  4244                           postinc0	equ	0xFEE
  4245                           fsr0h	equ	0xFEA
  4246                           fsr0l	equ	0xFE9
  4247                           wreg	equ	0xFE8
  4248                           fsr1h	equ	0xFE2
  4249                           fsr1l	equ	0xFE1
  4250                           indf2	equ	0xFDF
  4251                           fsr2h	equ	0xFDA
  4252                           fsr2l	equ	0xFD9
  4253                           status	equ	0xFD8
  4254                           
  4255 ;; *************** function ___ftpack *****************
  4256 ;; Defined at:
  4257 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  arg             3    0[COMRAM] unsigned um
  4260 ;;  exp             1    3[COMRAM] unsigned char 
  4261 ;;  sign            1    4[COMRAM] unsigned char 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  3    0[COMRAM] float 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4273 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;Total ram usage:        8 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		___ftadd
  4283 ;;		___ftdiv
  4284 ;;		___ftmul
  4285 ;;		___lwtoft
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text29
  4290  000BD6                     __ptext29:
  4291                           	opt stack 0
  4292  000BD6                     ___ftpack:
  4293                           	opt stack 21
  4294                           
  4295                           ;incstack = 0
  4296  000BD6  5004               	movf	___ftpack@exp,w,c
  4297  000BD8  B4D8               	btfsc	status,2,c
  4298  000BDA  D005               	goto	i2l2009
  4299  000BDC  5001               	movf	___ftpack@arg,w,c
  4300  000BDE  1002               	iorwf	___ftpack@arg+1,w,c
  4301  000BE0  1003               	iorwf	___ftpack@arg+2,w,c
  4302  000BE2  A4D8               	btfss	status,2,c
  4303  000BE4  D00E               	goto	i2l2015
  4304  000BE6                     i2l2009:
  4305  000BE6  0E00               	movlw	0
  4306  000BE8  6E01               	movwf	?___ftpack,c
  4307  000BEA  0E00               	movlw	0
  4308  000BEC  6E02               	movwf	?___ftpack+1,c
  4309  000BEE  0E00               	movlw	0
  4310  000BF0  6E03               	movwf	?___ftpack+2,c
  4311  000BF2  D053               	goto	i2l836
  4312  000BF4  D006               	goto	i2l2015
  4313  000BF6                     i2l2013:
  4314  000BF6  2A04               	incf	___ftpack@exp,f,c
  4315  000BF8  90D8               	bcf	status,0,c
  4316  000BFA  3203               	rrcf	___ftpack@arg+2,f,c
  4317  000BFC  3202               	rrcf	___ftpack@arg+1,f,c
  4318  000BFE  3201               	rrcf	___ftpack@arg,f,c
  4319  000C00  D000               	goto	i2l2015
  4320  000C02                     i2l2015:
  4321  000C02  0E00               	movlw	0
  4322  000C04  1401               	andwf	___ftpack@arg,w,c
  4323  000C06  6E06               	movwf	??___ftpack& (0+255),c
  4324  000C08  0E00               	movlw	0
  4325  000C0A  1402               	andwf	___ftpack@arg+1,w,c
  4326  000C0C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4327  000C0E  0EFE               	movlw	254
  4328  000C10  1403               	andwf	___ftpack@arg+2,w,c
  4329  000C12  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4330  000C14  5006               	movf	??___ftpack,w,c
  4331  000C16  1007               	iorwf	??___ftpack+1,w,c
  4332  000C18  1008               	iorwf	??___ftpack+2,w,c
  4333  000C1A  B4D8               	btfsc	status,2,c
  4334  000C1C  D00E               	goto	i2l2021
  4335  000C1E  D7EB               	goto	i2l2013
  4336  000C20  D00C               	goto	i2l2021
  4337  000C22                     i2l2017:
  4338  000C22  2A04               	incf	___ftpack@exp,f,c
  4339  000C24  0E01               	movlw	1
  4340  000C26  2601               	addwf	___ftpack@arg,f,c
  4341  000C28  0E00               	movlw	0
  4342  000C2A  2202               	addwfc	___ftpack@arg+1,f,c
  4343  000C2C  0E00               	movlw	0
  4344  000C2E  2203               	addwfc	___ftpack@arg+2,f,c
  4345  000C30  90D8               	bcf	status,0,c
  4346  000C32  3203               	rrcf	___ftpack@arg+2,f,c
  4347  000C34  3202               	rrcf	___ftpack@arg+1,f,c
  4348  000C36  3201               	rrcf	___ftpack@arg,f,c
  4349  000C38  D000               	goto	i2l2021
  4350  000C3A                     i2l2021:
  4351  000C3A  0E00               	movlw	0
  4352  000C3C  1401               	andwf	___ftpack@arg,w,c
  4353  000C3E  6E06               	movwf	??___ftpack& (0+255),c
  4354  000C40  0E00               	movlw	0
  4355  000C42  1402               	andwf	___ftpack@arg+1,w,c
  4356  000C44  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4357  000C46  0EFF               	movlw	255
  4358  000C48  1403               	andwf	___ftpack@arg+2,w,c
  4359  000C4A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4360  000C4C  5006               	movf	??___ftpack,w,c
  4361  000C4E  1007               	iorwf	??___ftpack+1,w,c
  4362  000C50  1008               	iorwf	??___ftpack+2,w,c
  4363  000C52  B4D8               	btfsc	status,2,c
  4364  000C54  D008               	goto	i2l2025
  4365  000C56  D7E5               	goto	i2l2017
  4366  000C58  D006               	goto	i2l2025
  4367  000C5A                     i2l2023:
  4368  000C5A  0604               	decf	___ftpack@exp,f,c
  4369  000C5C  90D8               	bcf	status,0,c
  4370  000C5E  3601               	rlcf	___ftpack@arg,f,c
  4371  000C60  3602               	rlcf	___ftpack@arg+1,f,c
  4372  000C62  3603               	rlcf	___ftpack@arg+2,f,c
  4373  000C64  D000               	goto	i2l2025
  4374  000C66                     i2l2025:
  4375  000C66  BE02               	btfsc	___ftpack@arg+1,7,c
  4376  000C68  D004               	goto	i2l847
  4377  000C6A  0E02               	movlw	2
  4378  000C6C  6004               	cpfslt	___ftpack@exp,c
  4379  000C6E  D7F5               	goto	i2l2023
  4380  000C70  D000               	goto	i2l847
  4381  000C72                     i2l847:
  4382  000C72  B004               	btfsc	___ftpack@exp,0,c
  4383  000C74  D002               	goto	i2l2031
  4384  000C76  9E02               	bcf	___ftpack@arg+1,7,c
  4385  000C78  D000               	goto	i2l2031
  4386  000C7A                     i2l2031:
  4387  000C7A  90D8               	bcf	status,0,c
  4388  000C7C  3204               	rrcf	___ftpack@exp,f,c
  4389  000C7E  5004               	movf	___ftpack@exp,w,c
  4390  000C80  1203               	iorwf	___ftpack@arg+2,f,c
  4391  000C82  5005               	movf	___ftpack@sign,w,c
  4392  000C84  B4D8               	btfsc	status,2,c
  4393  000C86  D002               	goto	i2l2037
  4394  000C88  8E03               	bsf	___ftpack@arg+2,7,c
  4395  000C8A  D000               	goto	i2l2037
  4396  000C8C                     i2l2037:
  4397  000C8C  C001  F001         	movff	___ftpack@arg,?___ftpack
  4398  000C90  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4399  000C94  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4400  000C98  D000               	goto	i2l836
  4401  000C9A                     i2l836:
  4402  000C9A  0012               	return		;funcret
  4403  000C9C                     __end_of___ftpack:
  4404                           	opt stack 0
  4405                           pclatu	equ	0xFFB
  4406                           pclath	equ	0xFFA
  4407                           tblptru	equ	0xFF8
  4408                           tblptrh	equ	0xFF7
  4409                           tblptrl	equ	0xFF6
  4410                           tablat	equ	0xFF5
  4411                           prodh	equ	0xFF4
  4412                           prodl	equ	0xFF3
  4413                           intcon	equ	0xFF2
  4414                           intcon2	equ	0xFF1
  4415                           postinc0	equ	0xFEE
  4416                           fsr0h	equ	0xFEA
  4417                           fsr0l	equ	0xFE9
  4418                           wreg	equ	0xFE8
  4419                           fsr1h	equ	0xFE2
  4420                           fsr1l	equ	0xFE1
  4421                           indf2	equ	0xFDF
  4422                           fsr2h	equ	0xFDA
  4423                           fsr2l	equ	0xFD9
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _ImplementPIDMotion *****************
  4427 ;; Defined at:
  4428 ;;		line 33 in file "MotorControl.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  PIDValue        2    4[COMRAM] int 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:        4 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    1
  4449 ;; This function calls:
  4450 ;;		_abs
  4451 ;; This function is called by:
  4452 ;;		_TMR0Int
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text30
  4457  000FCA                     __ptext30:
  4458                           	opt stack 0
  4459  000FCA                     _ImplementPIDMotion:
  4460                           	opt stack 22
  4461                           
  4462                           ;MotorControl.c: 35: if (PIDValue < 0)
  4463                           
  4464                           ;incstack = 0
  4465  000FCA  AE06               	btfss	ImplementPIDMotion@PIDValue+1,7,c
  4466  000FCC  D002               	goto	i2l2381
  4467                           
  4468                           ;MotorControl.c: 36: CCP3CONbits.P3M1 = 1;
  4469  000FCE  8EB7               	bsf	4023,7,c	;volatile
  4470  000FD0  D009               	goto	i2l2385
  4471  000FD2                     i2l2381:
  4472                           
  4473                           ;MotorControl.c: 37: else if (PIDValue > 0)
  4474  000FD2  BE06               	btfsc	ImplementPIDMotion@PIDValue+1,7,c
  4475  000FD4  D007               	goto	i2l2385
  4476  000FD6  5006               	movf	ImplementPIDMotion@PIDValue+1,w,c
  4477  000FD8  E103               	bnz	i2u171_40
  4478  000FDA  0405               	decf	ImplementPIDMotion@PIDValue,w,c
  4479  000FDC  A0D8               	btfss	status,0,c
  4480  000FDE  D002               	goto	i2l2385
  4481  000FE0                     i2u171_40:
  4482                           
  4483                           ;MotorControl.c: 38: CCP3CONbits.P3M1 = 0;
  4484  000FE0  9EB7               	bcf	4023,7,c	;volatile
  4485  000FE2  D000               	goto	i2l2385
  4486  000FE4                     i2l2385:
  4487                           
  4488                           ;MotorControl.c: 40: PIDValue = abs(PIDValue);
  4489  000FE4  C005  F001         	movff	ImplementPIDMotion@PIDValue,abs@a
  4490  000FE8  C006  F002         	movff	ImplementPIDMotion@PIDValue+1,abs@a+1
  4491  000FEC  EC56  F009         	call	_abs	;wreg free
  4492  000FF0  C001  F005         	movff	?_abs,ImplementPIDMotion@PIDValue
  4493  000FF4  C002  F006         	movff	?_abs+1,ImplementPIDMotion@PIDValue+1
  4494                           
  4495                           ;MotorControl.c: 41: CCPR3L = (PIDValue >> 2) & 0xFF;
  4496  000FF8  C005  F007         	movff	ImplementPIDMotion@PIDValue,??_ImplementPIDMotion
  4497  000FFC  C006  F008         	movff	ImplementPIDMotion@PIDValue+1,??_ImplementPIDMotion+1
  4498  001000  3408               	rlcf	??_ImplementPIDMotion+1,w,c
  4499  001002  3208               	rrcf	??_ImplementPIDMotion+1,f,c
  4500  001004  3207               	rrcf	??_ImplementPIDMotion,f,c
  4501  001006  3408               	rlcf	??_ImplementPIDMotion+1,w,c
  4502  001008  3208               	rrcf	??_ImplementPIDMotion+1,f,c
  4503  00100A  3207               	rrcf	??_ImplementPIDMotion,f,c
  4504  00100C  5007               	movf	??_ImplementPIDMotion,w,c
  4505  00100E  6EB8               	movwf	4024,c	;volatile
  4506                           
  4507                           ;MotorControl.c: 42: CCP3CONbits.DC3B = (PIDValue & 0x03);
  4508  001010  C005  F007         	movff	ImplementPIDMotion@PIDValue,??_ImplementPIDMotion
  4509  001014  0E03               	movlw	3
  4510  001016  1607               	andwf	??_ImplementPIDMotion,f,c
  4511  001018  3A07               	swapf	??_ImplementPIDMotion,f,c
  4512  00101A  50B7               	movf	4023,w,c	;volatile
  4513  00101C  1807               	xorwf	??_ImplementPIDMotion,w,c
  4514  00101E  0BCF               	andlw	-49
  4515  001020  1807               	xorwf	??_ImplementPIDMotion,w,c
  4516  001022  6EB7               	movwf	4023,c	;volatile
  4517  001024  0012               	return		;funcret
  4518  001026                     __end_of_ImplementPIDMotion:
  4519                           	opt stack 0
  4520                           pclatu	equ	0xFFB
  4521                           pclath	equ	0xFFA
  4522                           tblptru	equ	0xFF8
  4523                           tblptrh	equ	0xFF7
  4524                           tblptrl	equ	0xFF6
  4525                           tablat	equ	0xFF5
  4526                           prodh	equ	0xFF4
  4527                           prodl	equ	0xFF3
  4528                           intcon	equ	0xFF2
  4529                           intcon2	equ	0xFF1
  4530                           postinc0	equ	0xFEE
  4531                           fsr0h	equ	0xFEA
  4532                           fsr0l	equ	0xFE9
  4533                           wreg	equ	0xFE8
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           indf2	equ	0xFDF
  4537                           fsr2h	equ	0xFDA
  4538                           fsr2l	equ	0xFD9
  4539                           status	equ	0xFD8
  4540                           
  4541 ;; *************** function _abs *****************
  4542 ;; Defined at:
  4543 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/abs.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  a               2    0[COMRAM] int 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  2    0[COMRAM] int 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;Total ram usage:        4 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_ImplementPIDMotion
  4567 ;;		_ImplementJSMotion
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text31
  4572  0012AC                     __ptext31:
  4573                           	opt stack 0
  4574  0012AC                     _abs:
  4575                           	opt stack 22
  4576                           
  4577                           ;incstack = 0
  4578  0012AC  AE02               	btfss	abs@a+1,7,c
  4579  0012AE  D00D               	goto	i2l550
  4580  0012B0  C001  F003         	movff	abs@a,??_abs
  4581  0012B4  C002  F004         	movff	abs@a+1,??_abs+1
  4582  0012B8  1E03               	comf	??_abs,f,c
  4583  0012BA  1E04               	comf	??_abs+1,f,c
  4584  0012BC  4A03               	infsnz	??_abs,f,c
  4585  0012BE  2A04               	incf	??_abs+1,f,c
  4586  0012C0  C003  F001         	movff	??_abs,?_abs
  4587  0012C4  C004  F002         	movff	??_abs+1,?_abs+1
  4588  0012C8  D004               	goto	i2l551
  4589  0012CA                     i2l550:
  4590  0012CA  C001  F001         	movff	abs@a,?_abs
  4591  0012CE  C002  F002         	movff	abs@a+1,?_abs+1
  4592  0012D2                     i2l551:
  4593  0012D2  0012               	return		;funcret
  4594  0012D4                     __end_of_abs:
  4595                           	opt stack 0
  4596                           pclatu	equ	0xFFB
  4597                           pclath	equ	0xFFA
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           prodh	equ	0xFF4
  4603                           prodl	equ	0xFF3
  4604                           intcon	equ	0xFF2
  4605                           intcon2	equ	0xFF1
  4606                           postinc0	equ	0xFEE
  4607                           fsr0h	equ	0xFEA
  4608                           fsr0l	equ	0xFE9
  4609                           wreg	equ	0xFE8
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           fsr2h	equ	0xFDA
  4614                           fsr2l	equ	0xFD9
  4615                           status	equ	0xFD8
  4616                           
  4617 ;; *************** function _INT0Int *****************
  4618 ;; Defined at:
  4619 ;;		line 69 in file "MotorControl.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;		None               void
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    1
  4640 ;; This function calls:
  4641 ;;		_KillMotors
  4642 ;; This function is called by:
  4643 ;;		_ISR
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text32
  4648  001422                     __ptext32:
  4649                           	opt stack 0
  4650  001422                     _INT0Int:
  4651                           	opt stack 23
  4652                           
  4653                           ;MotorControl.c: 71: KillMotors();
  4654                           
  4655                           ;incstack = 0
  4656  001422  EC08  F00A         	call	_KillMotors	;wreg free
  4657                           
  4658                           ;MotorControl.c: 72: INTCONbits.INT0IF = 0;
  4659  001426  92F2               	bcf	intcon,1,c	;volatile
  4660  001428  0012               	return		;funcret
  4661  00142A                     __end_of_INT0Int:
  4662                           	opt stack 0
  4663                           pclatu	equ	0xFFB
  4664                           pclath	equ	0xFFA
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           intcon	equ	0xFF2
  4672                           intcon2	equ	0xFF1
  4673                           postinc0	equ	0xFEE
  4674                           fsr0h	equ	0xFEA
  4675                           fsr0l	equ	0xFE9
  4676                           wreg	equ	0xFE8
  4677                           fsr1h	equ	0xFE2
  4678                           fsr1l	equ	0xFE1
  4679                           indf2	equ	0xFDF
  4680                           fsr2h	equ	0xFDA
  4681                           fsr2l	equ	0xFD9
  4682                           status	equ	0xFD8
  4683                           
  4684 ;; *************** function _KillMotors *****************
  4685 ;; Defined at:
  4686 ;;		line 27 in file "MotorControl.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;		None               void
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;Total ram usage:        0 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_INT0Int
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text33
  4714  001410                     __ptext33:
  4715                           	opt stack 0
  4716  001410                     _KillMotors:
  4717                           	opt stack 23
  4718                           
  4719                           ;MotorControl.c: 29: PORTAbits.RA4 = 1;
  4720                           
  4721                           ;incstack = 0
  4722  001410  8880               	bsf	3968,4,c	;volatile
  4723                           
  4724                           ;MotorControl.c: 30: CCP3CON = CCP3CON & 0xF0;
  4725  001412  50B7               	movf	4023,w,c	;volatile
  4726  001414  0BF0               	andlw	240
  4727  001416  6EB7               	movwf	4023,c	;volatile
  4728  001418  0012               	return		;funcret
  4729  00141A                     __end_of_KillMotors:
  4730                           	opt stack 0
  4731                           pclatu	equ	0xFFB
  4732                           pclath	equ	0xFFA
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           intcon	equ	0xFF2
  4740                           intcon2	equ	0xFF1
  4741                           postinc0	equ	0xFEE
  4742                           fsr0h	equ	0xFEA
  4743                           fsr0l	equ	0xFE9
  4744                           wreg	equ	0xFE8
  4745                           fsr1h	equ	0xFE2
  4746                           fsr1l	equ	0xFE1
  4747                           indf2	equ	0xFDF
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function _HLVDInt *****************
  4753 ;; Defined at:
  4754 ;;		line 150 in file "EEPROM.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;		None
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;		None               void
  4761 ;; Registers used:
  4762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:        0 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    2
  4775 ;; This function calls:
  4776 ;;		_EEWriteChar
  4777 ;;		_EEWriteDouble
  4778 ;; This function is called by:
  4779 ;;		_ISR
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text34
  4784  000C9C                     __ptext34:
  4785                           	opt stack 0
  4786  000C9C                     _HLVDInt:
  4787                           	opt stack 22
  4788                           
  4789                           ;EEPROM.c: 152: EEWriteDouble(0x00, SetAngle);
  4790                           
  4791                           ;incstack = 0
  4792  000C9C  C076  F005         	movff	_SetAngle,EEWriteDouble@dub
  4793  000CA0  C077  F006         	movff	_SetAngle+1,EEWriteDouble@dub+1
  4794  000CA4  C078  F007         	movff	_SetAngle+2,EEWriteDouble@dub+2
  4795  000CA8  0E00               	movlw	0
  4796  000CAA  EC13  F008         	call	_EEWriteDouble
  4797                           
  4798                           ;EEPROM.c: 153: EEWriteDouble(0x03, Kp);
  4799  000CAE  C073  F005         	movff	_Kp,EEWriteDouble@dub
  4800  000CB2  C074  F006         	movff	_Kp+1,EEWriteDouble@dub+1
  4801  000CB6  C075  F007         	movff	_Kp+2,EEWriteDouble@dub+2
  4802  000CBA  0E03               	movlw	3
  4803  000CBC  EC13  F008         	call	_EEWriteDouble
  4804                           
  4805                           ;EEPROM.c: 154: EEWriteDouble(0x06, Ki);
  4806  000CC0  C070  F005         	movff	_Ki,EEWriteDouble@dub
  4807  000CC4  C071  F006         	movff	_Ki+1,EEWriteDouble@dub+1
  4808  000CC8  C072  F007         	movff	_Ki+2,EEWriteDouble@dub+2
  4809  000CCC  0E06               	movlw	6
  4810  000CCE  EC13  F008         	call	_EEWriteDouble
  4811                           
  4812                           ;EEPROM.c: 155: EEWriteDouble(0x09, Kd);
  4813  000CD2  C06D  F005         	movff	_Kd,EEWriteDouble@dub
  4814  000CD6  C06E  F006         	movff	_Kd+1,EEWriteDouble@dub+1
  4815  000CDA  C06F  F007         	movff	_Kd+2,EEWriteDouble@dub+2
  4816  000CDE  0E09               	movlw	9
  4817  000CE0  EC13  F008         	call	_EEWriteDouble
  4818                           
  4819                           ;EEPROM.c: 156: EEWriteChar(0x0C, PORTA);
  4820  000CE4  CF80 F005          	movff	3968,EEWriteChar@ch	;volatile
  4821  000CE8  0E0C               	movlw	12
  4822  000CEA  EC8F  F009         	call	_EEWriteChar
  4823                           
  4824                           ;EEPROM.c: 157: EEWriteChar(0x0D, PORTB);
  4825  000CEE  CF81 F005          	movff	3969,EEWriteChar@ch	;volatile
  4826  000CF2  0E0D               	movlw	13
  4827  000CF4  EC8F  F009         	call	_EEWriteChar
  4828                           
  4829                           ;EEPROM.c: 158: EEWriteChar(0x0E, PORTC);
  4830  000CF8  CF82 F005          	movff	3970,EEWriteChar@ch	;volatile
  4831  000CFC  0E0E               	movlw	14
  4832  000CFE  EC8F  F009         	call	_EEWriteChar
  4833                           
  4834                           ;EEPROM.c: 159: EEWriteChar(0x0F, PORTD);
  4835  000D02  CF83 F005          	movff	3971,EEWriteChar@ch	;volatile
  4836  000D06  0E0F               	movlw	15
  4837  000D08  EC8F  F009         	call	_EEWriteChar
  4838                           
  4839                           ;EEPROM.c: 160: EEWriteChar(0x10, PORTE);
  4840  000D0C  CF84 F005          	movff	3972,EEWriteChar@ch	;volatile
  4841  000D10  0E10               	movlw	16
  4842  000D12  EC8F  F009         	call	_EEWriteChar
  4843                           
  4844                           ;EEPROM.c: 161: EEWriteChar(0x11, PORTF);
  4845  000D16  CF85 F005          	movff	3973,EEWriteChar@ch	;volatile
  4846  000D1A  0E11               	movlw	17
  4847  000D1C  EC8F  F009         	call	_EEWriteChar
  4848                           
  4849                           ;EEPROM.c: 162: EEWriteChar(0x12, PORTG);
  4850  000D20  CF86 F005          	movff	3974,EEWriteChar@ch	;volatile
  4851  000D24  0E12               	movlw	18
  4852  000D26  EC8F  F009         	call	_EEWriteChar
  4853                           
  4854                           ;EEPROM.c: 163: EEWriteChar(0x13, PORTH);
  4855  000D2A  CF87 F005          	movff	3975,EEWriteChar@ch	;volatile
  4856  000D2E  0E13               	movlw	19
  4857  000D30  EC8F  F009         	call	_EEWriteChar
  4858                           
  4859                           ;EEPROM.c: 164: EEWriteChar(0x14, PORTJ);
  4860  000D34  CF88 F005          	movff	3976,EEWriteChar@ch	;volatile
  4861  000D38  0E14               	movlw	20
  4862  000D3A  EC8F  F009         	call	_EEWriteChar
  4863                           
  4864                           ;EEPROM.c: 165: EEWriteChar(0x15, PIDEnableFlag);
  4865  000D3E  C05F  F005         	movff	_PIDEnableFlag,EEWriteChar@ch
  4866  000D42  0E15               	movlw	21
  4867  000D44  EC8F  F009         	call	_EEWriteChar
  4868                           
  4869                           ;EEPROM.c: 166: EEWriteChar(0x16, 0x01);
  4870  000D48  0E01               	movlw	1
  4871  000D4A  6E05               	movwf	EEWriteChar@ch,c
  4872  000D4C  0E16               	movlw	22
  4873  000D4E  EC8F  F009         	call	_EEWriteChar
  4874  000D52  0012               	return		;funcret
  4875  000D54                     __end_of_HLVDInt:
  4876                           	opt stack 0
  4877                           pclatu	equ	0xFFB
  4878                           pclath	equ	0xFFA
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           intcon	equ	0xFF2
  4886                           intcon2	equ	0xFF1
  4887                           postinc0	equ	0xFEE
  4888                           fsr0h	equ	0xFEA
  4889                           fsr0l	equ	0xFE9
  4890                           wreg	equ	0xFE8
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           indf2	equ	0xFDF
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _EEWriteDouble *****************
  4899 ;; Defined at:
  4900 ;;		line 77 in file "EEPROM.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  location        1    wreg     unsigned char 
  4903 ;;  dub             3    4[COMRAM] unsigned char 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;  location        1    7[COMRAM] unsigned char 
  4906 ;;  x               1    8[COMRAM] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;Total ram usage:        5 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    1
  4923 ;; This function calls:
  4924 ;;		_EEDisassembleDouble
  4925 ;;		_Write_b_eep
  4926 ;;		i2_Busy_eep
  4927 ;; This function is called by:
  4928 ;;		_HLVDInt
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text35
  4933  001026                     __ptext35:
  4934                           	opt stack 0
  4935  001026                     _EEWriteDouble:
  4936                           	opt stack 22
  4937                           
  4938                           ;incstack = 0
  4939                           ;EEWriteDouble@location stored from wreg
  4940  001026  6E08               	movwf	EEWriteDouble@location,c
  4941                           
  4942                           ;EEPROM.c: 79: unsigned char x;
  4943                           ;EEPROM.c: 81: EEDisassembleDouble(dub);
  4944  001028  C005  F001         	movff	EEWriteDouble@dub,EEDisassembleDouble@dub
  4945  00102C  C006  F002         	movff	EEWriteDouble@dub+1,EEDisassembleDouble@dub+1
  4946  001030  C007  F003         	movff	EEWriteDouble@dub+2,EEDisassembleDouble@dub+2
  4947  001034  ECC5  F008         	call	_EEDisassembleDouble	;wreg free
  4948                           
  4949                           ;EEPROM.c: 83: INTCON = INTCON & 0x3F;
  4950  001038  50F2               	movf	intcon,w,c	;volatile
  4951  00103A  0B3F               	andlw	63
  4952  00103C  6EF2               	movwf	intcon,c	;volatile
  4953                           
  4954                           ;EEPROM.c: 85: for (x = 0; x < 3; x++)
  4955  00103E  0E00               	movlw	0
  4956  001040  6E09               	movwf	EEWriteDouble@x,c
  4957  001042                     i2l2497:
  4958  001042  0E02               	movlw	2
  4959  001044  6409               	cpfsgt	EEWriteDouble@x,c
  4960  001046  D001               	goto	i2l2501
  4961  001048  D014               	goto	i2l2511
  4962  00104A                     i2l2501:
  4963                           
  4964                           ;EEPROM.c: 86: {
  4965                           ;EEPROM.c: 87: Write_b_eep(location, DDouble[x]);
  4966  00104A  C008  F001         	movff	EEWriteDouble@location,Write_b_eep@badd
  4967  00104E  6A02               	clrf	Write_b_eep@badd+1,c
  4968  001050  5009               	movf	EEWriteDouble@x,w,c
  4969  001052  0D01               	mullw	1
  4970  001054  0E6A               	movlw	low _DDouble
  4971  001056  24F3               	addwf	prodl,w,c
  4972  001058  6ED9               	movwf	fsr2l,c
  4973  00105A  0E00               	movlw	high _DDouble
  4974  00105C  20F4               	addwfc	prodh,w,c
  4975  00105E  6EDA               	movwf	fsr2h,c
  4976  001060  50DF               	movf	indf2,w,c
  4977  001062  6E03               	movwf	Write_b_eep@bdat,c
  4978  001064  ECA5  F008         	call	_Write_b_eep	;wreg free
  4979                           
  4980                           ;EEPROM.c: 88: location++;
  4981  001068  2A08               	incf	EEWriteDouble@location,f,c
  4982                           
  4983                           ;EEPROM.c: 89: Busy_eep();
  4984  00106A  EC15  F00A         	call	i2_Busy_eep	;wreg free
  4985  00106E  2A09               	incf	EEWriteDouble@x,f,c
  4986  001070  D7E8               	goto	i2l2497
  4987  001072                     i2l2511:
  4988                           
  4989                           ;EEPROM.c: 90: }
  4990                           ;EEPROM.c: 92: INTCON = INTCON | 0xC0;
  4991  001072  50F2               	movf	intcon,w,c	;volatile
  4992  001074  09C0               	iorlw	192
  4993  001076  6EF2               	movwf	intcon,c	;volatile
  4994  001078  0012               	return		;funcret
  4995  00107A                     __end_of_EEWriteDouble:
  4996                           	opt stack 0
  4997                           pclatu	equ	0xFFB
  4998                           pclath	equ	0xFFA
  4999                           tblptru	equ	0xFF8
  5000                           tblptrh	equ	0xFF7
  5001                           tblptrl	equ	0xFF6
  5002                           tablat	equ	0xFF5
  5003                           prodh	equ	0xFF4
  5004                           prodl	equ	0xFF3
  5005                           intcon	equ	0xFF2
  5006                           intcon2	equ	0xFF1
  5007                           postinc0	equ	0xFEE
  5008                           fsr0h	equ	0xFEA
  5009                           fsr0l	equ	0xFE9
  5010                           wreg	equ	0xFE8
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           indf2	equ	0xFDF
  5014                           fsr2h	equ	0xFDA
  5015                           fsr2l	equ	0xFD9
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _EEDisassembleDouble *****************
  5019 ;; Defined at:
  5020 ;;		line 48 in file "EEPROM.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  dub             3    0[COMRAM] unsigned char 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;		None               void
  5027 ;; Registers used:
  5028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5034 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;Total ram usage:        3 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_EEWriteDouble
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text36
  5048  00118A                     __ptext36:
  5049                           	opt stack 0
  5050  00118A                     _EEDisassembleDouble:
  5051                           	opt stack 22
  5052                           
  5053                           ;EEPROM.c: 50: DoublePtr = (unsigned char*) &dub;
  5054                           
  5055                           ;incstack = 0
  5056  00118A  0E01               	movlw	low EEDisassembleDouble@dub
  5057  00118C  6E5A               	movwf	_DoublePtr,c
  5058  00118E  0E00               	movlw	high EEDisassembleDouble@dub
  5059  001190  6E5B               	movwf	_DoublePtr+1,c
  5060                           
  5061                           ;EEPROM.c: 51: DDouble[0] = DoublePtr[0];
  5062  001192  C05A  FFD9         	movff	_DoublePtr,fsr2l
  5063  001196  C05B  FFDA         	movff	_DoublePtr+1,fsr2h
  5064  00119A  50DF               	movf	indf2,w,c
  5065  00119C  0100               	movlb	0	; () banked
  5066  00119E  6F6A               	movwf	_DDouble& (0+255),b
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;EEPROM.c: 52: DDouble[1] = DoublePtr[1];
  5070  0011A0  EE20 F001          	lfsr	2,1
  5071  0011A4  505A               	movf	_DoublePtr,w,c
  5072  0011A6  26D9               	addwf	fsr2l,f,c
  5073  0011A8  505B               	movf	_DoublePtr+1,w,c
  5074  0011AA  22DA               	addwfc	fsr2h,f,c
  5075  0011AC  50DF               	movf	indf2,w,c
  5076  0011AE  0100               	movlb	0	; () banked
  5077  0011B0  6F6B               	movwf	(_DDouble+1)& (0+255),b
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;EEPROM.c: 53: DDouble[2] = DoublePtr[2];
  5081  0011B2  EE20 F002          	lfsr	2,2
  5082  0011B6  505A               	movf	_DoublePtr,w,c
  5083  0011B8  26D9               	addwf	fsr2l,f,c
  5084  0011BA  505B               	movf	_DoublePtr+1,w,c
  5085  0011BC  22DA               	addwfc	fsr2h,f,c
  5086  0011BE  50DF               	movf	indf2,w,c
  5087  0011C0  0100               	movlb	0	; () banked
  5088  0011C2  6F6C               	movwf	(_DDouble+2)& (0+255),b
  5089                           
  5090                           ; BSR set to: 0
  5091  0011C4  0012               	return		;funcret
  5092  0011C6                     __end_of_EEDisassembleDouble:
  5093                           	opt stack 0
  5094                           pclatu	equ	0xFFB
  5095                           pclath	equ	0xFFA
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           prodh	equ	0xFF4
  5101                           prodl	equ	0xFF3
  5102                           intcon	equ	0xFF2
  5103                           intcon2	equ	0xFF1
  5104                           postinc0	equ	0xFEE
  5105                           fsr0h	equ	0xFEA
  5106                           fsr0l	equ	0xFE9
  5107                           wreg	equ	0xFE8
  5108                           fsr1h	equ	0xFE2
  5109                           fsr1l	equ	0xFE1
  5110                           indf2	equ	0xFDF
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115 ;; *************** function _EEWriteChar *****************
  5116 ;; Defined at:
  5117 ;;		line 122 in file "EEPROM.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  location        1    wreg     unsigned char 
  5120 ;;  ch              1    4[COMRAM] unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  location        1    5[COMRAM] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;		None               void
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5132 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;Total ram usage:        2 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    1
  5139 ;; This function calls:
  5140 ;;		_Write_b_eep
  5141 ;;		i2_Busy_eep
  5142 ;; This function is called by:
  5143 ;;		_HLVDInt
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text37
  5148  00131E                     __ptext37:
  5149                           	opt stack 0
  5150  00131E                     _EEWriteChar:
  5151                           	opt stack 22
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;incstack = 0
  5155                           ;EEWriteChar@location stored from wreg
  5156  00131E  6E06               	movwf	EEWriteChar@location,c
  5157                           
  5158                           ;EEPROM.c: 124: INTCON = INTCON & 0x3F;
  5159  001320  50F2               	movf	intcon,w,c	;volatile
  5160  001322  0B3F               	andlw	63
  5161  001324  6EF2               	movwf	intcon,c	;volatile
  5162                           
  5163                           ;EEPROM.c: 126: Write_b_eep(location, ch);
  5164  001326  C006  F001         	movff	EEWriteChar@location,Write_b_eep@badd
  5165  00132A  6A02               	clrf	Write_b_eep@badd+1,c
  5166  00132C  C005  F003         	movff	EEWriteChar@ch,Write_b_eep@bdat
  5167  001330  ECA5  F008         	call	_Write_b_eep	;wreg free
  5168                           
  5169                           ;EEPROM.c: 127: Busy_eep();
  5170  001334  EC15  F00A         	call	i2_Busy_eep	;wreg free
  5171                           
  5172                           ;EEPROM.c: 129: INTCON = INTCON | 0xC0;
  5173  001338  50F2               	movf	intcon,w,c	;volatile
  5174  00133A  09C0               	iorlw	192
  5175  00133C  6EF2               	movwf	intcon,c	;volatile
  5176  00133E  0012               	return		;funcret
  5177  001340                     __end_of_EEWriteChar:
  5178                           	opt stack 0
  5179                           pclatu	equ	0xFFB
  5180                           pclath	equ	0xFFA
  5181                           tblptru	equ	0xFF8
  5182                           tblptrh	equ	0xFF7
  5183                           tblptrl	equ	0xFF6
  5184                           tablat	equ	0xFF5
  5185                           prodh	equ	0xFF4
  5186                           prodl	equ	0xFF3
  5187                           intcon	equ	0xFF2
  5188                           intcon2	equ	0xFF1
  5189                           postinc0	equ	0xFEE
  5190                           fsr0h	equ	0xFEA
  5191                           fsr0l	equ	0xFE9
  5192                           wreg	equ	0xFE8
  5193                           fsr1h	equ	0xFE2
  5194                           fsr1l	equ	0xFE1
  5195                           indf2	equ	0xFDF
  5196                           fsr2h	equ	0xFDA
  5197                           fsr2l	equ	0xFD9
  5198                           status	equ	0xFD8
  5199                           
  5200 ;; *************** function i2_Busy_eep *****************
  5201 ;; Defined at:
  5202 ;;		line 12 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/EEP/busy_eep.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;		None
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;		None               void
  5209 ;; Registers used:
  5210 ;;		None
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:        0 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_EEWriteDouble
  5226 ;;		_EEWriteChar
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text38
  5231  00142A                     __ptext38:
  5232                           	opt stack 0
  5233  00142A                     i2_Busy_eep:
  5234                           	opt stack 22
  5235                           
  5236                           ;incstack = 0
  5237  00142A  D000               	goto	i2l442
  5238  00142C                     i2l442:
  5239  00142C  B2A6               	btfsc	4006,1,c	;volatile
  5240  00142E  D7FE               	goto	i2l442
  5241  001430  0012               	return		;funcret
  5242  001432                     __end_ofi2_Busy_eep:
  5243                           	opt stack 0
  5244                           pclatu	equ	0xFFB
  5245                           pclath	equ	0xFFA
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           intcon2	equ	0xFF1
  5254                           postinc0	equ	0xFEE
  5255                           fsr0h	equ	0xFEA
  5256                           fsr0l	equ	0xFE9
  5257                           wreg	equ	0xFE8
  5258                           fsr1h	equ	0xFE2
  5259                           fsr1l	equ	0xFE1
  5260                           indf2	equ	0xFDF
  5261                           fsr2h	equ	0xFDA
  5262                           fsr2l	equ	0xFD9
  5263                           status	equ	0xFD8
  5264                           
  5265 ;; *************** function _Write_b_eep *****************
  5266 ;; Defined at:
  5267 ;;		line 49 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/EEP/write_B.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  badd            2    0[COMRAM] unsigned int 
  5270 ;;  bdat            1    2[COMRAM] unsigned char 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  GIE_BIT_VAL     1    3[COMRAM] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;		None               void
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5282 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;Total ram usage:        4 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; This function calls:
  5289 ;;		Nothing
  5290 ;; This function is called by:
  5291 ;;		_EEWriteDouble
  5292 ;;		_EEWriteChar
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text39
  5297  00114A                     __ptext39:
  5298                           	opt stack 0
  5299  00114A                     _Write_b_eep:
  5300                           	opt stack 22
  5301                           
  5302                           ;incstack = 0
  5303  00114A  0E00               	movlw	0
  5304  00114C  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  5305  00114E  5002               	movf	Write_b_eep@badd+1,w,c
  5306  001150  0B03               	andlw	3
  5307  001152  6EAA               	movwf	4010,c	;volatile
  5308  001154  C001  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  5309  001158  C003  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  5310  00115C  9EA6               	bcf	4006,7,c	;volatile
  5311  00115E  9CA6               	bcf	4006,6,c	;volatile
  5312  001160  84A6               	bsf	4006,2,c	;volatile
  5313  001162  0E00               	movlw	0
  5314  001164  BEF2               	btfsc	intcon,7,c	;volatile
  5315  001166  0E01               	movlw	1
  5316  001168  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  5317  00116A  9EF2               	bcf	intcon,7,c	;volatile
  5318  00116C  0E55               	movlw	85
  5319  00116E  6EA7               	movwf	4007,c	;volatile
  5320  001170  0EAA               	movlw	170
  5321  001172  6EA7               	movwf	4007,c	;volatile
  5322  001174  82A6               	bsf	4006,1,c	;volatile
  5323  001176  D000               	goto	i2l473
  5324  001178                     i2l473:
  5325  001178  B2A6               	btfsc	4006,1,c	;volatile
  5326  00117A  D7FE               	goto	i2l473
  5327  00117C  B004               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  5328  00117E  D002               	bra	i2u122_45
  5329  001180  9EF2               	bcf	intcon,7,c	;volatile
  5330  001182  D001               	bra	i2u122_46
  5331  001184                     i2u122_45:
  5332  001184  8EF2               	bsf	intcon,7,c	;volatile
  5333  001186                     i2u122_46:
  5334  001186  94A6               	bcf	4006,2,c	;volatile
  5335  001188  0012               	return		;funcret
  5336  00118A                     __end_of_Write_b_eep:
  5337                           	opt stack 0
  5338  0000                     pclatu	equ	0xFFB
  5339                           pclath	equ	0xFFA
  5340                           tblptru	equ	0xFF8
  5341                           tblptrh	equ	0xFF7
  5342                           tblptrl	equ	0xFF6
  5343                           tablat	equ	0xFF5
  5344                           prodh	equ	0xFF4
  5345                           prodl	equ	0xFF3
  5346                           intcon	equ	0xFF2
  5347                           intcon2	equ	0xFF1
  5348                           postinc0	equ	0xFEE
  5349                           fsr0h	equ	0xFEA
  5350                           fsr0l	equ	0xFE9
  5351                           wreg	equ	0xFE8
  5352                           fsr1h	equ	0xFE2
  5353                           fsr1l	equ	0xFE1
  5354                           indf2	equ	0xFDF
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           pclatu	equ	0xFFB
  5359                           pclath	equ	0xFFA
  5360                           tblptru	equ	0xFF8
  5361                           tblptrh	equ	0xFF7
  5362                           tblptrl	equ	0xFF6
  5363                           tablat	equ	0xFF5
  5364                           prodh	equ	0xFF4
  5365                           prodl	equ	0xFF3
  5366                           intcon	equ	0xFF2
  5367                           intcon2	equ	0xFF1
  5368                           postinc0	equ	0xFEE
  5369                           fsr0h	equ	0xFEA
  5370                           fsr0l	equ	0xFE9
  5371                           wreg	equ	0xFE8
  5372                           fsr1h	equ	0xFE2
  5373                           fsr1l	equ	0xFE1
  5374                           indf2	equ	0xFDF
  5375                           fsr2h	equ	0xFDA
  5376                           fsr2l	equ	0xFD9
  5377                           status	equ	0xFD8
  5378                           
  5379                           	psect	rparam
  5380  0000                     pclatu	equ	0xFFB
  5381                           pclath	equ	0xFFA
  5382                           tblptru	equ	0xFF8
  5383                           tblptrh	equ	0xFF7
  5384                           tblptrl	equ	0xFF6
  5385                           tablat	equ	0xFF5
  5386                           prodh	equ	0xFF4
  5387                           prodl	equ	0xFF3
  5388                           intcon	equ	0xFF2
  5389                           intcon2	equ	0xFF1
  5390                           postinc0	equ	0xFEE
  5391                           fsr0h	equ	0xFEA
  5392                           fsr0l	equ	0xFE9
  5393                           wreg	equ	0xFE8
  5394                           fsr1h	equ	0xFE2
  5395                           fsr1l	equ	0xFE1
  5396                           indf2	equ	0xFDF
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      95
    BANK0           160     27      62
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DoublePtr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), EEReassembleDouble@dub(BANK0[3]), EEDisassembleDouble@dub(COMRAM[3]), SPIReassembleDouble@dub(COMRAM[3]), 
		 -> SPIDisassembleDouble@dub(COMRAM[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _TMR0Int->_calculatePID
    _calculatePID->___fttol
    ___fttol->___ftadd
    ___ftge->___ftadd
    ___ftdiv->___ftpack
    ___ftadd->___ftmul
    _RTD2Angle->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    _ImplementPIDMotion->_abs
    _HLVDInt->_EEWriteDouble
    _EEWriteDouble->_Write_b_eep
    _EEWriteChar->_Write_b_eep

Critical Paths under _main in BANK0

    _SPIInit->_OpenSPI2
    _RTDInit->_Delay10TCYx
    _RTDInit->_Delay1KTCYx
    _RTDInit->_Delay1TCYx
    _EEPROMInit->_EEBootUp
    _EEBootUp->_EEReadDouble
    _EEReadDouble->_EEReassembleDouble
    _EEReadChar->_Read_b_eep

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     845
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     845
                         _EEPROMInit
                       _JoystickInit
                    _MotorDriverInit
                            _PIDInit
                            _RTDInit
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0     216
                           _OpenSPI2
 ---------------------------------------------------------------------------------
 (3) _OpenSPI2                                             3     1      2     216
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _RTDInit                                              0     0      0      66
                        _Delay10TCYx
                        _Delay1KTCYx
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1TCYx                                           1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10TCYx                                          1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIDInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorDriverInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMInit                                           0     0      0     563
                           _EEBootUp
 ---------------------------------------------------------------------------------
 (3) _EEBootUp                                             2     2      0     563
                                             25 BANK0      2     2      0
                         _EEReadChar
                       _EEReadDouble
 ---------------------------------------------------------------------------------
 (4) _EEReadDouble                                         5     2      3     346
                                             20 BANK0      5     2      3
                           _Busy_eep
                 _EEReassembleDouble
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (5) _EEReassembleDouble                                   6     3      3      62
                                             14 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEReadChar                                           2     2      0     217
                                             16 BANK0      2     2      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (5) _Read_b_eep                                           2     0      2     172
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0   24318
                                              0 BANK0     14    14      0
                            _HLVDInt
                            _INT0Int
                            _TMR0Int
 ---------------------------------------------------------------------------------
 (7) _TMR0Int                                              0     0      0   22405
                 _ImplementPIDMotion
                          _RTD2Angle
                       _calculatePID
 ---------------------------------------------------------------------------------
 (8) _calculatePID                                        27    21      6   16656
                                             65 COMRAM    18    12      6
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (9) ___fttol                                             15    11      4     316
                                             50 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftneg                                              3     0      3    1261
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (9) ___ftge                                               9     3      6    1672
                                             50 COMRAM     9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftdiv                                             15     9      6    2580
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             12     6      6    6442
                                             38 COMRAM    12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) _RTD2Angle                                            3     0      3    5380
                                             38 COMRAM     3     0      3
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (9) ___lwtoft                                             3     0      3    2156
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             15     9      6    3138
                                             23 COMRAM    15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftpack                                            8     3      5    2070
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _ImplementPIDMotion                                   4     2      2     369
                                              4 COMRAM     4     2      2
                                _abs
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     194
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _INT0Int                                              0     0      0       0
                         _KillMotors
 ---------------------------------------------------------------------------------
 (8) _KillMotors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _HLVDInt                                              0     0      0    1913
                        _EEWriteChar
                      _EEWriteDouble
 ---------------------------------------------------------------------------------
 (8) _EEWriteDouble                                        5     2      3     819
                                              4 COMRAM     5     2      3
                _EEDisassembleDouble
                        _Write_b_eep
                         i2_Busy_eep
 ---------------------------------------------------------------------------------
 (9) _EEDisassembleDouble                                  3     0      3     104
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (8) _EEWriteChar                                          2     1      1    1094
                                              4 COMRAM     2     1      1
                        _Write_b_eep
                         i2_Busy_eep
 ---------------------------------------------------------------------------------
 (9) i2_Busy_eep                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Write_b_eep                                          4     1      3     346
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _EEPROMInit
       _EEBootUp
         _EEReadChar
           _Read_b_eep
         _EEReadDouble
           _Busy_eep
           _EEReassembleDouble
           _Read_b_eep
     _JoystickInit
     _MotorDriverInit
     _PIDInit
     _RTDInit
       _Delay10TCYx
       _Delay1KTCYx
       _Delay1TCYx
     _SPIInit
       _OpenSPI2

 _ISR (ROOT)
   _HLVDInt
     _EEWriteChar
       _Write_b_eep
       i2_Busy_eep
     _EEWriteDouble
       _EEDisassembleDouble
       _Write_b_eep
       i2_Busy_eep
   _INT0Int
     _KillMotors
   _TMR0Int
     _ImplementPIDMotion
       _abs
     _RTD2Angle
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _calculatePID
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftpack
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      3E       5       38.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9D      32        0.0%
DATA                 0      0      9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Oct 19 03:35:54 2015

    __size_of_MotorDriverInit 0020                            l27 123C                            _Kd 006D  
                          _Ki 0070                            _Kp 0073           ?_EEReassembleDouble 0091  
                ___ftadd@exp1 0032                  ___ftadd@exp2 0031                  ___ftadd@sign 0030  
                         l412 0EFE                           l261 125C                           l256 140A  
                         l434 12AA                           l442 141C                           l418 1108  
                         l428 0F68                           l458 13B4                           l490 0F84  
                         l732 13E0                           l492 0F88                           l493 0F8A  
                         l744 13FA                           l496 0FA6                           l497 0FC2  
                         l746 1404                           l498 0FA8                           l739 13CA  
                         l499 0FAC                           _PR2 000FCB                           _ISR 0008  
                         _abs 12AC                           _err 0057          __size_of_Write_b_eep 0040  
                         prod 000FF3                           wreg 000FE8                          ?_ISR 0001  
             __end_of_INT0Int 142A                  ___ftdiv@cntr 0012               __end_of_HLVDInt 0D54  
                  _Delay1TCYx 13F6                  ___ftdiv@sign 0017                  __CFG_WDT$OFF 000000  
                        ?_abs 0001                          l2045 13D0                          l2049 13BA  
                        l2065 0F8E                          l2069 0FB0                          l2363 1248  
                        l1991 0F1A                          l1987 0F10                          l1999 0F50  
                        u2047 13BC                          u2057 13D2               __end_of_PIDInit 114A  
        ??_EEReassembleDouble 0094                  EEReadChar@ch 0094               __end_of_TMR0Int 10C6  
                        abs@a 0001                          _main 1406                  ___ftpack@arg 0001  
                ___ftpack@exp 0004               __end_of_RTDInit 122E               __end_of_SPIInit 139A  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA                ??_EEReadDouble 009A  
                        prodh 000FF4                          prodl 000FF3                          start 0018  
         __size_of_EEPROMInit 0014                  ?_EEWriteChar 0005                  ___ftmul@cntr 0025  
                ___param_bank 000010                  ___ftmul@sign 0026                         ??_ISR 0083  
                 _Delay10TCYx 13CC              __end_of_EEBootUp 0F00                  ___fttol@exp1 0041  
                       ??_abs 0003                  ___fttol@lval 003D                   _Delay1KTCYx 13B6  
           RTD2Angle@RTDAngle 0027                         ?_main 0001                         _EEADR 000FA9  
             __end_of___ftadd 0916               __end_of___ftdiv 0BD6               __end_of___ftneg 131E  
             __end_of___ftmul 0A0E                         _T0CON 000FD5               __end_of___fttol 0AF4  
                       _T2CON 000FCA                         _T3CON 000FB1                         i2l213 11FC  
                       i2l158 05C6                         i2l271 0E44                         i2l442 142C  
                       i2l550 12CA                         i2l551 12D2                         i2l473 1178  
                       i2l900 089E                         i2l911 0BA0                         i2l923 0A0C  
                       i2l836 0C9A                         i2l908 0BD4                         i2l917 0DE8  
                       i2l933 1310                         i2l847 0C72                         i2l880 07C0  
                       i2l944 0AF2                         i2l891 0882                         i2l876 0796  
                       i2l877 0914            __size_of_RTD2Angle 0038                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _PORTE 000F84  
                       _PORTF 000F85                         _PORTG 000F86                         _PORTH 000F87  
                       _PORTJ 000F88                         _TRISD 000F95                         _TRISH 000F99  
              Read_b_eep@badd 0091           __size_of_EEReadChar 0028        __size_of_EEWriteDouble 0054  
      Write_b_eep@GIE_BIT_VAL 0004                 ___ftpack@sign 0005                    _DoubleSPIS 0060  
                       tablat 000FF5                   ?i2_Busy_eep 0001                         status 000FD8  
               EEReadDouble@x 009B         EEWriteDouble@location 0008                    _ReadRTDpos 000000  
                  _KillMotors 1410               __initialization 1360                  __end_of_main 1410  
                  _Read_b_eep 139A              __end_of_Busy_eep 1422         EEReassembleDouble@dub 0094  
              __CFG_OSC$HSPLL 000000              __end_of_OpenSPI2 0FCA                        ??_main 009E  
               ___fttol@sign1 003C                 __activetblptr 000003             ??_MotorDriverInit 0091  
                   ??_INT0Int 0001                     ??_HLVDInt 000A                     ??_PIDInit 0091  
                   ??_TMR0Int 0054                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _ADRESH 000FC4                        _EEADRH 000FAA  
                      _ADRESL 000FC3                     ??_RTDInit 0092                        _EEDATA 000FA8  
                 ?_Delay1TCYx 0001                     ??_SPIInit 0094                        _CCPR3L 000FB8  
                      _EECON2 000FA7              __end_of___ftpack 0C9C         __size_of_calculatePID 0736  
                      i2l2021 0C3A                        i2l2013 0BF6                        i2l2031 0C7A  
                      i2l2023 0C5A                        i2l2015 0C02                        i2l2025 0C66  
                      i2l2017 0C22                        i2l2009 0BE6                        i2l1073 12F8  
                      i2l2123 07A4                        i2l2037 0C8C                        u123_41 0762  
                      i2l2151 0826                        i2l2135 07DA                        i2l2153 0832  
                      i2l2145 0802                        i2l2129 07CE                        i2l2217 0B7A  
                      i2l2243 095C                        i2l2171 08BC                        i2l2163 086A  
                      i2l2155 083E                        i2l2227 0BAE                        i2l2331 0A9C  
                      i2l2307 0A2C                        i2l2403 0064                        i2l2501 104A  
                      i2l2261 09A2                        i2l2237 0934                        i2l2181 08EE  
                      i2l2165 0876                        i2l2157 0846                        u124_41 0776  
                      i2l2325 0A86                        i2l2421 02B0                        i2l2413 01BE  
                      i2l2511 1072                        i2l2271 09D0                        i2l2239 094E  
                      i2l2191 0B12                        i2l2343 0AE0                        i2l2335 0AB0  
                      i2l2415 01EE                        i2l2423 02E0                        i2l2407 00FC  
                      i2l2265 09B8                        i2l2257 0990                        i2l2193 0B2C  
                      i2l2337 0ABE                        i2l2329 0A96                        i2l2275 09E6  
                      i2l2267 09BE                        i2l2283 0D86                        i2l2339 0AC8  
                      i2l2451 072C                        i2l2435 0442                        i2l2381 0FD2  
                      i2l2197 0B3A                        i2l2293 0DE4                        i2l2445 0564  
                      i2l2437 049A                        i2l2287 0DB8                        i2l2455 0744  
                      i2l2385 0FE4                        i2l2633 0E22                        i2l2643 0E3C  
                      i2l2637 0E2C                        i2l2497 1042                        u151_41 0944  
                      u144_41 0B04                        _INTCON 000FF2                        u146_41 0B22  
                      u149_41 0926                        u159_41 0A1E              __end_of___lwtoft 12FA  
           __end_of_RTD2Angle 11FE                 _EEWriteDouble 1026                        ___ftge 0D54  
                   ??___ftadd 002D                     ??___ftdiv 000F                     ??___ftneg 0004  
                   ??___ftmul 001E                     ??___fttol 0037              OpenSPI2@bus_mode 0091  
                      _intErr 0079                        clear_0 1366                        clear_1 1372  
         __size_ofi2_Busy_eep 0008         ___ftmul@f3_as_product 0022                  ??_EEPROMInit 009E  
 __size_of_ImplementPIDMotion 005C                  _calculatePID 001C          __end_of_EEReadDouble 0F6A  
           _calculatePID$3396 0051             _calculatePID$3397 004B             _calculatePID$3398 004E  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  _StartAngle 0054                     ?_EEBootUp 0001                    __accesstop 0060  
     __end_of__initialization 1378                    ___ftadd@f1 0027                    ___ftadd@f2 002A  
                  ___ftge@ff1 0033                    ___ftge@ff2 0036                 ___rparam_used 000001  
                  ___ftdiv@f1 0009                    ___ftdiv@f2 000C                    ___ftdiv@f3 0013  
          EEReadChar@location 0093                    ___ftneg@f1 0001                   ?_KillMotors 0001  
                ??_EEReadChar 0093                ?_EEWriteDouble 0005                    ___ftmul@f1 0018  
                  ___ftmul@f2 001B            __end_of_EEPROMInit 13F6                    ___fttol@f1 0033  
              __pcstackCOMRAM 0001   __end_of_EEDisassembleDouble 11C6          __size_of_EEWriteChar 0022  
                 ?_Read_b_eep 0091           __size_of_Delay1TCYx 0010                    ___lwtoft@c 0009  
          __end_of_EEReadChar 12AC                    __pbssBANK0 0060                    ??_EEBootUp 009C  
                   ?_Busy_eep 0001                 ?_JoystickInit 0001                     ?_OpenSPI2 0091  
                     ?___ftge 0033                  ?_Delay10TCYx 0001                EEWriteDouble@x 0009  
                     _CCP3CON 000FB7                  ?_Delay1KTCYx 0001                     ?___ftpack 0001  
               ??_Write_b_eep 0004                     ?___lwtoft 0009                       _HLVDCON 000FD2  
                     _INT0Int 1422                       _HLVDInt 0C9C                       _PIDInit 110A  
                     _DDouble 006A           __size_of_KillMotors 000A                 _PIDEnableFlag 005F  
                     _SSP2BUF 000F66                       _TMR0Int 107A    ImplementPIDMotion@PIDValue 0005  
                     _RTDInit 11FE                       _SPIInit 137E                       _SPIflag 0081  
            EEWriteDouble@dub 0005           __size_of_Read_b_eep 001C                ??_JoystickInit 0091  
                ??i2_Busy_eep 0001   __size_of_EEReassembleDouble 0044                    ??_Busy_eep 0091  
                     _Command 007F               ??_EEWriteDouble 0008                    ??_OpenSPI2 0093  
         EEWriteChar@location 0006                       __Hparam 0000                       __Lparam 0000  
             _MotorDriverInit 1340               __size_of___ftge 0096                       ___ftadd 0752  
                     ___ftdiv 0AF4                       ___ftneg 12FA                       ___ftmul 0916  
                     ___fttol 0A0E                    _dummy_byte 0082         __size_of_EEReadDouble 006A  
                     __pcinit 1360                    ??___ftpack 0006               Delay10TCYx@unit 0091  
                     __ramtop 1000                    _initialize 125A                       __ptext0 1406  
                     __ptext1 125A                       __ptext2 137E                       __ptext3 0F6A  
                     __ptext4 11FE                       __ptext5 13F6                       __ptext6 13B6  
                     __ptext7 13CC                       __ptext8 110A                       __ptext9 1340  
                  ??___lwtoft 000C                  __size_of_ISR 0E76                  __size_of_abs 0028  
          __end_ofi2_Busy_eep 1432                       _prevErr 007C           __end_of_Write_b_eep 118A  
                ??_Delay1TCYx 0091                __pintcode_body 0DEA          end_of_initialization 1378  
                     int_func 0DEA                  _EEReadDouble 0F00             OpenSPI2@smp_phase 0092  
                  _motorInput 005C                     _RTD2Angle 11C6                       postinc0 000FEE  
          __end_of_Delay1TCYx 1406                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _PORTEbits 000F84                     _PORTJbits 000F88  
           OpenSPI2@sync_mode 0093                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                     _TRISDbits 000F95                     _TRISEbits 000F96  
                   _TRISGbits 000F98                     _TRISJbits 000F9A       __end_of_MotorDriverInit 1360  
                 ___ftdiv@exp 0016             __size_of_EEBootUp 0082                   _CCP3CONbits 000FB7  
                ??_KillMotors 0001                   ___ftmul@exp 0021                    ?_RTD2Angle 0027  
                ??_Read_b_eep 0093                __end_of___ftge 0DEA          __size_of_Delay10TCYx 0016  
  __end_of_ImplementPIDMotion 1026                   ?_initialize 0001                   _Write_b_eep 114A  
        __end_of_JoystickInit 125A          __size_of_Delay1KTCYx 0016                     _DoublePtr 005A  
         start_initialization 1360               _CurrentVelocity 0067                  _CurrentAngle 0064  
                 __end_of_ISR 0E7E                   __end_of_abs 12D4            __end_of_KillMotors 141A  
               _MotorFailFlag 0080            __end_of_Read_b_eep 13B6          EEReadDouble@location 009A  
           __size_of_Busy_eep 0008          calculatePID@setpoint 0045                 ??_EEWriteChar 0006  
           __size_of_OpenSPI2 0060                      ??___ftge 0039  __size_of_EEDisassembleDouble 003C  
           __size_of___ftpack 00C6                      ?_INT0Int 0001                      ?_HLVDInt 0001  
                 __pbssCOMRAM 0054             __size_of___lwtoft 0026                 __pcstackBANK0 0083  
                    ?_PIDInit 0001                      ?_TMR0Int 0001            calculatePID@derErr 0048  
                    ?_RTDInit 0001                      ?_SPIInit 0001               Delay1KTCYx@unit 0091  
            ?_MotorDriverInit 0001           __size_of_initialize 002A                 EEWriteChar@ch 0005  
                   __pintcode 0008                   ??_RTD2Angle 002A                      ?___ftadd 0027  
                    ?___ftdiv 0009                      ?___ftneg 0001                      ?___ftmul 0018  
                    ?___fttol 0033           __end_of_EEWriteChar 1340    __end_of_EEReassembleDouble 110A  
                    _EEBootUp 0E7E                      _IPR1bits 000F9F                      _IPR2bits 000FA2  
                    _PIE2bits 000FA0                      _PIE3bits 000FA3                      i2u122_45 1184  
                    i2u122_46 1186         __end_of_EEWriteDouble 107A                      i2u161_40 0A4A  
                    i2u161_45 0A42                      i2u171_40 0FE0                      _PIR2bits 000FA1  
                    _PIR3bits 000FA4                      _RCONbits 000FD0         __size_of_JoystickInit 002C  
                    _SSP2CON1 000F63                      _SSP2STAT 000F64                    _ADCON0bits 000FC2  
             Write_b_eep@badd 0001               Write_b_eep@bdat 0003                 ?_calculatePID 0042  
            __size_of_INT0Int 0008              __size_of_HLVDInt 00B8              __size_of_PIDInit 0040  
                 _INTCON2bits 000FF1              __size_of_TMR0Int 004C              __size_of_RTDInit 0030  
            __size_of_SPIInit 001C                      _Busy_eep 141A                  _JoystickInit 122E  
                  _EECON1bits 000FA6                      _SetAngle 0076                      _OpenSPI2 0F6A  
                    __Hrparam 0000                   _EEWriteChar 131E                      __Lrparam 0000  
                _JSEnableFlag 005E              __size_of___ftadd 01C4              __size_of___ftdiv 00E2  
            __size_of___ftneg 0024              __size_of___ftmul 00F8              __size_of___fttol 00E6  
                ??_initialize 009E                      ___ftpack 0BD6                  ?_Write_b_eep 0001  
           calculatePID@angle 0042                ??_calculatePID 0048                      ___lwtoft 12D4  
                  _EEPROMInit 13E2                      __ptext10 122E                      __ptext11 13E2  
                    __ptext20 001C                      __ptext12 0E7E                      __ptext21 0A0E  
                    __ptext13 0F00                      __ptext30 0FCA                      __ptext22 12FA  
                    __ptext14 10C6                      __ptext31 12AC                      __ptext23 0D54  
                    __ptext15 141A                      __ptext32 1422                      __ptext24 0AF4  
                    __ptext16 1284                      __ptext33 1410                      __ptext25 0752  
                    __ptext17 139A                      __ptext34 0C9C                      __ptext26 11C6  
                    __ptext35 1026                      __ptext27 12D4                      __ptext19 107A  
                    __ptext36 118A                      __ptext28 0916                      __ptext37 131E  
                    __ptext29 0BD6                      __ptext38 142A                      __ptext39 114A  
          _ImplementPIDMotion 0FCA                  _SSP2CON1bits 000F63                 __size_of_main 000A  
         _EEDisassembleDouble 118A                Delay1TCYx@unit 0091           ?_ImplementPIDMotion 0005  
          __end_of_initialize 1284                    _EEReadChar 1284                 ??_Delay10TCYx 0091  
               ??_Delay1KTCYx 0091                  _SSP2STATbits 000F64          ?_EEDisassembleDouble 0001  
        ??_ImplementPIDMotion 0007                    _INTCONbits 000FF2                      intlevel2 0000  
                  _OSCCONbits 000FD3         ??_EEDisassembleDouble 0004           __end_of_Delay10TCYx 13E2  
      EEDisassembleDouble@dub 0001                   ?_EEPROMInit 0001           __end_of_Delay1KTCYx 13CC  
                  i2_Busy_eep 142A          __end_of_calculatePID 0752                 ?_EEReadDouble 0097  
                 ?_EEReadChar 0001            _EEReassembleDouble 10C6  
