

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Oct 17 01:12:28 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     _BAUDCON1	set	3966
    34  0000                     _EEADR	set	4009
    35  0000                     _EEADRH	set	4010
    36  0000                     _EECON1bits	set	4006
    37  0000                     _EECON2	set	4007
    38  0000                     _EEDATA	set	4008
    39  0000                     _HLVDCON	set	4050
    40  0000                     _INTCON	set	4082
    41  0000                     _INTCONbits	set	4082
    42  0000                     _IPR2bits	set	4002
    43  0000                     _PIE1bits	set	3997
    44  0000                     _PIE2bits	set	4000
    45  0000                     _PIR1bits	set	3998
    46  0000                     _PORTA	set	3968
    47  0000                     _PORTB	set	3969
    48  0000                     _PORTC	set	3970
    49  0000                     _PORTD	set	3971
    50  0000                     _PORTE	set	3972
    51  0000                     _PORTF	set	3973
    52  0000                     _PORTG	set	3974
    53  0000                     _PORTH	set	3975
    54  0000                     _PORTJ	set	3976
    55  0000                     _RCREG1	set	4014
    56  0000                     _RCSTA1	set	4011
    57  0000                     _SPBRG	set	4015
    58  0000                     _TXREG1	set	4013
    59  0000                     _TXSTA1	set	4012
    60                           
    61                           	psect	smallconst
    62  001000                     __psmallconst:
    63                           	opt stack 0
    64  001000  00                 	db	0
    65  001001                     STR_3:
    66  001001  48                 	db	72	;'H'
    67  001002  65                 	db	101	;'e'
    68  001003  72                 	db	114	;'r'
    69  001004  65                 	db	101	;'e'
    70  001005  20                 	db	32
    71  001006  69                 	db	105	;'i'
    72  001007  73                 	db	115	;'s'
    73  001008  20                 	db	32
    74  001009  74                 	db	116	;'t'
    75  00100A  68                 	db	104	;'h'
    76  00100B  65                 	db	101	;'e'
    77  00100C  20                 	db	32
    78  00100D  64                 	db	100	;'d'
    79  00100E  6F                 	db	111	;'o'
    80  00100F  75                 	db	117	;'u'
    81  001010  62                 	db	98	;'b'
    82  001011  6C                 	db	108	;'l'
    83  001012  65                 	db	101	;'e'
    84  001013  20                 	db	32
    85  001014  73                 	db	115	;'s'
    86  001015  74                 	db	116	;'t'
    87  001016  72                 	db	114	;'r'
    88  001017  69                 	db	105	;'i'
    89  001018  6E                 	db	110	;'n'
    90  001019  67                 	db	103	;'g'
    91  00101A  20                 	db	32
    92  00101B  61                 	db	97	;'a'
    93  00101C  67                 	db	103	;'g'
    94  00101D  61                 	db	97	;'a'
    95  00101E  69                 	db	105	;'i'
    96  00101F  6E                 	db	110	;'n'
    97  001020  3A                 	db	58	;':'
    98  001021  20                 	db	32
    99  001022  00                 	db	0
   100  001023                     STR_1:
   101  001023  48                 	db	72	;'H'
   102  001024  65                 	db	101	;'e'
   103  001025  72                 	db	114	;'r'
   104  001026  65                 	db	101	;'e'
   105  001027  20                 	db	32
   106  001028  69                 	db	105	;'i'
   107  001029  73                 	db	115	;'s'
   108  00102A  20                 	db	32
   109  00102B  74                 	db	116	;'t'
   110  00102C  68                 	db	104	;'h'
   111  00102D  65                 	db	101	;'e'
   112  00102E  20                 	db	32
   113  00102F  64                 	db	100	;'d'
   114  001030  6F                 	db	111	;'o'
   115  001031  75                 	db	117	;'u'
   116  001032  62                 	db	98	;'b'
   117  001033  6C                 	db	108	;'l'
   118  001034  65                 	db	101	;'e'
   119  001035  20                 	db	32
   120  001036  73                 	db	115	;'s'
   121  001037  74                 	db	116	;'t'
   122  001038  72                 	db	114	;'r'
   123  001039  69                 	db	105	;'i'
   124  00103A  6E                 	db	110	;'n'
   125  00103B  67                 	db	103	;'g'
   126  00103C  3A                 	db	58	;':'
   127  00103D  20                 	db	32
   128  00103E  00                 	db	0
   129  00103F                     STR_4:
   130  00103F  41                 	db	65	;'A'
   131  001040  6E                 	db	110	;'n'
   132  001041  64                 	db	100	;'d'
   133  001042  20                 	db	32
   134  001043  68                 	db	104	;'h'
   135  001044  65                 	db	101	;'e'
   136  001045  72                 	db	114	;'r'
   137  001046  65                 	db	101	;'e'
   138  001047  20                 	db	32
   139  001048  69                 	db	105	;'i'
   140  001049  73                 	db	115	;'s'
   141  00104A  20                 	db	32
   142  00104B  74                 	db	116	;'t'
   143  00104C  68                 	db	104	;'h'
   144  00104D  65                 	db	101	;'e'
   145  00104E  20                 	db	32
   146  00104F  63                 	db	99	;'c'
   147  001050  68                 	db	104	;'h'
   148  001051  61                 	db	97	;'a'
   149  001052  72                 	db	114	;'r'
   150  001053  3A                 	db	58	;':'
   151  001054  20                 	db	32
   152  001055  00                 	db	0
   153  001056                     STR_2:
   154  001056  48                 	db	72	;'H'
   155  001057  65                 	db	101	;'e'
   156  001058  72                 	db	114	;'r'
   157  001059  65                 	db	101	;'e'
   158  00105A  20                 	db	32
   159  00105B  69                 	db	105	;'i'
   160  00105C  73                 	db	115	;'s'
   161  00105D  20                 	db	32
   162  00105E  74                 	db	116	;'t'
   163  00105F  68                 	db	104	;'h'
   164  001060  65                 	db	101	;'e'
   165  001061  20                 	db	32
   166  001062  63                 	db	99	;'c'
   167  001063  68                 	db	104	;'h'
   168  001064  61                 	db	97	;'a'
   169  001065  72                 	db	114	;'r'
   170  001066  3A                 	db	58	;':'
   171  001067  20                 	db	32
   172  001068  00                 	db	0
   173                           
   174                           ; #config settings
   175  001069  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           	psect	cinit
   178  0017BC                     __pcinit:
   179                           	opt stack 0
   180  0017BC                     start_initialization:
   181                           	opt stack 0
   182  0017BC                     __initialization:
   183                           	opt stack 0
   184                           
   185                           ; Clear objects allocated to COMRAM (24 bytes)
   186  0017BC  EE00  F034         	lfsr	0,__pbssCOMRAM
   187  0017C0  0E18               	movlw	24
   188  0017C2                     clear_0:
   189  0017C2  6AEE               	clrf	postinc0,c
   190  0017C4  06E8               	decf	wreg,f,c
   191  0017C6  E1FD               	bnz	clear_0
   192  0017C8                     end_of_initialization:
   193                           	opt stack 0
   194  0017C8                     __end_of__initialization:
   195                           	opt stack 0
   196  0017C8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   197  0017CA  6EF8               	movwf	tblptru,c
   198  0017CC  0E10               	movlw	high __Lsmallconst
   199  0017CE  6EF7               	movwf	tblptrh,c
   200  0017D0  0100               	movlb	0
   201  0017D2  EFD4  F009         	goto	_main	;jump to C main() function
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	bssCOMRAM
   208  000034                     __pbssCOMRAM:
   209                           	opt stack 0
   210  000034                     _CurrentAngle:
   211                           	opt stack 0
   212  000034                     	ds	3
   213  000037                     _CurrentVelocity:
   214                           	opt stack 0
   215  000037                     	ds	3
   216  00003A                     _DDouble:
   217                           	opt stack 0
   218  00003A                     	ds	3
   219  00003D                     _Kd:
   220                           	opt stack 0
   221  00003D                     	ds	3
   222  000040                     _Ki:
   223                           	opt stack 0
   224  000040                     	ds	3
   225  000043                     _Kp:
   226                           	opt stack 0
   227  000043                     	ds	3
   228  000046                     _SetAngle:
   229                           	opt stack 0
   230  000046                     	ds	3
   231  000049                     _DoublePtr:
   232                           	opt stack 0
   233  000049                     	ds	2
   234  00004B                     _PIDEnableFlag:
   235                           	opt stack 0
   236  00004B                     	ds	1
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	cstackCOMRAM
   243  000001                     __pcstackCOMRAM:
   244                           	opt stack 0
   245  000001                     ?___lwdiv:
   246                           	opt stack 0
   247  000001                     ?___lwmod:
   248                           	opt stack 0
   249  000001                     ?___ftpack:
   250                           	opt stack 0
   251  000001                     ?_EEReassembleDouble:
   252                           	opt stack 0
   253  000001                     SerTx@c:
   254                           	opt stack 0
   255  000001                     Read_b_eep@badd:
   256                           	opt stack 0
   257  000001                     Write_b_eep@badd:
   258                           	opt stack 0
   259  000001                     ___lwdiv@dividend:
   260                           	opt stack 0
   261  000001                     ___lwmod@dividend:
   262                           	opt stack 0
   263  000001                     EEDisassembleDouble@dub:
   264                           	opt stack 0
   265  000001                     ___ftpack@arg:
   266                           	opt stack 0
   267                           
   268                           ; 3 bytes @ 0x0
   269  000001                     	ds	1
   270  000002                     SerTxStr@string:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x1
   274  000002                     	ds	1
   275  000003                     EEReadChar@location:
   276                           	opt stack 0
   277  000003                     Write_b_eep@bdat:
   278                           	opt stack 0
   279  000003                     ___lwdiv@divisor:
   280                           	opt stack 0
   281  000003                     ___lwmod@divisor:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x2
   285  000003                     	ds	1
   286  000004                     EEReadChar@ch:
   287                           	opt stack 0
   288  000004                     Write_b_eep@GIE_BIT_VAL:
   289                           	opt stack 0
   290  000004                     ___ftpack@exp:
   291                           	opt stack 0
   292  000004                     EEReassembleDouble@dub:
   293                           	opt stack 0
   294                           
   295                           ; 3 bytes @ 0x3
   296  000004                     	ds	1
   297  000005                     EEWriteChar@ch:
   298                           	opt stack 0
   299  000005                     ___ftpack@sign:
   300                           	opt stack 0
   301  000005                     ___lwmod@counter:
   302                           	opt stack 0
   303  000005                     ___lwdiv@quotient:
   304                           	opt stack 0
   305  000005                     EEWriteDouble@dub:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0x4
   309  000005                     	ds	1
   310  000006                     ??___ftpack:
   311  000006                     EEWriteChar@location:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x5
   315  000006                     	ds	1
   316  000007                     ?_EEReadDouble:
   317                           	opt stack 0
   318  000007                     ___lwdiv@counter:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x6
   322  000007                     	ds	1
   323  000008                     EEWriteDouble@location:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x7
   327  000008                     	ds	1
   328  000009                     ?___ftmul:
   329                           	opt stack 0
   330  000009                     EEWriteDouble@x:
   331                           	opt stack 0
   332  000009                     ___ftmul@f1:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0x8
   336  000009                     	ds	1
   337  00000A                     EEReadDouble@location:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x9
   341  00000A                     	ds	1
   342  00000B                     EEReadDouble@x:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0xA
   346  00000B                     	ds	1
   347  00000C                     ___ftmul@f2:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0xB
   351  00000C                     	ds	3
   352  00000F                     ??___ftmul:
   353                           
   354                           ; 0 bytes @ 0xE
   355  00000F                     	ds	3
   356  000012                     ___ftmul@exp:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x11
   360  000012                     	ds	1
   361  000013                     ___ftmul@f3_as_product:
   362                           	opt stack 0
   363                           
   364                           ; 3 bytes @ 0x12
   365  000013                     	ds	3
   366  000016                     ___ftmul@cntr:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x15
   370  000016                     	ds	1
   371  000017                     ___ftmul@sign:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x16
   375  000017                     	ds	1
   376  000018                     ?___fttol:
   377                           	opt stack 0
   378  000018                     ___fttol@f1:
   379                           	opt stack 0
   380                           
   381                           ; 3 bytes @ 0x17
   382  000018                     	ds	4
   383  00001C                     ??___fttol:
   384                           
   385                           ; 0 bytes @ 0x1B
   386  00001C                     	ds	5
   387  000021                     ___fttol@sign1:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x20
   391  000021                     	ds	1
   392  000022                     ___fttol@lval:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x21
   396  000022                     	ds	4
   397  000026                     ___fttol@exp1:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x25
   401  000026                     	ds	1
   402  000027                     breakDouble@dubs:
   403                           	opt stack 0
   404                           
   405                           ; 3 bytes @ 0x26
   406  000027                     	ds	3
   407  00002A                     breakDouble@tempDub:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x29
   411  00002A                     	ds	2
   412  00002C                     breakDouble@temp1:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x2B
   416  00002C                     	ds	2
   417  00002E                     breakDouble@temp2:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x2D
   421  00002E                     	ds	2
   422  000030                     main@hello:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x2F
   426  000030                     	ds	3
   427  000033                     main@ch:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x32
   431  000033                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 11 in file "EEPROMDriver.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  hello           3   47[COMRAM] PTR unsigned char 
   447 ;;  ch              1   50[COMRAM] unsigned char 
   448 ;; Return value:  Size  Location     Type
   449 ;;		None               void
   450 ;; Registers used:
   451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;Total ram usage:        4 bytes
   462 ;; Hardware stack levels required when called:    3
   463 ;; This function calls:
   464 ;;		_EEReadChar
   465 ;;		_EEReadDouble
   466 ;;		_EEWriteChar
   467 ;;		_EEWriteDouble
   468 ;;		_SerTx
   469 ;;		_SerTxStr
   470 ;;		_Sernl
   471 ;;		_breakDouble
   472 ;;		_initialize
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text0
   479  0013A8                     __ptext0:
   480                           	opt stack 0
   481  0013A8                     _main:
   482                           	opt stack 28
   483                           
   484                           ;EEPROMDriver.c: 13: initialize();
   485                           
   486                           ;incstack = 0
   487  0013A8  EC18  F00C         	call	_initialize	;wreg free
   488                           
   489                           ;EEPROMDriver.c: 15: double hello = 255;
   490  0013AC  0E00               	movlw	0
   491  0013AE  6E30               	movwf	main@hello,c
   492  0013B0  0E7F               	movlw	127
   493  0013B2  6E31               	movwf	main@hello+1,c
   494  0013B4  0E43               	movlw	67
   495  0013B6  6E32               	movwf	main@hello+2,c
   496                           
   497                           ;EEPROMDriver.c: 16: unsigned char ch = 6;
   498  0013B8  0E06               	movlw	6
   499  0013BA  6E33               	movwf	main@ch,c
   500                           
   501                           ;EEPROMDriver.c: 18: Sernl();
   502  0013BC  EC0A  F00C         	call	_Sernl	;wreg free
   503                           
   504                           ;EEPROMDriver.c: 19: Sernl();
   505  0013C0  EC0A  F00C         	call	_Sernl	;wreg free
   506                           
   507                           ;EEPROMDriver.c: 20: SerTxStr("Here is the double string: ");
   508  0013C4  0E23               	movlw	low STR_1
   509  0013C6  6E02               	movwf	SerTxStr@string,c
   510  0013C8  0E10               	movlw	high STR_1
   511  0013CA  6E03               	movwf	SerTxStr@string+1,c
   512  0013CC  ECA7  F00B         	call	_SerTxStr	;wreg free
   513                           
   514                           ;EEPROMDriver.c: 21: breakDouble(hello);
   515  0013D0  C030  F027         	movff	main@hello,breakDouble@dubs
   516  0013D4  C031  F028         	movff	main@hello+1,breakDouble@dubs+1
   517  0013D8  C032  F029         	movff	main@hello+2,breakDouble@dubs+2
   518  0013DC  EC35  F008         	call	_breakDouble	;wreg free
   519                           
   520                           ;EEPROMDriver.c: 22: Sernl();
   521  0013E0  EC0A  F00C         	call	_Sernl	;wreg free
   522                           
   523                           ;EEPROMDriver.c: 23: SerTxStr("Here is the char: ");
   524  0013E4  0E56               	movlw	low STR_2
   525  0013E6  6E02               	movwf	SerTxStr@string,c
   526  0013E8  0E10               	movlw	high STR_2
   527  0013EA  6E03               	movwf	SerTxStr@string+1,c
   528  0013EC  ECA7  F00B         	call	_SerTxStr	;wreg free
   529                           
   530                           ;EEPROMDriver.c: 24: SerTx(ch + 0x30);
   531  0013F0  5033               	movf	main@ch,w,c
   532  0013F2  0F30               	addlw	48
   533  0013F4  EC11  F00C         	call	_SerTx
   534                           
   535                           ;EEPROMDriver.c: 25: Sernl();
   536  0013F8  EC0A  F00C         	call	_Sernl	;wreg free
   537                           
   538                           ;EEPROMDriver.c: 27: EEWriteDouble(0x00, hello);
   539  0013FC  C030  F005         	movff	main@hello,EEWriteDouble@dub
   540  001400  C031  F006         	movff	main@hello+1,EEWriteDouble@dub+1
   541  001404  C032  F007         	movff	main@hello+2,EEWriteDouble@dub+2
   542  001408  0E00               	movlw	0
   543  00140A  ECFA  F00A         	call	_EEWriteDouble
   544                           
   545                           ;EEPROMDriver.c: 28: EEWriteChar(0x04, ch);
   546  00140E  C033  F005         	movff	main@ch,EEWriteChar@ch
   547  001412  0E04               	movlw	4
   548  001414  ECBD  F00B         	call	_EEWriteChar
   549                           
   550                           ;EEPROMDriver.c: 30: hello = 0;
   551  001418  0E00               	movlw	0
   552  00141A  6E30               	movwf	main@hello,c
   553  00141C  0E00               	movlw	0
   554  00141E  6E31               	movwf	main@hello+1,c
   555  001420  0E00               	movlw	0
   556  001422  6E32               	movwf	main@hello+2,c
   557                           
   558                           ;EEPROMDriver.c: 31: ch = 0;
   559  001424  0E00               	movlw	0
   560  001426  6E33               	movwf	main@ch,c
   561                           
   562                           ;EEPROMDriver.c: 33: Sernl();
   563  001428  EC0A  F00C         	call	_Sernl	;wreg free
   564                           
   565                           ;EEPROMDriver.c: 34: hello = EEReadDouble(0x00);
   566  00142C  0E00               	movlw	0
   567  00142E  ECCF  F00A         	call	_EEReadDouble
   568  001432  C007  F030         	movff	?_EEReadDouble,main@hello
   569  001436  C008  F031         	movff	?_EEReadDouble+1,main@hello+1
   570  00143A  C009  F032         	movff	?_EEReadDouble+2,main@hello+2
   571                           
   572                           ;EEPROMDriver.c: 35: ch = EEReadChar(0x04);
   573  00143E  0E04               	movlw	4
   574  001440  ECCE  F00B         	call	_EEReadChar
   575  001444  6E33               	movwf	main@ch,c
   576                           
   577                           ;EEPROMDriver.c: 37: SerTxStr("Here is the double string again: ");
   578  001446  0E01               	movlw	low STR_3
   579  001448  6E02               	movwf	SerTxStr@string,c
   580  00144A  0E10               	movlw	high STR_3
   581  00144C  6E03               	movwf	SerTxStr@string+1,c
   582  00144E  ECA7  F00B         	call	_SerTxStr	;wreg free
   583                           
   584                           ;EEPROMDriver.c: 38: breakDouble(hello);
   585  001452  C030  F027         	movff	main@hello,breakDouble@dubs
   586  001456  C031  F028         	movff	main@hello+1,breakDouble@dubs+1
   587  00145A  C032  F029         	movff	main@hello+2,breakDouble@dubs+2
   588  00145E  EC35  F008         	call	_breakDouble	;wreg free
   589                           
   590                           ;EEPROMDriver.c: 39: SerTxStr("And here is the char: ");
   591  001462  0E3F               	movlw	low STR_4
   592  001464  6E02               	movwf	SerTxStr@string,c
   593  001466  0E10               	movlw	high STR_4
   594  001468  6E03               	movwf	SerTxStr@string+1,c
   595  00146A  ECA7  F00B         	call	_SerTxStr	;wreg free
   596                           
   597                           ;EEPROMDriver.c: 40: SerTx(ch + 0x30);
   598  00146E  5033               	movf	main@ch,w,c
   599  001470  0F30               	addlw	48
   600  001472  EC11  F00C         	call	_SerTx
   601  001476  D7FF               	goto	l26
   602  001478  EF00  F000         	goto	start
   603  00147C                     __end_of_main:
   604                           	opt stack 0
   605                           tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           
   610 ;; *************** function _initialize *****************
   611 ;; Defined at:
   612 ;;		line 45 in file "EEPROMDriver.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;		None               void
   619 ;; Registers used:
   620 ;;		wreg, status,2, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    1
   633 ;; This function calls:
   634 ;;		_EEPROMInit
   635 ;;		_SerInit
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text1
   642  001830                     __ptext1:
   643                           	opt stack 0
   644  001830                     _initialize:
   645                           	opt stack 29
   646                           
   647                           ;EEPROMDriver.c: 47: SerInit();
   648                           
   649                           ;incstack = 0
   650  001830  ECF8  F00B         	call	_SerInit	;wreg free
   651                           
   652                           ;EEPROMDriver.c: 48: EEPROMInit();
   653  001834  EC02  F00C         	call	_EEPROMInit	;wreg free
   654  001838  0012               	return		;funcret
   655  00183A                     __end_of_initialize:
   656                           	opt stack 0
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           
   662 ;; *************** function _SerInit *****************
   663 ;; Defined at:
   664 ;;		line 19 in file "SerComm.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;		None               void
   671 ;; Registers used:
   672 ;;		wreg, status,2
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_initialize
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text2
   692  0017F0                     __ptext2:
   693                           	opt stack 0
   694  0017F0                     _SerInit:
   695                           	opt stack 29
   696                           
   697                           ;SerComm.c: 21: TXSTA1 = 0x24;
   698                           
   699                           ;incstack = 0
   700  0017F0  0E24               	movlw	36
   701  0017F2  6EAC               	movwf	4012,c	;volatile
   702                           
   703                           ;SerComm.c: 22: RCSTA1 = 0x90;
   704  0017F4  0E90               	movlw	144
   705  0017F6  6EAB               	movwf	4011,c	;volatile
   706                           
   707                           ;SerComm.c: 23: BAUDCON1 = 0x00;
   708  0017F8  0E00               	movlw	0
   709  0017FA  6E7E               	movwf	3966,c	;volatile
   710                           
   711                           ;SerComm.c: 24: SPBRG = 21;
   712  0017FC  0E15               	movlw	21
   713  0017FE  6EAF               	movwf	4015,c	;volatile
   714                           
   715                           ;SerComm.c: 26: PIE1bits.RC1IE = 1;
   716  001800  8A9D               	bsf	3997,5,c	;volatile
   717  001802  0012               	return		;funcret
   718  001804                     __end_of_SerInit:
   719                           	opt stack 0
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           
   725 ;; *************** function _EEPROMInit *****************
   726 ;; Defined at:
   727 ;;		line 13 in file "EEPROM.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;		None               void
   734 ;; Registers used:
   735 ;;		wreg, status,2
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_initialize
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text3
   755  001804                     __ptext3:
   756                           	opt stack 0
   757  001804                     _EEPROMInit:
   758                           	opt stack 29
   759                           
   760                           ;EEPROM.c: 15: EECON1bits.EEPGD = 0;
   761                           
   762                           ;incstack = 0
   763  001804  9EA6               	bcf	4006,7,c	;volatile
   764                           
   765                           ;EEPROM.c: 16: EECON1bits.CFGS = 0;
   766  001806  9CA6               	bcf	4006,6,c	;volatile
   767                           
   768                           ;EEPROM.c: 17: EECON1bits.WREN = 1;
   769  001808  84A6               	bsf	4006,2,c	;volatile
   770                           
   771                           ;EEPROM.c: 19: HLVDCON = 0x3D;
   772  00180A  0E3D               	movlw	61
   773  00180C  6ED2               	movwf	4050,c	;volatile
   774                           
   775                           ;EEPROM.c: 20: PIE2bits.HLVDIE = 1;
   776  00180E  84A0               	bsf	4000,2,c	;volatile
   777                           
   778                           ;EEPROM.c: 21: IPR2bits.HLVDIP = 1;
   779  001810  84A2               	bsf	4002,2,c	;volatile
   780  001812  0012               	return		;funcret
   781  001814                     __end_of_EEPROMInit:
   782                           	opt stack 0
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           postinc0	equ	0xFEE
   786                           wreg	equ	0xFE8
   787                           
   788 ;; *************** function _breakDouble *****************
   789 ;; Defined at:
   790 ;;		line 71 in file "SerComm.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  dubs            3   38[COMRAM] unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  temp2           2   45[COMRAM] unsigned int 
   795 ;;  temp1           2   43[COMRAM] unsigned int 
   796 ;;  tempDub         2   41[COMRAM] unsigned int 
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   806 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;Total ram usage:        9 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    2
   813 ;; This function calls:
   814 ;;		_SerTx
   815 ;;		___ftmul
   816 ;;		___fttol
   817 ;;		___lwdiv
   818 ;;		___lwmod
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text4
   825  00106A                     __ptext4:
   826                           	opt stack 0
   827  00106A                     _breakDouble:
   828                           	opt stack 28
   829                           
   830                           ;SerComm.c: 73: unsigned int temp1, temp2;
   831                           ;SerComm.c: 74: unsigned int tempDub;
   832                           ;SerComm.c: 76: tempDub = dubs * 100;
   833                           
   834                           ;incstack = 0
   835  00106A  0E00               	movlw	0
   836  00106C  6E0C               	movwf	___ftmul@f2,c
   837  00106E  0EC8               	movlw	200
   838  001070  6E0D               	movwf	___ftmul@f2+1,c
   839  001072  0E42               	movlw	66
   840  001074  6E0E               	movwf	___ftmul@f2+2,c
   841  001076  C027  F009         	movff	breakDouble@dubs,___ftmul@f1
   842  00107A  C028  F00A         	movff	breakDouble@dubs+1,___ftmul@f1+1
   843  00107E  C029  F00B         	movff	breakDouble@dubs+2,___ftmul@f1+2
   844  001082  ECE5  F008         	call	___ftmul	;wreg free
   845  001086  C009  F018         	movff	?___ftmul,___fttol@f1
   846  00108A  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
   847  00108E  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
   848  001092  EC61  F009         	call	___fttol	;wreg free
   849  001096  C018  F02A         	movff	?___fttol,breakDouble@tempDub
   850  00109A  C019  F02B         	movff	?___fttol+1,breakDouble@tempDub+1
   851                           
   852                           ;SerComm.c: 77: temp1 = tempDub / 10000;
   853  00109E  C02A  F001         	movff	breakDouble@tempDub,___lwdiv@dividend
   854  0010A2  C02B  F002         	movff	breakDouble@tempDub+1,___lwdiv@dividend+1
   855  0010A6  0E27               	movlw	39
   856  0010A8  6E04               	movwf	___lwdiv@divisor+1,c
   857  0010AA  0E10               	movlw	16
   858  0010AC  6E03               	movwf	___lwdiv@divisor,c
   859  0010AE  ECA1  F00A         	call	___lwdiv	;wreg free
   860  0010B2  C001  F02C         	movff	?___lwdiv,breakDouble@temp1
   861  0010B6  C002  F02D         	movff	?___lwdiv+1,breakDouble@temp1+1
   862                           
   863                           ;SerComm.c: 78: temp2 = tempDub % 10000;
   864  0010BA  C02A  F001         	movff	breakDouble@tempDub,___lwmod@dividend
   865  0010BE  C02B  F002         	movff	breakDouble@tempDub+1,___lwmod@dividend+1
   866  0010C2  0E27               	movlw	39
   867  0010C4  6E04               	movwf	___lwmod@divisor+1,c
   868  0010C6  0E10               	movlw	16
   869  0010C8  6E03               	movwf	___lwmod@divisor,c
   870  0010CA  EC24  F00B         	call	___lwmod	;wreg free
   871  0010CE  C001  F02E         	movff	?___lwmod,breakDouble@temp2
   872  0010D2  C002  F02F         	movff	?___lwmod+1,breakDouble@temp2+1
   873                           
   874                           ;SerComm.c: 79: if (temp1 != 0)
   875  0010D6  502C               	movf	breakDouble@temp1,w,c
   876  0010D8  102D               	iorwf	breakDouble@temp1+1,w,c
   877  0010DA  B4D8               	btfsc	status,2,c
   878  0010DC  D004               	goto	l162
   879                           
   880                           ;SerComm.c: 80: SerTx(temp1 + 0x30);
   881  0010DE  502C               	movf	breakDouble@temp1,w,c
   882  0010E0  0F30               	addlw	48
   883  0010E2  EC11  F00C         	call	_SerTx
   884  0010E6                     l162:
   885                           
   886                           ;SerComm.c: 81: temp1 = temp2 / 1000;
   887  0010E6  C02E  F001         	movff	breakDouble@temp2,___lwdiv@dividend
   888  0010EA  C02F  F002         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
   889  0010EE  0E03               	movlw	3
   890  0010F0  6E04               	movwf	___lwdiv@divisor+1,c
   891  0010F2  0EE8               	movlw	232
   892  0010F4  6E03               	movwf	___lwdiv@divisor,c
   893  0010F6  ECA1  F00A         	call	___lwdiv	;wreg free
   894  0010FA  C001  F02C         	movff	?___lwdiv,breakDouble@temp1
   895  0010FE  C002  F02D         	movff	?___lwdiv+1,breakDouble@temp1+1
   896                           
   897                           ;SerComm.c: 82: temp2 = temp2 % 1000;
   898  001102  C02E  F001         	movff	breakDouble@temp2,___lwmod@dividend
   899  001106  C02F  F002         	movff	breakDouble@temp2+1,___lwmod@dividend+1
   900  00110A  0E03               	movlw	3
   901  00110C  6E04               	movwf	___lwmod@divisor+1,c
   902  00110E  0EE8               	movlw	232
   903  001110  6E03               	movwf	___lwmod@divisor,c
   904  001112  EC24  F00B         	call	___lwmod	;wreg free
   905  001116  C001  F02E         	movff	?___lwmod,breakDouble@temp2
   906  00111A  C002  F02F         	movff	?___lwmod+1,breakDouble@temp2+1
   907                           
   908                           ;SerComm.c: 83: if (temp1 != 0)
   909  00111E  502C               	movf	breakDouble@temp1,w,c
   910  001120  102D               	iorwf	breakDouble@temp1+1,w,c
   911  001122  B4D8               	btfsc	status,2,c
   912  001124  D004               	goto	l163
   913                           
   914                           ;SerComm.c: 84: SerTx(temp1 + 0x30);
   915  001126  502C               	movf	breakDouble@temp1,w,c
   916  001128  0F30               	addlw	48
   917  00112A  EC11  F00C         	call	_SerTx
   918  00112E                     l163:
   919                           
   920                           ;SerComm.c: 85: temp1 = temp2 / 100;
   921  00112E  C02E  F001         	movff	breakDouble@temp2,___lwdiv@dividend
   922  001132  C02F  F002         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
   923  001136  0E00               	movlw	0
   924  001138  6E04               	movwf	___lwdiv@divisor+1,c
   925  00113A  0E64               	movlw	100
   926  00113C  6E03               	movwf	___lwdiv@divisor,c
   927  00113E  ECA1  F00A         	call	___lwdiv	;wreg free
   928  001142  C001  F02C         	movff	?___lwdiv,breakDouble@temp1
   929  001146  C002  F02D         	movff	?___lwdiv+1,breakDouble@temp1+1
   930                           
   931                           ;SerComm.c: 86: temp2 = temp2 % 100;
   932  00114A  C02E  F001         	movff	breakDouble@temp2,___lwmod@dividend
   933  00114E  C02F  F002         	movff	breakDouble@temp2+1,___lwmod@dividend+1
   934  001152  0E00               	movlw	0
   935  001154  6E04               	movwf	___lwmod@divisor+1,c
   936  001156  0E64               	movlw	100
   937  001158  6E03               	movwf	___lwmod@divisor,c
   938  00115A  EC24  F00B         	call	___lwmod	;wreg free
   939  00115E  C001  F02E         	movff	?___lwmod,breakDouble@temp2
   940  001162  C002  F02F         	movff	?___lwmod+1,breakDouble@temp2+1
   941                           
   942                           ;SerComm.c: 87: SerTx(temp1 + 0x30);
   943  001166  502C               	movf	breakDouble@temp1,w,c
   944  001168  0F30               	addlw	48
   945  00116A  EC11  F00C         	call	_SerTx
   946                           
   947                           ;SerComm.c: 88: SerTx('.');
   948  00116E  0E2E               	movlw	46
   949  001170  EC11  F00C         	call	_SerTx
   950                           
   951                           ;SerComm.c: 89: temp1 = temp2 / 10;
   952  001174  C02E  F001         	movff	breakDouble@temp2,___lwdiv@dividend
   953  001178  C02F  F002         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
   954  00117C  0E00               	movlw	0
   955  00117E  6E04               	movwf	___lwdiv@divisor+1,c
   956  001180  0E0A               	movlw	10
   957  001182  6E03               	movwf	___lwdiv@divisor,c
   958  001184  ECA1  F00A         	call	___lwdiv	;wreg free
   959  001188  C001  F02C         	movff	?___lwdiv,breakDouble@temp1
   960  00118C  C002  F02D         	movff	?___lwdiv+1,breakDouble@temp1+1
   961                           
   962                           ;SerComm.c: 90: temp2 = temp2 % 10;
   963  001190  C02E  F001         	movff	breakDouble@temp2,___lwmod@dividend
   964  001194  C02F  F002         	movff	breakDouble@temp2+1,___lwmod@dividend+1
   965  001198  0E00               	movlw	0
   966  00119A  6E04               	movwf	___lwmod@divisor+1,c
   967  00119C  0E0A               	movlw	10
   968  00119E  6E03               	movwf	___lwmod@divisor,c
   969  0011A0  EC24  F00B         	call	___lwmod	;wreg free
   970  0011A4  C001  F02E         	movff	?___lwmod,breakDouble@temp2
   971  0011A8  C002  F02F         	movff	?___lwmod+1,breakDouble@temp2+1
   972                           
   973                           ;SerComm.c: 91: SerTx(temp1 + 0x30);
   974  0011AC  502C               	movf	breakDouble@temp1,w,c
   975  0011AE  0F30               	addlw	48
   976  0011B0  EC11  F00C         	call	_SerTx
   977                           
   978                           ;SerComm.c: 92: SerTx(temp2 + 0x30);
   979  0011B4  502E               	movf	breakDouble@temp2,w,c
   980  0011B6  0F30               	addlw	48
   981  0011B8  EC11  F00C         	call	_SerTx
   982                           
   983                           ;SerComm.c: 93: SerTx(0x0A);
   984  0011BC  0E0A               	movlw	10
   985  0011BE  EC11  F00C         	call	_SerTx
   986                           
   987                           ;SerComm.c: 94: SerTx(0x0D);
   988  0011C2  0E0D               	movlw	13
   989  0011C4  EC11  F00C         	call	_SerTx
   990  0011C8  0012               	return		;funcret
   991  0011CA                     __end_of_breakDouble:
   992                           	opt stack 0
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           postinc0	equ	0xFEE
   996                           wreg	equ	0xFE8
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function ___lwmod *****************
  1000 ;; Defined at:
  1001 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  dividend        2    0[COMRAM] unsigned int 
  1004 ;;  divisor         2    2[COMRAM] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  counter         1    4[COMRAM] unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  2    0[COMRAM] unsigned int 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        5 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_breakDouble
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text5
  1030  001648                     __ptext5:
  1031                           	opt stack 0
  1032  001648                     ___lwmod:
  1033                           	opt stack 29
  1034                           
  1035                           ;incstack = 0
  1036  001648  5003               	movf	___lwmod@divisor,w,c
  1037  00164A  1004               	iorwf	___lwmod@divisor+1,w,c
  1038  00164C  B4D8               	btfsc	status,2,c
  1039  00164E  D01D               	goto	l737
  1040  001650  0E01               	movlw	1
  1041  001652  6E05               	movwf	___lwmod@counter,c
  1042  001654  D005               	goto	l1446
  1043  001656                     l1444:
  1044  001656  90D8               	bcf	status,0,c
  1045  001658  3603               	rlcf	___lwmod@divisor,f,c
  1046  00165A  3604               	rlcf	___lwmod@divisor+1,f,c
  1047  00165C  2A05               	incf	___lwmod@counter,f,c
  1048  00165E  D000               	goto	l1446
  1049  001660                     l1446:
  1050  001660  BE04               	btfsc	___lwmod@divisor+1,7,c
  1051  001662  D002               	goto	l1448
  1052  001664  D7F8               	goto	l1444
  1053  001666  D000               	goto	l1448
  1054  001668                     l1448:
  1055  001668  5003               	movf	___lwmod@divisor,w,c
  1056  00166A  5C01               	subwf	___lwmod@dividend,w,c
  1057  00166C  5004               	movf	___lwmod@divisor+1,w,c
  1058  00166E  5802               	subwfb	___lwmod@dividend+1,w,c
  1059  001670  A0D8               	btfss	status,0,c
  1060  001672  D005               	goto	l1452
  1061  001674  5003               	movf	___lwmod@divisor,w,c
  1062  001676  5E01               	subwf	___lwmod@dividend,f,c
  1063  001678  5004               	movf	___lwmod@divisor+1,w,c
  1064  00167A  5A02               	subwfb	___lwmod@dividend+1,f,c
  1065  00167C  D000               	goto	l1452
  1066  00167E                     l1452:
  1067  00167E  90D8               	bcf	status,0,c
  1068  001680  3204               	rrcf	___lwmod@divisor+1,f,c
  1069  001682  3203               	rrcf	___lwmod@divisor,f,c
  1070  001684  2E05               	decfsz	___lwmod@counter,f,c
  1071  001686  D7F0               	goto	l1448
  1072  001688  D000               	goto	l737
  1073  00168A                     l737:
  1074  00168A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1075  00168E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1076  001692  0012               	return		;funcret
  1077  001694                     __end_of___lwmod:
  1078                           	opt stack 0
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           status	equ	0xFD8
  1084                           
  1085 ;; *************** function ___lwdiv *****************
  1086 ;; Defined at:
  1087 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  dividend        2    0[COMRAM] unsigned int 
  1090 ;;  divisor         2    2[COMRAM] unsigned int 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  quotient        2    4[COMRAM] unsigned int 
  1093 ;;  counter         1    6[COMRAM] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  2    0[COMRAM] unsigned int 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;Total ram usage:        7 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_breakDouble
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text6
  1117  001542                     __ptext6:
  1118                           	opt stack 0
  1119  001542                     ___lwdiv:
  1120                           	opt stack 29
  1121                           
  1122                           ;incstack = 0
  1123  001542  0E00               	movlw	0
  1124  001544  6E06               	movwf	___lwdiv@quotient+1,c
  1125  001546  0E00               	movlw	0
  1126  001548  6E05               	movwf	___lwdiv@quotient,c
  1127  00154A  5003               	movf	___lwdiv@divisor,w,c
  1128  00154C  1004               	iorwf	___lwdiv@divisor+1,w,c
  1129  00154E  B4D8               	btfsc	status,2,c
  1130  001550  D021               	goto	l727
  1131  001552  0E01               	movlw	1
  1132  001554  6E07               	movwf	___lwdiv@counter,c
  1133  001556  D005               	goto	l1426
  1134  001558                     l1424:
  1135  001558  90D8               	bcf	status,0,c
  1136  00155A  3603               	rlcf	___lwdiv@divisor,f,c
  1137  00155C  3604               	rlcf	___lwdiv@divisor+1,f,c
  1138  00155E  2A07               	incf	___lwdiv@counter,f,c
  1139  001560  D000               	goto	l1426
  1140  001562                     l1426:
  1141  001562  BE04               	btfsc	___lwdiv@divisor+1,7,c
  1142  001564  D002               	goto	l1428
  1143  001566  D7F8               	goto	l1424
  1144  001568  D000               	goto	l1428
  1145  00156A                     l1428:
  1146  00156A  90D8               	bcf	status,0,c
  1147  00156C  3605               	rlcf	___lwdiv@quotient,f,c
  1148  00156E  3606               	rlcf	___lwdiv@quotient+1,f,c
  1149  001570  5003               	movf	___lwdiv@divisor,w,c
  1150  001572  5C01               	subwf	___lwdiv@dividend,w,c
  1151  001574  5004               	movf	___lwdiv@divisor+1,w,c
  1152  001576  5802               	subwfb	___lwdiv@dividend+1,w,c
  1153  001578  A0D8               	btfss	status,0,c
  1154  00157A  D006               	goto	l1436
  1155  00157C  5003               	movf	___lwdiv@divisor,w,c
  1156  00157E  5E01               	subwf	___lwdiv@dividend,f,c
  1157  001580  5004               	movf	___lwdiv@divisor+1,w,c
  1158  001582  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1159  001584  8005               	bsf	___lwdiv@quotient,0,c
  1160  001586  D000               	goto	l1436
  1161  001588                     l1436:
  1162  001588  90D8               	bcf	status,0,c
  1163  00158A  3204               	rrcf	___lwdiv@divisor+1,f,c
  1164  00158C  3203               	rrcf	___lwdiv@divisor,f,c
  1165  00158E  2E07               	decfsz	___lwdiv@counter,f,c
  1166  001590  D7EC               	goto	l1428
  1167  001592  D000               	goto	l727
  1168  001594                     l727:
  1169  001594  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1170  001598  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1171  00159C  0012               	return		;funcret
  1172  00159E                     __end_of___lwdiv:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function ___fttol *****************
  1181 ;; Defined at:
  1182 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  f1              3   23[COMRAM] float 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  lval            4   33[COMRAM] unsigned long 
  1187 ;;  exp1            1   37[COMRAM] unsigned char 
  1188 ;;  sign1           1   32[COMRAM] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  4   23[COMRAM] long 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:       15 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_breakDouble
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text7
  1212  0012C2                     __ptext7:
  1213                           	opt stack 0
  1214  0012C2                     ___fttol:
  1215                           	opt stack 29
  1216                           
  1217                           ;incstack = 0
  1218  0012C2  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  1219  0012C6  6A1D               	clrf	(??___fttol+1)& (0+255),c
  1220  0012C8  6A1E               	clrf	(??___fttol+2)& (0+255),c
  1221  0012CA  3419               	rlcf	___fttol@f1+1,w,c
  1222  0012CC  361C               	rlcf	??___fttol& (0+255),f,c
  1223  0012CE  E301               	bnc	u591
  1224  0012D0  801D               	bsf	(??___fttol+1)& (0+255),0,c
  1225  0012D2                     u591:
  1226  0012D2  501C               	movf	??___fttol,w,c
  1227  0012D4  6E26               	movwf	___fttol@exp1,c
  1228  0012D6  5026               	movf	___fttol@exp1,w,c
  1229  0012D8  A4D8               	btfss	status,2,c
  1230  0012DA  D002               	goto	l1378
  1231  0012DC  D039               	goto	l1402
  1232  0012DE  D063               	goto	l625
  1233  0012E0                     l1378:
  1234  0012E0  0E17               	movlw	23
  1235  0012E2  6E1C               	movwf	??___fttol& (0+255),c
  1236  0012E4  C018  F01D         	movff	___fttol@f1,??___fttol+1
  1237  0012E8  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  1238  0012EC  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  1239  0012F0  281C               	incf	??___fttol,w,c
  1240  0012F2  6E20               	movwf	(??___fttol+4)& (0+255),c
  1241  0012F4  D004               	goto	u610
  1242  0012F6                     u615:
  1243  0012F6  90D8               	bcf	status,0,c
  1244  0012F8  321F               	rrcf	??___fttol+3,f,c
  1245  0012FA  321E               	rrcf	??___fttol+2,f,c
  1246  0012FC  321D               	rrcf	??___fttol+1,f,c
  1247  0012FE                     u610:
  1248  0012FE  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  1249  001300  D7FA               	goto	u615
  1250  001302  501D               	movf	??___fttol+1,w,c
  1251  001304  6E21               	movwf	___fttol@sign1,c
  1252  001306  8E19               	bsf	___fttol@f1+1,7,c
  1253  001308  0EFF               	movlw	255
  1254  00130A  1618               	andwf	___fttol@f1,f,c
  1255  00130C  0EFF               	movlw	255
  1256  00130E  1619               	andwf	___fttol@f1+1,f,c
  1257  001310  0E00               	movlw	0
  1258  001312  161A               	andwf	___fttol@f1+2,f,c
  1259  001314  5018               	movf	___fttol@f1,w,c
  1260  001316  6E22               	movwf	___fttol@lval,c
  1261  001318  5019               	movf	___fttol@f1+1,w,c
  1262  00131A  6E23               	movwf	___fttol@lval+1,c
  1263  00131C  501A               	movf	___fttol@f1+2,w,c
  1264  00131E  6E24               	movwf	___fttol@lval+2,c
  1265  001320  6A25               	clrf	___fttol@lval+3,c
  1266  001322  0E8E               	movlw	142
  1267  001324  5E26               	subwf	___fttol@exp1,f,c
  1268  001326  AE26               	btfss	___fttol@exp1,7,c
  1269  001328  D010               	goto	l1400
  1270  00132A  5026               	movf	___fttol@exp1,w,c
  1271  00132C  0A80               	xorlw	128
  1272  00132E  0F8F               	addlw	143
  1273  001330  B0D8               	btfsc	status,0,c
  1274  001332  D003               	goto	l1396
  1275  001334  D00D               	goto	l1402
  1276  001336  D037               	goto	l625
  1277  001338  D000               	goto	l1396
  1278  00133A                     l1396:
  1279  00133A  90D8               	bcf	status,0,c
  1280  00133C  3225               	rrcf	___fttol@lval+3,f,c
  1281  00133E  3224               	rrcf	___fttol@lval+2,f,c
  1282  001340  3223               	rrcf	___fttol@lval+1,f,c
  1283  001342  3222               	rrcf	___fttol@lval,f,c
  1284  001344  3E26               	incfsz	___fttol@exp1,f,c
  1285  001346  D7F9               	goto	l1396
  1286  001348  D019               	goto	l1410
  1287  00134A                     l1400:
  1288  00134A  0E17               	movlw	23
  1289  00134C  6426               	cpfsgt	___fttol@exp1,c
  1290  00134E  D011               	goto	l1408
  1291  001350                     l1402:
  1292  001350  0E00               	movlw	0
  1293  001352  6E18               	movwf	?___fttol,c
  1294  001354  0E00               	movlw	0
  1295  001356  6E19               	movwf	?___fttol+1,c
  1296  001358  0E00               	movlw	0
  1297  00135A  6E1A               	movwf	?___fttol+2,c
  1298  00135C  0E00               	movlw	0
  1299  00135E  6E1B               	movwf	?___fttol+3,c
  1300  001360  D022               	goto	l625
  1301  001362  D007               	goto	l1408
  1302  001364                     l1406:
  1303  001364  90D8               	bcf	status,0,c
  1304  001366  3622               	rlcf	___fttol@lval,f,c
  1305  001368  3623               	rlcf	___fttol@lval+1,f,c
  1306  00136A  3624               	rlcf	___fttol@lval+2,f,c
  1307  00136C  3625               	rlcf	___fttol@lval+3,f,c
  1308  00136E  0626               	decf	___fttol@exp1,f,c
  1309  001370  D000               	goto	l1408
  1310  001372                     l1408:
  1311  001372  5026               	movf	___fttol@exp1,w,c
  1312  001374  B4D8               	btfsc	status,2,c
  1313  001376  D002               	goto	l1410
  1314  001378  D7F5               	goto	l1406
  1315  00137A  D000               	goto	l1410
  1316  00137C                     l1410:
  1317  00137C  5021               	movf	___fttol@sign1,w,c
  1318  00137E  B4D8               	btfsc	status,2,c
  1319  001380  D009               	goto	l1414
  1320  001382  1E25               	comf	___fttol@lval+3,f,c
  1321  001384  1E24               	comf	___fttol@lval+2,f,c
  1322  001386  1E23               	comf	___fttol@lval+1,f,c
  1323  001388  6C22               	negf	___fttol@lval,c
  1324  00138A  0E00               	movlw	0
  1325  00138C  2223               	addwfc	___fttol@lval+1,f,c
  1326  00138E  2224               	addwfc	___fttol@lval+2,f,c
  1327  001390  2225               	addwfc	___fttol@lval+3,f,c
  1328  001392  D000               	goto	l1414
  1329  001394                     l1414:
  1330  001394  C022  F018         	movff	___fttol@lval,?___fttol
  1331  001398  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  1332  00139C  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  1333  0013A0  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  1334  0013A4  D000               	goto	l625
  1335  0013A6                     l625:
  1336  0013A6  0012               	return		;funcret
  1337  0013A8                     __end_of___fttol:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function ___ftmul *****************
  1346 ;; Defined at:
  1347 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  f1              3    8[COMRAM] float 
  1350 ;;  f2              3   11[COMRAM] float 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  1353 ;;  sign            1   22[COMRAM] unsigned char 
  1354 ;;  cntr            1   21[COMRAM] unsigned char 
  1355 ;;  exp             1   17[COMRAM] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  3    8[COMRAM] float 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;Total ram usage:       15 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    1
  1372 ;; This function calls:
  1373 ;;		___ftpack
  1374 ;; This function is called by:
  1375 ;;		_breakDouble
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text8
  1380  0011CA                     __ptext8:
  1381                           	opt stack 0
  1382  0011CA                     ___ftmul:
  1383                           	opt stack 28
  1384                           
  1385                           ;incstack = 0
  1386  0011CA  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  1387  0011CE  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1388  0011D0  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1389  0011D2  340A               	rlcf	___ftmul@f1+1,w,c
  1390  0011D4  360F               	rlcf	??___ftmul& (0+255),f,c
  1391  0011D6  E301               	bnc	u531
  1392  0011D8  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1393  0011DA                     u531:
  1394  0011DA  500F               	movf	??___ftmul,w,c
  1395  0011DC  6E12               	movwf	___ftmul@exp,c
  1396  0011DE  5012               	movf	___ftmul@exp,w,c
  1397  0011E0  A4D8               	btfss	status,2,c
  1398  0011E2  D002               	goto	l1330
  1399  0011E4  D00E               	goto	l1332
  1400  0011E6  D06C               	goto	l604
  1401  0011E8                     l1330:
  1402  0011E8  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  1403  0011EC  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1404  0011EE  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1405  0011F0  340D               	rlcf	___ftmul@f2+1,w,c
  1406  0011F2  360F               	rlcf	??___ftmul& (0+255),f,c
  1407  0011F4  E301               	bnc	u551
  1408  0011F6  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1409  0011F8                     u551:
  1410  0011F8  500F               	movf	??___ftmul,w,c
  1411  0011FA  6E17               	movwf	___ftmul@sign,c
  1412  0011FC  5017               	movf	___ftmul@sign,w,c
  1413  0011FE  A4D8               	btfss	status,2,c
  1414  001200  D007               	goto	l1336
  1415  001202                     l1332:
  1416  001202  0E00               	movlw	0
  1417  001204  6E09               	movwf	?___ftmul,c
  1418  001206  0E00               	movlw	0
  1419  001208  6E0A               	movwf	?___ftmul+1,c
  1420  00120A  0E00               	movlw	0
  1421  00120C  6E0B               	movwf	?___ftmul+2,c
  1422  00120E  D058               	goto	l604
  1423  001210                     l1336:
  1424  001210  5017               	movf	___ftmul@sign,w,c
  1425  001212  0F7B               	addlw	123
  1426  001214  2612               	addwf	___ftmul@exp,f,c
  1427  001216  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  1428  00121A  500E               	movf	___ftmul@f2+2,w,c
  1429  00121C  1A17               	xorwf	___ftmul@sign,f,c
  1430  00121E  0E80               	movlw	128
  1431  001220  1617               	andwf	___ftmul@sign,f,c
  1432  001222  8E0A               	bsf	___ftmul@f1+1,7,c
  1433  001224  8E0D               	bsf	___ftmul@f2+1,7,c
  1434  001226  0EFF               	movlw	255
  1435  001228  160C               	andwf	___ftmul@f2,f,c
  1436  00122A  0EFF               	movlw	255
  1437  00122C  160D               	andwf	___ftmul@f2+1,f,c
  1438  00122E  0E00               	movlw	0
  1439  001230  160E               	andwf	___ftmul@f2+2,f,c
  1440  001232  0E00               	movlw	0
  1441  001234  6E13               	movwf	___ftmul@f3_as_product,c
  1442  001236  0E00               	movlw	0
  1443  001238  6E14               	movwf	___ftmul@f3_as_product+1,c
  1444  00123A  0E00               	movlw	0
  1445  00123C  6E15               	movwf	___ftmul@f3_as_product+2,c
  1446  00123E  0E07               	movlw	7
  1447  001240  6E16               	movwf	___ftmul@cntr,c
  1448  001242  D000               	goto	l1350
  1449  001244                     l1350:
  1450  001244  A009               	btfss	___ftmul@f1,0,c
  1451  001246  D007               	goto	l1354
  1452  001248  500C               	movf	___ftmul@f2,w,c
  1453  00124A  2613               	addwf	___ftmul@f3_as_product,f,c
  1454  00124C  500D               	movf	___ftmul@f2+1,w,c
  1455  00124E  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1456  001250  500E               	movf	___ftmul@f2+2,w,c
  1457  001252  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1458  001254  D000               	goto	l1354
  1459  001256                     l1354:
  1460  001256  90D8               	bcf	status,0,c
  1461  001258  320B               	rrcf	___ftmul@f1+2,f,c
  1462  00125A  320A               	rrcf	___ftmul@f1+1,f,c
  1463  00125C  3209               	rrcf	___ftmul@f1,f,c
  1464  00125E  90D8               	bcf	status,0,c
  1465  001260  360C               	rlcf	___ftmul@f2,f,c
  1466  001262  360D               	rlcf	___ftmul@f2+1,f,c
  1467  001264  360E               	rlcf	___ftmul@f2+2,f,c
  1468  001266  2E16               	decfsz	___ftmul@cntr,f,c
  1469  001268  D7ED               	goto	l1350
  1470  00126A  D000               	goto	l1358
  1471  00126C                     l1358:
  1472  00126C  0E09               	movlw	9
  1473  00126E  6E16               	movwf	___ftmul@cntr,c
  1474  001270  D000               	goto	l1360
  1475  001272                     l1360:
  1476  001272  A009               	btfss	___ftmul@f1,0,c
  1477  001274  D007               	goto	l1364
  1478  001276  500C               	movf	___ftmul@f2,w,c
  1479  001278  2613               	addwf	___ftmul@f3_as_product,f,c
  1480  00127A  500D               	movf	___ftmul@f2+1,w,c
  1481  00127C  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1482  00127E  500E               	movf	___ftmul@f2+2,w,c
  1483  001280  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1484  001282  D000               	goto	l1364
  1485  001284                     l1364:
  1486  001284  90D8               	bcf	status,0,c
  1487  001286  320B               	rrcf	___ftmul@f1+2,f,c
  1488  001288  320A               	rrcf	___ftmul@f1+1,f,c
  1489  00128A  3209               	rrcf	___ftmul@f1,f,c
  1490  00128C  90D8               	bcf	status,0,c
  1491  00128E  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  1492  001290  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  1493  001292  3213               	rrcf	___ftmul@f3_as_product,f,c
  1494  001294  2E16               	decfsz	___ftmul@cntr,f,c
  1495  001296  D7ED               	goto	l1360
  1496  001298  D000               	goto	l1368
  1497  00129A                     l1368:
  1498  00129A  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1499  00129E  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1500  0012A2  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1501  0012A6  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  1502  0012AA  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  1503  0012AE  EC3E  F00A         	call	___ftpack	;wreg free
  1504  0012B2  C001  F009         	movff	?___ftpack,?___ftmul
  1505  0012B6  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  1506  0012BA  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  1507  0012BE  D000               	goto	l604
  1508  0012C0                     l604:
  1509  0012C0  0012               	return		;funcret
  1510  0012C2                     __end_of___ftmul:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           postinc0	equ	0xFEE
  1515                           wreg	equ	0xFE8
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function ___ftpack *****************
  1519 ;; Defined at:
  1520 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  arg             3    0[COMRAM] unsigned um
  1523 ;;  exp             1    3[COMRAM] unsigned char 
  1524 ;;  sign            1    4[COMRAM] unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  3    0[COMRAM] float 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1536 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;Total ram usage:        8 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		___ftmul
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text9
  1550  00147C                     __ptext9:
  1551                           	opt stack 0
  1552  00147C                     ___ftpack:
  1553                           	opt stack 28
  1554                           
  1555                           ;incstack = 0
  1556  00147C  5004               	movf	___ftpack@exp,w,c
  1557  00147E  B4D8               	btfsc	status,2,c
  1558  001480  D005               	goto	l1234
  1559  001482  5001               	movf	___ftpack@arg,w,c
  1560  001484  1002               	iorwf	___ftpack@arg+1,w,c
  1561  001486  1003               	iorwf	___ftpack@arg+2,w,c
  1562  001488  A4D8               	btfss	status,2,c
  1563  00148A  D00E               	goto	l1240
  1564  00148C                     l1234:
  1565  00148C  0E00               	movlw	0
  1566  00148E  6E01               	movwf	?___ftpack,c
  1567  001490  0E00               	movlw	0
  1568  001492  6E02               	movwf	?___ftpack+1,c
  1569  001494  0E00               	movlw	0
  1570  001496  6E03               	movwf	?___ftpack+2,c
  1571  001498  D053               	goto	l517
  1572  00149A  D006               	goto	l1240
  1573  00149C                     l1238:
  1574  00149C  2A04               	incf	___ftpack@exp,f,c
  1575  00149E  90D8               	bcf	status,0,c
  1576  0014A0  3203               	rrcf	___ftpack@arg+2,f,c
  1577  0014A2  3202               	rrcf	___ftpack@arg+1,f,c
  1578  0014A4  3201               	rrcf	___ftpack@arg,f,c
  1579  0014A6  D000               	goto	l1240
  1580  0014A8                     l1240:
  1581  0014A8  0E00               	movlw	0
  1582  0014AA  1401               	andwf	___ftpack@arg,w,c
  1583  0014AC  6E06               	movwf	??___ftpack& (0+255),c
  1584  0014AE  0E00               	movlw	0
  1585  0014B0  1402               	andwf	___ftpack@arg+1,w,c
  1586  0014B2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1587  0014B4  0EFE               	movlw	254
  1588  0014B6  1403               	andwf	___ftpack@arg+2,w,c
  1589  0014B8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1590  0014BA  5006               	movf	??___ftpack,w,c
  1591  0014BC  1007               	iorwf	??___ftpack+1,w,c
  1592  0014BE  1008               	iorwf	??___ftpack+2,w,c
  1593  0014C0  B4D8               	btfsc	status,2,c
  1594  0014C2  D00E               	goto	l1246
  1595  0014C4  D7EB               	goto	l1238
  1596  0014C6  D00C               	goto	l1246
  1597  0014C8                     l1242:
  1598  0014C8  2A04               	incf	___ftpack@exp,f,c
  1599  0014CA  0E01               	movlw	1
  1600  0014CC  2601               	addwf	___ftpack@arg,f,c
  1601  0014CE  0E00               	movlw	0
  1602  0014D0  2202               	addwfc	___ftpack@arg+1,f,c
  1603  0014D2  0E00               	movlw	0
  1604  0014D4  2203               	addwfc	___ftpack@arg+2,f,c
  1605  0014D6  90D8               	bcf	status,0,c
  1606  0014D8  3203               	rrcf	___ftpack@arg+2,f,c
  1607  0014DA  3202               	rrcf	___ftpack@arg+1,f,c
  1608  0014DC  3201               	rrcf	___ftpack@arg,f,c
  1609  0014DE  D000               	goto	l1246
  1610  0014E0                     l1246:
  1611  0014E0  0E00               	movlw	0
  1612  0014E2  1401               	andwf	___ftpack@arg,w,c
  1613  0014E4  6E06               	movwf	??___ftpack& (0+255),c
  1614  0014E6  0E00               	movlw	0
  1615  0014E8  1402               	andwf	___ftpack@arg+1,w,c
  1616  0014EA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1617  0014EC  0EFF               	movlw	255
  1618  0014EE  1403               	andwf	___ftpack@arg+2,w,c
  1619  0014F0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1620  0014F2  5006               	movf	??___ftpack,w,c
  1621  0014F4  1007               	iorwf	??___ftpack+1,w,c
  1622  0014F6  1008               	iorwf	??___ftpack+2,w,c
  1623  0014F8  B4D8               	btfsc	status,2,c
  1624  0014FA  D008               	goto	l1250
  1625  0014FC  D7E5               	goto	l1242
  1626  0014FE  D006               	goto	l1250
  1627  001500                     l1248:
  1628  001500  0604               	decf	___ftpack@exp,f,c
  1629  001502  90D8               	bcf	status,0,c
  1630  001504  3601               	rlcf	___ftpack@arg,f,c
  1631  001506  3602               	rlcf	___ftpack@arg+1,f,c
  1632  001508  3603               	rlcf	___ftpack@arg+2,f,c
  1633  00150A  D000               	goto	l1250
  1634  00150C                     l1250:
  1635  00150C  BE02               	btfsc	___ftpack@arg+1,7,c
  1636  00150E  D004               	goto	l528
  1637  001510  0E02               	movlw	2
  1638  001512  6004               	cpfslt	___ftpack@exp,c
  1639  001514  D7F5               	goto	l1248
  1640  001516  D000               	goto	l528
  1641  001518                     l528:
  1642  001518  B004               	btfsc	___ftpack@exp,0,c
  1643  00151A  D002               	goto	l1256
  1644  00151C  9E02               	bcf	___ftpack@arg+1,7,c
  1645  00151E  D000               	goto	l1256
  1646  001520                     l1256:
  1647  001520  90D8               	bcf	status,0,c
  1648  001522  3204               	rrcf	___ftpack@exp,f,c
  1649  001524  5004               	movf	___ftpack@exp,w,c
  1650  001526  1203               	iorwf	___ftpack@arg+2,f,c
  1651  001528  5005               	movf	___ftpack@sign,w,c
  1652  00152A  B4D8               	btfsc	status,2,c
  1653  00152C  D002               	goto	l1262
  1654  00152E  8E03               	bsf	___ftpack@arg+2,7,c
  1655  001530  D000               	goto	l1262
  1656  001532                     l1262:
  1657  001532  C001  F001         	movff	___ftpack@arg,?___ftpack
  1658  001536  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1659  00153A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1660  00153E  D000               	goto	l517
  1661  001540                     l517:
  1662  001540  0012               	return		;funcret
  1663  001542                     __end_of___ftpack:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           status	equ	0xFD8
  1670                           
  1671 ;; *************** function _Sernl *****************
  1672 ;; Defined at:
  1673 ;;		line 97 in file "SerComm.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;		None               void
  1680 ;; Registers used:
  1681 ;;		wreg, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		_SerTx
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text10
  1702  001814                     __ptext10:
  1703                           	opt stack 0
  1704  001814                     _Sernl:
  1705                           	opt stack 29
  1706                           
  1707                           ;SerComm.c: 99: SerTx(0x0A);
  1708                           
  1709                           ;incstack = 0
  1710  001814  0E0A               	movlw	10
  1711  001816  EC11  F00C         	call	_SerTx
  1712                           
  1713                           ;SerComm.c: 100: SerTx(0x0D);
  1714  00181A  0E0D               	movlw	13
  1715  00181C  EC11  F00C         	call	_SerTx
  1716  001820  0012               	return		;funcret
  1717  001822                     __end_of_Sernl:
  1718                           	opt stack 0
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           postinc0	equ	0xFEE
  1722                           wreg	equ	0xFE8
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _SerTxStr *****************
  1726 ;; Defined at:
  1727 ;;		line 41 in file "SerComm.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  string          2    1[COMRAM] PTR unsigned char 
  1730 ;;		 -> STR_4(23), STR_3(34), STR_2(19), STR_1(28), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;		None               void
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;Total ram usage:        2 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		_SerTx
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text11
  1757  00174E                     __ptext11:
  1758                           	opt stack 0
  1759  00174E                     _SerTxStr:
  1760                           	opt stack 29
  1761                           
  1762                           ;SerComm.c: 43: while (*string)
  1763                           
  1764                           ;incstack = 0
  1765  00174E  D00B               	goto	l1462
  1766  001750                     l1458:
  1767                           
  1768                           ;SerComm.c: 44: SerTx(*string++);
  1769  001750  C002  FFF6         	movff	SerTxStr@string,tblptrl
  1770  001754  C003  FFF7         	movff	SerTxStr@string+1,tblptrh
  1771  001758                     	if	0	;tblptru may be non-zero
  1772  001758                     	endif
  1773  001758                     	if	0	;tblptru may be non-zero
  1774  001758                     	endif
  1775  001758  0008               	tblrd		*
  1776  00175A  50F5               	movf	tablat,w,c
  1777  00175C  EC11  F00C         	call	_SerTx
  1778  001760  4A02               	infsnz	SerTxStr@string,f,c
  1779  001762  2A03               	incf	SerTxStr@string+1,f,c
  1780  001764  D000               	goto	l1462
  1781  001766                     l1462:
  1782  001766  C002  FFF6         	movff	SerTxStr@string,tblptrl
  1783  00176A  C003  FFF7         	movff	SerTxStr@string+1,tblptrh
  1784  00176E                     	if	0	;tblptru may be non-zero
  1785  00176E                     	endif
  1786  00176E                     	if	0	;tblptru may be non-zero
  1787  00176E                     	endif
  1788  00176E  0008               	tblrd		*
  1789  001770  50F5               	movf	tablat,w,c
  1790  001772  0900               	iorlw	0
  1791  001774  A4D8               	btfss	status,2,c
  1792  001776  D7EC               	goto	l1458
  1793  001778  0012               	return		;funcret
  1794  00177A                     __end_of_SerTxStr:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           postinc0	equ	0xFEE
  1801                           wreg	equ	0xFE8
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _SerTx *****************
  1805 ;; Defined at:
  1806 ;;		line 32 in file "SerComm.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  c               1    wreg     unsigned char 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  c               1    0[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;;		_SerTxStr
  1831 ;;		_breakDouble
  1832 ;;		_Sernl
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text12
  1837  001822                     __ptext12:
  1838                           	opt stack 0
  1839  001822                     _SerTx:
  1840                           	opt stack 29
  1841                           
  1842                           ;incstack = 0
  1843                           ;SerTx@c stored from wreg
  1844  001822  6E01               	movwf	SerTx@c,c
  1845                           
  1846                           ;SerComm.c: 34: TXREG1 = c;
  1847  001824  C001  FFAD         	movff	SerTx@c,4013	;volatile
  1848                           
  1849                           ;SerComm.c: 35: while (PIR1bits.TX1IF == 0);
  1850  001828  D000               	goto	l141
  1851  00182A                     l141:
  1852  00182A  A89E               	btfss	3998,4,c	;volatile
  1853  00182C  D7FE               	goto	l141
  1854  00182E  0012               	return		;funcret
  1855  001830                     __end_of_SerTx:
  1856                           	opt stack 0
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function _EEWriteDouble *****************
  1866 ;; Defined at:
  1867 ;;		line 67 in file "EEPROM.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  location        1    wreg     unsigned char 
  1870 ;;  dub             3    4[COMRAM] unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  location        1    7[COMRAM] unsigned char 
  1873 ;;  x               1    8[COMRAM] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;		None               void
  1876 ;; Registers used:
  1877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1883 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;Total ram usage:        5 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    1
  1890 ;; This function calls:
  1891 ;;		_Busy_eep
  1892 ;;		_EEDisassembleDouble
  1893 ;;		_Write_b_eep
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;;		_HLVDInt
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text13
  1901  0015F4                     __ptext13:
  1902                           	opt stack 0
  1903  0015F4                     _EEWriteDouble:
  1904                           	opt stack 29
  1905                           
  1906                           ;incstack = 0
  1907                           ;EEWriteDouble@location stored from wreg
  1908  0015F4  6E08               	movwf	EEWriteDouble@location,c
  1909                           
  1910                           ;EEPROM.c: 69: unsigned char x;
  1911                           ;EEPROM.c: 71: EEDisassembleDouble(dub);
  1912  0015F6  C005  F001         	movff	EEWriteDouble@dub,EEDisassembleDouble@dub
  1913  0015FA  C006  F002         	movff	EEWriteDouble@dub+1,EEDisassembleDouble@dub+1
  1914  0015FE  C007  F003         	movff	EEWriteDouble@dub+2,EEDisassembleDouble@dub+2
  1915  001602  EC8C  F00B         	call	_EEDisassembleDouble	;wreg free
  1916                           
  1917                           ;EEPROM.c: 73: INTCON = INTCON & 0x3F;
  1918  001606  50F2               	movf	intcon,w,c	;volatile
  1919  001608  0B3F               	andlw	63
  1920  00160A  6EF2               	movwf	intcon,c	;volatile
  1921                           
  1922                           ;EEPROM.c: 75: for (x = 0; x < 3; x++)
  1923  00160C  0E00               	movlw	0
  1924  00160E  6E09               	movwf	EEWriteDouble@x,c
  1925  001610                     l1494:
  1926  001610  0E02               	movlw	2
  1927  001612  6409               	cpfsgt	EEWriteDouble@x,c
  1928  001614  D001               	goto	l1498
  1929  001616  D014               	goto	l1508
  1930  001618                     l1498:
  1931                           
  1932                           ;EEPROM.c: 76: {
  1933                           ;EEPROM.c: 77: Write_b_eep(location, DDouble[x]);
  1934  001618  C008  F001         	movff	EEWriteDouble@location,Write_b_eep@badd
  1935  00161C  6A02               	clrf	Write_b_eep@badd+1,c
  1936  00161E  5009               	movf	EEWriteDouble@x,w,c
  1937  001620  0D01               	mullw	1
  1938  001622  0E3A               	movlw	low _DDouble
  1939  001624  24F3               	addwf	prodl,w,c
  1940  001626  6ED9               	movwf	fsr2l,c
  1941  001628  0E00               	movlw	high _DDouble
  1942  00162A  20F4               	addwfc	prodh,w,c
  1943  00162C  6EDA               	movwf	fsr2h,c
  1944  00162E  50DF               	movf	indf2,w,c
  1945  001630  6E03               	movwf	Write_b_eep@bdat,c
  1946  001632  EC6C  F00B         	call	_Write_b_eep	;wreg free
  1947                           
  1948                           ;EEPROM.c: 78: location++;
  1949  001636  2A08               	incf	EEWriteDouble@location,f,c
  1950                           
  1951                           ;EEPROM.c: 79: Busy_eep();
  1952  001638  EC1D  F00C         	call	_Busy_eep	;wreg free
  1953  00163C  2A09               	incf	EEWriteDouble@x,f,c
  1954  00163E  D7E8               	goto	l1494
  1955  001640                     l1508:
  1956                           
  1957                           ;EEPROM.c: 80: }
  1958                           ;EEPROM.c: 82: INTCON = INTCON | 0xC0;
  1959  001640  50F2               	movf	intcon,w,c	;volatile
  1960  001642  09C0               	iorlw	192
  1961  001644  6EF2               	movwf	intcon,c	;volatile
  1962  001646  0012               	return		;funcret
  1963  001648                     __end_of_EEWriteDouble:
  1964                           	opt stack 0
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodh	equ	0xFF4
  1970                           prodl	equ	0xFF3
  1971                           intcon	equ	0xFF2
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           indf2	equ	0xFDF
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _EEDisassembleDouble *****************
  1980 ;; Defined at:
  1981 ;;		line 40 in file "EEPROM.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  dub             3    0[COMRAM] unsigned char 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;		None               void
  1988 ;; Registers used:
  1989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:        3 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_EEWriteDouble
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text14
  2009  001718                     __ptext14:
  2010                           	opt stack 0
  2011  001718                     _EEDisassembleDouble:
  2012                           	opt stack 29
  2013                           
  2014                           ;EEPROM.c: 42: DoublePtr = (unsigned char*) &dub;
  2015                           
  2016                           ;incstack = 0
  2017  001718  0E01               	movlw	low EEDisassembleDouble@dub
  2018  00171A  6E49               	movwf	_DoublePtr,c
  2019  00171C  0E00               	movlw	high EEDisassembleDouble@dub
  2020  00171E  6E4A               	movwf	_DoublePtr+1,c
  2021                           
  2022                           ;EEPROM.c: 43: DDouble[0] = DoublePtr[0];
  2023  001720  C049  FFD9         	movff	_DoublePtr,fsr2l
  2024  001724  C04A  FFDA         	movff	_DoublePtr+1,fsr2h
  2025  001728  50DF               	movf	indf2,w,c
  2026  00172A  6E3A               	movwf	_DDouble,c
  2027                           
  2028                           ;EEPROM.c: 44: DDouble[1] = DoublePtr[1];
  2029  00172C  EE20 F001          	lfsr	2,1
  2030  001730  5049               	movf	_DoublePtr,w,c
  2031  001732  26D9               	addwf	fsr2l,f,c
  2032  001734  504A               	movf	_DoublePtr+1,w,c
  2033  001736  22DA               	addwfc	fsr2h,f,c
  2034  001738  50DF               	movf	indf2,w,c
  2035  00173A  6E3B               	movwf	_DDouble+1,c
  2036                           
  2037                           ;EEPROM.c: 45: DDouble[2] = DoublePtr[2];
  2038  00173C  EE20 F002          	lfsr	2,2
  2039  001740  5049               	movf	_DoublePtr,w,c
  2040  001742  26D9               	addwf	fsr2l,f,c
  2041  001744  504A               	movf	_DoublePtr+1,w,c
  2042  001746  22DA               	addwfc	fsr2h,f,c
  2043  001748  50DF               	movf	indf2,w,c
  2044  00174A  6E3C               	movwf	_DDouble+2,c
  2045  00174C  0012               	return		;funcret
  2046  00174E                     __end_of_EEDisassembleDouble:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           intcon	equ	0xFF2
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           indf2	equ	0xFDF
  2058                           fsr2h	equ	0xFDA
  2059                           fsr2l	equ	0xFD9
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _EEWriteChar *****************
  2063 ;; Defined at:
  2064 ;;		line 110 in file "EEPROM.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  location        1    wreg     unsigned char 
  2067 ;;  ch              1    4[COMRAM] unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  location        1    5[COMRAM] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;		None               void
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    1
  2086 ;; This function calls:
  2087 ;;		_Busy_eep
  2088 ;;		_Write_b_eep
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;;		_HLVDInt
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text15
  2096  00177A                     __ptext15:
  2097                           	opt stack 0
  2098  00177A                     _EEWriteChar:
  2099                           	opt stack 29
  2100                           
  2101                           ;incstack = 0
  2102                           ;EEWriteChar@location stored from wreg
  2103  00177A  6E06               	movwf	EEWriteChar@location,c
  2104                           
  2105                           ;EEPROM.c: 112: INTCON = INTCON & 0x3F;
  2106  00177C  50F2               	movf	intcon,w,c	;volatile
  2107  00177E  0B3F               	andlw	63
  2108  001780  6EF2               	movwf	intcon,c	;volatile
  2109                           
  2110                           ;EEPROM.c: 114: Write_b_eep(location, ch);
  2111  001782  C006  F001         	movff	EEWriteChar@location,Write_b_eep@badd
  2112  001786  6A02               	clrf	Write_b_eep@badd+1,c
  2113  001788  C005  F003         	movff	EEWriteChar@ch,Write_b_eep@bdat
  2114  00178C  EC6C  F00B         	call	_Write_b_eep	;wreg free
  2115                           
  2116                           ;EEPROM.c: 115: Busy_eep();
  2117  001790  EC1D  F00C         	call	_Busy_eep	;wreg free
  2118                           
  2119                           ;EEPROM.c: 117: INTCON = INTCON | 0xC0;
  2120  001794  50F2               	movf	intcon,w,c	;volatile
  2121  001796  09C0               	iorlw	192
  2122  001798  6EF2               	movwf	intcon,c	;volatile
  2123  00179A  0012               	return		;funcret
  2124  00179C                     __end_of_EEWriteChar:
  2125                           	opt stack 0
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           prodh	equ	0xFF4
  2131                           prodl	equ	0xFF3
  2132                           intcon	equ	0xFF2
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           indf2	equ	0xFDF
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function _Write_b_eep *****************
  2141 ;; Defined at:
  2142 ;;		line 49 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/EEP/write_B.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  badd            2    0[COMRAM] unsigned int 
  2145 ;;  bdat            1    2[COMRAM] unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  GIE_BIT_VAL     1    3[COMRAM] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;		None               void
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:        4 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_EEWriteDouble
  2167 ;;		_EEWriteChar
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text16
  2172  0016D8                     __ptext16:
  2173                           	opt stack 0
  2174  0016D8                     _Write_b_eep:
  2175                           	opt stack 29
  2176                           
  2177                           ;incstack = 0
  2178  0016D8  0E00               	movlw	0
  2179  0016DA  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  2180  0016DC  5002               	movf	Write_b_eep@badd+1,w,c
  2181  0016DE  0B03               	andlw	3
  2182  0016E0  6EAA               	movwf	4010,c	;volatile
  2183  0016E2  C001  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  2184  0016E6  C003  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  2185  0016EA  9EA6               	bcf	4006,7,c	;volatile
  2186  0016EC  9CA6               	bcf	4006,6,c	;volatile
  2187  0016EE  84A6               	bsf	4006,2,c	;volatile
  2188  0016F0  0E00               	movlw	0
  2189  0016F2  BEF2               	btfsc	intcon,7,c	;volatile
  2190  0016F4  0E01               	movlw	1
  2191  0016F6  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  2192  0016F8  9EF2               	bcf	intcon,7,c	;volatile
  2193  0016FA  0E55               	movlw	85
  2194  0016FC  6EA7               	movwf	4007,c	;volatile
  2195  0016FE  0EAA               	movlw	170
  2196  001700  6EA7               	movwf	4007,c	;volatile
  2197  001702  82A6               	bsf	4006,1,c	;volatile
  2198  001704  D000               	goto	l203
  2199  001706                     l203:
  2200  001706  B2A6               	btfsc	4006,1,c	;volatile
  2201  001708  D7FE               	goto	l203
  2202  00170A  B004               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  2203  00170C  D002               	bra	u525
  2204  00170E  9EF2               	bcf	intcon,7,c	;volatile
  2205  001710  D001               	bra	u526
  2206  001712                     u525:
  2207  001712  8EF2               	bsf	intcon,7,c	;volatile
  2208  001714                     u526:
  2209  001714  94A6               	bcf	4006,2,c	;volatile
  2210  001716  0012               	return		;funcret
  2211  001718                     __end_of_Write_b_eep:
  2212                           	opt stack 0
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           prodh	equ	0xFF4
  2218                           prodl	equ	0xFF3
  2219                           intcon	equ	0xFF2
  2220                           postinc0	equ	0xFEE
  2221                           wreg	equ	0xFE8
  2222                           indf2	equ	0xFDF
  2223                           fsr2h	equ	0xFDA
  2224                           fsr2l	equ	0xFD9
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _EEReadDouble *****************
  2228 ;; Defined at:
  2229 ;;		line 89 in file "EEPROM.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  location        1    wreg     unsigned char 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  location        1    9[COMRAM] unsigned char 
  2234 ;;  x               1   10[COMRAM] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  3    6[COMRAM] unsigned char 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2244 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;Total ram usage:        5 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    1
  2251 ;; This function calls:
  2252 ;;		_Busy_eep
  2253 ;;		_EEReassembleDouble
  2254 ;;		_Read_b_eep
  2255 ;; This function is called by:
  2256 ;;		_main
  2257 ;;		_EEBootUp
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text17
  2262  00159E                     __ptext17:
  2263                           	opt stack 0
  2264  00159E                     _EEReadDouble:
  2265                           	opt stack 29
  2266                           
  2267                           ;incstack = 0
  2268                           ;EEReadDouble@location stored from wreg
  2269  00159E  6E0A               	movwf	EEReadDouble@location,c
  2270                           
  2271                           ;EEPROM.c: 91: unsigned char x;
  2272                           ;EEPROM.c: 93: INTCON = INTCON & 0x3F;
  2273  0015A0  50F2               	movf	intcon,w,c	;volatile
  2274  0015A2  0B3F               	andlw	63
  2275  0015A4  6EF2               	movwf	intcon,c	;volatile
  2276                           
  2277                           ;EEPROM.c: 95: for (x = 0; x < 3; x++)
  2278  0015A6  0E00               	movlw	0
  2279  0015A8  6E0B               	movwf	EEReadDouble@x,c
  2280  0015AA                     l1520:
  2281  0015AA  0E02               	movlw	2
  2282  0015AC  640B               	cpfsgt	EEReadDouble@x,c
  2283  0015AE  D001               	goto	l1524
  2284  0015B0  D014               	goto	l1532
  2285  0015B2                     l1524:
  2286                           
  2287                           ;EEPROM.c: 96: {
  2288                           ;EEPROM.c: 97: DDouble[x] = Read_b_eep(location + x);
  2289  0015B2  500B               	movf	EEReadDouble@x,w,c
  2290  0015B4  0D01               	mullw	1
  2291  0015B6  0E3A               	movlw	low _DDouble
  2292  0015B8  24F3               	addwf	prodl,w,c
  2293  0015BA  6ED9               	movwf	fsr2l,c
  2294  0015BC  0E00               	movlw	high _DDouble
  2295  0015BE  20F4               	addwfc	prodh,w,c
  2296  0015C0  6EDA               	movwf	fsr2h,c
  2297  0015C2  500A               	movf	EEReadDouble@location,w,c
  2298  0015C4  240B               	addwf	EEReadDouble@x,w,c
  2299  0015C6  6E01               	movwf	Read_b_eep@badd,c
  2300  0015C8  6A02               	clrf	Read_b_eep@badd+1,c
  2301  0015CA  3602               	rlcf	Read_b_eep@badd+1,f,c
  2302  0015CC  ECEB  F00B         	call	_Read_b_eep	;wreg free
  2303  0015D0  6EDF               	movwf	indf2,c
  2304                           
  2305                           ;EEPROM.c: 98: Busy_eep();
  2306  0015D2  EC1D  F00C         	call	_Busy_eep	;wreg free
  2307  0015D6  2A0B               	incf	EEReadDouble@x,f,c
  2308  0015D8  D7E8               	goto	l1520
  2309  0015DA                     l1532:
  2310                           
  2311                           ;EEPROM.c: 99: }
  2312                           ;EEPROM.c: 101: INTCON = INTCON | 0xC0;
  2313  0015DA  50F2               	movf	intcon,w,c	;volatile
  2314  0015DC  09C0               	iorlw	192
  2315  0015DE  6EF2               	movwf	intcon,c	;volatile
  2316                           
  2317                           ;EEPROM.c: 103: return EEReassembleDouble();
  2318  0015E0  EC4A  F00B         	call	_EEReassembleDouble	;wreg free
  2319  0015E4  C001  F007         	movff	?_EEReassembleDouble,?_EEReadDouble
  2320  0015E8  C002  F008         	movff	?_EEReassembleDouble+1,?_EEReadDouble+1
  2321  0015EC  C003  F009         	movff	?_EEReassembleDouble+2,?_EEReadDouble+2
  2322  0015F0  D000               	goto	l110
  2323  0015F2                     l110:
  2324  0015F2  0012               	return		;funcret
  2325  0015F4                     __end_of_EEReadDouble:
  2326                           	opt stack 0
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           prodh	equ	0xFF4
  2332                           prodl	equ	0xFF3
  2333                           intcon	equ	0xFF2
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           indf2	equ	0xFDF
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _EEReassembleDouble *****************
  2342 ;; Defined at:
  2343 ;;		line 53 in file "EEPROM.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  dub             3    3[COMRAM] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  3    0[COMRAM] unsigned char 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        6 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_EEReadDouble
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text18
  2371  001694                     __ptext18:
  2372                           	opt stack 0
  2373  001694                     _EEReassembleDouble:
  2374                           	opt stack 29
  2375                           
  2376                           ;EEPROM.c: 55: double dub;
  2377                           ;EEPROM.c: 56: DoublePtr = (unsigned char*) &dub;
  2378                           
  2379                           ;incstack = 0
  2380  001694  0E04               	movlw	low EEReassembleDouble@dub
  2381  001696  6E49               	movwf	_DoublePtr,c
  2382  001698  0E00               	movlw	high EEReassembleDouble@dub
  2383  00169A  6E4A               	movwf	_DoublePtr+1,c
  2384                           
  2385                           ;EEPROM.c: 57: DoublePtr[0] = DDouble[0];
  2386  00169C  C049  FFD9         	movff	_DoublePtr,fsr2l
  2387  0016A0  C04A  FFDA         	movff	_DoublePtr+1,fsr2h
  2388  0016A4  C03A  FFDF         	movff	_DDouble,indf2
  2389                           
  2390                           ;EEPROM.c: 58: DoublePtr[1] = DDouble[1];
  2391  0016A8  EE20 F001          	lfsr	2,1
  2392  0016AC  5049               	movf	_DoublePtr,w,c
  2393  0016AE  26D9               	addwf	fsr2l,f,c
  2394  0016B0  504A               	movf	_DoublePtr+1,w,c
  2395  0016B2  22DA               	addwfc	fsr2h,f,c
  2396  0016B4  C03B  FFDF         	movff	_DDouble+1,indf2
  2397                           
  2398                           ;EEPROM.c: 59: DoublePtr[2] = DDouble[2];
  2399  0016B8  EE20 F002          	lfsr	2,2
  2400  0016BC  5049               	movf	_DoublePtr,w,c
  2401  0016BE  26D9               	addwf	fsr2l,f,c
  2402  0016C0  504A               	movf	_DoublePtr+1,w,c
  2403  0016C2  22DA               	addwfc	fsr2h,f,c
  2404  0016C4  C03C  FFDF         	movff	_DDouble+2,indf2
  2405                           
  2406                           ;EEPROM.c: 60: return dub;
  2407  0016C8  C004  F001         	movff	EEReassembleDouble@dub,?_EEReassembleDouble
  2408  0016CC  C005  F002         	movff	EEReassembleDouble@dub+1,?_EEReassembleDouble+1
  2409  0016D0  C006  F003         	movff	EEReassembleDouble@dub+2,?_EEReassembleDouble+2
  2410  0016D4  D000               	goto	l100
  2411  0016D6                     l100:
  2412  0016D6  0012               	return		;funcret
  2413  0016D8                     __end_of_EEReassembleDouble:
  2414                           	opt stack 0
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           prodh	equ	0xFF4
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           indf2	equ	0xFDF
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _Busy_eep *****************
  2430 ;; Defined at:
  2431 ;;		line 12 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/EEP/busy_eep.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		None
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_EEWriteDouble
  2455 ;;		_EEReadDouble
  2456 ;;		_EEWriteChar
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text19
  2461  00183A                     __ptext19:
  2462                           	opt stack 0
  2463  00183A                     _Busy_eep:
  2464                           	opt stack 29
  2465                           
  2466                           ;incstack = 0
  2467  00183A  D000               	goto	l172
  2468  00183C                     l172:
  2469  00183C  B2A6               	btfsc	4006,1,c	;volatile
  2470  00183E  D7FE               	goto	l172
  2471  001840  0012               	return		;funcret
  2472  001842                     __end_of_Busy_eep:
  2473                           	opt stack 0
  2474                           tblptru	equ	0xFF8
  2475                           tblptrh	equ	0xFF7
  2476                           tblptrl	equ	0xFF6
  2477                           tablat	equ	0xFF5
  2478                           prodh	equ	0xFF4
  2479                           prodl	equ	0xFF3
  2480                           intcon	equ	0xFF2
  2481                           postinc0	equ	0xFEE
  2482                           wreg	equ	0xFE8
  2483                           indf2	equ	0xFDF
  2484                           fsr2h	equ	0xFDA
  2485                           fsr2l	equ	0xFD9
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function _EEReadChar *****************
  2489 ;; Defined at:
  2490 ;;		line 123 in file "EEPROM.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  location        1    wreg     unsigned char 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  location        1    2[COMRAM] unsigned char 
  2495 ;;  ch              1    3[COMRAM] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      unsigned char 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;Total ram usage:        2 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    1
  2512 ;; This function calls:
  2513 ;;		_Read_b_eep
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;;		_EEBootUp
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text20
  2521  00179C                     __ptext20:
  2522                           	opt stack 0
  2523  00179C                     _EEReadChar:
  2524                           	opt stack 29
  2525                           
  2526                           ;incstack = 0
  2527                           ;EEReadChar@location stored from wreg
  2528  00179C  6E03               	movwf	EEReadChar@location,c
  2529                           
  2530                           ;EEPROM.c: 125: unsigned char ch;
  2531                           ;EEPROM.c: 127: INTCON = INTCON & 0x3F;
  2532  00179E  50F2               	movf	intcon,w,c	;volatile
  2533  0017A0  0B3F               	andlw	63
  2534  0017A2  6EF2               	movwf	intcon,c	;volatile
  2535                           
  2536                           ;EEPROM.c: 129: ch = Read_b_eep(location);
  2537  0017A4  C003  F001         	movff	EEReadChar@location,Read_b_eep@badd
  2538  0017A8  6A02               	clrf	Read_b_eep@badd+1,c
  2539  0017AA  ECEB  F00B         	call	_Read_b_eep	;wreg free
  2540  0017AE  6E04               	movwf	EEReadChar@ch,c
  2541                           
  2542                           ;EEPROM.c: 131: INTCON = INTCON | 0xC0;
  2543  0017B0  50F2               	movf	intcon,w,c	;volatile
  2544  0017B2  09C0               	iorlw	192
  2545  0017B4  6EF2               	movwf	intcon,c	;volatile
  2546                           
  2547                           ;EEPROM.c: 133: return ch;
  2548  0017B6  5004               	movf	EEReadChar@ch,w,c
  2549  0017B8  D000               	goto	l116
  2550  0017BA                     l116:
  2551  0017BA  0012               	return		;funcret
  2552  0017BC                     __end_of_EEReadChar:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           prodh	equ	0xFF4
  2559                           prodl	equ	0xFF3
  2560                           intcon	equ	0xFF2
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           indf2	equ	0xFDF
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _Read_b_eep *****************
  2569 ;; Defined at:
  2570 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/EEP/read_B.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  badd            2    0[COMRAM] unsigned int 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      unsigned char 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        2 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_EEReadDouble
  2594 ;;		_EEReadChar
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text21
  2599  0017D6                     __ptext21:
  2600                           	opt stack 0
  2601  0017D6                     _Read_b_eep:
  2602                           	opt stack 29
  2603                           
  2604                           ;incstack = 0
  2605  0017D6  5002               	movf	Read_b_eep@badd+1,w,c
  2606  0017D8  0B03               	andlw	3
  2607  0017DA  6EAA               	movwf	4010,c	;volatile
  2608  0017DC  C001  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  2609  0017E0  9CA6               	bcf	4006,6,c	;volatile
  2610  0017E2  9EA6               	bcf	4006,7,c	;volatile
  2611  0017E4  80A6               	bsf	4006,0,c	;volatile
  2612  0017E6  F000               	nop	
  2613  0017E8  F000               	nop	
  2614  0017EA  50A8               	movf	4008,w,c	;volatile
  2615  0017EC  D000               	goto	l188
  2616  0017EE                     l188:
  2617  0017EE  0012               	return		;funcret
  2618  0017F0                     __end_of_Read_b_eep:
  2619                           	opt stack 0
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           indf2	equ	0xFDF
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           prodh	equ	0xFF4
  2638                           prodl	equ	0xFF3
  2639                           intcon	equ	0xFF2
  2640                           postinc0	equ	0xFEE
  2641                           wreg	equ	0xFE8
  2642                           indf2	equ	0xFDF
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647                           	psect	rparam
  2648  0000                     tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           indf2	equ	0xFDF
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8


Data Sizes:
    Strings     104
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 34
		 -> STR_4(CODE[23]), STR_3(CODE[34]), STR_2(CODE[19]), STR_1(CODE[28]), 

    DoublePtr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), EEReassembleDouble@dub(COMRAM[3]), EEDisassembleDouble@dub(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_breakDouble
    _breakDouble->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftpack
    _Sernl->_SerTx
    _SerTxStr->_SerTx
    _EEWriteDouble->_Write_b_eep
    _EEWriteChar->_Write_b_eep
    _EEReadDouble->_EEReassembleDouble
    _EEReadChar->_Read_b_eep

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7744
                                             47 COMRAM     4     4      0
                         _EEReadChar
                       _EEReadDouble
                        _EEWriteChar
                      _EEWriteDouble
                              _SerTx
                           _SerTxStr
                              _Sernl
                        _breakDouble
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
                         _EEPROMInit
                            _SerInit
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _breakDouble                                          9     6      3    4674
                                             38 COMRAM     9     6      3
                              _SerTx
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     671
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     674
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2509
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1953
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Sernl                                                0     0      0      15
                              _SerTx
 ---------------------------------------------------------------------------------
 (1) _SerTxStr                                             2     0      2     316
                                              1 COMRAM     2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (2) _SerTx                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEWriteDouble                                        5     2      3     874
                                              4 COMRAM     5     2      3
                           _Busy_eep
                _EEDisassembleDouble
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (2) _EEDisassembleDouble                                  3     0      3      95
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EEWriteChar                                          2     1      1    1158
                                              4 COMRAM     2     1      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (2) _Write_b_eep                                          4     1      3     346
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _EEReadDouble                                         5     2      3     337
                                              6 COMRAM     5     2      3
                           _Busy_eep
                 _EEReassembleDouble
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _EEReassembleDouble                                   6     3      3      53
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEReadChar                                           2     2      0     217
                                              2 COMRAM     2     2      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep                                           2     0      2     172
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEReadChar
     _Read_b_eep
   _EEReadDouble
     _Busy_eep
     _EEReassembleDouble
     _Read_b_eep
   _EEWriteChar
     _Busy_eep
     _Write_b_eep
   _EEWriteDouble
     _Busy_eep
     _EEDisassembleDouble
     _Write_b_eep
   _SerTx
   _SerTxStr
     _SerTx
   _Sernl
     _SerTx
   _breakDouble
     _SerTx
     ___ftmul
       ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lwdiv
     ___lwmod
   _initialize
     _EEPROMInit
     _SerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     33      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      32        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Oct 17 01:12:28 2015

                          l26 1476                            _Kd 003D                            _Ki 0040  
                          _Kp 0043           ?_EEReassembleDouble 0001                           l100 16D6  
                         l110 15F2                           l203 1706                           l116 17BA  
                         l141 182A                           l162 10E6                           l163 112E  
                         l172 183C                           l188 17EE                           l604 12C0  
                         l517 1540                           l528 1518                           l625 13A6  
                         l727 1594                           l737 168A                           u610 12FE  
                         u531 11DA                           u525 1712                           u526 1714  
                         u551 11F8                           u615 12F6                           u591 12D2  
        __size_of_Write_b_eep 0040                           prod 000FF3                           wreg 000FE8  
                __CFG_WDT$OFF 000000                          l1240 14A8                          l1400 134A  
                        l1250 150C                          l1242 14C8                          l1234 148C  
                        l1330 11E8                          l1402 1350                          l1410 137C  
                        l1332 1202                          l1262 1532                          l1246 14E0  
                        l1238 149C                          l1350 1244                          l1414 1394  
                        l1406 1364                          l1520 15AA                          l1256 1520  
                        l1248 1500                          l1360 1272                          l1336 1210  
                        l1408 1372                          l1424 1558                          l1354 1256  
                        l1426 1562                          l1532 15DA                          l1524 15B2  
                        l1508 1640                          l1364 1284                          l1436 1588  
                        l1428 156A                          l1452 167E                          l1444 1656  
                        l1462 1766                          l1358 126C                          l1446 1660  
                        l1368 129A                          l1448 1668                          l1458 1750  
                        l1378 12E0                          l1396 133A                          l1494 1610  
                        l1498 1618                          STR_1 1023                          STR_2 1056  
                        STR_3 1001                          STR_4 103F          ??_EEReassembleDouble 0004  
                EEReadChar@ch 0004                          _main 13A8                  ___ftpack@arg 0001  
                ___ftpack@exp 0004                          fsr2h 000FDA                          indf2 000FDF  
                        fsr2l 000FD9                ??_EEReadDouble 000A                          prodl 000FF3  
                        start 0000           __size_of_EEPROMInit 0010                  ?_EEWriteChar 0005  
                ___ftmul@cntr 0016                  ___param_bank 000010                  ___ftmul@sign 0017  
                ___fttol@exp1 0026               __end_of_SerInit 1804                  ___fttol@lval 0022  
                       ?_main 0001                         _EEADR 000FA9               __end_of___ftmul 12C2  
             __end_of___fttol 13A8               __end_of___lwdiv 159E               __end_of___lwmod 1694  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _PORTE 000F84  
                       _PORTF 000F85                         _PORTG 000F86                         _PORTH 000F87  
                       _PORTJ 000F88                __CFG_FCMEN$OFF 000000                         _SerTx 1822  
                       _Sernl 1814                Read_b_eep@badd 0001           __size_of_EEReadChar 0020  
      __size_of_EEWriteDouble 0054        Write_b_eep@GIE_BIT_VAL 0004                 ___ftpack@sign 0005  
                       tablat 000FF5                         status 000FD8                 EEReadDouble@x 000B  
       EEWriteDouble@location 0008               __initialization 17BC                  __end_of_main 147C  
                  _Read_b_eep 17D6              __end_of_Busy_eep 1842         EEReassembleDouble@dub 0004  
              __CFG_OSC$HSPLL 000000                        ??_main 0030                 ___fttol@sign1 0021  
        __size_of_breakDouble 0160              __end_of_SerTxStr 177A                 __activetblptr 000001  
                      ?_SerTx 0001                        ?_Sernl 0001                        _EEADRH 000FAA  
                      _EEDATA 000FA8                        _EECON2 000FA7              __end_of___ftpack 1542  
                      _INTCON 000FF2                        _RCREG1 000FAE                        _RCSTA1 000FAB  
                      _TXREG1 000FAD                        _TXSTA1 000FAC                        SerTx@c 0001  
                   ??_SerInit 0001                 _EEWriteDouble 15F4                     ??___ftmul 000F  
                   ??___fttol 001C                     ??___lwdiv 0005                     ??___lwmod 0005  
                      clear_0 17C2                        main@ch 0033         ___ftmul@f3_as_product 0013  
                ??_EEPROMInit 0001          __end_of_EEReadDouble 15F4                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 17C8                 ___rparam_used 000001  
          EEReadChar@location 0003                  ??_EEReadChar 0003                ?_EEWriteDouble 0005  
                  ___ftmul@f1 0009                    ___ftmul@f2 000C            __end_of_EEPROMInit 1814  
                  ___fttol@f1 0018                __pcstackCOMRAM 0001   __end_of_EEDisassembleDouble 174E  
               __end_of_SerTx 1830                 __end_of_Sernl 1822          __size_of_EEWriteChar 0022  
                 ?_Read_b_eep 0001                       ??_SerTx 0001                       ??_Sernl 0002  
          __end_of_EEReadChar 17BC                     ?_Busy_eep 0001                     ?_SerTxStr 0002  
              EEWriteDouble@x 0009                     ?___ftpack 0001                 ??_Write_b_eep 0004  
                     _HLVDCON 000FD2                       _DDouble 003A                 _PIDEnableFlag 004B  
              SerTxStr@string 0002              EEWriteDouble@dub 0005           __size_of_Read_b_eep 001A  
 __size_of_EEReassembleDouble 0044                    ??_Busy_eep 0001               ??_EEWriteDouble 0008  
                  ??_SerTxStr 0004           EEWriteChar@location 0006                       __Hparam 0000  
                     _SerInit 17F0                       __Lparam 0000                       ___ftmul 11CA  
                     ___fttol 12C2                       ___lwdiv 1542                       ___lwmod 1648  
                __psmallconst 1000         __size_of_EEReadDouble 0056                       __pcinit 17BC  
                  ??___ftpack 0006                       __ramtop 1000                    _initialize 1830  
                     __ptext0 13A8                       __ptext1 1830                       __ptext2 17F0  
                     __ptext3 1804                       __ptext4 106A                       __ptext5 1648  
                     __ptext6 1542                       __ptext7 12C2                       __ptext8 11CA  
                     __ptext9 147C           __end_of_Write_b_eep 1718          end_of_initialization 17C8  
                _EEReadDouble 159E                       postinc0 000FEE                 ??_breakDouble 002A  
                 ___ftmul@exp 0012                  ??_Read_b_eep 0003                   ?_initialize 0001  
                 _Write_b_eep 16D8                     _DoublePtr 0049           __end_of_breakDouble 11CA  
         start_initialization 17BC               _CurrentVelocity 0037                  _CurrentAngle 0034  
          __end_of_Read_b_eep 17F0          EEReadDouble@location 000A             __size_of_Busy_eep 0008  
               ??_EEWriteChar 0006             __size_of_SerTxStr 002C  __size_of_EEDisassembleDouble 0036  
           __size_of___ftpack 00C6                   __pbssCOMRAM 0034           __size_of_initialize 000A  
               EEWriteChar@ch 0005                      ?_SerInit 0001              ___lwdiv@dividend 0001  
            breakDouble@temp1 002C              breakDouble@temp2 002E                      ?___ftmul 0009  
                    ?___fttol 0018                      ?___lwdiv 0001                      ?___lwmod 0001  
                 _breakDouble 106A           __end_of_EEWriteChar 179C            breakDouble@tempDub 002A  
                 __smallconst 1000                      _BAUDCON1 000F7E                __size_of_SerTx 000E  
              __size_of_Sernl 000E              ___lwdiv@quotient 0005    __end_of_EEReassembleDouble 16D8  
                    _IPR2bits 000FA2                      _PIE1bits 000F9D                      _PIE2bits 000FA0  
       __end_of_EEWriteDouble 1648                      _PIR1bits 000F9E               Write_b_eep@badd 0001  
             Write_b_eep@bdat 0003                     main@hello 0030                      _Busy_eep 183A  
                  _EECON1bits 000FA6                      _SetAngle 0046                      _SerTxStr 174E  
                    __Hrparam 0000                   _EEWriteChar 177A                      __Lrparam 0000  
            __size_of_SerInit 0014                  __Lsmallconst 1000              __size_of___ftmul 00F8  
            __size_of___fttol 00E6              __size_of___lwdiv 005C              __size_of___lwmod 004C  
                ??_initialize 0001                      ___ftpack 147C                  ?_Write_b_eep 0001  
                  _EEPROMInit 1804               ___lwdiv@divisor 0003               breakDouble@dubs 0027  
             ___lwdiv@counter 0007                      __ptext10 1814                      __ptext11 174E  
                    __ptext20 179C                      __ptext12 1822                      __ptext21 17D6  
                    __ptext13 15F4                      __ptext14 1718                      __ptext15 177A  
                    __ptext16 16D8                      __ptext17 159E                      __ptext18 1694  
                    __ptext19 183A                 __size_of_main 00D4           _EEDisassembleDouble 1718  
          __end_of_initialize 183A                    _EEReadChar 179C          ?_EEDisassembleDouble 0001  
                  _INTCONbits 000FF2              ___lwmod@dividend 0001                  ?_breakDouble 0027  
       ??_EEDisassembleDouble 0004        EEDisassembleDouble@dub 0001                   ?_EEPROMInit 0001  
             ___lwmod@divisor 0003               ___lwmod@counter 0005                 ?_EEReadDouble 0007  
                 ?_EEReadChar 0001            _EEReassembleDouble 1694  
