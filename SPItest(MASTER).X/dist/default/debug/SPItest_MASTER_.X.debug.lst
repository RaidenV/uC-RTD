

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 29 01:53:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataBANK0
    55  003068                     __pidataBANK0:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _AZEL
    59  003068  01                 	db	1
    60  0000                     _PORTBbits	set	3969
    61  0000                     _TRISAbits	set	3986
    62  0000                     _TRISBbits	set	3987
    63  0000                     _TRISCbits	set	3988
    64  0000                     _BAUDCON	set	4024
    65  0000                     _IPR1bits	set	3999
    66  0000                     _PIE1bits	set	3997
    67  0000                     _PIR1bits	set	3998
    68  0000                     _RCONbits	set	4048
    69  0000                     _RCREG	set	4014
    70  0000                     _RCREG1	set	4014
    71  0000                     _RCSTA1	set	4011
    72  0000                     _SPBRG	set	4015
    73  0000                     _SSPBUF	set	4041
    74  0000                     _SSPCON1	set	4038
    75  0000                     _SSPCON1bits	set	4038
    76  0000                     _SSPSTAT	set	4039
    77  0000                     _SSPSTATbits	set	4039
    78  0000                     _TXREG1	set	4013
    79  0000                     _TXSTA1	set	4012
    80  0000                     _INTCONbits	set	4082
    81                           
    82                           	psect	smallconst
    83  001000                     __psmallconst:
    84                           	opt stack 0
    85  001000  00                 	db	0
    86  001001                     STR_1:
    87  001001  57                 	db	87	;'W'
    88  001002  65                 	db	101	;'e'
    89  001003  6C                 	db	108	;'l'
    90  001004  63                 	db	99	;'c'
    91  001005  6F                 	db	111	;'o'
    92  001006  6D                 	db	109	;'m'
    93  001007  65                 	db	101	;'e'
    94  001008  20                 	db	32
    95  001009  74                 	db	116	;'t'
    96  00100A  6F                 	db	111	;'o'
    97  00100B  20                 	db	32
    98  00100C  74                 	db	116	;'t'
    99  00100D  68                 	db	104	;'h'
   100  00100E  65                 	db	101	;'e'
   101  00100F  20                 	db	32
   102  001010  77                 	db	119	;'w'
   103  001011  6F                 	db	111	;'o'
   104  001012  72                 	db	114	;'r'
   105  001013  6C                 	db	108	;'l'
   106  001014  64                 	db	100	;'d'
   107  001015  20                 	db	32
   108  001016  6F                 	db	111	;'o'
   109  001017  66                 	db	102	;'f'
   110  001018  20                 	db	32
   111  001019  74                 	db	116	;'t'
   112  00101A  6F                 	db	111	;'o'
   113  00101B  6D                 	db	109	;'m'
   114  00101C  6F                 	db	111	;'o'
   115  00101D  72                 	db	114	;'r'
   116  00101E  72                 	db	114	;'r'
   117  00101F  6F                 	db	111	;'o'
   118  001020  77                 	db	119	;'w'
   119  001021  21                 	db	33
   120  001022  21                 	db	33
   121  001023  21                 	db	33
   122  001024  00                 	db	0
   123  001025                     STR_3:
   124  001025  20                 	db	32
   125  001026  20                 	db	32
   126  001027  20                 	db	32
   127  001028  56                 	db	86	;'V'
   128  001029  61                 	db	97	;'a'
   129  00102A  6C                 	db	108	;'l'
   130  00102B  75                 	db	117	;'u'
   131  00102C  65                 	db	101	;'e'
   132  00102D  3A                 	db	58	;':'
   133  00102E  20                 	db	32
   134  00102F  00                 	db	0
   135  001030                     STR_2:
   136  001030  4B                 	db	75	;'K'
   137  001031  65                 	db	101	;'e'
   138  001032  79                 	db	121	;'y'
   139  001033  3A                 	db	58	;':'
   140  001034  20                 	db	32
   141  001035  00                 	db	0
   142  001036                     STR_12:
   143  001036  3F                 	db	63	;'?'
   144  001037  3F                 	db	63	;'?'
   145  001038  3F                 	db	63	;'?'
   146  001039  00                 	db	0
   147  00103A                     STR_20:
   148  00103A  56                 	db	86	;'V'
   149  00103B  45                 	db	69	;'E'
   150  00103C  4C                 	db	76	;'L'
   151  00103D  00                 	db	0
   152  00103E                     STR_4:
   153  00103E  50                 	db	80	;'P'
   154  00103F  4F                 	db	79	;'O'
   155  001040  53                 	db	83	;'S'
   156  001041  00                 	db	0
   157  001042                     STR_21:
   158  001042  76                 	db	118	;'v'
   159  001043  65                 	db	101	;'e'
   160  001044  6C                 	db	108	;'l'
   161  001045  00                 	db	0
   162  001046                     STR_5:
   163  001046  70                 	db	112	;'p'
   164  001047  6F                 	db	111	;'o'
   165  001048  73                 	db	115	;'s'
   166  001049  00                 	db	0
   167  00104A                     STR_10:
   168  00104A  4B                 	db	75	;'K'
   169  00104B  44                 	db	68	;'D'
   170  00104C  00                 	db	0
   171  00104D                     STR_8:
   172  00104D  4B                 	db	75	;'K'
   173  00104E  49                 	db	73	;'I'
   174  00104F  00                 	db	0
   175  001050                     STR_6:
   176  001050  4B                 	db	75	;'K'
   177  001051  50                 	db	80	;'P'
   178  001052  00                 	db	0
   179  001053                     STR_14:
   180  001053  41                 	db	65	;'A'
   181  001054  5A                 	db	90	;'Z'
   182  001055  00                 	db	0
   183  001056                     STR_11:
   184  001056  6B                 	db	107	;'k'
   185  001057  64                 	db	100	;'d'
   186  001058  00                 	db	0
   187  001059                     STR_9:
   188  001059  6B                 	db	107	;'k'
   189  00105A  69                 	db	105	;'i'
   190  00105B  00                 	db	0
   191  00105C                     STR_7:
   192  00105C  6B                 	db	107	;'k'
   193  00105D  70                 	db	112	;'p'
   194  00105E  00                 	db	0
   195  00105F                     STR_15:
   196  00105F  61                 	db	97	;'a'
   197  001060  7A                 	db	122	;'z'
   198  001061  00                 	db	0
   199  0000                     
   200                           ; #config settings
   201  001062  00                 	db	0	; dummy byte at the end
   202  0000                     
   203                           	psect	cinit
   204  002F28                     __pcinit:
   205                           	opt stack 0
   206  002F28                     start_initialization:
   207                           	opt stack 0
   208  002F28                     __initialization:
   209                           	opt stack 0
   210                           
   211                           ; Clear objects allocated to BANK0 (41 bytes)
   212  002F28  EE00  F0B5         	lfsr	0,__pbssBANK0
   213  002F2C  0E29               	movlw	41
   214  002F2E                     clear_0:
   215  002F2E  6AEE               	clrf	postinc0,c
   216  002F30  06E8               	decf	wreg,f,c
   217  002F32  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to COMRAM (35 bytes)
   220  002F34  EE00  F03F         	lfsr	0,__pbssCOMRAM
   221  002F38  0E23               	movlw	35
   222  002F3A                     clear_1:
   223  002F3A  6AEE               	clrf	postinc0,c
   224  002F3C  06E8               	decf	wreg,f,c
   225  002F3E  E1FD               	bnz	clear_1
   226                           
   227                           ; Initialize objects allocated to BANK0 (1 bytes)
   228                           ; load TBLPTR registers with __pidataBANK0
   229  002F40  0E68               	movlw	low __pidataBANK0
   230  002F42  6EF6               	movwf	tblptrl,c
   231  002F44  0E30               	movlw	high __pidataBANK0
   232  002F46  6EF7               	movwf	tblptrh,c
   233  002F48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   234  002F4A  6EF8               	movwf	tblptru,c
   235  002F4C  0009               	tblrd		*+	;fetch initializer
   236  002F4E  CFF5 F0DE          	movff	tablat,__pdataBANK0
   237  002F52                     end_of_initialization:
   238                           	opt stack 0
   239  002F52                     __end_of__initialization:
   240                           	opt stack 0
   241  002F52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  002F54  6EF8               	movwf	tblptru,c
   243  002F56  0100               	movlb	0
   244  002F58  EF32  F008         	goto	_main	;jump to C main() function
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssCOMRAM
   253  00003F                     __pbssCOMRAM:
   254                           	opt stack 0
   255  00003F                     _Kd:
   256                           	opt stack 0
   257  00003F                     	ds	3
   258  000042                     _Ki:
   259                           	opt stack 0
   260  000042                     	ds	3
   261  000045                     _Kp:
   262                           	opt stack 0
   263  000045                     	ds	3
   264  000048                     _SetAngle:
   265                           	opt stack 0
   266  000048                     	ds	3
   267  00004B                     _StrippedValue:
   268                           	opt stack 0
   269  00004B                     	ds	3
   270  00004E                     _DoublePtr:
   271                           	opt stack 0
   272  00004E                     	ds	2
   273  000050                     _PIDEnableFlag:
   274                           	opt stack 0
   275  000050                     	ds	1
   276  000051                     _ReceivedChar:
   277                           	opt stack 0
   278  000051                     	ds	1
   279  000052                     _StrippedKey:
   280                           	opt stack 0
   281  000052                     	ds	1
   282  000053                     _value:
   283                           	opt stack 0
   284  000053                     	ds	10
   285  00005D                     _key:
   286                           	opt stack 0
   287  00005D                     	ds	5
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	bssBANK0
   296  0000B5                     __pbssBANK0:
   297                           	opt stack 0
   298  0000B5                     _CurrentAngle:
   299                           	opt stack 0
   300  0000B5                     	ds	3
   301  0000B8                     _CurrentVelocity:
   302                           	opt stack 0
   303  0000B8                     	ds	3
   304  0000BB                     _RCflag:
   305                           	opt stack 0
   306  0000BB                     	ds	1
   307  0000BC                     _received:
   308                           	opt stack 0
   309  0000BC                     	ds	30
   310  0000DA                     _DoubleSPIM:
   311                           	opt stack 0
   312  0000DA                     	ds	4
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           
   320                           	psect	dataBANK0
   321  0000DE                     __pdataBANK0:
   322                           	opt stack 0
   323  0000DE                     _AZEL:
   324                           	opt stack 0
   325  0000DE                     	ds	1
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           
   333                           	psect	cstackBANK0
   334  000080                     __pcstackBANK0:
   335                           	opt stack 0
   336  000080                     ??_checksum:
   337  000080                     ?___lwdiv:
   338                           	opt stack 0
   339  000080                     ?___lwmod:
   340                           	opt stack 0
   341  000080                     ?_SPIReassembleDouble:
   342                           	opt stack 0
   343  000080                     ?___ftpack:
   344                           	opt stack 0
   345  000080                     SerTx@c:
   346                           	opt stack 0
   347  000080                     MReceiveSPI@tempCH:
   348                           	opt stack 0
   349  000080                     MGenerateChecksum@sum:
   350                           	opt stack 0
   351  000080                     OpenSPI@bus_mode:
   352                           	opt stack 0
   353  000080                     Delay10TCYx@unit:
   354                           	opt stack 0
   355  000080                     ___lwdiv@dividend:
   356                           	opt stack 0
   357  000080                     ___lwmod@dividend:
   358                           	opt stack 0
   359  000080                     ___ftpack@arg:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x0
   363  000080                     	ds	1
   364  000081                     MSendSPI@Slave:
   365                           	opt stack 0
   366  000081                     MGenerateChecksum@z:
   367                           	opt stack 0
   368  000081                     OpenSPI@smp_phase:
   369                           	opt stack 0
   370  000081                     SerTxStr@string:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x1
   374  000081                     	ds	1
   375  000082                     MSendSPI@tempChar:
   376                           	opt stack 0
   377  000082                     OpenSPI@sync_mode:
   378                           	opt stack 0
   379  000082                     ___lwdiv@divisor:
   380                           	opt stack 0
   381  000082                     ___lwmod@divisor:
   382                           	opt stack 0
   383  000082                     SPIDisassembleDouble@dub:
   384                           	opt stack 0
   385                           
   386                           ; 3 bytes @ 0x2
   387  000082                     	ds	1
   388  000083                     MSendSPI@tempChar_708:
   389                           	opt stack 0
   390  000083                     ___ftpack@exp:
   391                           	opt stack 0
   392  000083                     SPIReassembleDouble@dub:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0x3
   396  000083                     	ds	1
   397  000084                     MSendSPI@data:
   398                           	opt stack 0
   399  000084                     checksum@sum:
   400                           	opt stack 0
   401  000084                     ___ftpack@sign:
   402                           	opt stack 0
   403  000084                     ___lwdiv@counter:
   404                           	opt stack 0
   405  000084                     ___lwmod@counter:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x4
   409  000084                     	ds	1
   410  000085                     ??___ftpack:
   411  000085                     checksum@y:
   412                           	opt stack 0
   413  000085                     ___lwdiv@quotient:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x5
   417  000085                     	ds	3
   418  000088                     ?___ftmul:
   419                           	opt stack 0
   420  000088                     ___ftmul@f1:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x8
   424  000088                     	ds	3
   425  00008B                     ___ftmul@f2:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0xB
   429  00008B                     	ds	3
   430  00008E                     ??___ftmul:
   431                           
   432                           ; 0 bytes @ 0xE
   433  00008E                     	ds	3
   434  000091                     ___ftmul@exp:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x11
   438  000091                     	ds	1
   439  000092                     ___ftmul@f3_as_product:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x12
   443  000092                     	ds	3
   444  000095                     ___ftmul@cntr:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x15
   448  000095                     	ds	1
   449  000096                     ___ftmul@sign:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x16
   453  000096                     	ds	1
   454  000097                     ?___fttol:
   455                           	opt stack 0
   456  000097                     ___fttol@f1:
   457                           	opt stack 0
   458                           
   459                           ; 3 bytes @ 0x17
   460  000097                     	ds	4
   461  00009B                     ??___fttol:
   462                           
   463                           ; 0 bytes @ 0x1B
   464  00009B                     	ds	5
   465  0000A0                     ___fttol@sign1:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x20
   469  0000A0                     	ds	1
   470  0000A1                     ___fttol@lval:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x21
   474  0000A1                     	ds	4
   475  0000A5                     ___fttol@exp1:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x25
   479  0000A5                     	ds	1
   480  0000A6                     breakDouble@dubs:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x26
   484  0000A6                     	ds	3
   485  0000A9                     breakDouble@tempDub:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x29
   489  0000A9                     	ds	2
   490  0000AB                     breakDouble@temp1:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x2B
   494  0000AB                     	ds	2
   495  0000AD                     breakDouble@temp2:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x2D
   499  0000AD                     	ds	2
   500  0000AF                     MReceiveStrSPI@str:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x2F
   504  0000AF                     	ds	2
   505  0000B1                     MReceiveStrSPI@Slave:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x31
   509  0000B1                     	ds	1
   510  0000B2                     MReceiveStrSPI@x:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x32
   514  0000B2                     	ds	1
   515  0000B3                     MReceiveStrSPI@x_717:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x33
   519  0000B3                     	ds	1
   520  0000B4                     main@x:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x34
   524  0000B4                     	ds	1
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           
   532                           	psect	cstackCOMRAM
   533  000001                     __pcstackCOMRAM:
   534                           	opt stack 0
   535  000001                     ??_isspace:
   536  000001                     ??_isdigit:
   537  000001                     ?_strcmp:
   538                           	opt stack 0
   539  000001                     ?___ftneg:
   540                           	opt stack 0
   541  000001                     ?i2___ftpack:
   542                           	opt stack 0
   543  000001                     ?___lmul:
   544                           	opt stack 0
   545  000001                     i2SerTx@c:
   546                           	opt stack 0
   547  000001                     strcmp@s1:
   548                           	opt stack 0
   549  000001                     ___ftge@ff1:
   550                           	opt stack 0
   551  000001                     ___ftneg@f1:
   552                           	opt stack 0
   553  000001                     i2___ftpack@arg:
   554                           	opt stack 0
   555  000001                     ___lmul@multiplier:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x0
   559  000001                     	ds	1
   560  000002                     _isdigit$1326:
   561                           	opt stack 0
   562  000002                     _isspace$1329:
   563                           	opt stack 0
   564  000002                     i2SerTxStr@string:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x1
   568  000002                     	ds	1
   569  000003                     isdigit@c:
   570                           	opt stack 0
   571  000003                     isspace@c:
   572                           	opt stack 0
   573  000003                     strcmp@s2:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x2
   577  000003                     	ds	1
   578  000004                     i2___ftpack@exp:
   579                           	opt stack 0
   580  000004                     ___ftge@ff2:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x3
   584  000004                     	ds	1
   585  000005                     ??_strcmp:
   586  000005                     i2___ftpack@sign:
   587                           	opt stack 0
   588  000005                     ___lmul@multiplicand:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0x4
   592  000005                     	ds	1
   593  000006                     ??i2___ftpack:
   594  000006                     strcmp@r:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x5
   598  000006                     	ds	1
   599  000007                     ??___ftge:
   600                           
   601                           ; 0 bytes @ 0x6
   602  000007                     	ds	2
   603  000009                     ?___ftdiv:
   604                           	opt stack 0
   605  000009                     ?___altoft:
   606                           	opt stack 0
   607  000009                     ?i2___ftmul:
   608                           	opt stack 0
   609  000009                     ___ftdiv@f1:
   610                           	opt stack 0
   611  000009                     i2___ftmul@f1:
   612                           	opt stack 0
   613  000009                     ___lmul@product:
   614                           	opt stack 0
   615  000009                     ___altoft@c:
   616                           	opt stack 0
   617                           
   618                           ; 4 bytes @ 0x8
   619  000009                     	ds	3
   620  00000C                     ___ftdiv@f2:
   621                           	opt stack 0
   622  00000C                     i2___ftmul@f2:
   623                           	opt stack 0
   624                           
   625                           ; 3 bytes @ 0xB
   626  00000C                     	ds	1
   627  00000D                     ??___altoft:
   628                           
   629                           ; 0 bytes @ 0xC
   630  00000D                     	ds	2
   631  00000F                     ??___ftdiv:
   632  00000F                     ??i2___ftmul:
   633                           
   634                           ; 0 bytes @ 0xE
   635  00000F                     	ds	2
   636  000011                     ___altoft@exp:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x10
   640  000011                     	ds	1
   641  000012                     ___altoft@sign:
   642                           	opt stack 0
   643  000012                     ___ftdiv@cntr:
   644                           	opt stack 0
   645  000012                     i2___ftmul@exp:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x11
   649  000012                     	ds	1
   650  000013                     ___ftdiv@f3:
   651                           	opt stack 0
   652  000013                     i2___ftmul@f3_as_product:
   653                           	opt stack 0
   654                           
   655                           ; 3 bytes @ 0x12
   656  000013                     	ds	3
   657  000016                     ___ftdiv@exp:
   658                           	opt stack 0
   659  000016                     i2___ftmul@cntr:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x15
   663  000016                     	ds	1
   664  000017                     ___ftdiv@sign:
   665                           	opt stack 0
   666  000017                     i2___ftmul@sign:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x16
   670  000017                     	ds	1
   671  000018                     ?_strtod:
   672                           	opt stack 0
   673  000018                     strtod@s:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x17
   677  000018                     	ds	2
   678  00001A                     strtod@res:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x19
   682  00001A                     	ds	2
   683  00001C                     ??_strtod:
   684                           
   685                           ; 0 bytes @ 0x1B
   686  00001C                     	ds	1
   687  00001D                     strtod@eexp:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x1C
   691  00001D                     	ds	1
   692  00001E                     strtod@flags:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x1D
   696  00001E                     	ds	1
   697  00001F                     strtod@expon:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x1E
   701  00001F                     	ds	1
   702  000020                     strtod@_u:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x1F
   706  000020                     	ds	4
   707  000024                     keyValue@str:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x23
   711  000024                     	ds	2
   712  000026                     keyValue@length:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x25
   716  000026                     	ds	2
   717  000028                     ??_keyValue:
   718                           
   719                           ; 0 bytes @ 0x27
   720  000028                     	ds	2
   721  00002A                     keyValue@str_end:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x29
   725  00002A                     	ds	2
   726  00002C                     keyValue@flag:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x2B
   730  00002C                     	ds	1
   731  00002D                     keyValue@y:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x2C
   735  00002D                     	ds	1
   736  00002E                     keyValue@x:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x2D
   740  00002E                     	ds	1
   741  00002F                     
   742                           ; 0 bytes @ 0x2E
   743  00002F                     	ds	1
   744  000030                     RCInt@counter:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x2F
   748  000030                     	ds	1
   749  000031                     ??_ISR:
   750                           
   751                           ; 0 bytes @ 0x30
   752  000031                     	ds	14
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           
   760 ;;
   761 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   762 ;;
   763 ;; *************** function _main *****************
   764 ;; Defined at:
   765 ;;		line 13 in file "SPItest-MASTER.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  x               1   52[BANK0 ] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;		None               void
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels required when called:   10
   785 ;; This function calls:
   786 ;;		_Delay10TCYx
   787 ;;		_MReceiveStrSPI
   788 ;;		_MSendSPI
   789 ;;		_SPIDisassembleDouble
   790 ;;		_SPIReassembleDouble
   791 ;;		_checksum
   792 ;;		_initialize
   793 ;; This function is called by:
   794 ;;		Startup code after reset
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text0
   799  001064                     __ptext0:
   800                           	opt stack 0
   801  001064                     _main:
   802                           	opt stack 21
   803                           
   804                           ;SPItest-MASTER.c: 15: unsigned char x = 0;
   805                           
   806                           ;incstack = 0
   807  001064  0E00               	movlw	0
   808  001066  0100               	movlb	0	; () banked
   809  001068  6FB4               	movwf	main@x& (0+255),b
   810                           
   811                           ; BSR set to: 0
   812                           ;SPItest-MASTER.c: 16: initialize();
   813  00106A  EC26  F018         	call	_initialize	;wreg free
   814  00106E  D17A               	goto	l280
   815  001070                     l4144:
   816                           
   817                           ;SPItest-MASTER.c: 20: {
   818                           ;SPItest-MASTER.c: 21: if (RCflag == 1)
   819  001070  0100               	movlb	0	; () banked
   820  001072  05BB               	decf	_RCflag& (0+255),w,b
   821  001074  A4D8               	btfss	status,2,c
   822  001076  D7FC               	goto	l4144
   823                           
   824                           ; BSR set to: 0
   825                           ;SPItest-MASTER.c: 22: {
   826                           ;SPItest-MASTER.c: 23: RCflag = 0;
   827  001078  0E00               	movlw	0
   828  00107A  0100               	movlb	0	; () banked
   829  00107C  6FBB               	movwf	_RCflag& (0+255),b
   830                           
   831                           ; BSR set to: 0
   832                           ;SPItest-MASTER.c: 24: if (AZEL == 1)
   833  00107E  0100               	movlb	0	; () banked
   834  001080  05DE               	decf	_AZEL& (0+255),w,b
   835  001082  B4D8               	btfsc	status,2,c
   836  001084  D002               	goto	l245
   837  001086  D170               	goto	l4292
   838                           
   839                           ; BSR set to: 0
   840                           ;SPItest-MASTER.c: 25: {
   841                           ;SPItest-MASTER.c: 26: while(PORTBbits.RB1);
   842  001088  D000               	goto	l245
   843  00108A                     l245:
   844  00108A  B281               	btfsc	3969,1,c	;volatile
   845  00108C  D7FE               	goto	l245
   846                           
   847                           ;SPItest-MASTER.c: 27: if ((StrippedKey == 0x02) || (StrippedKey == 0x03) || (StrippedKe
      +                          y == 0x04) || (StrippedKey == 0x06) || StrippedKey == 0x08)
   848  00108E  0E02               	movlw	2
   849  001090  1852               	xorwf	_StrippedKey,w,c
   850  001092  B4D8               	btfsc	status,2,c
   851  001094  D012               	goto	l4162
   852  001096  0E03               	movlw	3
   853  001098  1852               	xorwf	_StrippedKey,w,c
   854  00109A  B4D8               	btfsc	status,2,c
   855  00109C  D00E               	goto	l4162
   856  00109E  0E04               	movlw	4
   857  0010A0  1852               	xorwf	_StrippedKey,w,c
   858  0010A2  B4D8               	btfsc	status,2,c
   859  0010A4  D00A               	goto	l4162
   860  0010A6  0E06               	movlw	6
   861  0010A8  1852               	xorwf	_StrippedKey,w,c
   862  0010AA  B4D8               	btfsc	status,2,c
   863  0010AC  D006               	goto	l4162
   864  0010AE  0E08               	movlw	8
   865  0010B0  1852               	xorwf	_StrippedKey,w,c
   866  0010B2  B4D8               	btfsc	status,2,c
   867  0010B4  D002               	goto	l4162
   868  0010B6  D116               	goto	l4264
   869  0010B8  D000               	goto	l4162
   870  0010BA                     l4162:
   871                           
   872                           ;SPItest-MASTER.c: 30: {
   873                           ;SPItest-MASTER.c: 31: if (StrippedKey == 0x02)
   874  0010BA  0E02               	movlw	2
   875  0010BC  1852               	xorwf	_StrippedKey,w,c
   876  0010BE  A4D8               	btfss	status,2,c
   877  0010C0  D032               	goto	l4182
   878                           
   879                           ;SPItest-MASTER.c: 32: {
   880                           ;SPItest-MASTER.c: 33: MSendSPI(StrippedKey, 1);
   881  0010C2  0E01               	movlw	1
   882  0010C4  0100               	movlb	0	; () banked
   883  0010C6  6F81               	movwf	MSendSPI@Slave& (0+255),b
   884  0010C8  5052               	movf	_StrippedKey,w,c
   885  0010CA  ECDF  F016         	call	_MSendSPI
   886                           
   887                           ;SPItest-MASTER.c: 34: MReceiveStrSPI(DoubleSPIM, 1);
   888  0010CE  0EDA               	movlw	low _DoubleSPIM
   889  0010D0  0100               	movlb	0	; () banked
   890  0010D2  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
   891  0010D4  0E00               	movlw	high _DoubleSPIM
   892  0010D6  0100               	movlb	0	; () banked
   893  0010D8  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
   894  0010DA  0E01               	movlw	1
   895  0010DC  0100               	movlb	0	; () banked
   896  0010DE  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
   897  0010E0  EC57  F014         	call	_MReceiveStrSPI	;wreg free
   898                           
   899                           ;SPItest-MASTER.c: 35: CurrentAngle = SPIReassembleDouble();
   900  0010E4  EC52  F017         	call	_SPIReassembleDouble	;wreg free
   901  0010E8  C080  F0B5         	movff	?_SPIReassembleDouble,_CurrentAngle
   902  0010EC  C081  F0B6         	movff	?_SPIReassembleDouble+1,_CurrentAngle+1
   903  0010F0  C082  F0B7         	movff	?_SPIReassembleDouble+2,_CurrentAngle+2
   904                           
   905                           ;SPItest-MASTER.c: 36: for (x = 0; x != 4; x++)
   906  0010F4  0E00               	movlw	0
   907  0010F6  0100               	movlb	0	; () banked
   908  0010F8  6FB4               	movwf	main@x& (0+255),b
   909  0010FA                     l4172:
   910                           
   911                           ; BSR set to: 0
   912  0010FA  0E04               	movlw	4
   913  0010FC  0100               	movlb	0	; () banked
   914  0010FE  19B4               	xorwf	main@x& (0+255),w,b
   915  001100  B4D8               	btfsc	status,2,c
   916  001102  D0E9               	goto	l4262
   917  001104  D001               	goto	l4176
   918                           
   919                           ; BSR set to: 0
   920  001106  D0E7               	goto	l4262
   921  001108                     l4176:
   922                           
   923                           ; BSR set to: 0
   924                           ;SPItest-MASTER.c: 37: DoubleSPIM[x] = '\0';
   925  001108  0100               	movlb	0	; () banked
   926  00110A  51B4               	movf	main@x& (0+255),w,b
   927  00110C  0D01               	mullw	1
   928  00110E  0EDA               	movlw	low _DoubleSPIM
   929  001110  24F3               	addwf	prodl,w,c
   930  001112  6ED9               	movwf	fsr2l,c
   931  001114  0E00               	movlw	high _DoubleSPIM
   932  001116  20F4               	addwfc	prodh,w,c
   933  001118  6EDA               	movwf	fsr2h,c
   934  00111A  0E00               	movlw	0
   935  00111C  6EDF               	movwf	indf2,c
   936                           
   937                           ; BSR set to: 0
   938  00111E  0100               	movlb	0	; () banked
   939  001120  2BB4               	incf	main@x& (0+255),f,b
   940  001122  D7EB               	goto	l4172
   941                           
   942                           ; BSR set to: 0
   943                           ;SPItest-MASTER.c: 38: }
   944                           
   945                           ; BSR set to: 0
   946  001124  D0D8               	goto	l4262
   947  001126                     l4182:
   948                           
   949                           ;SPItest-MASTER.c: 39: else if (StrippedKey == 0x03)
   950  001126  0E03               	movlw	3
   951  001128  1852               	xorwf	_StrippedKey,w,c
   952  00112A  A4D8               	btfss	status,2,c
   953  00112C  D032               	goto	l4202
   954                           
   955                           ;SPItest-MASTER.c: 40: {
   956                           ;SPItest-MASTER.c: 41: MSendSPI(StrippedKey, 1);
   957  00112E  0E01               	movlw	1
   958  001130  0100               	movlb	0	; () banked
   959  001132  6F81               	movwf	MSendSPI@Slave& (0+255),b
   960  001134  5052               	movf	_StrippedKey,w,c
   961  001136  ECDF  F016         	call	_MSendSPI
   962                           
   963                           ;SPItest-MASTER.c: 42: MReceiveStrSPI(DoubleSPIM, 1);
   964  00113A  0EDA               	movlw	low _DoubleSPIM
   965  00113C  0100               	movlb	0	; () banked
   966  00113E  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
   967  001140  0E00               	movlw	high _DoubleSPIM
   968  001142  0100               	movlb	0	; () banked
   969  001144  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
   970  001146  0E01               	movlw	1
   971  001148  0100               	movlb	0	; () banked
   972  00114A  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
   973  00114C  EC57  F014         	call	_MReceiveStrSPI	;wreg free
   974                           
   975                           ;SPItest-MASTER.c: 43: CurrentVelocity = SPIReassembleDouble();
   976  001150  EC52  F017         	call	_SPIReassembleDouble	;wreg free
   977  001154  C080  F0B8         	movff	?_SPIReassembleDouble,_CurrentVelocity
   978  001158  C081  F0B9         	movff	?_SPIReassembleDouble+1,_CurrentVelocity+1
   979  00115C  C082  F0BA         	movff	?_SPIReassembleDouble+2,_CurrentVelocity+2
   980                           
   981                           ;SPItest-MASTER.c: 44: for (x = 0; x != 4; x++)
   982  001160  0E00               	movlw	0
   983  001162  0100               	movlb	0	; () banked
   984  001164  6FB4               	movwf	main@x& (0+255),b
   985  001166                     l4192:
   986                           
   987                           ; BSR set to: 0
   988  001166  0E04               	movlw	4
   989  001168  0100               	movlb	0	; () banked
   990  00116A  19B4               	xorwf	main@x& (0+255),w,b
   991  00116C  B4D8               	btfsc	status,2,c
   992  00116E  D0B3               	goto	l4262
   993  001170  D001               	goto	l4196
   994                           
   995                           ; BSR set to: 0
   996  001172  D0B1               	goto	l4262
   997  001174                     l4196:
   998                           
   999                           ; BSR set to: 0
  1000                           ;SPItest-MASTER.c: 45: DoubleSPIM[x] = '\0';
  1001  001174  0100               	movlb	0	; () banked
  1002  001176  51B4               	movf	main@x& (0+255),w,b
  1003  001178  0D01               	mullw	1
  1004  00117A  0EDA               	movlw	low _DoubleSPIM
  1005  00117C  24F3               	addwf	prodl,w,c
  1006  00117E  6ED9               	movwf	fsr2l,c
  1007  001180  0E00               	movlw	high _DoubleSPIM
  1008  001182  20F4               	addwfc	prodh,w,c
  1009  001184  6EDA               	movwf	fsr2h,c
  1010  001186  0E00               	movlw	0
  1011  001188  6EDF               	movwf	indf2,c
  1012                           
  1013                           ; BSR set to: 0
  1014  00118A  0100               	movlb	0	; () banked
  1015  00118C  2BB4               	incf	main@x& (0+255),f,b
  1016  00118E  D7EB               	goto	l4192
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;SPItest-MASTER.c: 46: }
  1020                           
  1021                           ; BSR set to: 0
  1022  001190  D0A2               	goto	l4262
  1023  001192                     l4202:
  1024                           
  1025                           ;SPItest-MASTER.c: 47: else if (StrippedKey == 0x04)
  1026  001192  0E04               	movlw	4
  1027  001194  1852               	xorwf	_StrippedKey,w,c
  1028  001196  A4D8               	btfss	status,2,c
  1029  001198  D032               	goto	l4222
  1030                           
  1031                           ;SPItest-MASTER.c: 48: {
  1032                           ;SPItest-MASTER.c: 49: MSendSPI(StrippedKey, 1);
  1033  00119A  0E01               	movlw	1
  1034  00119C  0100               	movlb	0	; () banked
  1035  00119E  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1036  0011A0  5052               	movf	_StrippedKey,w,c
  1037  0011A2  ECDF  F016         	call	_MSendSPI
  1038                           
  1039                           ;SPItest-MASTER.c: 50: MReceiveStrSPI(DoubleSPIM, 1);
  1040  0011A6  0EDA               	movlw	low _DoubleSPIM
  1041  0011A8  0100               	movlb	0	; () banked
  1042  0011AA  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1043  0011AC  0E00               	movlw	high _DoubleSPIM
  1044  0011AE  0100               	movlb	0	; () banked
  1045  0011B0  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1046  0011B2  0E01               	movlw	1
  1047  0011B4  0100               	movlb	0	; () banked
  1048  0011B6  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1049  0011B8  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1050                           
  1051                           ;SPItest-MASTER.c: 51: Kp = SPIReassembleDouble();
  1052  0011BC  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1053  0011C0  C080  F045         	movff	?_SPIReassembleDouble,_Kp
  1054  0011C4  C081  F046         	movff	?_SPIReassembleDouble+1,_Kp+1
  1055  0011C8  C082  F047         	movff	?_SPIReassembleDouble+2,_Kp+2
  1056                           
  1057                           ;SPItest-MASTER.c: 52: for (x = 0; x != 4; x++)
  1058  0011CC  0E00               	movlw	0
  1059  0011CE  0100               	movlb	0	; () banked
  1060  0011D0  6FB4               	movwf	main@x& (0+255),b
  1061  0011D2                     l4212:
  1062                           
  1063                           ; BSR set to: 0
  1064  0011D2  0E04               	movlw	4
  1065  0011D4  0100               	movlb	0	; () banked
  1066  0011D6  19B4               	xorwf	main@x& (0+255),w,b
  1067  0011D8  B4D8               	btfsc	status,2,c
  1068  0011DA  D07D               	goto	l4262
  1069  0011DC  D001               	goto	l4216
  1070                           
  1071                           ; BSR set to: 0
  1072  0011DE  D07B               	goto	l4262
  1073  0011E0                     l4216:
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;SPItest-MASTER.c: 53: DoubleSPIM[x] = '\0';
  1077  0011E0  0100               	movlb	0	; () banked
  1078  0011E2  51B4               	movf	main@x& (0+255),w,b
  1079  0011E4  0D01               	mullw	1
  1080  0011E6  0EDA               	movlw	low _DoubleSPIM
  1081  0011E8  24F3               	addwf	prodl,w,c
  1082  0011EA  6ED9               	movwf	fsr2l,c
  1083  0011EC  0E00               	movlw	high _DoubleSPIM
  1084  0011EE  20F4               	addwfc	prodh,w,c
  1085  0011F0  6EDA               	movwf	fsr2h,c
  1086  0011F2  0E00               	movlw	0
  1087  0011F4  6EDF               	movwf	indf2,c
  1088                           
  1089                           ; BSR set to: 0
  1090  0011F6  0100               	movlb	0	; () banked
  1091  0011F8  2BB4               	incf	main@x& (0+255),f,b
  1092  0011FA  D7EB               	goto	l4212
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;SPItest-MASTER.c: 54: }
  1096                           
  1097                           ; BSR set to: 0
  1098  0011FC  D06C               	goto	l4262
  1099  0011FE                     l4222:
  1100                           
  1101                           ;SPItest-MASTER.c: 55: else if (StrippedKey == 0x06)
  1102  0011FE  0E06               	movlw	6
  1103  001200  1852               	xorwf	_StrippedKey,w,c
  1104  001202  A4D8               	btfss	status,2,c
  1105  001204  D032               	goto	l4242
  1106                           
  1107                           ;SPItest-MASTER.c: 56: {
  1108                           ;SPItest-MASTER.c: 57: MSendSPI(StrippedKey, 1);
  1109  001206  0E01               	movlw	1
  1110  001208  0100               	movlb	0	; () banked
  1111  00120A  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1112  00120C  5052               	movf	_StrippedKey,w,c
  1113  00120E  ECDF  F016         	call	_MSendSPI
  1114                           
  1115                           ;SPItest-MASTER.c: 58: MReceiveStrSPI(DoubleSPIM, 1);
  1116  001212  0EDA               	movlw	low _DoubleSPIM
  1117  001214  0100               	movlb	0	; () banked
  1118  001216  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1119  001218  0E00               	movlw	high _DoubleSPIM
  1120  00121A  0100               	movlb	0	; () banked
  1121  00121C  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1122  00121E  0E01               	movlw	1
  1123  001220  0100               	movlb	0	; () banked
  1124  001222  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1125  001224  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1126                           
  1127                           ;SPItest-MASTER.c: 59: Ki = SPIReassembleDouble();
  1128  001228  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1129  00122C  C080  F042         	movff	?_SPIReassembleDouble,_Ki
  1130  001230  C081  F043         	movff	?_SPIReassembleDouble+1,_Ki+1
  1131  001234  C082  F044         	movff	?_SPIReassembleDouble+2,_Ki+2
  1132                           
  1133                           ;SPItest-MASTER.c: 60: for (x = 0; x != 4; x++)
  1134  001238  0E00               	movlw	0
  1135  00123A  0100               	movlb	0	; () banked
  1136  00123C  6FB4               	movwf	main@x& (0+255),b
  1137  00123E                     l4232:
  1138                           
  1139                           ; BSR set to: 0
  1140  00123E  0E04               	movlw	4
  1141  001240  0100               	movlb	0	; () banked
  1142  001242  19B4               	xorwf	main@x& (0+255),w,b
  1143  001244  B4D8               	btfsc	status,2,c
  1144  001246  D047               	goto	l4262
  1145  001248  D001               	goto	l4236
  1146                           
  1147                           ; BSR set to: 0
  1148  00124A  D045               	goto	l4262
  1149  00124C                     l4236:
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;SPItest-MASTER.c: 61: DoubleSPIM[x] = '\0';
  1153  00124C  0100               	movlb	0	; () banked
  1154  00124E  51B4               	movf	main@x& (0+255),w,b
  1155  001250  0D01               	mullw	1
  1156  001252  0EDA               	movlw	low _DoubleSPIM
  1157  001254  24F3               	addwf	prodl,w,c
  1158  001256  6ED9               	movwf	fsr2l,c
  1159  001258  0E00               	movlw	high _DoubleSPIM
  1160  00125A  20F4               	addwfc	prodh,w,c
  1161  00125C  6EDA               	movwf	fsr2h,c
  1162  00125E  0E00               	movlw	0
  1163  001260  6EDF               	movwf	indf2,c
  1164                           
  1165                           ; BSR set to: 0
  1166  001262  0100               	movlb	0	; () banked
  1167  001264  2BB4               	incf	main@x& (0+255),f,b
  1168  001266  D7EB               	goto	l4232
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;SPItest-MASTER.c: 62: }
  1172                           
  1173                           ; BSR set to: 0
  1174  001268  D036               	goto	l4262
  1175  00126A                     l4242:
  1176                           
  1177                           ;SPItest-MASTER.c: 63: else if (StrippedKey == 0x08)
  1178  00126A  0E08               	movlw	8
  1179  00126C  1852               	xorwf	_StrippedKey,w,c
  1180  00126E  A4D8               	btfss	status,2,c
  1181  001270  D032               	goto	l4262
  1182                           
  1183                           ;SPItest-MASTER.c: 64: {
  1184                           ;SPItest-MASTER.c: 65: MSendSPI(StrippedKey, 1);
  1185  001272  0E01               	movlw	1
  1186  001274  0100               	movlb	0	; () banked
  1187  001276  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1188  001278  5052               	movf	_StrippedKey,w,c
  1189  00127A  ECDF  F016         	call	_MSendSPI
  1190                           
  1191                           ;SPItest-MASTER.c: 66: MReceiveStrSPI(DoubleSPIM, 1);
  1192  00127E  0EDA               	movlw	low _DoubleSPIM
  1193  001280  0100               	movlb	0	; () banked
  1194  001282  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1195  001284  0E00               	movlw	high _DoubleSPIM
  1196  001286  0100               	movlb	0	; () banked
  1197  001288  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1198  00128A  0E01               	movlw	1
  1199  00128C  0100               	movlb	0	; () banked
  1200  00128E  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1201  001290  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1202                           
  1203                           ;SPItest-MASTER.c: 67: Kd = SPIReassembleDouble();
  1204  001294  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1205  001298  C080  F03F         	movff	?_SPIReassembleDouble,_Kd
  1206  00129C  C081  F040         	movff	?_SPIReassembleDouble+1,_Kd+1
  1207  0012A0  C082  F041         	movff	?_SPIReassembleDouble+2,_Kd+2
  1208                           
  1209                           ;SPItest-MASTER.c: 68: for (x = 0; x != 4; x++)
  1210  0012A4  0E00               	movlw	0
  1211  0012A6  0100               	movlb	0	; () banked
  1212  0012A8  6FB4               	movwf	main@x& (0+255),b
  1213  0012AA                     l4252:
  1214                           
  1215                           ; BSR set to: 0
  1216  0012AA  0E04               	movlw	4
  1217  0012AC  0100               	movlb	0	; () banked
  1218  0012AE  19B4               	xorwf	main@x& (0+255),w,b
  1219  0012B0  B4D8               	btfsc	status,2,c
  1220  0012B2  D011               	goto	l4262
  1221  0012B4  D001               	goto	l4256
  1222                           
  1223                           ; BSR set to: 0
  1224  0012B6  D00F               	goto	l4262
  1225  0012B8                     l4256:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;SPItest-MASTER.c: 69: DoubleSPIM[x] = '\0';
  1229  0012B8  0100               	movlb	0	; () banked
  1230  0012BA  51B4               	movf	main@x& (0+255),w,b
  1231  0012BC  0D01               	mullw	1
  1232  0012BE  0EDA               	movlw	low _DoubleSPIM
  1233  0012C0  24F3               	addwf	prodl,w,c
  1234  0012C2  6ED9               	movwf	fsr2l,c
  1235  0012C4  0E00               	movlw	high _DoubleSPIM
  1236  0012C6  20F4               	addwfc	prodh,w,c
  1237  0012C8  6EDA               	movwf	fsr2h,c
  1238  0012CA  0E00               	movlw	0
  1239  0012CC  6EDF               	movwf	indf2,c
  1240                           
  1241                           ; BSR set to: 0
  1242  0012CE  0100               	movlb	0	; () banked
  1243  0012D0  2BB4               	incf	main@x& (0+255),f,b
  1244  0012D2  D7EB               	goto	l4252
  1245                           
  1246                           ; BSR set to: 0
  1247                           
  1248                           ; BSR set to: 0
  1249                           
  1250                           ; BSR set to: 0
  1251                           
  1252                           ; BSR set to: 0
  1253                           
  1254                           ; BSR set to: 0
  1255                           
  1256                           ; BSR set to: 0
  1257  0012D4  D000               	goto	l4262
  1258  0012D6                     l4262:
  1259                           
  1260                           ;SPItest-MASTER.c: 70: }
  1261                           ;SPItest-MASTER.c: 71: }
  1262                           ;SPItest-MASTER.c: 72: while (!checksum());
  1263  0012D6  EC3C  F015         	call	_checksum	;wreg free
  1264  0012DA  0900               	iorlw	0
  1265  0012DC  A4D8               	btfss	status,2,c
  1266  0012DE  D6C8               	goto	l4144
  1267  0012E0  D6EC               	goto	l4162
  1268                           
  1269                           ;SPItest-MASTER.c: 73: }
  1270  0012E2  D6C6               	goto	l4144
  1271  0012E4                     l4264:
  1272                           
  1273                           ;SPItest-MASTER.c: 74: else if ((StrippedKey == 0x01) || (StrippedKey == 0x05) || (Strip
      +                          pedKey == 0x07) || (StrippedKey == 0x09))
  1274  0012E4  0452               	decf	_StrippedKey,w,c
  1275  0012E6  B4D8               	btfsc	status,2,c
  1276  0012E8  D00C               	goto	l4272
  1277  0012EA  0E05               	movlw	5
  1278  0012EC  1852               	xorwf	_StrippedKey,w,c
  1279  0012EE  B4D8               	btfsc	status,2,c
  1280  0012F0  D008               	goto	l4272
  1281  0012F2  0E07               	movlw	7
  1282  0012F4  1852               	xorwf	_StrippedKey,w,c
  1283  0012F6  B4D8               	btfsc	status,2,c
  1284  0012F8  D004               	goto	l4272
  1285  0012FA  0E09               	movlw	9
  1286  0012FC  1852               	xorwf	_StrippedKey,w,c
  1287  0012FE  A4D8               	btfss	status,2,c
  1288  001300  D6B7               	goto	l4144
  1289  001302                     l4272:
  1290                           
  1291                           ;SPItest-MASTER.c: 75: {
  1292                           ;SPItest-MASTER.c: 76: MSendSPI(StrippedKey, 1);
  1293  001302  0E01               	movlw	1
  1294  001304  0100               	movlb	0	; () banked
  1295  001306  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1296  001308  5052               	movf	_StrippedKey,w,c
  1297  00130A  ECDF  F016         	call	_MSendSPI
  1298                           
  1299                           ;SPItest-MASTER.c: 77: SPIDisassembleDouble(StrippedValue);
  1300  00130E  C04B  F082         	movff	_StrippedValue,SPIDisassembleDouble@dub
  1301  001312  C04C  F083         	movff	_StrippedValue+1,SPIDisassembleDouble@dub+1
  1302  001316  C04D  F084         	movff	_StrippedValue+2,SPIDisassembleDouble@dub+2
  1303  00131A  EC30  F017         	call	_SPIDisassembleDouble	;wreg free
  1304                           
  1305                           ;SPItest-MASTER.c: 78: PORTBbits.RB3 = 0;
  1306  00131E  9681               	bcf	3969,3,c	;volatile
  1307                           
  1308                           ;SPItest-MASTER.c: 79: while (PORTBbits.RB1);
  1309  001320  D000               	goto	l276
  1310  001322                     l276:
  1311  001322  B281               	btfsc	3969,1,c	;volatile
  1312  001324  D7FE               	goto	l276
  1313                           
  1314                           ;SPItest-MASTER.c: 80: Delay10TCYx(50);
  1315  001326  0E32               	movlw	50
  1316  001328  EC13  F018         	call	_Delay10TCYx
  1317                           
  1318                           ;SPItest-MASTER.c: 81: for (x = 0; x != 4; x++)
  1319  00132C  0E00               	movlw	0
  1320  00132E  0100               	movlb	0	; () banked
  1321  001330  6FB4               	movwf	main@x& (0+255),b
  1322  001332                     l4282:
  1323                           
  1324                           ; BSR set to: 0
  1325  001332  0E04               	movlw	4
  1326  001334  0100               	movlb	0	; () banked
  1327  001336  19B4               	xorwf	main@x& (0+255),w,b
  1328  001338  B4D8               	btfsc	status,2,c
  1329  00133A  D014               	goto	l280
  1330  00133C  D001               	goto	l4286
  1331                           
  1332                           ; BSR set to: 0
  1333  00133E  D012               	goto	l280
  1334  001340                     l4286:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;SPItest-MASTER.c: 82: MSendSPI(DoubleSPIM[x], 1);
  1338  001340  0E01               	movlw	1
  1339  001342  0100               	movlb	0	; () banked
  1340  001344  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1341  001346  0100               	movlb	0	; () banked
  1342  001348  51B4               	movf	main@x& (0+255),w,b
  1343  00134A  0D01               	mullw	1
  1344  00134C  0EDA               	movlw	low _DoubleSPIM
  1345  00134E  24F3               	addwf	prodl,w,c
  1346  001350  6ED9               	movwf	fsr2l,c
  1347  001352  0E00               	movlw	high _DoubleSPIM
  1348  001354  20F4               	addwfc	prodh,w,c
  1349  001356  6EDA               	movwf	fsr2h,c
  1350  001358  50DF               	movf	indf2,w,c
  1351  00135A  ECDF  F016         	call	_MSendSPI
  1352  00135E  0100               	movlb	0	; () banked
  1353  001360  2BB4               	incf	main@x& (0+255),f,b
  1354  001362  D7E7               	goto	l4282
  1355  001364                     l280:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;SPItest-MASTER.c: 83: PORTBbits.RB3 = 1;
  1359  001364  8681               	bsf	3969,3,c	;volatile
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;SPItest-MASTER.c: 84: }
  1363                           ;SPItest-MASTER.c: 85: }
  1364                           
  1365                           ; BSR set to: 0
  1366  001366  D684               	goto	l4144
  1367  001368                     l4292:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;SPItest-MASTER.c: 87: else if (AZEL == 2)
  1371  001368  0E02               	movlw	2
  1372  00136A  0100               	movlb	0	; () banked
  1373  00136C  19DE               	xorwf	_AZEL& (0+255),w,b
  1374  00136E  A4D8               	btfss	status,2,c
  1375  001370  D67F               	goto	l4144
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;SPItest-MASTER.c: 88: {
  1379                           ;SPItest-MASTER.c: 89: if ((StrippedKey == 0x02) || (StrippedKey == 0x03) || (StrippedKe
      +                          y == 0x04) || (StrippedKey == 0x06) || StrippedKey == 0x08)
  1380  001372  0E02               	movlw	2
  1381  001374  1852               	xorwf	_StrippedKey,w,c
  1382  001376  B4D8               	btfsc	status,2,c
  1383  001378  D012               	goto	l4304
  1384                           
  1385                           ; BSR set to: 0
  1386  00137A  0E03               	movlw	3
  1387  00137C  1852               	xorwf	_StrippedKey,w,c
  1388  00137E  B4D8               	btfsc	status,2,c
  1389  001380  D00E               	goto	l4304
  1390                           
  1391                           ; BSR set to: 0
  1392  001382  0E04               	movlw	4
  1393  001384  1852               	xorwf	_StrippedKey,w,c
  1394  001386  B4D8               	btfsc	status,2,c
  1395  001388  D00A               	goto	l4304
  1396                           
  1397                           ; BSR set to: 0
  1398  00138A  0E06               	movlw	6
  1399  00138C  1852               	xorwf	_StrippedKey,w,c
  1400  00138E  B4D8               	btfsc	status,2,c
  1401  001390  D006               	goto	l4304
  1402                           
  1403                           ; BSR set to: 0
  1404  001392  0E08               	movlw	8
  1405  001394  1852               	xorwf	_StrippedKey,w,c
  1406  001396  B4D8               	btfsc	status,2,c
  1407  001398  D002               	goto	l4304
  1408  00139A  D116               	goto	l4406
  1409                           
  1410                           ; BSR set to: 0
  1411  00139C  D000               	goto	l4304
  1412  00139E                     l4304:
  1413                           
  1414                           ;SPItest-MASTER.c: 92: {
  1415                           ;SPItest-MASTER.c: 93: if (StrippedKey == 0x02)
  1416  00139E  0E02               	movlw	2
  1417  0013A0  1852               	xorwf	_StrippedKey,w,c
  1418  0013A2  A4D8               	btfss	status,2,c
  1419  0013A4  D032               	goto	l4324
  1420                           
  1421                           ;SPItest-MASTER.c: 94: {
  1422                           ;SPItest-MASTER.c: 95: MSendSPI(StrippedKey, 2);
  1423  0013A6  0E02               	movlw	2
  1424  0013A8  0100               	movlb	0	; () banked
  1425  0013AA  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1426  0013AC  5052               	movf	_StrippedKey,w,c
  1427  0013AE  ECDF  F016         	call	_MSendSPI
  1428                           
  1429                           ;SPItest-MASTER.c: 96: MReceiveStrSPI(DoubleSPIM, 2);
  1430  0013B2  0EDA               	movlw	low _DoubleSPIM
  1431  0013B4  0100               	movlb	0	; () banked
  1432  0013B6  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1433  0013B8  0E00               	movlw	high _DoubleSPIM
  1434  0013BA  0100               	movlb	0	; () banked
  1435  0013BC  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1436  0013BE  0E02               	movlw	2
  1437  0013C0  0100               	movlb	0	; () banked
  1438  0013C2  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1439  0013C4  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1440                           
  1441                           ;SPItest-MASTER.c: 97: CurrentAngle = SPIReassembleDouble();
  1442  0013C8  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1443  0013CC  C080  F0B5         	movff	?_SPIReassembleDouble,_CurrentAngle
  1444  0013D0  C081  F0B6         	movff	?_SPIReassembleDouble+1,_CurrentAngle+1
  1445  0013D4  C082  F0B7         	movff	?_SPIReassembleDouble+2,_CurrentAngle+2
  1446                           
  1447                           ;SPItest-MASTER.c: 98: for (x = 0; x != 4; x++)
  1448  0013D8  0E00               	movlw	0
  1449  0013DA  0100               	movlb	0	; () banked
  1450  0013DC  6FB4               	movwf	main@x& (0+255),b
  1451  0013DE                     l4314:
  1452                           
  1453                           ; BSR set to: 0
  1454  0013DE  0E04               	movlw	4
  1455  0013E0  0100               	movlb	0	; () banked
  1456  0013E2  19B4               	xorwf	main@x& (0+255),w,b
  1457  0013E4  B4D8               	btfsc	status,2,c
  1458  0013E6  D0E9               	goto	l4404
  1459  0013E8  D001               	goto	l4318
  1460                           
  1461                           ; BSR set to: 0
  1462  0013EA  D0E7               	goto	l4404
  1463  0013EC                     l4318:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;SPItest-MASTER.c: 99: DoubleSPIM[x] = '\0';
  1467  0013EC  0100               	movlb	0	; () banked
  1468  0013EE  51B4               	movf	main@x& (0+255),w,b
  1469  0013F0  0D01               	mullw	1
  1470  0013F2  0EDA               	movlw	low _DoubleSPIM
  1471  0013F4  24F3               	addwf	prodl,w,c
  1472  0013F6  6ED9               	movwf	fsr2l,c
  1473  0013F8  0E00               	movlw	high _DoubleSPIM
  1474  0013FA  20F4               	addwfc	prodh,w,c
  1475  0013FC  6EDA               	movwf	fsr2h,c
  1476  0013FE  0E00               	movlw	0
  1477  001400  6EDF               	movwf	indf2,c
  1478                           
  1479                           ; BSR set to: 0
  1480  001402  0100               	movlb	0	; () banked
  1481  001404  2BB4               	incf	main@x& (0+255),f,b
  1482  001406  D7EB               	goto	l4314
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;SPItest-MASTER.c: 100: }
  1486                           
  1487                           ; BSR set to: 0
  1488  001408  D0D8               	goto	l4404
  1489  00140A                     l4324:
  1490                           
  1491                           ;SPItest-MASTER.c: 101: else if (StrippedKey == 0x03)
  1492  00140A  0E03               	movlw	3
  1493  00140C  1852               	xorwf	_StrippedKey,w,c
  1494  00140E  A4D8               	btfss	status,2,c
  1495  001410  D032               	goto	l4344
  1496                           
  1497                           ;SPItest-MASTER.c: 102: {
  1498                           ;SPItest-MASTER.c: 103: MSendSPI(StrippedKey, 2);
  1499  001412  0E02               	movlw	2
  1500  001414  0100               	movlb	0	; () banked
  1501  001416  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1502  001418  5052               	movf	_StrippedKey,w,c
  1503  00141A  ECDF  F016         	call	_MSendSPI
  1504                           
  1505                           ;SPItest-MASTER.c: 104: MReceiveStrSPI(DoubleSPIM, 2);
  1506  00141E  0EDA               	movlw	low _DoubleSPIM
  1507  001420  0100               	movlb	0	; () banked
  1508  001422  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1509  001424  0E00               	movlw	high _DoubleSPIM
  1510  001426  0100               	movlb	0	; () banked
  1511  001428  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1512  00142A  0E02               	movlw	2
  1513  00142C  0100               	movlb	0	; () banked
  1514  00142E  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1515  001430  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1516                           
  1517                           ;SPItest-MASTER.c: 105: CurrentVelocity = SPIReassembleDouble();
  1518  001434  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1519  001438  C080  F0B8         	movff	?_SPIReassembleDouble,_CurrentVelocity
  1520  00143C  C081  F0B9         	movff	?_SPIReassembleDouble+1,_CurrentVelocity+1
  1521  001440  C082  F0BA         	movff	?_SPIReassembleDouble+2,_CurrentVelocity+2
  1522                           
  1523                           ;SPItest-MASTER.c: 106: for (x = 0; x != 4; x++)
  1524  001444  0E00               	movlw	0
  1525  001446  0100               	movlb	0	; () banked
  1526  001448  6FB4               	movwf	main@x& (0+255),b
  1527  00144A                     l4334:
  1528                           
  1529                           ; BSR set to: 0
  1530  00144A  0E04               	movlw	4
  1531  00144C  0100               	movlb	0	; () banked
  1532  00144E  19B4               	xorwf	main@x& (0+255),w,b
  1533  001450  B4D8               	btfsc	status,2,c
  1534  001452  D0B3               	goto	l4404
  1535  001454  D001               	goto	l4338
  1536                           
  1537                           ; BSR set to: 0
  1538  001456  D0B1               	goto	l4404
  1539  001458                     l4338:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;SPItest-MASTER.c: 107: DoubleSPIM[x] = '\0';
  1543  001458  0100               	movlb	0	; () banked
  1544  00145A  51B4               	movf	main@x& (0+255),w,b
  1545  00145C  0D01               	mullw	1
  1546  00145E  0EDA               	movlw	low _DoubleSPIM
  1547  001460  24F3               	addwf	prodl,w,c
  1548  001462  6ED9               	movwf	fsr2l,c
  1549  001464  0E00               	movlw	high _DoubleSPIM
  1550  001466  20F4               	addwfc	prodh,w,c
  1551  001468  6EDA               	movwf	fsr2h,c
  1552  00146A  0E00               	movlw	0
  1553  00146C  6EDF               	movwf	indf2,c
  1554                           
  1555                           ; BSR set to: 0
  1556  00146E  0100               	movlb	0	; () banked
  1557  001470  2BB4               	incf	main@x& (0+255),f,b
  1558  001472  D7EB               	goto	l4334
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;SPItest-MASTER.c: 108: }
  1562                           
  1563                           ; BSR set to: 0
  1564  001474  D0A2               	goto	l4404
  1565  001476                     l4344:
  1566                           
  1567                           ;SPItest-MASTER.c: 109: else if (StrippedKey == 0x04)
  1568  001476  0E04               	movlw	4
  1569  001478  1852               	xorwf	_StrippedKey,w,c
  1570  00147A  A4D8               	btfss	status,2,c
  1571  00147C  D032               	goto	l4364
  1572                           
  1573                           ;SPItest-MASTER.c: 110: {
  1574                           ;SPItest-MASTER.c: 111: MSendSPI(StrippedKey, 2);
  1575  00147E  0E02               	movlw	2
  1576  001480  0100               	movlb	0	; () banked
  1577  001482  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1578  001484  5052               	movf	_StrippedKey,w,c
  1579  001486  ECDF  F016         	call	_MSendSPI
  1580                           
  1581                           ;SPItest-MASTER.c: 112: MReceiveStrSPI(DoubleSPIM, 2);
  1582  00148A  0EDA               	movlw	low _DoubleSPIM
  1583  00148C  0100               	movlb	0	; () banked
  1584  00148E  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1585  001490  0E00               	movlw	high _DoubleSPIM
  1586  001492  0100               	movlb	0	; () banked
  1587  001494  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1588  001496  0E02               	movlw	2
  1589  001498  0100               	movlb	0	; () banked
  1590  00149A  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1591  00149C  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1592                           
  1593                           ;SPItest-MASTER.c: 113: Kp = SPIReassembleDouble();
  1594  0014A0  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1595  0014A4  C080  F045         	movff	?_SPIReassembleDouble,_Kp
  1596  0014A8  C081  F046         	movff	?_SPIReassembleDouble+1,_Kp+1
  1597  0014AC  C082  F047         	movff	?_SPIReassembleDouble+2,_Kp+2
  1598                           
  1599                           ;SPItest-MASTER.c: 114: for (x = 0; x != 4; x++)
  1600  0014B0  0E00               	movlw	0
  1601  0014B2  0100               	movlb	0	; () banked
  1602  0014B4  6FB4               	movwf	main@x& (0+255),b
  1603  0014B6                     l4354:
  1604                           
  1605                           ; BSR set to: 0
  1606  0014B6  0E04               	movlw	4
  1607  0014B8  0100               	movlb	0	; () banked
  1608  0014BA  19B4               	xorwf	main@x& (0+255),w,b
  1609  0014BC  B4D8               	btfsc	status,2,c
  1610  0014BE  D07D               	goto	l4404
  1611  0014C0  D001               	goto	l4358
  1612                           
  1613                           ; BSR set to: 0
  1614  0014C2  D07B               	goto	l4404
  1615  0014C4                     l4358:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;SPItest-MASTER.c: 115: DoubleSPIM[x] = '\0';
  1619  0014C4  0100               	movlb	0	; () banked
  1620  0014C6  51B4               	movf	main@x& (0+255),w,b
  1621  0014C8  0D01               	mullw	1
  1622  0014CA  0EDA               	movlw	low _DoubleSPIM
  1623  0014CC  24F3               	addwf	prodl,w,c
  1624  0014CE  6ED9               	movwf	fsr2l,c
  1625  0014D0  0E00               	movlw	high _DoubleSPIM
  1626  0014D2  20F4               	addwfc	prodh,w,c
  1627  0014D4  6EDA               	movwf	fsr2h,c
  1628  0014D6  0E00               	movlw	0
  1629  0014D8  6EDF               	movwf	indf2,c
  1630                           
  1631                           ; BSR set to: 0
  1632  0014DA  0100               	movlb	0	; () banked
  1633  0014DC  2BB4               	incf	main@x& (0+255),f,b
  1634  0014DE  D7EB               	goto	l4354
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;SPItest-MASTER.c: 116: }
  1638                           
  1639                           ; BSR set to: 0
  1640  0014E0  D06C               	goto	l4404
  1641  0014E2                     l4364:
  1642                           
  1643                           ;SPItest-MASTER.c: 117: else if (StrippedKey == 0x06)
  1644  0014E2  0E06               	movlw	6
  1645  0014E4  1852               	xorwf	_StrippedKey,w,c
  1646  0014E6  A4D8               	btfss	status,2,c
  1647  0014E8  D032               	goto	l4384
  1648                           
  1649                           ;SPItest-MASTER.c: 118: {
  1650                           ;SPItest-MASTER.c: 119: MSendSPI(StrippedKey, 2);
  1651  0014EA  0E02               	movlw	2
  1652  0014EC  0100               	movlb	0	; () banked
  1653  0014EE  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1654  0014F0  5052               	movf	_StrippedKey,w,c
  1655  0014F2  ECDF  F016         	call	_MSendSPI
  1656                           
  1657                           ;SPItest-MASTER.c: 120: MReceiveStrSPI(DoubleSPIM, 2);
  1658  0014F6  0EDA               	movlw	low _DoubleSPIM
  1659  0014F8  0100               	movlb	0	; () banked
  1660  0014FA  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1661  0014FC  0E00               	movlw	high _DoubleSPIM
  1662  0014FE  0100               	movlb	0	; () banked
  1663  001500  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1664  001502  0E02               	movlw	2
  1665  001504  0100               	movlb	0	; () banked
  1666  001506  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1667  001508  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1668                           
  1669                           ;SPItest-MASTER.c: 121: Ki = SPIReassembleDouble();
  1670  00150C  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1671  001510  C080  F042         	movff	?_SPIReassembleDouble,_Ki
  1672  001514  C081  F043         	movff	?_SPIReassembleDouble+1,_Ki+1
  1673  001518  C082  F044         	movff	?_SPIReassembleDouble+2,_Ki+2
  1674                           
  1675                           ;SPItest-MASTER.c: 122: for (x = 0; x != 4; x++)
  1676  00151C  0E00               	movlw	0
  1677  00151E  0100               	movlb	0	; () banked
  1678  001520  6FB4               	movwf	main@x& (0+255),b
  1679  001522                     l4374:
  1680                           
  1681                           ; BSR set to: 0
  1682  001522  0E04               	movlw	4
  1683  001524  0100               	movlb	0	; () banked
  1684  001526  19B4               	xorwf	main@x& (0+255),w,b
  1685  001528  B4D8               	btfsc	status,2,c
  1686  00152A  D047               	goto	l4404
  1687  00152C  D001               	goto	l4378
  1688                           
  1689                           ; BSR set to: 0
  1690  00152E  D045               	goto	l4404
  1691  001530                     l4378:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;SPItest-MASTER.c: 123: DoubleSPIM[x] = '\0';
  1695  001530  0100               	movlb	0	; () banked
  1696  001532  51B4               	movf	main@x& (0+255),w,b
  1697  001534  0D01               	mullw	1
  1698  001536  0EDA               	movlw	low _DoubleSPIM
  1699  001538  24F3               	addwf	prodl,w,c
  1700  00153A  6ED9               	movwf	fsr2l,c
  1701  00153C  0E00               	movlw	high _DoubleSPIM
  1702  00153E  20F4               	addwfc	prodh,w,c
  1703  001540  6EDA               	movwf	fsr2h,c
  1704  001542  0E00               	movlw	0
  1705  001544  6EDF               	movwf	indf2,c
  1706                           
  1707                           ; BSR set to: 0
  1708  001546  0100               	movlb	0	; () banked
  1709  001548  2BB4               	incf	main@x& (0+255),f,b
  1710  00154A  D7EB               	goto	l4374
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;SPItest-MASTER.c: 124: }
  1714                           
  1715                           ; BSR set to: 0
  1716  00154C  D036               	goto	l4404
  1717  00154E                     l4384:
  1718                           
  1719                           ;SPItest-MASTER.c: 125: else if (StrippedKey == 0x08)
  1720  00154E  0E08               	movlw	8
  1721  001550  1852               	xorwf	_StrippedKey,w,c
  1722  001552  A4D8               	btfss	status,2,c
  1723  001554  D032               	goto	l4404
  1724                           
  1725                           ;SPItest-MASTER.c: 126: {
  1726                           ;SPItest-MASTER.c: 127: MSendSPI(StrippedKey, 2);
  1727  001556  0E02               	movlw	2
  1728  001558  0100               	movlb	0	; () banked
  1729  00155A  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1730  00155C  5052               	movf	_StrippedKey,w,c
  1731  00155E  ECDF  F016         	call	_MSendSPI
  1732                           
  1733                           ;SPItest-MASTER.c: 128: MReceiveStrSPI(DoubleSPIM, 2);
  1734  001562  0EDA               	movlw	low _DoubleSPIM
  1735  001564  0100               	movlb	0	; () banked
  1736  001566  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1737  001568  0E00               	movlw	high _DoubleSPIM
  1738  00156A  0100               	movlb	0	; () banked
  1739  00156C  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1740  00156E  0E02               	movlw	2
  1741  001570  0100               	movlb	0	; () banked
  1742  001572  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1743  001574  EC57  F014         	call	_MReceiveStrSPI	;wreg free
  1744                           
  1745                           ;SPItest-MASTER.c: 129: Kd = SPIReassembleDouble();
  1746  001578  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  1747  00157C  C080  F03F         	movff	?_SPIReassembleDouble,_Kd
  1748  001580  C081  F040         	movff	?_SPIReassembleDouble+1,_Kd+1
  1749  001584  C082  F041         	movff	?_SPIReassembleDouble+2,_Kd+2
  1750                           
  1751                           ;SPItest-MASTER.c: 130: for (x = 0; x != 4; x++)
  1752  001588  0E00               	movlw	0
  1753  00158A  0100               	movlb	0	; () banked
  1754  00158C  6FB4               	movwf	main@x& (0+255),b
  1755  00158E                     l4394:
  1756                           
  1757                           ; BSR set to: 0
  1758  00158E  0E04               	movlw	4
  1759  001590  0100               	movlb	0	; () banked
  1760  001592  19B4               	xorwf	main@x& (0+255),w,b
  1761  001594  B4D8               	btfsc	status,2,c
  1762  001596  D011               	goto	l4404
  1763  001598  D001               	goto	l4398
  1764                           
  1765                           ; BSR set to: 0
  1766  00159A  D00F               	goto	l4404
  1767  00159C                     l4398:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;SPItest-MASTER.c: 131: DoubleSPIM[x] = '\0';
  1771  00159C  0100               	movlb	0	; () banked
  1772  00159E  51B4               	movf	main@x& (0+255),w,b
  1773  0015A0  0D01               	mullw	1
  1774  0015A2  0EDA               	movlw	low _DoubleSPIM
  1775  0015A4  24F3               	addwf	prodl,w,c
  1776  0015A6  6ED9               	movwf	fsr2l,c
  1777  0015A8  0E00               	movlw	high _DoubleSPIM
  1778  0015AA  20F4               	addwfc	prodh,w,c
  1779  0015AC  6EDA               	movwf	fsr2h,c
  1780  0015AE  0E00               	movlw	0
  1781  0015B0  6EDF               	movwf	indf2,c
  1782                           
  1783                           ; BSR set to: 0
  1784  0015B2  0100               	movlb	0	; () banked
  1785  0015B4  2BB4               	incf	main@x& (0+255),f,b
  1786  0015B6  D7EB               	goto	l4394
  1787                           
  1788                           ; BSR set to: 0
  1789                           
  1790                           ; BSR set to: 0
  1791                           
  1792                           ; BSR set to: 0
  1793                           
  1794                           ; BSR set to: 0
  1795                           
  1796                           ; BSR set to: 0
  1797                           
  1798                           ; BSR set to: 0
  1799  0015B8  D000               	goto	l4404
  1800  0015BA                     l4404:
  1801                           
  1802                           ;SPItest-MASTER.c: 132: }
  1803                           ;SPItest-MASTER.c: 133: }
  1804                           ;SPItest-MASTER.c: 134: while (!checksum());
  1805  0015BA  EC3C  F015         	call	_checksum	;wreg free
  1806  0015BE  0900               	iorlw	0
  1807  0015C0  A4D8               	btfss	status,2,c
  1808  0015C2  D556               	goto	l4144
  1809  0015C4  D6EC               	goto	l4304
  1810                           
  1811                           ;SPItest-MASTER.c: 135: }
  1812  0015C6  D554               	goto	l4144
  1813  0015C8                     l4406:
  1814                           
  1815                           ;SPItest-MASTER.c: 136: else if ((StrippedKey == 0x01) || (StrippedKey == 0x05) || (Stri
      +                          ppedKey == 0x07) || (StrippedKey == 0x09))
  1816  0015C8  0452               	decf	_StrippedKey,w,c
  1817  0015CA  B4D8               	btfsc	status,2,c
  1818  0015CC  D00C               	goto	l4414
  1819  0015CE  0E05               	movlw	5
  1820  0015D0  1852               	xorwf	_StrippedKey,w,c
  1821  0015D2  B4D8               	btfsc	status,2,c
  1822  0015D4  D008               	goto	l4414
  1823  0015D6  0E07               	movlw	7
  1824  0015D8  1852               	xorwf	_StrippedKey,w,c
  1825  0015DA  B4D8               	btfsc	status,2,c
  1826  0015DC  D004               	goto	l4414
  1827  0015DE  0E09               	movlw	9
  1828  0015E0  1852               	xorwf	_StrippedKey,w,c
  1829  0015E2  A4D8               	btfss	status,2,c
  1830  0015E4  D545               	goto	l4144
  1831  0015E6                     l4414:
  1832                           
  1833                           ;SPItest-MASTER.c: 137: {
  1834                           ;SPItest-MASTER.c: 138: MSendSPI(StrippedKey, 2);
  1835  0015E6  0E02               	movlw	2
  1836  0015E8  0100               	movlb	0	; () banked
  1837  0015EA  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1838  0015EC  5052               	movf	_StrippedKey,w,c
  1839  0015EE  ECDF  F016         	call	_MSendSPI
  1840                           
  1841                           ;SPItest-MASTER.c: 139: SPIDisassembleDouble(StrippedValue);
  1842  0015F2  C04B  F082         	movff	_StrippedValue,SPIDisassembleDouble@dub
  1843  0015F6  C04C  F083         	movff	_StrippedValue+1,SPIDisassembleDouble@dub+1
  1844  0015FA  C04D  F084         	movff	_StrippedValue+2,SPIDisassembleDouble@dub+2
  1845  0015FE  EC30  F017         	call	_SPIDisassembleDouble	;wreg free
  1846                           
  1847                           ;SPItest-MASTER.c: 140: PORTBbits.RB4 = 0;
  1848  001602  9881               	bcf	3969,4,c	;volatile
  1849                           
  1850                           ;SPItest-MASTER.c: 141: while (PORTBbits.RB2);
  1851  001604  D000               	goto	l311
  1852  001606                     l311:
  1853  001606  B481               	btfsc	3969,2,c	;volatile
  1854  001608  D7FE               	goto	l311
  1855                           
  1856                           ;SPItest-MASTER.c: 142: Delay10TCYx(50);
  1857  00160A  0E32               	movlw	50
  1858  00160C  EC13  F018         	call	_Delay10TCYx
  1859                           
  1860                           ;SPItest-MASTER.c: 143: for (x = 0; x != 4; x++)
  1861  001610  0E00               	movlw	0
  1862  001612  0100               	movlb	0	; () banked
  1863  001614  6FB4               	movwf	main@x& (0+255),b
  1864  001616                     l4424:
  1865                           
  1866                           ; BSR set to: 0
  1867  001616  0E04               	movlw	4
  1868  001618  0100               	movlb	0	; () banked
  1869  00161A  19B4               	xorwf	main@x& (0+255),w,b
  1870  00161C  B4D8               	btfsc	status,2,c
  1871  00161E  D014               	goto	l315
  1872  001620  D001               	goto	l4428
  1873                           
  1874                           ; BSR set to: 0
  1875  001622  D012               	goto	l315
  1876  001624                     l4428:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;SPItest-MASTER.c: 144: MSendSPI(DoubleSPIM[x], 2);
  1880  001624  0E02               	movlw	2
  1881  001626  0100               	movlb	0	; () banked
  1882  001628  6F81               	movwf	MSendSPI@Slave& (0+255),b
  1883  00162A  0100               	movlb	0	; () banked
  1884  00162C  51B4               	movf	main@x& (0+255),w,b
  1885  00162E  0D01               	mullw	1
  1886  001630  0EDA               	movlw	low _DoubleSPIM
  1887  001632  24F3               	addwf	prodl,w,c
  1888  001634  6ED9               	movwf	fsr2l,c
  1889  001636  0E00               	movlw	high _DoubleSPIM
  1890  001638  20F4               	addwfc	prodh,w,c
  1891  00163A  6EDA               	movwf	fsr2h,c
  1892  00163C  50DF               	movf	indf2,w,c
  1893  00163E  ECDF  F016         	call	_MSendSPI
  1894  001642  0100               	movlb	0	; () banked
  1895  001644  2BB4               	incf	main@x& (0+255),f,b
  1896  001646  D7E7               	goto	l4424
  1897  001648                     l315:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;SPItest-MASTER.c: 145: PORTBbits.RB4 = 1;
  1901  001648  8881               	bsf	3969,4,c	;volatile
  1902                           
  1903                           ; BSR set to: 0
  1904                           
  1905                           ; BSR set to: 0
  1906                           
  1907                           ; BSR set to: 0
  1908                           
  1909                           ; BSR set to: 0
  1910                           
  1911                           ; BSR set to: 0
  1912                           
  1913                           ; BSR set to: 0
  1914  00164A  D512               	goto	l4144
  1915                           
  1916                           ; BSR set to: 0
  1917                           
  1918                           ; BSR set to: 0
  1919  00164C  EF0C  F000         	goto	start
  1920  001650                     __end_of_main:
  1921                           	opt stack 0
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           prodh	equ	0xFF4
  1927                           prodl	equ	0xFF3
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           indf2	equ	0xFDF
  1931                           fsr2h	equ	0xFDA
  1932                           fsr2l	equ	0xFD9
  1933                           status	equ	0xFD8
  1934                           
  1935 ;; *************** function _initialize *****************
  1936 ;; Defined at:
  1937 ;;		line 160 in file "SPItest-MASTER.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;		None               void
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    9
  1958 ;; This function calls:
  1959 ;;		_SPIInitM
  1960 ;;		_SerInit
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text1
  1967  00304C                     __ptext1:
  1968                           	opt stack 0
  1969  00304C                     _initialize:
  1970                           	opt stack 21
  1971                           
  1972                           ;SPItest-MASTER.c: 162: SPIInitM();
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;incstack = 0
  1976  00304C  ECFB  F017         	call	_SPIInitM	;wreg free
  1977                           
  1978                           ;SPItest-MASTER.c: 163: SerInit();
  1979  003050  ECC4  F017         	call	_SerInit	;wreg free
  1980                           
  1981                           ;SPItest-MASTER.c: 164: INTCONbits.GIE = 1;
  1982  003054  8EF2               	bsf	intcon,7,c	;volatile
  1983                           
  1984                           ;SPItest-MASTER.c: 165: INTCONbits.PEIE = 1;
  1985  003056  8CF2               	bsf	intcon,6,c	;volatile
  1986  003058  0012               	return		;funcret
  1987  00305A                     __end_of_initialize:
  1988                           	opt stack 0
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           prodh	equ	0xFF4
  1994                           prodl	equ	0xFF3
  1995                           intcon	equ	0xFF2
  1996                           postinc0	equ	0xFEE
  1997                           wreg	equ	0xFE8
  1998                           indf2	equ	0xFDF
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _SerInit *****************
  2004 ;; Defined at:
  2005 ;;		line 19 in file "SerComm.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;		None               void
  2012 ;; Registers used:
  2013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    8
  2026 ;; This function calls:
  2027 ;;		_SerTxStr
  2028 ;; This function is called by:
  2029 ;;		_initialize
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text2
  2034  002F88                     __ptext2:
  2035                           	opt stack 0
  2036  002F88                     _SerInit:
  2037                           	opt stack 21
  2038                           
  2039                           ;SerComm.c: 26: TXSTA1 = 0x24;
  2040                           
  2041                           ;incstack = 0
  2042  002F88  0E24               	movlw	36
  2043  002F8A  6EAC               	movwf	4012,c	;volatile
  2044                           
  2045                           ;SerComm.c: 27: RCSTA1 = 0x90;
  2046  002F8C  0E90               	movlw	144
  2047  002F8E  6EAB               	movwf	4011,c	;volatile
  2048                           
  2049                           ;SerComm.c: 28: BAUDCON = 0x00;
  2050  002F90  0E00               	movlw	0
  2051  002F92  6EB8               	movwf	4024,c	;volatile
  2052                           
  2053                           ;SerComm.c: 29: SPBRG = 21;
  2054  002F94  0E15               	movlw	21
  2055  002F96  6EAF               	movwf	4015,c	;volatile
  2056                           
  2057                           ;SerComm.c: 31: RCONbits.IPEN = 1;
  2058  002F98  8ED0               	bsf	4048,7,c	;volatile
  2059                           
  2060                           ;SerComm.c: 32: IPR1bits.RCIP = 1;
  2061  002F9A  8A9F               	bsf	3999,5,c	;volatile
  2062                           
  2063                           ;SerComm.c: 33: PIE1bits.RC1IE = 1;
  2064  002F9C  8A9D               	bsf	3997,5,c	;volatile
  2065                           
  2066                           ;SerComm.c: 35: SerTxStr("Welcome to the world of tomorrow!!!");
  2067  002F9E  0E01               	movlw	low STR_1
  2068  002FA0  0100               	movlb	0	; () banked
  2069  002FA2  6F81               	movwf	SerTxStr@string& (0+255),b
  2070  002FA4  0E10               	movlw	high STR_1
  2071  002FA6  0100               	movlb	0	; () banked
  2072  002FA8  6F82               	movwf	(SerTxStr@string+1)& (0+255),b
  2073  002FAA  EC59  F016         	call	_SerTxStr	;wreg free
  2074  002FAE  0012               	return		;funcret
  2075  002FB0                     __end_of_SerInit:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           prodh	equ	0xFF4
  2082                           prodl	equ	0xFF3
  2083                           intcon	equ	0xFF2
  2084                           postinc0	equ	0xFEE
  2085                           wreg	equ	0xFE8
  2086                           indf2	equ	0xFDF
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _SerTxStr *****************
  2092 ;; Defined at:
  2093 ;;		line 50 in file "SerComm.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  string          2    1[BANK0 ] PTR unsigned char 
  2096 ;;		 -> STR_28(4), STR_13(6), STR_12(4), STR_3(11), 
  2097 ;;		 -> value(10), STR_2(6), key(5), STR_1(36), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;		None               void
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;Total ram usage:        2 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    7
  2116 ;; This function calls:
  2117 ;;		_SerTx
  2118 ;; This function is called by:
  2119 ;;		_SerInit
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text3
  2124  002CB2                     __ptext3:
  2125                           	opt stack 0
  2126  002CB2                     _SerTxStr:
  2127                           	opt stack 21
  2128                           
  2129                           ;SerComm.c: 52: while (*string)
  2130                           
  2131                           ;incstack = 0
  2132  002CB2  D017               	goto	l3844
  2133  002CB4                     l3840:
  2134                           
  2135                           ;SerComm.c: 53: SerTx(*string++);
  2136  002CB4  C081  FFF6         	movff	SerTxStr@string,tblptrl
  2137  002CB8  C082  FFF7         	movff	SerTxStr@string+1,tblptrh
  2138  002CBC  0E00               	movlw	low (__smallconst shr (0+16))
  2139  002CBE  6EF8               	movwf	tblptru,c
  2140  002CC0  0E0F               	movlw	(high __ramtop+-1)
  2141  002CC2  64F7               	cpfsgt	tblptrh,c
  2142  002CC4  D003               	bra	u4827
  2143  002CC6  0008               	tblrd		*
  2144  002CC8  50F5               	movf	tablat,w,c
  2145  002CCA  D005               	bra	u4820
  2146  002CCC                     u4827:
  2147  002CCC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2148  002CD0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2149  002CD4  50EF               	movf	indf0,w,c
  2150  002CD6                     u4820:
  2151  002CD6  EC1E  F018         	call	_SerTx
  2152  002CDA  0100               	movlb	0	; () banked
  2153  002CDC  4B81               	infsnz	SerTxStr@string& (0+255),f,b
  2154  002CDE  2B82               	incf	(SerTxStr@string+1)& (0+255),f,b
  2155  002CE0  D000               	goto	l3844
  2156  002CE2                     l3844:
  2157  002CE2  C081  FFF6         	movff	SerTxStr@string,tblptrl
  2158  002CE6  C082  FFF7         	movff	SerTxStr@string+1,tblptrh
  2159  002CEA  0E00               	movlw	low (__smallconst shr (0+16))
  2160  002CEC  6EF8               	movwf	tblptru,c
  2161  002CEE  0E0F               	movlw	(high __ramtop+-1)
  2162  002CF0  64F7               	cpfsgt	tblptrh,c
  2163  002CF2  D003               	bra	u4837
  2164  002CF4  0008               	tblrd		*
  2165  002CF6  50F5               	movf	tablat,w,c
  2166  002CF8  D005               	bra	u4830
  2167  002CFA                     u4837:
  2168  002CFA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2169  002CFE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2170  002D02  50EF               	movf	indf0,w,c
  2171  002D04                     u4830:
  2172  002D04  0900               	iorlw	0
  2173  002D06  A4D8               	btfss	status,2,c
  2174  002D08  D7D5               	goto	l3840
  2175  002D0A  0012               	return		;funcret
  2176  002D0C                     __end_of_SerTxStr:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           intcon	equ	0xFF2
  2185                           indf0	equ	0xFEF
  2186                           postinc0	equ	0xFEE
  2187                           fsr0h	equ	0xFEA
  2188                           fsr0l	equ	0xFE9
  2189                           wreg	equ	0xFE8
  2190                           indf2	equ	0xFDF
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _SPIInitM *****************
  2196 ;; Defined at:
  2197 ;;		line 9 in file "SPIMaster.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    7
  2218 ;; This function calls:
  2219 ;;		_OpenSPI
  2220 ;; This function is called by:
  2221 ;;		_initialize
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text4
  2226  002FF6                     __ptext4:
  2227                           	opt stack 0
  2228  002FF6                     _SPIInitM:
  2229                           	opt stack 22
  2230                           
  2231                           ;SPIMaster.c: 11: OpenSPI(0b00000001, 0b00000000, 0b00000000);
  2232                           
  2233                           ;incstack = 0
  2234  002FF6  0E00               	movlw	0
  2235  002FF8  0100               	movlb	0	; () banked
  2236  002FFA  6F80               	movwf	OpenSPI@bus_mode& (0+255),b
  2237  002FFC  0E00               	movlw	0
  2238  002FFE  0100               	movlb	0	; () banked
  2239  003000  6F81               	movwf	OpenSPI@smp_phase& (0+255),b
  2240  003002  0E01               	movlw	1
  2241  003004  EC27  F016         	call	_OpenSPI
  2242                           
  2243                           ;SPIMaster.c: 12: TRISBbits.RB1 = 1;
  2244  003008  8293               	bsf	3987,1,c	;volatile
  2245                           
  2246                           ;SPIMaster.c: 13: TRISBbits.RB3 = 0;
  2247  00300A  9693               	bcf	3987,3,c	;volatile
  2248                           
  2249                           ;SPIMaster.c: 14: PORTBbits.RB3 = 1;
  2250  00300C  8681               	bsf	3969,3,c	;volatile
  2251  00300E  0012               	return		;funcret
  2252  003010                     __end_of_SPIInitM:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           intcon	equ	0xFF2
  2261                           indf0	equ	0xFEF
  2262                           postinc0	equ	0xFEE
  2263                           fsr0h	equ	0xFEA
  2264                           fsr0l	equ	0xFE9
  2265                           wreg	equ	0xFE8
  2266                           indf2	equ	0xFDF
  2267                           fsr2h	equ	0xFDA
  2268                           fsr2l	equ	0xFD9
  2269                           status	equ	0xFD8
  2270                           
  2271 ;; *************** function _OpenSPI *****************
  2272 ;; Defined at:
  2273 ;;		line 14 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi_open.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  sync_mode       1    wreg     unsigned char 
  2276 ;;  bus_mode        1    0[BANK0 ] unsigned char 
  2277 ;;  smp_phase       1    1[BANK0 ] unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  sync_mode       1    2[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;		None               void
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;Total ram usage:        3 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    6
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_SPIInitM
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text5
  2304  002C4E                     __ptext5:
  2305                           	opt stack 0
  2306  002C4E                     _OpenSPI:
  2307                           	opt stack 22
  2308                           
  2309                           ;incstack = 0
  2310                           ;OpenSPI@sync_mode stored from wreg
  2311  002C4E  0100               	movlb	0	; () banked
  2312  002C50  6F82               	movwf	OpenSPI@sync_mode& (0+255),b
  2313                           
  2314                           ; BSR set to: 0
  2315  002C52  0E3F               	movlw	63
  2316  002C54  16C7               	andwf	4039,f,c	;volatile
  2317                           
  2318                           ; BSR set to: 0
  2319  002C56  0E00               	movlw	0
  2320  002C58  6EC6               	movwf	4038,c	;volatile
  2321                           
  2322                           ; BSR set to: 0
  2323  002C5A  0100               	movlb	0	; () banked
  2324  002C5C  5182               	movf	OpenSPI@sync_mode& (0+255),w,b
  2325  002C5E  12C6               	iorwf	4038,f,c	;volatile
  2326                           
  2327                           ; BSR set to: 0
  2328  002C60  0100               	movlb	0	; () banked
  2329  002C62  5181               	movf	OpenSPI@smp_phase& (0+255),w,b
  2330  002C64  12C7               	iorwf	4039,f,c	;volatile
  2331  002C66  D005               	goto	l3856
  2332  002C68                     l422:
  2333                           
  2334                           ; BSR set to: 0
  2335  002C68  8CC7               	bsf	4039,6,c	;volatile
  2336  002C6A  D016               	goto	l3860
  2337  002C6C                     l424:
  2338                           
  2339                           ; BSR set to: 0
  2340  002C6C  8CC7               	bsf	4039,6,c	;volatile
  2341  002C6E                     l425:
  2342                           
  2343                           ; BSR set to: 0
  2344  002C6E  88C6               	bsf	4038,4,c	;volatile
  2345                           
  2346                           ; BSR set to: 0
  2347                           
  2348                           ; BSR set to: 0
  2349  002C70  D013               	goto	l3860
  2350  002C72                     l3856:
  2351                           
  2352                           ; BSR set to: 0
  2353  002C72  0100               	movlb	0	; () banked
  2354  002C74  5180               	movf	OpenSPI@bus_mode& (0+255),w,b
  2355                           
  2356                           ; Switch size 1, requested type "space"
  2357                           ; Number of cases is 3, Range of values is 0 to 3
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte           10     6 (average)
  2361                           ;	Chosen strategy is simple_byte
  2362  002C76  0A00               	xorlw	0	; case 0
  2363  002C78  B4D8               	btfsc	status,2,c
  2364  002C7A  D7F6               	goto	l422
  2365  002C7C  0A02               	xorlw	2	; case 2
  2366  002C7E  B4D8               	btfsc	status,2,c
  2367  002C80  D7F5               	goto	l424
  2368  002C82  0A01               	xorlw	1	; case 3
  2369  002C84  B4D8               	btfsc	status,2,c
  2370  002C86  D7F3               	goto	l425
  2371                           
  2372                           ; BSR set to: 0
  2373  002C88  D007               	goto	l3860
  2374  002C8A                     l428:
  2375                           
  2376                           ; BSR set to: 0
  2377  002C8A  8694               	bsf	3988,3,c	;volatile
  2378  002C8C  8A92               	bsf	3986,5,c	;volatile
  2379  002C8E  D00D               	goto	l429
  2380  002C90                     l430:
  2381                           
  2382                           ; BSR set to: 0
  2383  002C90  8694               	bsf	3988,3,c	;volatile
  2384  002C92  D00B               	goto	l429
  2385  002C94                     l431:
  2386                           
  2387                           ; BSR set to: 0
  2388  002C94  9694               	bcf	3988,3,c	;volatile
  2389                           
  2390                           ; BSR set to: 0
  2391  002C96  D009               	goto	l429
  2392  002C98                     l3860:
  2393                           
  2394                           ; BSR set to: 0
  2395  002C98  0100               	movlb	0	; () banked
  2396  002C9A  5182               	movf	OpenSPI@sync_mode& (0+255),w,b
  2397                           
  2398                           ; Switch size 1, requested type "space"
  2399                           ; Number of cases is 2, Range of values is 4 to 5
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte            7     4 (average)
  2403                           ;	Chosen strategy is simple_byte
  2404  002C9C  0A04               	xorlw	4	; case 4
  2405  002C9E  B4D8               	btfsc	status,2,c
  2406  002CA0  D7F4               	goto	l428
  2407  002CA2  0A01               	xorlw	1	; case 5
  2408  002CA4  B4D8               	btfsc	status,2,c
  2409  002CA6  D7F4               	goto	l430
  2410  002CA8  D7F5               	goto	l431
  2411  002CAA                     l429:
  2412                           
  2413                           ; BSR set to: 0
  2414  002CAA  8894               	bsf	3988,4,c	;volatile
  2415  002CAC  9A94               	bcf	3988,5,c	;volatile
  2416                           
  2417                           ; BSR set to: 0
  2418  002CAE  8AC6               	bsf	4038,5,c	;volatile
  2419                           
  2420                           ; BSR set to: 0
  2421  002CB0  0012               	return		;funcret
  2422  002CB2                     __end_of_OpenSPI:
  2423                           	opt stack 0
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           prodh	equ	0xFF4
  2429                           prodl	equ	0xFF3
  2430                           intcon	equ	0xFF2
  2431                           indf0	equ	0xFEF
  2432                           postinc0	equ	0xFEE
  2433                           fsr0h	equ	0xFEA
  2434                           fsr0l	equ	0xFE9
  2435                           wreg	equ	0xFE8
  2436                           indf2	equ	0xFDF
  2437                           fsr2h	equ	0xFDA
  2438                           fsr2l	equ	0xFD9
  2439                           status	equ	0xFD8
  2440                           
  2441 ;; *************** function _checksum *****************
  2442 ;; Defined at:
  2443 ;;		line 92 in file "SPIMaster.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  y               1    5[BANK0 ] unsigned char 
  2448 ;;  sum             1    4[BANK0 ] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      unsigned char 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;Total ram usage:        6 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    6
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text6
  2473  002A78                     __ptext6:
  2474                           	opt stack 0
  2475  002A78                     _checksum:
  2476                           	opt stack 24
  2477                           
  2478                           ;SPIMaster.c: 94: unsigned char y, sum = 0;
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;incstack = 0
  2482  002A78  0E00               	movlw	0
  2483  002A7A  0100               	movlb	0	; () banked
  2484  002A7C  6F84               	movwf	checksum@sum& (0+255),b
  2485                           
  2486                           ;SPIMaster.c: 95: for (y = 0; y != 3; y++)
  2487  002A7E  0E00               	movlw	0
  2488  002A80  0100               	movlb	0	; () banked
  2489  002A82  6F85               	movwf	checksum@y& (0+255),b
  2490  002A84                     l4106:
  2491                           
  2492                           ; BSR set to: 0
  2493  002A84  0E03               	movlw	3
  2494  002A86  0100               	movlb	0	; () banked
  2495  002A88  1985               	xorwf	checksum@y& (0+255),w,b
  2496  002A8A  B4D8               	btfsc	status,2,c
  2497  002A8C  D011               	goto	l4116
  2498  002A8E  D001               	goto	l4110
  2499                           
  2500                           ; BSR set to: 0
  2501  002A90  D00F               	goto	l4116
  2502  002A92                     l4110:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;SPIMaster.c: 96: sum += DoubleSPIM[y];
  2506  002A92  0100               	movlb	0	; () banked
  2507  002A94  5185               	movf	checksum@y& (0+255),w,b
  2508  002A96  0D01               	mullw	1
  2509  002A98  0EDA               	movlw	low _DoubleSPIM
  2510  002A9A  24F3               	addwf	prodl,w,c
  2511  002A9C  6ED9               	movwf	fsr2l,c
  2512  002A9E  0E00               	movlw	high _DoubleSPIM
  2513  002AA0  20F4               	addwfc	prodh,w,c
  2514  002AA2  6EDA               	movwf	fsr2h,c
  2515  002AA4  50DF               	movf	indf2,w,c
  2516  002AA6  0100               	movlb	0	; () banked
  2517  002AA8  2784               	addwf	checksum@sum& (0+255),f,b
  2518                           
  2519                           ; BSR set to: 0
  2520  002AAA  0100               	movlb	0	; () banked
  2521  002AAC  2B85               	incf	checksum@y& (0+255),f,b
  2522  002AAE  D7EA               	goto	l4106
  2523  002AB0                     l4116:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;SPIMaster.c: 97: if ((sum - DoubleSPIM[3]) == 0)
  2527  002AB0  0100               	movlb	0	; () banked
  2528  002AB2  51DD               	movf	(_DoubleSPIM+3)& (0+255),w,b
  2529  002AB4  0100               	movlb	0	; () banked
  2530  002AB6  6F80               	movwf	??_checksum& (0+255),b
  2531  002AB8  6B81               	clrf	(??_checksum+1)& (0+255),b
  2532  002ABA  0100               	movlb	0	; () banked
  2533  002ABC  1F80               	comf	??_checksum& (0+255),f,b
  2534  002ABE  1F81               	comf	(??_checksum+1)& (0+255),f,b
  2535  002AC0  4B80               	infsnz	??_checksum& (0+255),f,b
  2536  002AC2  2B81               	incf	(??_checksum+1)& (0+255),f,b
  2537  002AC4  0100               	movlb	0	; () banked
  2538  002AC6  5184               	movf	checksum@sum& (0+255),w,b
  2539  002AC8  0100               	movlb	0	; () banked
  2540  002ACA  6F82               	movwf	(??_checksum+2)& (0+255),b
  2541  002ACC  6B83               	clrf	(??_checksum+3)& (0+255),b
  2542  002ACE  0100               	movlb	0	; () banked
  2543  002AD0  5180               	movf	??_checksum& (0+255),w,b
  2544  002AD2  0100               	movlb	0	; () banked
  2545  002AD4  2782               	addwf	(??_checksum+2)& (0+255),f,b
  2546  002AD6  0100               	movlb	0	; () banked
  2547  002AD8  5181               	movf	(??_checksum+1)& (0+255),w,b
  2548  002ADA  0100               	movlb	0	; () banked
  2549  002ADC  2383               	addwfc	(??_checksum+3)& (0+255),f,b
  2550  002ADE  0100               	movlb	0	; () banked
  2551  002AE0  5182               	movf	(??_checksum+2)& (0+255),w,b
  2552  002AE2  0100               	movlb	0	; () banked
  2553  002AE4  1183               	iorwf	(??_checksum+3)& (0+255),w,b
  2554  002AE6  A4D8               	btfss	status,2,c
  2555  002AE8  D002               	goto	l4124
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;SPIMaster.c: 98: return 1;
  2559  002AEA  0E01               	movlw	1
  2560                           
  2561                           ; BSR set to: 0
  2562                           
  2563                           ; BSR set to: 0
  2564  002AEC  D002               	goto	l397
  2565  002AEE                     l4124:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;SPIMaster.c: 99: else
  2569                           ;SPIMaster.c: 100: return 0;
  2570  002AEE  0E00               	movlw	0
  2571                           
  2572                           ; BSR set to: 0
  2573  002AF0  D000               	goto	l397
  2574  002AF2                     l397:
  2575                           
  2576                           ; BSR set to: 0
  2577  002AF2  0012               	return		;funcret
  2578  002AF4                     __end_of_checksum:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           indf0	equ	0xFEF
  2588                           postinc0	equ	0xFEE
  2589                           fsr0h	equ	0xFEA
  2590                           fsr0l	equ	0xFE9
  2591                           wreg	equ	0xFE8
  2592                           indf2	equ	0xFDF
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _SPIDisassembleDouble *****************
  2598 ;; Defined at:
  2599 ;;		line 103 in file "SPIMaster.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  dub             3    2[BANK0 ] unsigned char 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;		None               void
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:        3 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    7
  2620 ;; This function calls:
  2621 ;;		_MGenerateChecksum
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text7
  2628  002E60                     __ptext7:
  2629                           	opt stack 0
  2630  002E60                     _SPIDisassembleDouble:
  2631                           	opt stack 23
  2632                           
  2633                           ;SPIMaster.c: 105: DoublePtr = (unsigned char*) &dub;
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;incstack = 0
  2637  002E60  0E82               	movlw	low SPIDisassembleDouble@dub
  2638  002E62  6E4E               	movwf	_DoublePtr,c
  2639  002E64  0E00               	movlw	high SPIDisassembleDouble@dub
  2640  002E66  6E4F               	movwf	_DoublePtr+1,c
  2641                           
  2642                           ;SPIMaster.c: 106: DoubleSPIM[0] = DoublePtr[0];
  2643  002E68  C04E  FFD9         	movff	_DoublePtr,fsr2l
  2644  002E6C  C04F  FFDA         	movff	_DoublePtr+1,fsr2h
  2645  002E70  50DF               	movf	indf2,w,c
  2646  002E72  0100               	movlb	0	; () banked
  2647  002E74  6FDA               	movwf	_DoubleSPIM& (0+255),b
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;SPIMaster.c: 107: DoubleSPIM[1] = DoublePtr[1];
  2651  002E76  EE20 F001          	lfsr	2,1
  2652  002E7A  504E               	movf	_DoublePtr,w,c
  2653  002E7C  26D9               	addwf	fsr2l,f,c
  2654  002E7E  504F               	movf	_DoublePtr+1,w,c
  2655  002E80  22DA               	addwfc	fsr2h,f,c
  2656  002E82  50DF               	movf	indf2,w,c
  2657  002E84  0100               	movlb	0	; () banked
  2658  002E86  6FDB               	movwf	(_DoubleSPIM+1)& (0+255),b
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;SPIMaster.c: 108: DoubleSPIM[2] = DoublePtr[2];
  2662  002E88  EE20 F002          	lfsr	2,2
  2663  002E8C  504E               	movf	_DoublePtr,w,c
  2664  002E8E  26D9               	addwf	fsr2l,f,c
  2665  002E90  504F               	movf	_DoublePtr+1,w,c
  2666  002E92  22DA               	addwfc	fsr2h,f,c
  2667  002E94  50DF               	movf	indf2,w,c
  2668  002E96  0100               	movlb	0	; () banked
  2669  002E98  6FDC               	movwf	(_DoubleSPIM+2)& (0+255),b
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;SPIMaster.c: 109: DoubleSPIM[3] = MGenerateChecksum();
  2673  002E9A  EC74  F017         	call	_MGenerateChecksum	;wreg free
  2674  002E9E  0100               	movlb	0	; () banked
  2675  002EA0  6FDD               	movwf	(_DoubleSPIM+3)& (0+255),b
  2676                           
  2677                           ; BSR set to: 0
  2678  002EA2  0012               	return		;funcret
  2679  002EA4                     __end_of_SPIDisassembleDouble:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           prodh	equ	0xFF4
  2686                           prodl	equ	0xFF3
  2687                           intcon	equ	0xFF2
  2688                           indf0	equ	0xFEF
  2689                           postinc0	equ	0xFEE
  2690                           fsr0h	equ	0xFEA
  2691                           fsr0l	equ	0xFE9
  2692                           wreg	equ	0xFE8
  2693                           indf2	equ	0xFDF
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _MGenerateChecksum *****************
  2699 ;; Defined at:
  2700 ;;		line 112 in file "SPIMaster.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  z               1    1[BANK0 ] unsigned char 
  2705 ;;  sum             1    0[BANK0 ] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      unsigned char 
  2708 ;; Registers used:
  2709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;Total ram usage:        2 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    6
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_SPIDisassembleDouble
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text8
  2730  002EE8                     __ptext8:
  2731                           	opt stack 0
  2732  002EE8                     _MGenerateChecksum:
  2733                           	opt stack 23
  2734                           
  2735                           ;SPIMaster.c: 114: unsigned char z, sum = 0;
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;incstack = 0
  2739  002EE8  0E00               	movlw	0
  2740  002EEA  0100               	movlb	0	; () banked
  2741  002EEC  6F80               	movwf	MGenerateChecksum@sum& (0+255),b
  2742                           
  2743                           ;SPIMaster.c: 115: for (z = 0; z != 3; z++)
  2744  002EEE  0E00               	movlw	0
  2745  002EF0  0100               	movlb	0	; () banked
  2746  002EF2  6F81               	movwf	MGenerateChecksum@z& (0+255),b
  2747  002EF4                     l4014:
  2748                           
  2749                           ; BSR set to: 0
  2750  002EF4  0E03               	movlw	3
  2751  002EF6  0100               	movlb	0	; () banked
  2752  002EF8  1981               	xorwf	MGenerateChecksum@z& (0+255),w,b
  2753  002EFA  B4D8               	btfsc	status,2,c
  2754  002EFC  D011               	goto	l4024
  2755  002EFE  D001               	goto	l4018
  2756                           
  2757                           ; BSR set to: 0
  2758  002F00  D00F               	goto	l4024
  2759  002F02                     l4018:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;SPIMaster.c: 116: sum += DoubleSPIM[z];
  2763  002F02  0100               	movlb	0	; () banked
  2764  002F04  5181               	movf	MGenerateChecksum@z& (0+255),w,b
  2765  002F06  0D01               	mullw	1
  2766  002F08  0EDA               	movlw	low _DoubleSPIM
  2767  002F0A  24F3               	addwf	prodl,w,c
  2768  002F0C  6ED9               	movwf	fsr2l,c
  2769  002F0E  0E00               	movlw	high _DoubleSPIM
  2770  002F10  20F4               	addwfc	prodh,w,c
  2771  002F12  6EDA               	movwf	fsr2h,c
  2772  002F14  50DF               	movf	indf2,w,c
  2773  002F16  0100               	movlb	0	; () banked
  2774  002F18  2780               	addwf	MGenerateChecksum@sum& (0+255),f,b
  2775                           
  2776                           ; BSR set to: 0
  2777  002F1A  0100               	movlb	0	; () banked
  2778  002F1C  2B81               	incf	MGenerateChecksum@z& (0+255),f,b
  2779  002F1E  D7EA               	goto	l4014
  2780  002F20                     l4024:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;SPIMaster.c: 117: return sum;
  2784  002F20  0100               	movlb	0	; () banked
  2785  002F22  5180               	movf	MGenerateChecksum@sum& (0+255),w,b
  2786  002F24  D000               	goto	l406
  2787  002F26                     l406:
  2788                           
  2789                           ; BSR set to: 0
  2790  002F26  0012               	return		;funcret
  2791  002F28                     __end_of_MGenerateChecksum:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           intcon	equ	0xFF2
  2800                           indf0	equ	0xFEF
  2801                           postinc0	equ	0xFEE
  2802                           fsr0h	equ	0xFEA
  2803                           fsr0l	equ	0xFE9
  2804                           wreg	equ	0xFE8
  2805                           indf2	equ	0xFDF
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _MSendSPI *****************
  2811 ;; Defined at:
  2812 ;;		line 17 in file "SPIMaster.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  data            1    wreg     unsigned char 
  2815 ;;  Slave           1    1[BANK0 ] unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  data            1    4[BANK0 ] unsigned char 
  2818 ;;  tempChar        1    3[BANK0 ] unsigned char 
  2819 ;;  tempChar        1    2[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2829 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;Total ram usage:        4 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    7
  2836 ;; This function calls:
  2837 ;;		_Delay10TCYx
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text9
  2844  002DBE                     __ptext9:
  2845                           	opt stack 0
  2846  002DBE                     _MSendSPI:
  2847                           	opt stack 23
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;incstack = 0
  2851                           ;MSendSPI@data stored from wreg
  2852  002DBE  0100               	movlb	0	; () banked
  2853  002DC0  6F84               	movwf	MSendSPI@data& (0+255),b
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;SPIMaster.c: 19: if (Slave == 1)
  2857  002DC2  0100               	movlb	0	; () banked
  2858  002DC4  0581               	decf	MSendSPI@Slave& (0+255),w,b
  2859  002DC6  A4D8               	btfss	status,2,c
  2860  002DC8  D00D               	goto	l4048
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;SPIMaster.c: 20: {
  2864                           ;SPIMaster.c: 21: PORTBbits.RB3 = 0;
  2865  002DCA  9681               	bcf	3969,3,c	;volatile
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;SPIMaster.c: 22: Delay10TCYx(1);
  2869  002DCC  0E01               	movlw	1
  2870  002DCE  EC13  F018         	call	_Delay10TCYx
  2871                           
  2872                           ;SPIMaster.c: 23: unsigned char tempChar;
  2873                           ;SPIMaster.c: 24: tempChar = SSPBUF;
  2874  002DD2  CFC9 F082          	movff	4041,MSendSPI@tempChar	;volatile
  2875                           
  2876                           ;SPIMaster.c: 25: PIR1bits.SSPIF = 0;
  2877  002DD6  969E               	bcf	3998,3,c	;volatile
  2878                           
  2879                           ;SPIMaster.c: 26: SSPBUF = data;
  2880  002DD8  C084  FFC9         	movff	MSendSPI@data,4041	;volatile
  2881                           
  2882                           ;SPIMaster.c: 27: while (!PIR1bits.SSPIF);
  2883  002DDC  D000               	goto	l358
  2884  002DDE                     l358:
  2885  002DDE  A69E               	btfss	3998,3,c	;volatile
  2886  002DE0  D7FE               	goto	l358
  2887  002DE2  D011               	goto	l365
  2888  002DE4                     l4048:
  2889                           
  2890                           ;SPIMaster.c: 32: else if (Slave == 2)
  2891  002DE4  0E02               	movlw	2
  2892  002DE6  0100               	movlb	0	; () banked
  2893  002DE8  1981               	xorwf	MSendSPI@Slave& (0+255),w,b
  2894  002DEA  A4D8               	btfss	status,2,c
  2895  002DEC  D010               	goto	l366
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;SPIMaster.c: 33: {
  2899                           ;SPIMaster.c: 34: PORTBbits.RB4 = 0;
  2900  002DEE  9881               	bcf	3969,4,c	;volatile
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;SPIMaster.c: 35: Delay10TCYx(1);
  2904  002DF0  0E01               	movlw	1
  2905  002DF2  EC13  F018         	call	_Delay10TCYx
  2906                           
  2907                           ;SPIMaster.c: 36: unsigned char tempChar;
  2908                           ;SPIMaster.c: 37: tempChar = SSPBUF;
  2909  002DF6  CFC9 F083          	movff	4041,MSendSPI@tempChar_708	;volatile
  2910                           
  2911                           ;SPIMaster.c: 38: PIR1bits.SSPIF = 0;
  2912  002DFA  969E               	bcf	3998,3,c	;volatile
  2913                           
  2914                           ;SPIMaster.c: 39: SSPBUF = data;
  2915  002DFC  C084  FFC9         	movff	MSendSPI@data,4041	;volatile
  2916                           
  2917                           ;SPIMaster.c: 40: while (!PIR1bits.SSPIF);
  2918  002E00  D000               	goto	l363
  2919  002E02                     l363:
  2920  002E02  A69E               	btfss	3998,3,c	;volatile
  2921  002E04  D7FE               	goto	l363
  2922  002E06                     l365:
  2923                           
  2924                           ;SPIMaster.c: 41: data = SSPBUF;
  2925  002E06  CFC9 F084          	movff	4041,MSendSPI@data	;volatile
  2926                           
  2927                           ;SPIMaster.c: 42: PORTBbits.RB3 = 1;
  2928  002E0A  8681               	bsf	3969,3,c	;volatile
  2929  002E0C  D000               	goto	l366
  2930  002E0E                     l366:
  2931  002E0E  0012               	return		;funcret
  2932  002E10                     __end_of_MSendSPI:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon	equ	0xFF2
  2941                           indf0	equ	0xFEF
  2942                           postinc0	equ	0xFEE
  2943                           fsr0h	equ	0xFEA
  2944                           fsr0l	equ	0xFE9
  2945                           wreg	equ	0xFE8
  2946                           indf2	equ	0xFDF
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8
  2950                           
  2951 ;; *************** function _MReceiveStrSPI *****************
  2952 ;; Defined at:
  2953 ;;		line 56 in file "SPIMaster.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  str             2   47[BANK0 ] PTR unsigned char 
  2956 ;;		 -> DoubleSPIM(4), 
  2957 ;;  Slave           1   49[BANK0 ] unsigned char 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  x               1   51[BANK0 ] unsigned char 
  2960 ;;  x               1   50[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        5 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    9
  2977 ;; This function calls:
  2978 ;;		_Delay10TCYx
  2979 ;;		_MReceiveSPI
  2980 ;;		_SPIReassembleDouble
  2981 ;;		_breakDouble
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text10
  2988  0028AE                     __ptext10:
  2989                           	opt stack 0
  2990  0028AE                     _MReceiveStrSPI:
  2991                           	opt stack 21
  2992                           
  2993                           ;SPIMaster.c: 58: if (Slave == 1)
  2994                           
  2995                           ;incstack = 0
  2996  0028AE  0100               	movlb	0	; () banked
  2997  0028B0  05B1               	decf	MReceiveStrSPI@Slave& (0+255),w,b
  2998  0028B2  A4D8               	btfss	status,2,c
  2999  0028B4  D02A               	goto	l4082
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;SPIMaster.c: 59: {
  3003                           ;SPIMaster.c: 60: unsigned char x;
  3004                           ;SPIMaster.c: 61: PORTBbits.RB3 = 0;
  3005  0028B6  9681               	bcf	3969,3,c	;volatile
  3006                           
  3007                           ;SPIMaster.c: 62: while (PORTBbits.RB1);
  3008  0028B8  D000               	goto	l376
  3009  0028BA                     l376:
  3010  0028BA  B281               	btfsc	3969,1,c	;volatile
  3011  0028BC  D7FE               	goto	l376
  3012                           
  3013                           ;SPIMaster.c: 63: Delay10TCYx(500);
  3014  0028BE  0EF4               	movlw	244
  3015  0028C0  EC13  F018         	call	_Delay10TCYx
  3016                           
  3017                           ;SPIMaster.c: 64: for (x = 0; x < 4; x++)
  3018  0028C4  0E00               	movlw	0
  3019  0028C6  0100               	movlb	0	; () banked
  3020  0028C8  6FB2               	movwf	MReceiveStrSPI@x& (0+255),b
  3021  0028CA                     l4068:
  3022                           
  3023                           ; BSR set to: 0
  3024  0028CA  0E03               	movlw	3
  3025  0028CC  0100               	movlb	0	; () banked
  3026  0028CE  65B2               	cpfsgt	MReceiveStrSPI@x& (0+255),b
  3027  0028D0  D001               	goto	l4072
  3028                           
  3029                           ; BSR set to: 0
  3030  0028D2  D00F               	goto	l4078
  3031  0028D4                     l4072:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;SPIMaster.c: 65: DoubleSPIM[x] = MReceiveSPI();
  3035  0028D4  0100               	movlb	0	; () banked
  3036  0028D6  51B2               	movf	MReceiveStrSPI@x& (0+255),w,b
  3037  0028D8  0D01               	mullw	1
  3038  0028DA  0EDA               	movlw	low _DoubleSPIM
  3039  0028DC  24F3               	addwf	prodl,w,c
  3040  0028DE  6ED9               	movwf	fsr2l,c
  3041  0028E0  0E00               	movlw	high _DoubleSPIM
  3042  0028E2  20F4               	addwfc	prodh,w,c
  3043  0028E4  6EDA               	movwf	fsr2h,c
  3044  0028E6  EC08  F018         	call	_MReceiveSPI	;wreg free
  3045  0028EA  6EDF               	movwf	indf2,c
  3046  0028EC  0100               	movlb	0	; () banked
  3047  0028EE  2BB2               	incf	MReceiveStrSPI@x& (0+255),f,b
  3048  0028F0  D7EC               	goto	l4068
  3049  0028F2                     l4078:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;SPIMaster.c: 66: breakDouble(SPIReassembleDouble());
  3053  0028F2  EC52  F017         	call	_SPIReassembleDouble	;wreg free
  3054  0028F6  C080  F0A6         	movff	?_SPIReassembleDouble,breakDouble@dubs
  3055  0028FA  C081  F0A7         	movff	?_SPIReassembleDouble+1,breakDouble@dubs+1
  3056  0028FE  C082  F0A8         	movff	?_SPIReassembleDouble+2,breakDouble@dubs+2
  3057  002902  ECC3  F00F         	call	_breakDouble	;wreg free
  3058                           
  3059                           ;SPIMaster.c: 67: PORTBbits.RB3 = 1;
  3060  002906  8681               	bsf	3969,3,c	;volatile
  3061                           
  3062                           ;SPIMaster.c: 68: }
  3063  002908  D02A               	goto	l388
  3064  00290A                     l4082:
  3065                           
  3066                           ;SPIMaster.c: 69: else if (Slave == 2)
  3067  00290A  0E02               	movlw	2
  3068  00290C  0100               	movlb	0	; () banked
  3069  00290E  19B1               	xorwf	MReceiveStrSPI@Slave& (0+255),w,b
  3070  002910  A4D8               	btfss	status,2,c
  3071  002912  D025               	goto	l388
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;SPIMaster.c: 70: {
  3075                           ;SPIMaster.c: 71: unsigned char x;
  3076                           ;SPIMaster.c: 72: PORTBbits.RB4 = 0;
  3077  002914  9881               	bcf	3969,4,c	;volatile
  3078                           
  3079                           ;SPIMaster.c: 73: while (PORTBbits.RB2);
  3080  002916  D000               	goto	l383
  3081  002918                     l383:
  3082  002918  B481               	btfsc	3969,2,c	;volatile
  3083  00291A  D7FE               	goto	l383
  3084                           
  3085                           ;SPIMaster.c: 74: Delay10TCYx(500);
  3086  00291C  0EF4               	movlw	244
  3087  00291E  EC13  F018         	call	_Delay10TCYx
  3088                           
  3089                           ;SPIMaster.c: 75: for (x = 0; x < 3; x++)
  3090  002922  0E00               	movlw	0
  3091  002924  0100               	movlb	0	; () banked
  3092  002926  6FB3               	movwf	MReceiveStrSPI@x_717& (0+255),b
  3093  002928                     l4090:
  3094                           
  3095                           ; BSR set to: 0
  3096  002928  0E02               	movlw	2
  3097  00292A  0100               	movlb	0	; () banked
  3098  00292C  65B3               	cpfsgt	MReceiveStrSPI@x_717& (0+255),b
  3099  00292E  D001               	goto	l4094
  3100                           
  3101                           ; BSR set to: 0
  3102  002930  D011               	goto	l4100
  3103  002932                     l4094:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;SPIMaster.c: 76: str[x] = MReceiveSPI();
  3107  002932  0100               	movlb	0	; () banked
  3108  002934  51B3               	movf	MReceiveStrSPI@x_717& (0+255),w,b
  3109  002936  0D01               	mullw	1
  3110  002938  50F3               	movf	prodl,w,c
  3111  00293A  0100               	movlb	0	; () banked
  3112  00293C  25AF               	addwf	MReceiveStrSPI@str& (0+255),w,b
  3113  00293E  6ED9               	movwf	fsr2l,c
  3114  002940  50F4               	movf	prodh,w,c
  3115  002942  0100               	movlb	0	; () banked
  3116  002944  21B0               	addwfc	(MReceiveStrSPI@str+1)& (0+255),w,b
  3117  002946  6EDA               	movwf	fsr2h,c
  3118  002948  EC08  F018         	call	_MReceiveSPI	;wreg free
  3119  00294C  6EDF               	movwf	indf2,c
  3120  00294E  0100               	movlb	0	; () banked
  3121  002950  2BB3               	incf	MReceiveStrSPI@x_717& (0+255),f,b
  3122  002952  D7EA               	goto	l4090
  3123  002954                     l4100:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;SPIMaster.c: 77: Delay10TCYx(1);
  3127  002954  0E01               	movlw	1
  3128  002956  EC13  F018         	call	_Delay10TCYx
  3129                           
  3130                           ;SPIMaster.c: 78: PORTBbits.RB4 = 1;
  3131  00295A  8881               	bsf	3969,4,c	;volatile
  3132  00295C  D000               	goto	l388
  3133  00295E                     l388:
  3134  00295E  0012               	return		;funcret
  3135  002960                     __end_of_MReceiveStrSPI:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           prodh	equ	0xFF4
  3142                           prodl	equ	0xFF3
  3143                           intcon	equ	0xFF2
  3144                           indf0	equ	0xFEF
  3145                           postinc0	equ	0xFEE
  3146                           fsr0h	equ	0xFEA
  3147                           fsr0l	equ	0xFE9
  3148                           wreg	equ	0xFE8
  3149                           indf2	equ	0xFDF
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _breakDouble *****************
  3155 ;; Defined at:
  3156 ;;		line 80 in file "SerComm.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  dubs            3   38[BANK0 ] unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  temp2           2   45[BANK0 ] unsigned int 
  3161 ;;  temp1           2   43[BANK0 ] unsigned int 
  3162 ;;  tempDub         2   41[BANK0 ] unsigned int 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;		None               void
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3172 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        9 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    8
  3179 ;; This function calls:
  3180 ;;		_SerTx
  3181 ;;		___ftmul
  3182 ;;		___fttol
  3183 ;;		___lwdiv
  3184 ;;		___lwmod
  3185 ;; This function is called by:
  3186 ;;		_MReceiveStrSPI
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text11
  3191  001F86                     __ptext11:
  3192                           	opt stack 0
  3193  001F86                     _breakDouble:
  3194                           	opt stack 21
  3195                           
  3196                           ;SerComm.c: 82: unsigned int temp1, temp2;
  3197                           ;SerComm.c: 83: unsigned int tempDub;
  3198                           ;SerComm.c: 85: tempDub = dubs * 100;
  3199                           
  3200                           ;incstack = 0
  3201  001F86  0E00               	movlw	0
  3202  001F88  0100               	movlb	0	; () banked
  3203  001F8A  6F8B               	movwf	___ftmul@f2& (0+255),b
  3204  001F8C  0EC8               	movlw	200
  3205  001F8E  0100               	movlb	0	; () banked
  3206  001F90  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  3207  001F92  0E42               	movlw	66
  3208  001F94  0100               	movlb	0	; () banked
  3209  001F96  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  3210  001F98  C0A6  F088         	movff	breakDouble@dubs,___ftmul@f1
  3211  001F9C  C0A7  F089         	movff	breakDouble@dubs+1,___ftmul@f1+1
  3212  001FA0  C0A8  F08A         	movff	breakDouble@dubs+2,___ftmul@f1+2
  3213  001FA4  EC87  F010         	call	___ftmul	;wreg free
  3214  001FA8  C088  F097         	movff	?___ftmul,___fttol@f1
  3215  001FAC  C089  F098         	movff	?___ftmul+1,___fttol@f1+1
  3216  001FB0  C08A  F099         	movff	?___ftmul+2,___fttol@f1+2
  3217  001FB4  ECDE  F011         	call	___fttol	;wreg free
  3218  001FB8  C097  F0A9         	movff	?___fttol,breakDouble@tempDub
  3219  001FBC  C098  F0AA         	movff	?___fttol+1,breakDouble@tempDub+1
  3220                           
  3221                           ;SerComm.c: 86: temp1 = tempDub / 10000;
  3222  001FC0  C0A9  F080         	movff	breakDouble@tempDub,___lwdiv@dividend
  3223  001FC4  C0AA  F081         	movff	breakDouble@tempDub+1,___lwdiv@dividend+1
  3224  001FC8  0E27               	movlw	39
  3225  001FCA  0100               	movlb	0	; () banked
  3226  001FCC  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3227  001FCE  0E10               	movlw	16
  3228  001FD0  6F82               	movwf	___lwdiv@divisor& (0+255),b
  3229  001FD2  ECFB  F014         	call	___lwdiv	;wreg free
  3230  001FD6  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  3231  001FDA  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  3232                           
  3233                           ;SerComm.c: 87: temp2 = tempDub % 10000;
  3234  001FDE  C0A9  F080         	movff	breakDouble@tempDub,___lwmod@dividend
  3235  001FE2  C0AA  F081         	movff	breakDouble@tempDub+1,___lwmod@dividend+1
  3236  001FE6  0E27               	movlw	39
  3237  001FE8  0100               	movlb	0	; () banked
  3238  001FEA  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  3239  001FEC  0E10               	movlw	16
  3240  001FEE  6F82               	movwf	___lwmod@divisor& (0+255),b
  3241  001FF0  ECF1  F015         	call	___lwmod	;wreg free
  3242  001FF4  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  3243  001FF8  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  3244                           
  3245                           ;SerComm.c: 88: if (temp1 != 0)
  3246  001FFC  0100               	movlb	0	; () banked
  3247  001FFE  51AB               	movf	breakDouble@temp1& (0+255),w,b
  3248  002000  0100               	movlb	0	; () banked
  3249  002002  11AC               	iorwf	(breakDouble@temp1+1)& (0+255),w,b
  3250  002004  B4D8               	btfsc	status,2,c
  3251  002006  D005               	goto	l49
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;SerComm.c: 89: SerTx(temp1 + 0x30);
  3255  002008  0100               	movlb	0	; () banked
  3256  00200A  51AB               	movf	breakDouble@temp1& (0+255),w,b
  3257  00200C  0F30               	addlw	48
  3258  00200E  EC1E  F018         	call	_SerTx
  3259  002012                     l49:
  3260                           
  3261                           ;SerComm.c: 90: temp1 = temp2 / 1000;
  3262  002012  C0AD  F080         	movff	breakDouble@temp2,___lwdiv@dividend
  3263  002016  C0AE  F081         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  3264  00201A  0E03               	movlw	3
  3265  00201C  0100               	movlb	0	; () banked
  3266  00201E  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3267  002020  0EE8               	movlw	232
  3268  002022  6F82               	movwf	___lwdiv@divisor& (0+255),b
  3269  002024  ECFB  F014         	call	___lwdiv	;wreg free
  3270  002028  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  3271  00202C  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  3272                           
  3273                           ;SerComm.c: 91: temp2 = temp2 % 1000;
  3274  002030  C0AD  F080         	movff	breakDouble@temp2,___lwmod@dividend
  3275  002034  C0AE  F081         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  3276  002038  0E03               	movlw	3
  3277  00203A  0100               	movlb	0	; () banked
  3278  00203C  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  3279  00203E  0EE8               	movlw	232
  3280  002040  6F82               	movwf	___lwmod@divisor& (0+255),b
  3281  002042  ECF1  F015         	call	___lwmod	;wreg free
  3282  002046  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  3283  00204A  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  3284                           
  3285                           ;SerComm.c: 92: if (temp1 != 0)
  3286  00204E  0100               	movlb	0	; () banked
  3287  002050  51AB               	movf	breakDouble@temp1& (0+255),w,b
  3288  002052  0100               	movlb	0	; () banked
  3289  002054  11AC               	iorwf	(breakDouble@temp1+1)& (0+255),w,b
  3290  002056  B4D8               	btfsc	status,2,c
  3291  002058  D005               	goto	l50
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;SerComm.c: 93: SerTx(temp1 + 0x30);
  3295  00205A  0100               	movlb	0	; () banked
  3296  00205C  51AB               	movf	breakDouble@temp1& (0+255),w,b
  3297  00205E  0F30               	addlw	48
  3298  002060  EC1E  F018         	call	_SerTx
  3299  002064                     l50:
  3300                           
  3301                           ;SerComm.c: 94: temp1 = temp2 / 100;
  3302  002064  C0AD  F080         	movff	breakDouble@temp2,___lwdiv@dividend
  3303  002068  C0AE  F081         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  3304  00206C  0E00               	movlw	0
  3305  00206E  0100               	movlb	0	; () banked
  3306  002070  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3307  002072  0E64               	movlw	100
  3308  002074  6F82               	movwf	___lwdiv@divisor& (0+255),b
  3309  002076  ECFB  F014         	call	___lwdiv	;wreg free
  3310  00207A  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  3311  00207E  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  3312                           
  3313                           ;SerComm.c: 95: temp2 = temp2 % 100;
  3314  002082  C0AD  F080         	movff	breakDouble@temp2,___lwmod@dividend
  3315  002086  C0AE  F081         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  3316  00208A  0E00               	movlw	0
  3317  00208C  0100               	movlb	0	; () banked
  3318  00208E  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  3319  002090  0E64               	movlw	100
  3320  002092  6F82               	movwf	___lwmod@divisor& (0+255),b
  3321  002094  ECF1  F015         	call	___lwmod	;wreg free
  3322  002098  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  3323  00209C  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  3324                           
  3325                           ;SerComm.c: 96: SerTx(temp1 + 0x30);
  3326  0020A0  0100               	movlb	0	; () banked
  3327  0020A2  51AB               	movf	breakDouble@temp1& (0+255),w,b
  3328  0020A4  0F30               	addlw	48
  3329  0020A6  EC1E  F018         	call	_SerTx
  3330                           
  3331                           ;SerComm.c: 97: SerTx('.');
  3332  0020AA  0E2E               	movlw	46
  3333  0020AC  EC1E  F018         	call	_SerTx
  3334                           
  3335                           ;SerComm.c: 98: temp1 = temp2 / 10;
  3336  0020B0  C0AD  F080         	movff	breakDouble@temp2,___lwdiv@dividend
  3337  0020B4  C0AE  F081         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  3338  0020B8  0E00               	movlw	0
  3339  0020BA  0100               	movlb	0	; () banked
  3340  0020BC  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3341  0020BE  0E0A               	movlw	10
  3342  0020C0  6F82               	movwf	___lwdiv@divisor& (0+255),b
  3343  0020C2  ECFB  F014         	call	___lwdiv	;wreg free
  3344  0020C6  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  3345  0020CA  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  3346                           
  3347                           ;SerComm.c: 99: temp2 = temp2 % 10;
  3348  0020CE  C0AD  F080         	movff	breakDouble@temp2,___lwmod@dividend
  3349  0020D2  C0AE  F081         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  3350  0020D6  0E00               	movlw	0
  3351  0020D8  0100               	movlb	0	; () banked
  3352  0020DA  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  3353  0020DC  0E0A               	movlw	10
  3354  0020DE  6F82               	movwf	___lwmod@divisor& (0+255),b
  3355  0020E0  ECF1  F015         	call	___lwmod	;wreg free
  3356  0020E4  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  3357  0020E8  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  3358                           
  3359                           ;SerComm.c: 100: SerTx(temp1 + 0x30);
  3360  0020EC  0100               	movlb	0	; () banked
  3361  0020EE  51AB               	movf	breakDouble@temp1& (0+255),w,b
  3362  0020F0  0F30               	addlw	48
  3363  0020F2  EC1E  F018         	call	_SerTx
  3364                           
  3365                           ;SerComm.c: 101: SerTx(temp2 + 0x30);
  3366  0020F6  0100               	movlb	0	; () banked
  3367  0020F8  51AD               	movf	breakDouble@temp2& (0+255),w,b
  3368  0020FA  0F30               	addlw	48
  3369  0020FC  EC1E  F018         	call	_SerTx
  3370                           
  3371                           ;SerComm.c: 102: SerTx(0x0A);
  3372  002100  0E0A               	movlw	10
  3373  002102  EC1E  F018         	call	_SerTx
  3374                           
  3375                           ;SerComm.c: 103: SerTx(0x0D);
  3376  002106  0E0D               	movlw	13
  3377  002108  EC1E  F018         	call	_SerTx
  3378  00210C  0012               	return		;funcret
  3379  00210E                     __end_of_breakDouble:
  3380                           	opt stack 0
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           prodh	equ	0xFF4
  3386                           prodl	equ	0xFF3
  3387                           intcon	equ	0xFF2
  3388                           indf0	equ	0xFEF
  3389                           postinc0	equ	0xFEE
  3390                           fsr0h	equ	0xFEA
  3391                           fsr0l	equ	0xFE9
  3392                           wreg	equ	0xFE8
  3393                           indf2	equ	0xFDF
  3394                           fsr2h	equ	0xFDA
  3395                           fsr2l	equ	0xFD9
  3396                           status	equ	0xFD8
  3397                           
  3398 ;; *************** function ___lwmod *****************
  3399 ;; Defined at:
  3400 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  dividend        2    0[BANK0 ] unsigned int 
  3403 ;;  divisor         2    2[BANK0 ] unsigned int 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  counter         1    4[BANK0 ] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  2    0[BANK0 ] unsigned int 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;Total ram usage:        5 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    6
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_breakDouble
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text12
  3430  002BE2                     __ptext12:
  3431                           	opt stack 0
  3432  002BE2                     ___lwmod:
  3433                           	opt stack 22
  3434                           
  3435                           ;incstack = 0
  3436  002BE2  0100               	movlb	0	; () banked
  3437  002BE4  5182               	movf	___lwmod@divisor& (0+255),w,b
  3438  002BE6  0100               	movlb	0	; () banked
  3439  002BE8  1183               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3440  002BEA  B4D8               	btfsc	status,2,c
  3441  002BEC  D02B               	goto	l1041
  3442                           
  3443                           ; BSR set to: 0
  3444  002BEE  0E01               	movlw	1
  3445  002BF0  0100               	movlb	0	; () banked
  3446  002BF2  6F84               	movwf	___lwmod@counter& (0+255),b
  3447  002BF4  D007               	goto	l3940
  3448  002BF6                     l3938:
  3449                           
  3450                           ; BSR set to: 0
  3451  002BF6  0100               	movlb	0	; () banked
  3452  002BF8  90D8               	bcf	status,0,c
  3453  002BFA  3782               	rlcf	___lwmod@divisor& (0+255),f,b
  3454  002BFC  3783               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3455  002BFE  0100               	movlb	0	; () banked
  3456  002C00  2B84               	incf	___lwmod@counter& (0+255),f,b
  3457  002C02  D000               	goto	l3940
  3458  002C04                     l3940:
  3459                           
  3460                           ; BSR set to: 0
  3461  002C04  0100               	movlb	0	; () banked
  3462  002C06  BF83               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  3463  002C08  D002               	goto	l3942
  3464  002C0A  D7F5               	goto	l3938
  3465                           
  3466                           ; BSR set to: 0
  3467  002C0C  D000               	goto	l3942
  3468  002C0E                     l3942:
  3469                           
  3470                           ; BSR set to: 0
  3471  002C0E  0100               	movlb	0	; () banked
  3472  002C10  5182               	movf	___lwmod@divisor& (0+255),w,b
  3473  002C12  0100               	movlb	0	; () banked
  3474  002C14  5D80               	subwf	___lwmod@dividend& (0+255),w,b
  3475  002C16  0100               	movlb	0	; () banked
  3476  002C18  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3477  002C1A  0100               	movlb	0	; () banked
  3478  002C1C  5981               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3479  002C1E  A0D8               	btfss	status,0,c
  3480  002C20  D009               	goto	l3946
  3481                           
  3482                           ; BSR set to: 0
  3483  002C22  0100               	movlb	0	; () banked
  3484  002C24  5182               	movf	___lwmod@divisor& (0+255),w,b
  3485  002C26  0100               	movlb	0	; () banked
  3486  002C28  5F80               	subwf	___lwmod@dividend& (0+255),f,b
  3487  002C2A  0100               	movlb	0	; () banked
  3488  002C2C  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3489  002C2E  0100               	movlb	0	; () banked
  3490  002C30  5B81               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3491  002C32  D000               	goto	l3946
  3492  002C34                     l3946:
  3493                           
  3494                           ; BSR set to: 0
  3495  002C34  0100               	movlb	0	; () banked
  3496  002C36  90D8               	bcf	status,0,c
  3497  002C38  3383               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3498  002C3A  3382               	rrcf	___lwmod@divisor& (0+255),f,b
  3499                           
  3500                           ; BSR set to: 0
  3501  002C3C  0100               	movlb	0	; () banked
  3502  002C3E  2F84               	decfsz	___lwmod@counter& (0+255),f,b
  3503  002C40  D7E6               	goto	l3942
  3504  002C42  D000               	goto	l1041
  3505  002C44                     l1041:
  3506                           
  3507                           ; BSR set to: 0
  3508  002C44  C080  F080         	movff	___lwmod@dividend,?___lwmod
  3509  002C48  C081  F081         	movff	___lwmod@dividend+1,?___lwmod+1
  3510                           
  3511                           ; BSR set to: 0
  3512  002C4C  0012               	return		;funcret
  3513  002C4E                     __end_of___lwmod:
  3514                           	opt stack 0
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           prodh	equ	0xFF4
  3520                           prodl	equ	0xFF3
  3521                           intcon	equ	0xFF2
  3522                           indf0	equ	0xFEF
  3523                           postinc0	equ	0xFEE
  3524                           fsr0h	equ	0xFEA
  3525                           fsr0l	equ	0xFE9
  3526                           wreg	equ	0xFE8
  3527                           indf2	equ	0xFDF
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function ___lwdiv *****************
  3533 ;; Defined at:
  3534 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  dividend        2    0[BANK0 ] unsigned int 
  3537 ;;  divisor         2    2[BANK0 ] unsigned int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  quotient        2    5[BANK0 ] unsigned int 
  3540 ;;  counter         1    4[BANK0 ] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2    0[BANK0 ] unsigned int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;Total ram usage:        7 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    6
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_breakDouble
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text13
  3565  0029F6                     __ptext13:
  3566                           	opt stack 0
  3567  0029F6                     ___lwdiv:
  3568                           	opt stack 22
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;incstack = 0
  3572  0029F6  0E00               	movlw	0
  3573  0029F8  0100               	movlb	0	; () banked
  3574  0029FA  6F86               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3575  0029FC  0E00               	movlw	0
  3576  0029FE  6F85               	movwf	___lwdiv@quotient& (0+255),b
  3577                           
  3578                           ; BSR set to: 0
  3579  002A00  0100               	movlb	0	; () banked
  3580  002A02  5182               	movf	___lwdiv@divisor& (0+255),w,b
  3581  002A04  0100               	movlb	0	; () banked
  3582  002A06  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3583  002A08  B4D8               	btfsc	status,2,c
  3584  002A0A  D031               	goto	l1031
  3585                           
  3586                           ; BSR set to: 0
  3587  002A0C  0E01               	movlw	1
  3588  002A0E  0100               	movlb	0	; () banked
  3589  002A10  6F84               	movwf	___lwdiv@counter& (0+255),b
  3590  002A12  D007               	goto	l3920
  3591  002A14                     l3918:
  3592                           
  3593                           ; BSR set to: 0
  3594  002A14  0100               	movlb	0	; () banked
  3595  002A16  90D8               	bcf	status,0,c
  3596  002A18  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  3597  002A1A  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3598  002A1C  0100               	movlb	0	; () banked
  3599  002A1E  2B84               	incf	___lwdiv@counter& (0+255),f,b
  3600  002A20  D000               	goto	l3920
  3601  002A22                     l3920:
  3602                           
  3603                           ; BSR set to: 0
  3604  002A22  0100               	movlb	0	; () banked
  3605  002A24  BF83               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  3606  002A26  D002               	goto	l3922
  3607  002A28  D7F5               	goto	l3918
  3608                           
  3609                           ; BSR set to: 0
  3610  002A2A  D000               	goto	l3922
  3611  002A2C                     l3922:
  3612                           
  3613                           ; BSR set to: 0
  3614  002A2C  0100               	movlb	0	; () banked
  3615  002A2E  90D8               	bcf	status,0,c
  3616  002A30  3785               	rlcf	___lwdiv@quotient& (0+255),f,b
  3617  002A32  3786               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3618                           
  3619                           ; BSR set to: 0
  3620  002A34  0100               	movlb	0	; () banked
  3621  002A36  5182               	movf	___lwdiv@divisor& (0+255),w,b
  3622  002A38  0100               	movlb	0	; () banked
  3623  002A3A  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  3624  002A3C  0100               	movlb	0	; () banked
  3625  002A3E  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3626  002A40  0100               	movlb	0	; () banked
  3627  002A42  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3628  002A44  A0D8               	btfss	status,0,c
  3629  002A46  D00B               	goto	l3930
  3630                           
  3631                           ; BSR set to: 0
  3632  002A48  0100               	movlb	0	; () banked
  3633  002A4A  5182               	movf	___lwdiv@divisor& (0+255),w,b
  3634  002A4C  0100               	movlb	0	; () banked
  3635  002A4E  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  3636  002A50  0100               	movlb	0	; () banked
  3637  002A52  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3638  002A54  0100               	movlb	0	; () banked
  3639  002A56  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 0
  3642  002A58  0100               	movlb	0	; () banked
  3643  002A5A  8185               	bsf	___lwdiv@quotient& (0+255),0,b
  3644  002A5C  D000               	goto	l3930
  3645  002A5E                     l3930:
  3646                           
  3647                           ; BSR set to: 0
  3648  002A5E  0100               	movlb	0	; () banked
  3649  002A60  90D8               	bcf	status,0,c
  3650  002A62  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3651  002A64  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  3652                           
  3653                           ; BSR set to: 0
  3654  002A66  0100               	movlb	0	; () banked
  3655  002A68  2F84               	decfsz	___lwdiv@counter& (0+255),f,b
  3656  002A6A  D7E0               	goto	l3922
  3657  002A6C  D000               	goto	l1031
  3658  002A6E                     l1031:
  3659                           
  3660                           ; BSR set to: 0
  3661  002A6E  C085  F080         	movff	___lwdiv@quotient,?___lwdiv
  3662  002A72  C086  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3663                           
  3664                           ; BSR set to: 0
  3665  002A76  0012               	return		;funcret
  3666  002A78                     __end_of___lwdiv:
  3667                           	opt stack 0
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           intcon	equ	0xFF2
  3675                           indf0	equ	0xFEF
  3676                           postinc0	equ	0xFEE
  3677                           fsr0h	equ	0xFEA
  3678                           fsr0l	equ	0xFE9
  3679                           wreg	equ	0xFE8
  3680                           indf2	equ	0xFDF
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           status	equ	0xFD8
  3684                           
  3685 ;; *************** function ___fttol *****************
  3686 ;; Defined at:
  3687 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  f1              3   23[BANK0 ] float 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  lval            4   33[BANK0 ] unsigned long 
  3692 ;;  exp1            1   37[BANK0 ] unsigned char 
  3693 ;;  sign1           1   32[BANK0 ] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  4   23[BANK0 ] long 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;Total ram usage:       15 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    6
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_breakDouble
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text14
  3718  0023BC                     __ptext14:
  3719                           	opt stack 0
  3720  0023BC                     ___fttol:
  3721                           	opt stack 22
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;incstack = 0
  3725  0023BC  C099  F09B         	movff	___fttol@f1+2,??___fttol
  3726  0023C0  0100               	movlb	0	; () banked
  3727  0023C2  6B9C               	clrf	(??___fttol+1)& (0+255),b
  3728  0023C4  6B9D               	clrf	(??___fttol+2)& (0+255),b
  3729  0023C6  0100               	movlb	0	; () banked
  3730  0023C8  3598               	rlcf	(___fttol@f1+1)& (0+255),w,b
  3731  0023CA  0100               	movlb	0	; () banked
  3732  0023CC  379B               	rlcf	??___fttol& (0+255),f,b
  3733  0023CE  E301               	bnc	u3241
  3734  0023D0  819C               	bsf	(??___fttol+1)& (0+255),0,b
  3735  0023D2                     u3241:
  3736  0023D2  0100               	movlb	0	; () banked
  3737  0023D4  519B               	movf	??___fttol& (0+255),w,b
  3738  0023D6  0100               	movlb	0	; () banked
  3739  0023D8  6FA5               	movwf	___fttol@exp1& (0+255),b
  3740  0023DA  0100               	movlb	0	; () banked
  3741  0023DC  51A5               	movf	___fttol@exp1& (0+255),w,b
  3742  0023DE  A4D8               	btfss	status,2,c
  3743  0023E0  D002               	goto	l2980
  3744  0023E2  D051               	goto	l3004
  3745                           
  3746                           ; BSR set to: 0
  3747                           
  3748                           ; BSR set to: 0
  3749  0023E4  D083               	goto	l919
  3750  0023E6                     l2980:
  3751                           
  3752                           ; BSR set to: 0
  3753  0023E6  0E17               	movlw	23
  3754  0023E8  0100               	movlb	0	; () banked
  3755  0023EA  6F9B               	movwf	??___fttol& (0+255),b
  3756  0023EC  C097  F09C         	movff	___fttol@f1,??___fttol+1
  3757  0023F0  C098  F09D         	movff	___fttol@f1+1,??___fttol+2
  3758  0023F4  C099  F09E         	movff	___fttol@f1+2,??___fttol+3
  3759  0023F8  0100               	movlb	0	; () banked
  3760  0023FA  299B               	incf	??___fttol& (0+255),w,b
  3761  0023FC  0100               	movlb	0	; () banked
  3762  0023FE  6F9F               	movwf	(??___fttol+4)& (0+255),b
  3763  002400  D005               	goto	u3260
  3764  002402                     u3265:
  3765  002402  0100               	movlb	0	; () banked
  3766  002404  90D8               	bcf	status,0,c
  3767  002406  339E               	rrcf	(??___fttol+3)& (0+255),f,b
  3768  002408  339D               	rrcf	(??___fttol+2)& (0+255),f,b
  3769  00240A  339C               	rrcf	(??___fttol+1)& (0+255),f,b
  3770  00240C                     u3260:
  3771  00240C  0100               	movlb	0	; () banked
  3772  00240E  2F9F               	decfsz	(??___fttol+4)& (0+255),f,b
  3773  002410  D7F8               	goto	u3265
  3774  002412  0100               	movlb	0	; () banked
  3775  002414  519C               	movf	(??___fttol+1)& (0+255),w,b
  3776  002416  0100               	movlb	0	; () banked
  3777  002418  6FA0               	movwf	___fttol@sign1& (0+255),b
  3778                           
  3779                           ; BSR set to: 0
  3780  00241A  0100               	movlb	0	; () banked
  3781  00241C  8F98               	bsf	(___fttol@f1+1)& (0+255),7,b
  3782                           
  3783                           ; BSR set to: 0
  3784  00241E  0EFF               	movlw	255
  3785  002420  0100               	movlb	0	; () banked
  3786  002422  1797               	andwf	___fttol@f1& (0+255),f,b
  3787  002424  0EFF               	movlw	255
  3788  002426  0100               	movlb	0	; () banked
  3789  002428  1798               	andwf	(___fttol@f1+1)& (0+255),f,b
  3790  00242A  0E00               	movlw	0
  3791  00242C  0100               	movlb	0	; () banked
  3792  00242E  1799               	andwf	(___fttol@f1+2)& (0+255),f,b
  3793                           
  3794                           ; BSR set to: 0
  3795  002430  0100               	movlb	0	; () banked
  3796  002432  5197               	movf	___fttol@f1& (0+255),w,b
  3797  002434  0100               	movlb	0	; () banked
  3798  002436  6FA1               	movwf	___fttol@lval& (0+255),b
  3799  002438  0100               	movlb	0	; () banked
  3800  00243A  5198               	movf	(___fttol@f1+1)& (0+255),w,b
  3801  00243C  0100               	movlb	0	; () banked
  3802  00243E  6FA2               	movwf	(___fttol@lval+1)& (0+255),b
  3803  002440  0100               	movlb	0	; () banked
  3804  002442  5199               	movf	(___fttol@f1+2)& (0+255),w,b
  3805  002444  0100               	movlb	0	; () banked
  3806  002446  6FA3               	movwf	(___fttol@lval+2)& (0+255),b
  3807  002448  0100               	movlb	0	; () banked
  3808  00244A  6BA4               	clrf	(___fttol@lval+3)& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811  00244C  0E8E               	movlw	142
  3812  00244E  0100               	movlb	0	; () banked
  3813  002450  5FA5               	subwf	___fttol@exp1& (0+255),f,b
  3814                           
  3815                           ; BSR set to: 0
  3816  002452  0100               	movlb	0	; () banked
  3817  002454  AFA5               	btfss	___fttol@exp1& (0+255),7,b
  3818  002456  D013               	goto	l3002
  3819                           
  3820                           ; BSR set to: 0
  3821  002458  0100               	movlb	0	; () banked
  3822  00245A  51A5               	movf	___fttol@exp1& (0+255),w,b
  3823  00245C  0A80               	xorlw	128
  3824  00245E  0F8F               	addlw	143
  3825  002460  B0D8               	btfsc	status,0,c
  3826  002462  D003               	goto	l2998
  3827  002464  D010               	goto	l3004
  3828                           
  3829                           ; BSR set to: 0
  3830                           
  3831                           ; BSR set to: 0
  3832  002466  D042               	goto	l919
  3833                           
  3834                           ; BSR set to: 0
  3835  002468  D000               	goto	l2998
  3836  00246A                     l2998:
  3837                           
  3838                           ; BSR set to: 0
  3839  00246A  0100               	movlb	0	; () banked
  3840  00246C  90D8               	bcf	status,0,c
  3841  00246E  33A4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3842  002470  33A3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3843  002472  33A2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3844  002474  33A1               	rrcf	___fttol@lval& (0+255),f,b
  3845                           
  3846                           ; BSR set to: 0
  3847  002476  0100               	movlb	0	; () banked
  3848  002478  3FA5               	incfsz	___fttol@exp1& (0+255),f,b
  3849  00247A  D7F7               	goto	l2998
  3850                           
  3851                           ; BSR set to: 0
  3852  00247C  D01F               	goto	l3012
  3853  00247E                     l3002:
  3854                           
  3855                           ; BSR set to: 0
  3856  00247E  0E17               	movlw	23
  3857  002480  0100               	movlb	0	; () banked
  3858  002482  65A5               	cpfsgt	___fttol@exp1& (0+255),b
  3859  002484  D014               	goto	l3010
  3860  002486                     l3004:
  3861                           
  3862                           ; BSR set to: 0
  3863  002486  0E00               	movlw	0
  3864  002488  0100               	movlb	0	; () banked
  3865  00248A  6F97               	movwf	?___fttol& (0+255),b
  3866  00248C  0E00               	movlw	0
  3867  00248E  6F98               	movwf	(?___fttol+1)& (0+255),b
  3868  002490  0E00               	movlw	0
  3869  002492  6F99               	movwf	(?___fttol+2)& (0+255),b
  3870  002494  0E00               	movlw	0
  3871  002496  6F9A               	movwf	(?___fttol+3)& (0+255),b
  3872                           
  3873                           ; BSR set to: 0
  3874  002498  D029               	goto	l919
  3875                           
  3876                           ; BSR set to: 0
  3877  00249A  D009               	goto	l3010
  3878  00249C                     l3008:
  3879                           
  3880                           ; BSR set to: 0
  3881  00249C  0100               	movlb	0	; () banked
  3882  00249E  90D8               	bcf	status,0,c
  3883  0024A0  37A1               	rlcf	___fttol@lval& (0+255),f,b
  3884  0024A2  37A2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3885  0024A4  37A3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3886  0024A6  37A4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3887  0024A8  0100               	movlb	0	; () banked
  3888  0024AA  07A5               	decf	___fttol@exp1& (0+255),f,b
  3889  0024AC  D000               	goto	l3010
  3890  0024AE                     l3010:
  3891                           
  3892                           ; BSR set to: 0
  3893  0024AE  0100               	movlb	0	; () banked
  3894  0024B0  51A5               	movf	___fttol@exp1& (0+255),w,b
  3895  0024B2  0100               	movlb	0	; () banked
  3896  0024B4  B4D8               	btfsc	status,2,c
  3897  0024B6  D002               	goto	l3012
  3898  0024B8  D7F1               	goto	l3008
  3899                           
  3900                           ; BSR set to: 0
  3901  0024BA  D000               	goto	l3012
  3902  0024BC                     l3012:
  3903                           
  3904                           ; BSR set to: 0
  3905  0024BC  0100               	movlb	0	; () banked
  3906  0024BE  51A0               	movf	___fttol@sign1& (0+255),w,b
  3907  0024C0  0100               	movlb	0	; () banked
  3908  0024C2  B4D8               	btfsc	status,2,c
  3909  0024C4  D00A               	goto	l3016
  3910                           
  3911                           ; BSR set to: 0
  3912  0024C6  0100               	movlb	0	; () banked
  3913  0024C8  1FA4               	comf	(___fttol@lval+3)& (0+255),f,b
  3914  0024CA  1FA3               	comf	(___fttol@lval+2)& (0+255),f,b
  3915  0024CC  1FA2               	comf	(___fttol@lval+1)& (0+255),f,b
  3916  0024CE  6DA1               	negf	___fttol@lval& (0+255),b
  3917  0024D0  0E00               	movlw	0
  3918  0024D2  23A2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3919  0024D4  23A3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3920  0024D6  23A4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3921  0024D8  D000               	goto	l3016
  3922  0024DA                     l3016:
  3923                           
  3924                           ; BSR set to: 0
  3925  0024DA  C0A1  F097         	movff	___fttol@lval,?___fttol
  3926  0024DE  C0A2  F098         	movff	___fttol@lval+1,?___fttol+1
  3927  0024E2  C0A3  F099         	movff	___fttol@lval+2,?___fttol+2
  3928  0024E6  C0A4  F09A         	movff	___fttol@lval+3,?___fttol+3
  3929  0024EA  D000               	goto	l919
  3930  0024EC                     l919:
  3931                           
  3932                           ; BSR set to: 0
  3933  0024EC  0012               	return		;funcret
  3934  0024EE                     __end_of___fttol:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           intcon	equ	0xFF2
  3943                           indf0	equ	0xFEF
  3944                           postinc0	equ	0xFEE
  3945                           fsr0h	equ	0xFEA
  3946                           fsr0l	equ	0xFE9
  3947                           wreg	equ	0xFE8
  3948                           indf2	equ	0xFDF
  3949                           fsr2h	equ	0xFDA
  3950                           fsr2l	equ	0xFD9
  3951                           status	equ	0xFD8
  3952                           
  3953 ;; *************** function ___ftmul *****************
  3954 ;; Defined at:
  3955 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  f1              3    8[BANK0 ] float 
  3958 ;;  f2              3   11[BANK0 ] float 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  3961 ;;  sign            1   22[BANK0 ] unsigned char 
  3962 ;;  cntr            1   21[BANK0 ] unsigned char 
  3963 ;;  exp             1   17[BANK0 ] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  3    8[BANK0 ] float 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3973 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;Total ram usage:       15 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    7
  3980 ;; This function calls:
  3981 ;;		___ftpack
  3982 ;; This function is called by:
  3983 ;;		_breakDouble
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text15
  3988  00210E                     __ptext15:
  3989                           	opt stack 0
  3990  00210E                     ___ftmul:
  3991                           	opt stack 21
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;incstack = 0
  3995  00210E  C08A  F08E         	movff	___ftmul@f1+2,??___ftmul
  3996  002112  0100               	movlb	0	; () banked
  3997  002114  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  3998  002116  6B90               	clrf	(??___ftmul+2)& (0+255),b
  3999  002118  0100               	movlb	0	; () banked
  4000  00211A  3589               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4001  00211C  0100               	movlb	0	; () banked
  4002  00211E  378E               	rlcf	??___ftmul& (0+255),f,b
  4003  002120  E301               	bnc	u4851
  4004  002122  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  4005  002124                     u4851:
  4006  002124  0100               	movlb	0	; () banked
  4007  002126  518E               	movf	??___ftmul& (0+255),w,b
  4008  002128  0100               	movlb	0	; () banked
  4009  00212A  6F91               	movwf	___ftmul@exp& (0+255),b
  4010  00212C  0100               	movlb	0	; () banked
  4011  00212E  5191               	movf	___ftmul@exp& (0+255),w,b
  4012  002130  A4D8               	btfss	status,2,c
  4013  002132  D002               	goto	l3870
  4014  002134  D014               	goto	l3872
  4015                           
  4016                           ; BSR set to: 0
  4017                           
  4018                           ; BSR set to: 0
  4019  002136  D098               	goto	l898
  4020  002138                     l3870:
  4021                           
  4022                           ; BSR set to: 0
  4023  002138  C08D  F08E         	movff	___ftmul@f2+2,??___ftmul
  4024  00213C  0100               	movlb	0	; () banked
  4025  00213E  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  4026  002140  6B90               	clrf	(??___ftmul+2)& (0+255),b
  4027  002142  0100               	movlb	0	; () banked
  4028  002144  358C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4029  002146  0100               	movlb	0	; () banked
  4030  002148  378E               	rlcf	??___ftmul& (0+255),f,b
  4031  00214A  E301               	bnc	u4871
  4032  00214C  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  4033  00214E                     u4871:
  4034  00214E  0100               	movlb	0	; () banked
  4035  002150  518E               	movf	??___ftmul& (0+255),w,b
  4036  002152  0100               	movlb	0	; () banked
  4037  002154  6F96               	movwf	___ftmul@sign& (0+255),b
  4038  002156  0100               	movlb	0	; () banked
  4039  002158  5196               	movf	___ftmul@sign& (0+255),w,b
  4040  00215A  A4D8               	btfss	status,2,c
  4041  00215C  D00A               	goto	l3876
  4042  00215E                     l3872:
  4043                           
  4044                           ; BSR set to: 0
  4045  00215E  0E00               	movlw	0
  4046  002160  0100               	movlb	0	; () banked
  4047  002162  6F88               	movwf	?___ftmul& (0+255),b
  4048  002164  0E00               	movlw	0
  4049  002166  0100               	movlb	0	; () banked
  4050  002168  6F89               	movwf	(?___ftmul+1)& (0+255),b
  4051  00216A  0E00               	movlw	0
  4052  00216C  0100               	movlb	0	; () banked
  4053  00216E  6F8A               	movwf	(?___ftmul+2)& (0+255),b
  4054                           
  4055                           ; BSR set to: 0
  4056  002170  D07B               	goto	l898
  4057  002172                     l3876:
  4058                           
  4059                           ; BSR set to: 0
  4060  002172  0100               	movlb	0	; () banked
  4061  002174  5196               	movf	___ftmul@sign& (0+255),w,b
  4062  002176  0F7B               	addlw	123
  4063  002178  0100               	movlb	0	; () banked
  4064  00217A  2791               	addwf	___ftmul@exp& (0+255),f,b
  4065                           
  4066                           ; BSR set to: 0
  4067  00217C  C08A  F096         	movff	___ftmul@f1+2,___ftmul@sign
  4068  002180  0100               	movlb	0	; () banked
  4069  002182  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  4070  002184  0100               	movlb	0	; () banked
  4071  002186  1B96               	xorwf	___ftmul@sign& (0+255),f,b
  4072  002188  0E80               	movlw	128
  4073  00218A  0100               	movlb	0	; () banked
  4074  00218C  1796               	andwf	___ftmul@sign& (0+255),f,b
  4075                           
  4076                           ; BSR set to: 0
  4077  00218E  0100               	movlb	0	; () banked
  4078  002190  8F89               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4079                           
  4080                           ; BSR set to: 0
  4081  002192  0100               	movlb	0	; () banked
  4082  002194  8F8C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4083                           
  4084                           ; BSR set to: 0
  4085  002196  0EFF               	movlw	255
  4086  002198  0100               	movlb	0	; () banked
  4087  00219A  178B               	andwf	___ftmul@f2& (0+255),f,b
  4088  00219C  0EFF               	movlw	255
  4089  00219E  0100               	movlb	0	; () banked
  4090  0021A0  178C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4091  0021A2  0E00               	movlw	0
  4092  0021A4  0100               	movlb	0	; () banked
  4093  0021A6  178D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4094                           
  4095                           ; BSR set to: 0
  4096  0021A8  0E00               	movlw	0
  4097  0021AA  0100               	movlb	0	; () banked
  4098  0021AC  6F92               	movwf	___ftmul@f3_as_product& (0+255),b
  4099  0021AE  0E00               	movlw	0
  4100  0021B0  0100               	movlb	0	; () banked
  4101  0021B2  6F93               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4102  0021B4  0E00               	movlw	0
  4103  0021B6  0100               	movlb	0	; () banked
  4104  0021B8  6F94               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107  0021BA  0E07               	movlw	7
  4108  0021BC  0100               	movlb	0	; () banked
  4109  0021BE  6F95               	movwf	___ftmul@cntr& (0+255),b
  4110  0021C0  D000               	goto	l3890
  4111  0021C2                     l3890:
  4112                           
  4113                           ; BSR set to: 0
  4114  0021C2  0100               	movlb	0	; () banked
  4115  0021C4  A188               	btfss	___ftmul@f1& (0+255),0,b
  4116  0021C6  D00D               	goto	l3894
  4117                           
  4118                           ; BSR set to: 0
  4119  0021C8  0100               	movlb	0	; () banked
  4120  0021CA  518B               	movf	___ftmul@f2& (0+255),w,b
  4121  0021CC  0100               	movlb	0	; () banked
  4122  0021CE  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4123  0021D0  0100               	movlb	0	; () banked
  4124  0021D2  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  4125  0021D4  0100               	movlb	0	; () banked
  4126  0021D6  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4127  0021D8  0100               	movlb	0	; () banked
  4128  0021DA  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  4129  0021DC  0100               	movlb	0	; () banked
  4130  0021DE  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4131  0021E0  D000               	goto	l3894
  4132  0021E2                     l3894:
  4133                           
  4134                           ; BSR set to: 0
  4135  0021E2  0100               	movlb	0	; () banked
  4136  0021E4  90D8               	bcf	status,0,c
  4137  0021E6  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4138  0021E8  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4139  0021EA  3388               	rrcf	___ftmul@f1& (0+255),f,b
  4140  0021EC  0100               	movlb	0	; () banked
  4141  0021EE  90D8               	bcf	status,0,c
  4142  0021F0  378B               	rlcf	___ftmul@f2& (0+255),f,b
  4143  0021F2  378C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4144  0021F4  378D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4145                           
  4146                           ; BSR set to: 0
  4147  0021F6  0100               	movlb	0	; () banked
  4148  0021F8  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  4149  0021FA  D7E3               	goto	l3890
  4150  0021FC  D000               	goto	l3898
  4151  0021FE                     l3898:
  4152                           
  4153                           ; BSR set to: 0
  4154  0021FE  0E09               	movlw	9
  4155  002200  0100               	movlb	0	; () banked
  4156  002202  6F95               	movwf	___ftmul@cntr& (0+255),b
  4157  002204  D000               	goto	l3900
  4158  002206                     l3900:
  4159                           
  4160                           ; BSR set to: 0
  4161  002206  0100               	movlb	0	; () banked
  4162  002208  A188               	btfss	___ftmul@f1& (0+255),0,b
  4163  00220A  D00D               	goto	l3904
  4164                           
  4165                           ; BSR set to: 0
  4166  00220C  0100               	movlb	0	; () banked
  4167  00220E  518B               	movf	___ftmul@f2& (0+255),w,b
  4168  002210  0100               	movlb	0	; () banked
  4169  002212  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4170  002214  0100               	movlb	0	; () banked
  4171  002216  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  4172  002218  0100               	movlb	0	; () banked
  4173  00221A  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4174  00221C  0100               	movlb	0	; () banked
  4175  00221E  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  4176  002220  0100               	movlb	0	; () banked
  4177  002222  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4178  002224  D000               	goto	l3904
  4179  002226                     l3904:
  4180                           
  4181                           ; BSR set to: 0
  4182  002226  0100               	movlb	0	; () banked
  4183  002228  90D8               	bcf	status,0,c
  4184  00222A  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4185  00222C  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4186  00222E  3388               	rrcf	___ftmul@f1& (0+255),f,b
  4187  002230  0100               	movlb	0	; () banked
  4188  002232  90D8               	bcf	status,0,c
  4189  002234  3394               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4190  002236  3393               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4191  002238  3392               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4192                           
  4193                           ; BSR set to: 0
  4194  00223A  0100               	movlb	0	; () banked
  4195  00223C  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  4196  00223E  D7E3               	goto	l3900
  4197  002240  D000               	goto	l3908
  4198  002242                     l3908:
  4199                           
  4200                           ; BSR set to: 0
  4201  002242  C092  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  4202  002246  C093  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4203  00224A  C094  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4204  00224E  C091  F083         	movff	___ftmul@exp,___ftpack@exp
  4205  002252  C096  F084         	movff	___ftmul@sign,___ftpack@sign
  4206  002256  EC77  F012         	call	___ftpack	;wreg free
  4207  00225A  C080  F088         	movff	?___ftpack,?___ftmul
  4208  00225E  C081  F089         	movff	?___ftpack+1,?___ftmul+1
  4209  002262  C082  F08A         	movff	?___ftpack+2,?___ftmul+2
  4210  002266  D000               	goto	l898
  4211  002268                     l898:
  4212  002268  0012               	return		;funcret
  4213  00226A                     __end_of___ftmul:
  4214                           	opt stack 0
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           intcon	equ	0xFF2
  4222                           indf0	equ	0xFEF
  4223                           postinc0	equ	0xFEE
  4224                           fsr0h	equ	0xFEA
  4225                           fsr0l	equ	0xFE9
  4226                           wreg	equ	0xFE8
  4227                           indf2	equ	0xFDF
  4228                           fsr2h	equ	0xFDA
  4229                           fsr2l	equ	0xFD9
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function ___ftpack *****************
  4233 ;; Defined at:
  4234 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  arg             3    0[BANK0 ] unsigned um
  4237 ;;  exp             1    3[BANK0 ] unsigned char 
  4238 ;;  sign            1    4[BANK0 ] unsigned char 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  3    0[BANK0 ] float 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4250 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;Total ram usage:        8 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    6
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		___ftmul
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text16
  4265  0024EE                     __ptext16:
  4266                           	opt stack 0
  4267  0024EE                     ___ftpack:
  4268                           	opt stack 21
  4269                           
  4270                           ;incstack = 0
  4271  0024EE  0100               	movlb	0	; () banked
  4272  0024F0  5183               	movf	___ftpack@exp& (0+255),w,b
  4273  0024F2  0100               	movlb	0	; () banked
  4274  0024F4  B4D8               	btfsc	status,2,c
  4275  0024F6  D008               	goto	l3806
  4276                           
  4277                           ; BSR set to: 0
  4278  0024F8  0100               	movlb	0	; () banked
  4279  0024FA  5180               	movf	___ftpack@arg& (0+255),w,b
  4280  0024FC  0100               	movlb	0	; () banked
  4281  0024FE  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4282  002500  0100               	movlb	0	; () banked
  4283  002502  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4284  002504  A4D8               	btfss	status,2,c
  4285  002506  D013               	goto	l3812
  4286  002508                     l3806:
  4287                           
  4288                           ; BSR set to: 0
  4289  002508  0E00               	movlw	0
  4290  00250A  0100               	movlb	0	; () banked
  4291  00250C  6F80               	movwf	?___ftpack& (0+255),b
  4292  00250E  0E00               	movlw	0
  4293  002510  0100               	movlb	0	; () banked
  4294  002512  6F81               	movwf	(?___ftpack+1)& (0+255),b
  4295  002514  0E00               	movlw	0
  4296  002516  0100               	movlb	0	; () banked
  4297  002518  6F82               	movwf	(?___ftpack+2)& (0+255),b
  4298                           
  4299                           ; BSR set to: 0
  4300  00251A  D078               	goto	l811
  4301                           
  4302                           ; BSR set to: 0
  4303  00251C  D008               	goto	l3812
  4304  00251E                     l3810:
  4305                           
  4306                           ; BSR set to: 0
  4307  00251E  0100               	movlb	0	; () banked
  4308  002520  2B83               	incf	___ftpack@exp& (0+255),f,b
  4309  002522  0100               	movlb	0	; () banked
  4310  002524  90D8               	bcf	status,0,c
  4311  002526  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4312  002528  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4313  00252A  3380               	rrcf	___ftpack@arg& (0+255),f,b
  4314  00252C  D000               	goto	l3812
  4315  00252E                     l3812:
  4316                           
  4317                           ; BSR set to: 0
  4318  00252E  0E00               	movlw	0
  4319  002530  0100               	movlb	0	; () banked
  4320  002532  1580               	andwf	___ftpack@arg& (0+255),w,b
  4321  002534  0100               	movlb	0	; () banked
  4322  002536  6F85               	movwf	??___ftpack& (0+255),b
  4323  002538  0E00               	movlw	0
  4324  00253A  0100               	movlb	0	; () banked
  4325  00253C  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4326  00253E  0100               	movlb	0	; () banked
  4327  002540  6F86               	movwf	(??___ftpack+1)& (0+255),b
  4328  002542  0EFE               	movlw	254
  4329  002544  0100               	movlb	0	; () banked
  4330  002546  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4331  002548  0100               	movlb	0	; () banked
  4332  00254A  6F87               	movwf	(??___ftpack+2)& (0+255),b
  4333  00254C  0100               	movlb	0	; () banked
  4334  00254E  5185               	movf	??___ftpack& (0+255),w,b
  4335  002550  0100               	movlb	0	; () banked
  4336  002552  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  4337  002554  0100               	movlb	0	; () banked
  4338  002556  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  4339  002558  B4D8               	btfsc	status,2,c
  4340  00255A  D013               	goto	l3818
  4341  00255C  D7E0               	goto	l3810
  4342                           
  4343                           ; BSR set to: 0
  4344  00255E  D011               	goto	l3818
  4345  002560                     l3814:
  4346                           
  4347                           ; BSR set to: 0
  4348  002560  0100               	movlb	0	; () banked
  4349  002562  2B83               	incf	___ftpack@exp& (0+255),f,b
  4350                           
  4351                           ; BSR set to: 0
  4352  002564  0E01               	movlw	1
  4353  002566  0100               	movlb	0	; () banked
  4354  002568  2780               	addwf	___ftpack@arg& (0+255),f,b
  4355  00256A  0E00               	movlw	0
  4356  00256C  0100               	movlb	0	; () banked
  4357  00256E  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4358  002570  0E00               	movlw	0
  4359  002572  0100               	movlb	0	; () banked
  4360  002574  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4361  002576  0100               	movlb	0	; () banked
  4362  002578  90D8               	bcf	status,0,c
  4363  00257A  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4364  00257C  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4365  00257E  3380               	rrcf	___ftpack@arg& (0+255),f,b
  4366  002580  D000               	goto	l3818
  4367  002582                     l3818:
  4368                           
  4369                           ; BSR set to: 0
  4370  002582  0E00               	movlw	0
  4371  002584  0100               	movlb	0	; () banked
  4372  002586  1580               	andwf	___ftpack@arg& (0+255),w,b
  4373  002588  0100               	movlb	0	; () banked
  4374  00258A  6F85               	movwf	??___ftpack& (0+255),b
  4375  00258C  0E00               	movlw	0
  4376  00258E  0100               	movlb	0	; () banked
  4377  002590  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4378  002592  0100               	movlb	0	; () banked
  4379  002594  6F86               	movwf	(??___ftpack+1)& (0+255),b
  4380  002596  0EFF               	movlw	255
  4381  002598  0100               	movlb	0	; () banked
  4382  00259A  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4383  00259C  0100               	movlb	0	; () banked
  4384  00259E  6F87               	movwf	(??___ftpack+2)& (0+255),b
  4385  0025A0  0100               	movlb	0	; () banked
  4386  0025A2  5185               	movf	??___ftpack& (0+255),w,b
  4387  0025A4  0100               	movlb	0	; () banked
  4388  0025A6  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  4389  0025A8  0100               	movlb	0	; () banked
  4390  0025AA  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  4391  0025AC  B4D8               	btfsc	status,2,c
  4392  0025AE  D00A               	goto	l3822
  4393  0025B0  D7D7               	goto	l3814
  4394                           
  4395                           ; BSR set to: 0
  4396  0025B2  D008               	goto	l3822
  4397  0025B4                     l3820:
  4398                           
  4399                           ; BSR set to: 0
  4400  0025B4  0100               	movlb	0	; () banked
  4401  0025B6  0783               	decf	___ftpack@exp& (0+255),f,b
  4402  0025B8  0100               	movlb	0	; () banked
  4403  0025BA  90D8               	bcf	status,0,c
  4404  0025BC  3780               	rlcf	___ftpack@arg& (0+255),f,b
  4405  0025BE  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4406  0025C0  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4407  0025C2  D000               	goto	l3822
  4408  0025C4                     l3822:
  4409                           
  4410                           ; BSR set to: 0
  4411  0025C4  0100               	movlb	0	; () banked
  4412  0025C6  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4413  0025C8  D005               	goto	l822
  4414                           
  4415                           ; BSR set to: 0
  4416  0025CA  0E02               	movlw	2
  4417  0025CC  0100               	movlb	0	; () banked
  4418  0025CE  6183               	cpfslt	___ftpack@exp& (0+255),b
  4419  0025D0  D7F1               	goto	l3820
  4420  0025D2  D000               	goto	l822
  4421  0025D4                     l822:
  4422                           
  4423                           ; BSR set to: 0
  4424  0025D4  0100               	movlb	0	; () banked
  4425  0025D6  B183               	btfsc	___ftpack@exp& (0+255),0,b
  4426  0025D8  D003               	goto	l3828
  4427                           
  4428                           ; BSR set to: 0
  4429  0025DA  0100               	movlb	0	; () banked
  4430  0025DC  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4431  0025DE  D000               	goto	l3828
  4432  0025E0                     l3828:
  4433                           
  4434                           ; BSR set to: 0
  4435  0025E0  0100               	movlb	0	; () banked
  4436  0025E2  90D8               	bcf	status,0,c
  4437  0025E4  3383               	rrcf	___ftpack@exp& (0+255),f,b
  4438  0025E6  0100               	movlb	0	; () banked
  4439  0025E8  5183               	movf	___ftpack@exp& (0+255),w,b
  4440  0025EA  0100               	movlb	0	; () banked
  4441  0025EC  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4442                           
  4443                           ; BSR set to: 0
  4444  0025EE  0100               	movlb	0	; () banked
  4445  0025F0  5184               	movf	___ftpack@sign& (0+255),w,b
  4446  0025F2  0100               	movlb	0	; () banked
  4447  0025F4  B4D8               	btfsc	status,2,c
  4448  0025F6  D003               	goto	l3834
  4449                           
  4450                           ; BSR set to: 0
  4451  0025F8  0100               	movlb	0	; () banked
  4452  0025FA  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4453  0025FC  D000               	goto	l3834
  4454  0025FE                     l3834:
  4455                           
  4456                           ; BSR set to: 0
  4457  0025FE  C080  F080         	movff	___ftpack@arg,?___ftpack
  4458  002602  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
  4459  002606  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
  4460  00260A  D000               	goto	l811
  4461  00260C                     l811:
  4462                           
  4463                           ; BSR set to: 0
  4464  00260C  0012               	return		;funcret
  4465  00260E                     __end_of___ftpack:
  4466                           	opt stack 0
  4467                           tblptru	equ	0xFF8
  4468                           tblptrh	equ	0xFF7
  4469                           tblptrl	equ	0xFF6
  4470                           tablat	equ	0xFF5
  4471                           prodh	equ	0xFF4
  4472                           prodl	equ	0xFF3
  4473                           intcon	equ	0xFF2
  4474                           indf0	equ	0xFEF
  4475                           postinc0	equ	0xFEE
  4476                           fsr0h	equ	0xFEA
  4477                           fsr0l	equ	0xFE9
  4478                           wreg	equ	0xFE8
  4479                           indf2	equ	0xFDF
  4480                           fsr2h	equ	0xFDA
  4481                           fsr2l	equ	0xFD9
  4482                           status	equ	0xFD8
  4483                           
  4484 ;; *************** function _SerTx *****************
  4485 ;; Defined at:
  4486 ;;		line 41 in file "SerComm.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  c               1    wreg     unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  c               1    0[BANK0 ] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;		None               void
  4493 ;; Registers used:
  4494 ;;		wreg
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        1 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    6
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_SerTxStr
  4511 ;;		_breakDouble
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text17
  4516  00303C                     __ptext17:
  4517                           	opt stack 0
  4518  00303C                     _SerTx:
  4519                           	opt stack 21
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;incstack = 0
  4523                           ;SerTx@c stored from wreg
  4524  00303C  0100               	movlb	0	; () banked
  4525  00303E  6F80               	movwf	SerTx@c& (0+255),b
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;SerComm.c: 43: TXREG1 = c;
  4529  003040  C080  FFAD         	movff	SerTx@c,4013	;volatile
  4530                           
  4531                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  4532  003044  D000               	goto	l28
  4533  003046                     l28:
  4534  003046  A89E               	btfss	3998,4,c	;volatile
  4535  003048  D7FE               	goto	l28
  4536  00304A  0012               	return		;funcret
  4537  00304C                     __end_of_SerTx:
  4538                           	opt stack 0
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           intcon	equ	0xFF2
  4546                           indf0	equ	0xFEF
  4547                           postinc0	equ	0xFEE
  4548                           fsr0h	equ	0xFEA
  4549                           fsr0l	equ	0xFE9
  4550                           wreg	equ	0xFE8
  4551                           indf2	equ	0xFDF
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function _SPIReassembleDouble *****************
  4557 ;; Defined at:
  4558 ;;		line 82 in file "SPIMaster.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  dub             3    3[BANK0 ] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  3    0[BANK0 ] unsigned char 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4572 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;Total ram usage:        6 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    6
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_main
  4583 ;;		_MReceiveStrSPI
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text18
  4588  002EA4                     __ptext18:
  4589                           	opt stack 0
  4590  002EA4                     _SPIReassembleDouble:
  4591                           	opt stack 24
  4592                           
  4593                           ;SPIMaster.c: 84: double dub;
  4594                           ;SPIMaster.c: 85: DoublePtr = (unsigned char*) &dub;
  4595                           
  4596                           ;incstack = 0
  4597  002EA4  0E83               	movlw	low SPIReassembleDouble@dub
  4598  002EA6  6E4E               	movwf	_DoublePtr,c
  4599  002EA8  0E00               	movlw	high SPIReassembleDouble@dub
  4600  002EAA  6E4F               	movwf	_DoublePtr+1,c
  4601                           
  4602                           ;SPIMaster.c: 86: DoublePtr[0] = DoubleSPIM[0];
  4603  002EAC  C04E  FFD9         	movff	_DoublePtr,fsr2l
  4604  002EB0  C04F  FFDA         	movff	_DoublePtr+1,fsr2h
  4605  002EB4  C0DA  FFDF         	movff	_DoubleSPIM,indf2
  4606                           
  4607                           ;SPIMaster.c: 87: DoublePtr[1] = DoubleSPIM[1];
  4608  002EB8  EE20 F001          	lfsr	2,1
  4609  002EBC  504E               	movf	_DoublePtr,w,c
  4610  002EBE  26D9               	addwf	fsr2l,f,c
  4611  002EC0  504F               	movf	_DoublePtr+1,w,c
  4612  002EC2  22DA               	addwfc	fsr2h,f,c
  4613  002EC4  C0DB  FFDF         	movff	_DoubleSPIM+1,indf2
  4614                           
  4615                           ;SPIMaster.c: 88: DoublePtr[2] = DoubleSPIM[2];
  4616  002EC8  EE20 F002          	lfsr	2,2
  4617  002ECC  504E               	movf	_DoublePtr,w,c
  4618  002ECE  26D9               	addwf	fsr2l,f,c
  4619  002ED0  504F               	movf	_DoublePtr+1,w,c
  4620  002ED2  22DA               	addwfc	fsr2h,f,c
  4621  002ED4  C0DC  FFDF         	movff	_DoubleSPIM+2,indf2
  4622                           
  4623                           ;SPIMaster.c: 89: return dub;
  4624  002ED8  C083  F080         	movff	SPIReassembleDouble@dub,?_SPIReassembleDouble
  4625  002EDC  C084  F081         	movff	SPIReassembleDouble@dub+1,?_SPIReassembleDouble+1
  4626  002EE0  C085  F082         	movff	SPIReassembleDouble@dub+2,?_SPIReassembleDouble+2
  4627  002EE4  D000               	goto	l391
  4628  002EE6                     l391:
  4629  002EE6  0012               	return		;funcret
  4630  002EE8                     __end_of_SPIReassembleDouble:
  4631                           	opt stack 0
  4632                           tblptru	equ	0xFF8
  4633                           tblptrh	equ	0xFF7
  4634                           tblptrl	equ	0xFF6
  4635                           tablat	equ	0xFF5
  4636                           prodh	equ	0xFF4
  4637                           prodl	equ	0xFF3
  4638                           intcon	equ	0xFF2
  4639                           indf0	equ	0xFEF
  4640                           postinc0	equ	0xFEE
  4641                           fsr0h	equ	0xFEA
  4642                           fsr0l	equ	0xFE9
  4643                           wreg	equ	0xFE8
  4644                           indf2	equ	0xFDF
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _MReceiveSPI *****************
  4650 ;; Defined at:
  4651 ;;		line 46 in file "SPIMaster.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;  tempCH          1    0[BANK0 ] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      unsigned char 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;Total ram usage:        1 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    6
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_MReceiveStrSPI
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text19
  4680  003010                     __ptext19:
  4681                           	opt stack 0
  4682  003010                     _MReceiveSPI:
  4683                           	opt stack 23
  4684                           
  4685                           ;SPIMaster.c: 48: unsigned char tempCH;
  4686                           ;SPIMaster.c: 49: tempCH = SSPBUF;
  4687                           
  4688                           ;incstack = 0
  4689  003010  CFC9 F080          	movff	4041,MReceiveSPI@tempCH	;volatile
  4690                           
  4691                           ;SPIMaster.c: 50: PIR1bits.SSPIF = 0;
  4692  003014  969E               	bcf	3998,3,c	;volatile
  4693                           
  4694                           ;SPIMaster.c: 51: SSPBUF = 0x00;
  4695  003016  0E00               	movlw	0
  4696  003018  6EC9               	movwf	4041,c	;volatile
  4697                           
  4698                           ;SPIMaster.c: 52: while (!PIR1bits.SSPIF);
  4699  00301A  D000               	goto	l369
  4700  00301C                     l369:
  4701  00301C  A69E               	btfss	3998,3,c	;volatile
  4702  00301E  D7FE               	goto	l369
  4703                           
  4704                           ;SPIMaster.c: 53: return SSPBUF;
  4705  003020  50C9               	movf	4041,w,c	;volatile
  4706  003022  D000               	goto	l372
  4707  003024                     l372:
  4708  003024  0012               	return		;funcret
  4709  003026                     __end_of_MReceiveSPI:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           indf0	equ	0xFEF
  4719                           postinc0	equ	0xFEE
  4720                           fsr0h	equ	0xFEA
  4721                           fsr0l	equ	0xFE9
  4722                           wreg	equ	0xFE8
  4723                           indf2	equ	0xFDF
  4724                           fsr2h	equ	0xFDA
  4725                           fsr2l	equ	0xFD9
  4726                           status	equ	0xFD8
  4727                           
  4728 ;; *************** function _Delay10TCYx *****************
  4729 ;; Defined at:
  4730 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  unit            1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  unit            1    0[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;Total ram usage:        1 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    6
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;;		_MSendSPI
  4756 ;;		_MReceiveStrSPI
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text20
  4761  003026                     __ptext20:
  4762                           	opt stack 0
  4763  003026                     _Delay10TCYx:
  4764                           	opt stack 23
  4765                           
  4766                           ;incstack = 0
  4767                           ;Delay10TCYx@unit stored from wreg
  4768  003026  0100               	movlb	0	; () banked
  4769  003028  6F80               	movwf	Delay10TCYx@unit& (0+255),b
  4770  00302A                     
  4771                           ; BSR set to: 0
  4772  00302A  0E03               	movlw	3
  4773  00302C                     u5777:
  4774  00302C  2EE8               	decfsz	wreg,f,c
  4775  00302E  D7FE               	goto	u5777
  4776  003030  F000               	nop	
  4777  003032  0100               	movlb	0	; () banked
  4778  003034  2F80               	decfsz	Delay10TCYx@unit& (0+255),f,b
  4779  003036  D7F9               	goto	l3992
  4780  003038  D000               	goto	l721
  4781  00303A                     l721:
  4782                           
  4783                           ; BSR set to: 0
  4784  00303A  0012               	return		;funcret
  4785  00303C                     __end_of_Delay10TCYx:
  4786                           	opt stack 0
  4787                           tblptru	equ	0xFF8
  4788                           tblptrh	equ	0xFF7
  4789                           tblptrl	equ	0xFF6
  4790                           tablat	equ	0xFF5
  4791                           prodh	equ	0xFF4
  4792                           prodl	equ	0xFF3
  4793                           intcon	equ	0xFF2
  4794                           indf0	equ	0xFEF
  4795                           postinc0	equ	0xFEE
  4796                           fsr0h	equ	0xFEA
  4797                           fsr0l	equ	0xFE9
  4798                           wreg	equ	0xFE8
  4799                           indf2	equ	0xFDF
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _ISR *****************
  4805 ;; Defined at:
  4806 ;;		line 152 in file "SPItest-MASTER.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;		None               void
  4813 ;; Registers used:
  4814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;Total ram usage:       14 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    5
  4827 ;; This function calls:
  4828 ;;		_RCInt
  4829 ;; This function is called by:
  4830 ;;		Interrupt level 2
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	intcode
  4835  000008                     __pintcode:
  4836                           	opt stack 0
  4837  000008                     _ISR:
  4838                           	opt stack 21
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;incstack = 0
  4842  000008  CFFA F031          	movff	pclath,??_ISR
  4843  00000C  CFFB F032          	movff	pclatu,??_ISR+1
  4844  000010  CFE9 F033          	movff	fsr0l,??_ISR+2
  4845  000014  EDB8  F015         	call	int_func,f	;refresh shadow registers
  4846                           pclatu	equ	0xFFB
  4847                           pclath	equ	0xFFA
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           indf0	equ	0xFEF
  4856                           postinc0	equ	0xFEE
  4857                           fsr0h	equ	0xFEA
  4858                           fsr0l	equ	0xFE9
  4859                           wreg	equ	0xFE8
  4860                           indf2	equ	0xFDF
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865                           	psect	intcode_body
  4866  002B70                     __pintcode_body:
  4867                           	opt stack 21
  4868  002B70                     int_func:
  4869                           	opt stack 21
  4870  002B70  0006               	pop		; remove dummy address from shadow register refresh
  4871  002B72  CFEA F034          	movff	fsr0h,??_ISR+3
  4872  002B76  CFE1 F035          	movff	fsr1l,??_ISR+4
  4873  002B7A  CFE2 F036          	movff	fsr1h,??_ISR+5
  4874  002B7E  CFD9 F037          	movff	fsr2l,??_ISR+6
  4875  002B82  CFDA F038          	movff	fsr2h,??_ISR+7
  4876  002B86  CFF3 F039          	movff	prodl,??_ISR+8
  4877  002B8A  CFF4 F03A          	movff	prodh,??_ISR+9
  4878  002B8E  CFF6 F03B          	movff	tblptrl,??_ISR+10
  4879  002B92  CFF7 F03C          	movff	tblptrh,??_ISR+11
  4880  002B96  CFF8 F03D          	movff	tblptru,??_ISR+12
  4881  002B9A  CFF5 F03E          	movff	tablat,??_ISR+13
  4882                           
  4883                           ;SPItest-MASTER.c: 154: if (PIR1bits.RCIF == 1)
  4884  002B9E  AA9E               	btfss	3998,5,c	;volatile
  4885  002BA0  D003               	goto	i2l322
  4886                           
  4887                           ;SPItest-MASTER.c: 155: {
  4888                           ;SPItest-MASTER.c: 156: RCInt();
  4889  002BA2  EC35  F011         	call	_RCInt	;wreg free
  4890  002BA6  D000               	goto	i2l322
  4891  002BA8                     i2l322:
  4892  002BA8  C03E  FFF5         	movff	??_ISR+13,tablat
  4893  002BAC  C03D  FFF8         	movff	??_ISR+12,tblptru
  4894  002BB0  C03C  FFF7         	movff	??_ISR+11,tblptrh
  4895  002BB4  C03B  FFF6         	movff	??_ISR+10,tblptrl
  4896  002BB8  C03A  FFF4         	movff	??_ISR+9,prodh
  4897  002BBC  C039  FFF3         	movff	??_ISR+8,prodl
  4898  002BC0  C038  FFDA         	movff	??_ISR+7,fsr2h
  4899  002BC4  C037  FFD9         	movff	??_ISR+6,fsr2l
  4900  002BC8  C036  FFE2         	movff	??_ISR+5,fsr1h
  4901  002BCC  C035  FFE1         	movff	??_ISR+4,fsr1l
  4902  002BD0  C034  FFEA         	movff	??_ISR+3,fsr0h
  4903  002BD4  C033  FFE9         	movff	??_ISR+2,fsr0l
  4904  002BD8  C032  FFFB         	movff	??_ISR+1,pclatu
  4905  002BDC  C031  FFFA         	movff	??_ISR,pclath
  4906  002BE0  0011               	retfie		f
  4907  002BE2                     __end_of_ISR:
  4908                           	opt stack 0
  4909                           pclatu	equ	0xFFB
  4910                           pclath	equ	0xFFA
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           intcon	equ	0xFF2
  4918                           indf0	equ	0xFEF
  4919                           postinc0	equ	0xFEE
  4920                           fsr0h	equ	0xFEA
  4921                           fsr0l	equ	0xFE9
  4922                           wreg	equ	0xFE8
  4923                           fsr1h	equ	0xFE2
  4924                           fsr1l	equ	0xFE1
  4925                           indf2	equ	0xFDF
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930 ;; *************** function _RCInt *****************
  4931 ;; Defined at:
  4932 ;;		line 19 in file "KeyValue.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  counter         1   47[COMRAM] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;		None               void
  4939 ;; Registers used:
  4940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;Total ram usage:        2 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    4
  4953 ;; This function calls:
  4954 ;;		_keyValue
  4955 ;;		i2_SerTx
  4956 ;; This function is called by:
  4957 ;;		_ISR
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text22
  4962  00226A                     __ptext22:
  4963                           	opt stack 0
  4964  00226A                     _RCInt:
  4965                           	opt stack 21
  4966                           
  4967                           ;KeyValue.c: 21: unsigned char counter = 0;
  4968                           
  4969                           ;incstack = 0
  4970  00226A  0E00               	movlw	0
  4971  00226C  6E30               	movwf	RCInt@counter,c
  4972                           
  4973                           ;KeyValue.c: 23: {
  4974                           ;KeyValue.c: 24: while (PIR1bits.RCIF == 0);
  4975                           
  4976                           ;KeyValue.c: 22: do
  4977  00226E  D000               	goto	i2l99
  4978  002270                     i2l99:
  4979  002270  AA9E               	btfss	3998,5,c	;volatile
  4980  002272  D7FE               	goto	i2l99
  4981                           
  4982                           ;KeyValue.c: 25: received[counter] = RCREG;
  4983  002274  5030               	movf	RCInt@counter,w,c
  4984  002276  0D01               	mullw	1
  4985  002278  0EBC               	movlw	low _received
  4986  00227A  24F3               	addwf	prodl,w,c
  4987  00227C  6ED9               	movwf	fsr2l,c
  4988  00227E  0E00               	movlw	high _received
  4989  002280  20F4               	addwfc	prodh,w,c
  4990  002282  6EDA               	movwf	fsr2h,c
  4991  002284  CFAE FFDF          	movff	4014,indf2	;volatile
  4992                           
  4993                           ;KeyValue.c: 26: SerTx(RCREG);
  4994  002288  50AE               	movf	4014,w,c	;volatile
  4995  00228A  EC2D  F018         	call	i2_SerTx
  4996                           
  4997                           ;KeyValue.c: 27: if ((received[counter] == 0x08) || received[counter] == 0x7F)
  4998  00228E  5030               	movf	RCInt@counter,w,c
  4999  002290  0D01               	mullw	1
  5000  002292  0EBC               	movlw	low _received
  5001  002294  24F3               	addwf	prodl,w,c
  5002  002296  6ED9               	movwf	fsr2l,c
  5003  002298  0E00               	movlw	high _received
  5004  00229A  20F4               	addwfc	prodh,w,c
  5005  00229C  6EDA               	movwf	fsr2h,c
  5006  00229E  0E08               	movlw	8
  5007  0022A0  18DE               	xorwf	postinc2,w,c
  5008  0022A2  B4D8               	btfsc	status,2,c
  5009  0022A4  D00C               	goto	i2l3346
  5010  0022A6  5030               	movf	RCInt@counter,w,c
  5011  0022A8  0D01               	mullw	1
  5012  0022AA  0EBC               	movlw	low _received
  5013  0022AC  24F3               	addwf	prodl,w,c
  5014  0022AE  6ED9               	movwf	fsr2l,c
  5015  0022B0  0E00               	movlw	high _received
  5016  0022B2  20F4               	addwfc	prodh,w,c
  5017  0022B4  6EDA               	movwf	fsr2h,c
  5018  0022B6  0E7F               	movlw	127
  5019  0022B8  18DE               	xorwf	postinc2,w,c
  5020  0022BA  A4D8               	btfss	status,2,c
  5021  0022BC  D010               	goto	i2l3352
  5022  0022BE                     i2l3346:
  5023                           
  5024                           ;KeyValue.c: 28: {
  5025                           ;KeyValue.c: 29: if (counter != 0)
  5026  0022BE  5030               	movf	RCInt@counter,w,c
  5027  0022C0  B4D8               	btfsc	status,2,c
  5028  0022C2  D002               	goto	i2l3350
  5029                           
  5030                           ;KeyValue.c: 30: counter--;
  5031  0022C4  0630               	decf	RCInt@counter,f,c
  5032  0022C6  D000               	goto	i2l3350
  5033  0022C8                     i2l3350:
  5034                           
  5035                           ;KeyValue.c: 31: received[counter] = '\0';
  5036  0022C8  5030               	movf	RCInt@counter,w,c
  5037  0022CA  0D01               	mullw	1
  5038  0022CC  0EBC               	movlw	low _received
  5039  0022CE  24F3               	addwf	prodl,w,c
  5040  0022D0  6ED9               	movwf	fsr2l,c
  5041  0022D2  0E00               	movlw	high _received
  5042  0022D4  20F4               	addwfc	prodh,w,c
  5043  0022D6  6EDA               	movwf	fsr2h,c
  5044  0022D8  0E00               	movlw	0
  5045  0022DA  6EDF               	movwf	indf2,c
  5046                           
  5047                           ;KeyValue.c: 32: }
  5048  0022DC  D01A               	goto	i2l3358
  5049  0022DE                     i2l3352:
  5050                           
  5051                           ;KeyValue.c: 33: else if ((received[counter] != 0x08) && (received[counter] != 0x0D))
  5052  0022DE  5030               	movf	RCInt@counter,w,c
  5053  0022E0  0D01               	mullw	1
  5054  0022E2  0EBC               	movlw	low _received
  5055  0022E4  24F3               	addwf	prodl,w,c
  5056  0022E6  6ED9               	movwf	fsr2l,c
  5057  0022E8  0E00               	movlw	high _received
  5058  0022EA  20F4               	addwfc	prodh,w,c
  5059  0022EC  6EDA               	movwf	fsr2h,c
  5060  0022EE  0E08               	movlw	8
  5061  0022F0  18DE               	xorwf	postinc2,w,c
  5062  0022F2  B4D8               	btfsc	status,2,c
  5063  0022F4  D00E               	goto	i2l3358
  5064  0022F6  5030               	movf	RCInt@counter,w,c
  5065  0022F8  0D01               	mullw	1
  5066  0022FA  0EBC               	movlw	low _received
  5067  0022FC  24F3               	addwf	prodl,w,c
  5068  0022FE  6ED9               	movwf	fsr2l,c
  5069  002300  0E00               	movlw	high _received
  5070  002302  20F4               	addwfc	prodh,w,c
  5071  002304  6EDA               	movwf	fsr2h,c
  5072  002306  0E0D               	movlw	13
  5073  002308  18DE               	xorwf	postinc2,w,c
  5074  00230A  B4D8               	btfsc	status,2,c
  5075  00230C  D002               	goto	i2l3358
  5076                           
  5077                           ;KeyValue.c: 34: counter++;
  5078  00230E  2A30               	incf	RCInt@counter,f,c
  5079  002310  D000               	goto	i2l3358
  5080  002312                     i2l3358:
  5081                           
  5082                           ;KeyValue.c: 35: }
  5083                           ;KeyValue.c: 36: while (RCREG != 0x0D);
  5084  002312  0E0D               	movlw	13
  5085  002314  18AE               	xorwf	4014,w,c	;volatile
  5086  002316  A4D8               	btfss	status,2,c
  5087  002318  D7AB               	goto	i2l99
  5088                           
  5089                           ;KeyValue.c: 38: SerTx(0x0A);
  5090  00231A  0E0A               	movlw	10
  5091  00231C  EC2D  F018         	call	i2_SerTx
  5092                           
  5093                           ;KeyValue.c: 39: SerTx(0x0D);
  5094  002320  0E0D               	movlw	13
  5095  002322  EC2D  F018         	call	i2_SerTx
  5096                           
  5097                           ;KeyValue.c: 40: keyValue(received, 30);
  5098  002326  0EBC               	movlw	low _received
  5099  002328  6E24               	movwf	keyValue@str,c
  5100  00232A  0E00               	movlw	high _received
  5101  00232C  6E25               	movwf	keyValue@str+1,c
  5102  00232E  0E00               	movlw	0
  5103  002330  6E27               	movwf	keyValue@length+1,c
  5104  002332  0E1E               	movlw	30
  5105  002334  6E26               	movwf	keyValue@length,c
  5106  002336  EC28  F00B         	call	_keyValue	;wreg free
  5107                           
  5108                           ;KeyValue.c: 41: SerTx(0x0A);
  5109  00233A  0E0A               	movlw	10
  5110  00233C  EC2D  F018         	call	i2_SerTx
  5111                           
  5112                           ;KeyValue.c: 42: SerTx(0x0D);
  5113  002340  0E0D               	movlw	13
  5114  002342  EC2D  F018         	call	i2_SerTx
  5115                           
  5116                           ;KeyValue.c: 44: if (StrippedKey == 0x01)
  5117  002346  0452               	decf	_StrippedKey,w,c
  5118  002348  A4D8               	btfss	status,2,c
  5119  00234A  D015               	goto	i2l3378
  5120                           
  5121                           ;KeyValue.c: 45: {
  5122                           ;KeyValue.c: 46: if (SetAngle != StrippedValue)
  5123  00234C  504B               	movf	_StrippedValue,w,c
  5124  00234E  1848               	xorwf	_SetAngle,w,c
  5125  002350  E107               	bnz	i2u393_40
  5126  002352  504C               	movf	_StrippedValue+1,w,c
  5127  002354  1849               	xorwf	_SetAngle+1,w,c
  5128  002356  E104               	bnz	i2u393_40
  5129  002358  504D               	movf	_StrippedValue+2,w,c
  5130  00235A  184A               	xorwf	_SetAngle+2,w,c
  5131  00235C  B4D8               	btfsc	status,2,c
  5132  00235E  D008               	goto	i2l3376
  5133  002360                     i2u393_40:
  5134                           
  5135                           ;KeyValue.c: 47: {
  5136                           ;KeyValue.c: 48: SetAngle = StrippedValue;
  5137  002360  C04B  F048         	movff	_StrippedValue,_SetAngle
  5138  002364  C04C  F049         	movff	_StrippedValue+1,_SetAngle+1
  5139  002368  C04D  F04A         	movff	_StrippedValue+2,_SetAngle+2
  5140                           
  5141                           ;KeyValue.c: 49: PIDEnableFlag = 0x03;
  5142  00236C  0E03               	movlw	3
  5143  00236E  D001               	goto	L1
  5144  002370                     i2l3376:
  5145                           
  5146                           ;KeyValue.c: 51: else
  5147                           ;KeyValue.c: 52: PIDEnableFlag = 0x01;
  5148  002370  0E01               	movlw	1
  5149  002372                     L1:
  5150  002372  6E50               	movwf	_PIDEnableFlag,c
  5151                           
  5152                           ;KeyValue.c: 53: }
  5153  002374  D021               	goto	i2l112
  5154  002376                     i2l3378:
  5155                           
  5156                           ;KeyValue.c: 55: else if (StrippedKey == 0x05)
  5157  002376  0E05               	movlw	5
  5158  002378  1852               	xorwf	_StrippedKey,w,c
  5159  00237A  A4D8               	btfss	status,2,c
  5160  00237C  D007               	goto	i2l3382
  5161                           
  5162                           ;KeyValue.c: 56: {
  5163                           ;KeyValue.c: 57: Kp = StrippedValue;
  5164  00237E  C04B  F045         	movff	_StrippedValue,_Kp
  5165  002382  C04C  F046         	movff	_StrippedValue+1,_Kp+1
  5166  002386  C04D  F047         	movff	_StrippedValue+2,_Kp+2
  5167                           
  5168                           ;KeyValue.c: 58: }
  5169  00238A  D016               	goto	i2l112
  5170  00238C                     i2l3382:
  5171                           
  5172                           ;KeyValue.c: 60: else if (StrippedKey == 0x07)
  5173  00238C  0E07               	movlw	7
  5174  00238E  1852               	xorwf	_StrippedKey,w,c
  5175  002390  A4D8               	btfss	status,2,c
  5176  002392  D007               	goto	i2l3386
  5177                           
  5178                           ;KeyValue.c: 61: {
  5179                           ;KeyValue.c: 62: Ki = StrippedValue;
  5180  002394  C04B  F042         	movff	_StrippedValue,_Ki
  5181  002398  C04C  F043         	movff	_StrippedValue+1,_Ki+1
  5182  00239C  C04D  F044         	movff	_StrippedValue+2,_Ki+2
  5183                           
  5184                           ;KeyValue.c: 63: }
  5185  0023A0  D00B               	goto	i2l112
  5186  0023A2                     i2l3386:
  5187                           
  5188                           ;KeyValue.c: 65: else if (StrippedKey == 0x09)
  5189  0023A2  0E09               	movlw	9
  5190  0023A4  1852               	xorwf	_StrippedKey,w,c
  5191  0023A6  A4D8               	btfss	status,2,c
  5192  0023A8  D007               	goto	i2l112
  5193                           
  5194                           ;KeyValue.c: 66: {
  5195                           ;KeyValue.c: 67: Kd = StrippedValue;
  5196  0023AA  C04B  F03F         	movff	_StrippedValue,_Kd
  5197  0023AE  C04C  F040         	movff	_StrippedValue+1,_Kd+1
  5198  0023B2  C04D  F041         	movff	_StrippedValue+2,_Kd+2
  5199  0023B6  D000               	goto	i2l112
  5200  0023B8                     i2l112:
  5201                           
  5202                           ;KeyValue.c: 68: }
  5203                           ;KeyValue.c: 70: PIR1bits.RCIF = 0;
  5204  0023B8  9A9E               	bcf	3998,5,c	;volatile
  5205  0023BA  0012               	return		;funcret
  5206  0023BC                     __end_of_RCInt:
  5207                           	opt stack 0
  5208                           pclatu	equ	0xFFB
  5209                           pclath	equ	0xFFA
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           intcon	equ	0xFF2
  5217                           indf0	equ	0xFEF
  5218                           postinc0	equ	0xFEE
  5219                           fsr0h	equ	0xFEA
  5220                           fsr0l	equ	0xFE9
  5221                           wreg	equ	0xFE8
  5222                           fsr1h	equ	0xFE2
  5223                           fsr1l	equ	0xFE1
  5224                           indf2	equ	0xFDF
  5225                           postinc2	equ	0xFDE
  5226                           fsr2h	equ	0xFDA
  5227                           fsr2l	equ	0xFD9
  5228                           status	equ	0xFD8
  5229                           
  5230 ;; *************** function _keyValue *****************
  5231 ;; Defined at:
  5232 ;;		line 73 in file "KeyValue.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  str             2   35[COMRAM] PTR unsigned char 
  5235 ;;		 -> received(30), 
  5236 ;;  length          2   37[COMRAM] unsigned short 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  str_end         2   41[COMRAM] PTR unsigned char 
  5239 ;;		 -> value(10), 
  5240 ;;  x               1   45[COMRAM] unsigned char 
  5241 ;;  y               1   44[COMRAM] unsigned char 
  5242 ;;  flag            1   43[COMRAM] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;		None               void
  5245 ;; Registers used:
  5246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;Total ram usage:       11 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    3
  5259 ;; This function calls:
  5260 ;;		_isspace
  5261 ;;		_strcmp
  5262 ;;		_strtod
  5263 ;;		i2_SerTx
  5264 ;;		i2_SerTxStr
  5265 ;; This function is called by:
  5266 ;;		_RCInt
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text23
  5271  001650                     __ptext23:
  5272                           	opt stack 0
  5273  001650                     _keyValue:
  5274                           	opt stack 21
  5275                           
  5276                           ;KeyValue.c: 75: unsigned char x = 0;
  5277                           
  5278                           ;incstack = 0
  5279  001650  0E00               	movlw	0
  5280  001652  6E2E               	movwf	keyValue@x,c
  5281                           
  5282                           ;KeyValue.c: 76: unsigned char y = 0;
  5283  001654  0E00               	movlw	0
  5284  001656  6E2D               	movwf	keyValue@y,c
  5285                           
  5286                           ;KeyValue.c: 77: unsigned char* str_end;
  5287                           ;KeyValue.c: 78: unsigned char flag = 0;
  5288  001658  0E00               	movlw	0
  5289  00165A  6E2C               	movwf	keyValue@flag,c
  5290                           
  5291                           ;KeyValue.c: 79: RCflag = 1;
  5292  00165C  0E01               	movlw	1
  5293  00165E  0100               	movlb	0	; () banked
  5294  001660  6FBB               	movwf	_RCflag& (0+255),b
  5295                           
  5296                           ;KeyValue.c: 81: while ((str[x] != '=') && x < length)
  5297  001662  D012               	goto	i2l3110
  5298  001664                     i2l3102:
  5299                           
  5300                           ;KeyValue.c: 82: {
  5301                           ;KeyValue.c: 83: x++;
  5302  001664  2A2E               	incf	keyValue@x,f,c
  5303                           
  5304                           ;KeyValue.c: 84: if (str[x] == '=')
  5305  001666  502E               	movf	keyValue@x,w,c
  5306  001668  0D01               	mullw	1
  5307  00166A  50F3               	movf	prodl,w,c
  5308  00166C  2424               	addwf	keyValue@str,w,c
  5309  00166E  6ED9               	movwf	fsr2l,c
  5310  001670  50F4               	movf	prodh,w,c
  5311  001672  2025               	addwfc	keyValue@str+1,w,c
  5312  001674  6EDA               	movwf	fsr2h,c
  5313  001676  0E3D               	movlw	61
  5314  001678  18DE               	xorwf	postinc2,w,c
  5315  00167A  A4D8               	btfss	status,2,c
  5316  00167C  D002               	goto	i2l3108
  5317                           
  5318                           ;KeyValue.c: 85: {
  5319                           ;KeyValue.c: 86: flag = 1;
  5320  00167E  0E01               	movlw	1
  5321  001680  D001               	goto	L2
  5322  001682                     i2l3108:
  5323                           
  5324                           ;KeyValue.c: 88: else
  5325                           ;KeyValue.c: 89: flag = 0;
  5326  001682  0E00               	movlw	0
  5327  001684                     L2:
  5328  001684  6E2C               	movwf	keyValue@flag,c
  5329  001686  D000               	goto	i2l3110
  5330  001688                     i2l3110:
  5331  001688  502E               	movf	keyValue@x,w,c
  5332  00168A  0D01               	mullw	1
  5333  00168C  50F3               	movf	prodl,w,c
  5334  00168E  2424               	addwf	keyValue@str,w,c
  5335  001690  6ED9               	movwf	fsr2l,c
  5336  001692  50F4               	movf	prodh,w,c
  5337  001694  2025               	addwfc	keyValue@str+1,w,c
  5338  001696  6EDA               	movwf	fsr2h,c
  5339  001698  0E3D               	movlw	61
  5340  00169A  18DE               	xorwf	postinc2,w,c
  5341  00169C  B4D8               	btfsc	status,2,c
  5342  00169E  D00B               	goto	i2l3114
  5343  0016A0  502E               	movf	keyValue@x,w,c
  5344  0016A2  6E28               	movwf	??_keyValue& (0+255),c
  5345  0016A4  6A29               	clrf	(??_keyValue+1)& (0+255),c
  5346  0016A6  5026               	movf	keyValue@length,w,c
  5347  0016A8  5C28               	subwf	??_keyValue,w,c
  5348  0016AA  5027               	movf	keyValue@length+1,w,c
  5349  0016AC  5829               	subwfb	??_keyValue+1,w,c
  5350  0016AE  B0D8               	btfsc	status,0,c
  5351  0016B0  D002               	goto	i2l3114
  5352  0016B2  D7D8               	goto	i2l3102
  5353  0016B4  D000               	goto	i2l3114
  5354  0016B6                     i2l3114:
  5355                           
  5356                           ;KeyValue.c: 90: }
  5357                           ;KeyValue.c: 91: if ((x < length) && flag)
  5358  0016B6  502E               	movf	keyValue@x,w,c
  5359  0016B8  6E28               	movwf	??_keyValue& (0+255),c
  5360  0016BA  6A29               	clrf	(??_keyValue+1)& (0+255),c
  5361  0016BC  5026               	movf	keyValue@length,w,c
  5362  0016BE  5C28               	subwf	??_keyValue,w,c
  5363  0016C0  5027               	movf	keyValue@length+1,w,c
  5364  0016C2  5829               	subwfb	??_keyValue+1,w,c
  5365  0016C4  B0D8               	btfsc	status,0,c
  5366  0016C6  D100               	goto	i2l3180
  5367  0016C8  502C               	movf	keyValue@flag,w,c
  5368  0016CA  B4D8               	btfsc	status,2,c
  5369  0016CC  D0FD               	goto	i2l3180
  5370                           
  5371                           ;KeyValue.c: 92: {
  5372                           ;KeyValue.c: 93: for (y = 0; y < x && y < 5; y++)
  5373  0016CE  0E00               	movlw	0
  5374  0016D0  6E2D               	movwf	keyValue@y,c
  5375  0016D2  D022               	goto	i2l3126
  5376  0016D4                     i2l3120:
  5377                           
  5378                           ;KeyValue.c: 94: {
  5379                           ;KeyValue.c: 95: if (isspace(str[y]) == 0)
  5380  0016D4  502D               	movf	keyValue@y,w,c
  5381  0016D6  0D01               	mullw	1
  5382  0016D8  50F3               	movf	prodl,w,c
  5383  0016DA  2424               	addwf	keyValue@str,w,c
  5384  0016DC  6ED9               	movwf	fsr2l,c
  5385  0016DE  50F4               	movf	prodh,w,c
  5386  0016E0  2025               	addwfc	keyValue@str+1,w,c
  5387  0016E2  6EDA               	movwf	fsr2h,c
  5388  0016E4  50DF               	movf	indf2,w,c
  5389  0016E6  ECAE  F017         	call	_isspace
  5390  0016EA  B0D8               	btfsc	status,0,c
  5391  0016EC  D013               	goto	i2l3124
  5392                           
  5393                           ;KeyValue.c: 96: key[y] = str[y];
  5394  0016EE  502D               	movf	keyValue@y,w,c
  5395  0016F0  0D01               	mullw	1
  5396  0016F2  50F3               	movf	prodl,w,c
  5397  0016F4  2424               	addwf	keyValue@str,w,c
  5398  0016F6  6ED9               	movwf	fsr2l,c
  5399  0016F8  50F4               	movf	prodh,w,c
  5400  0016FA  2025               	addwfc	keyValue@str+1,w,c
  5401  0016FC  6EDA               	movwf	fsr2h,c
  5402  0016FE  502D               	movf	keyValue@y,w,c
  5403  001700  0D01               	mullw	1
  5404  001702  0E5D               	movlw	low _key
  5405  001704  24F3               	addwf	prodl,w,c
  5406  001706  6EE1               	movwf	fsr1l,c
  5407  001708  0E00               	movlw	high _key
  5408  00170A  20F4               	addwfc	prodh,w,c
  5409  00170C  6EE2               	movwf	fsr1h,c
  5410  00170E  CFDF FFE7          	movff	indf2,indf1
  5411  001712  D000               	goto	i2l3124
  5412  001714                     i2l3124:
  5413  001714  2A2D               	incf	keyValue@y,f,c
  5414  001716  D000               	goto	i2l3126
  5415  001718                     i2l3126:
  5416  001718  502E               	movf	keyValue@x,w,c
  5417  00171A  5C2D               	subwf	keyValue@y,w,c
  5418  00171C  B0D8               	btfsc	status,0,c
  5419  00171E  D004               	goto	i2l3130
  5420  001720  0E04               	movlw	4
  5421  001722  642D               	cpfsgt	keyValue@y,c
  5422  001724  D7D7               	goto	i2l3120
  5423  001726  D000               	goto	i2l3130
  5424  001728                     i2l3130:
  5425                           
  5426                           ;KeyValue.c: 97: }
  5427                           ;KeyValue.c: 99: SerTxStr("Key: ");
  5428  001728  0E30               	movlw	low STR_2
  5429  00172A  6E02               	movwf	i2SerTxStr@string,c
  5430  00172C  0E10               	movlw	high STR_2
  5431  00172E  6E03               	movwf	i2SerTxStr@string+1,c
  5432  001730  ECB3  F016         	call	i2_SerTxStr	;wreg free
  5433                           
  5434                           ;KeyValue.c: 100: SerTxStr(key);
  5435  001734  0E5D               	movlw	low _key
  5436  001736  6E02               	movwf	i2SerTxStr@string,c
  5437  001738  0E00               	movlw	high _key
  5438  00173A  6E03               	movwf	i2SerTxStr@string+1,c
  5439  00173C  ECB3  F016         	call	i2_SerTxStr	;wreg free
  5440                           
  5441                           ;KeyValue.c: 102: for (y = 0; str[x + 1] != (0); y++)
  5442  001740  0E00               	movlw	0
  5443  001742  6E2D               	movwf	keyValue@y,c
  5444  001744  D015               	goto	i2l3140
  5445  001746                     i2l3134:
  5446                           
  5447                           ;KeyValue.c: 103: {
  5448                           ;KeyValue.c: 104: x++;
  5449  001746  2A2E               	incf	keyValue@x,f,c
  5450                           
  5451                           ;KeyValue.c: 106: value[y] = str[x];
  5452  001748  502E               	movf	keyValue@x,w,c
  5453  00174A  0D01               	mullw	1
  5454  00174C  50F3               	movf	prodl,w,c
  5455  00174E  2424               	addwf	keyValue@str,w,c
  5456  001750  6ED9               	movwf	fsr2l,c
  5457  001752  50F4               	movf	prodh,w,c
  5458  001754  2025               	addwfc	keyValue@str+1,w,c
  5459  001756  6EDA               	movwf	fsr2h,c
  5460  001758  502D               	movf	keyValue@y,w,c
  5461  00175A  0D01               	mullw	1
  5462  00175C  0E53               	movlw	low _value
  5463  00175E  24F3               	addwf	prodl,w,c
  5464  001760  6EE1               	movwf	fsr1l,c
  5465  001762  0E00               	movlw	high _value
  5466  001764  20F4               	addwfc	prodh,w,c
  5467  001766  6EE2               	movwf	fsr1h,c
  5468  001768  CFDF FFE7          	movff	indf2,indf1
  5469  00176C  2A2D               	incf	keyValue@y,f,c
  5470  00176E  D000               	goto	i2l3140
  5471  001770                     i2l3140:
  5472  001770  502E               	movf	keyValue@x,w,c
  5473  001772  6E28               	movwf	??_keyValue& (0+255),c
  5474  001774  6A29               	clrf	(??_keyValue+1)& (0+255),c
  5475  001776  0E01               	movlw	1
  5476  001778  2628               	addwf	??_keyValue,f,c
  5477  00177A  0E00               	movlw	0
  5478  00177C  2229               	addwfc	??_keyValue+1,f,c
  5479  00177E  5028               	movf	??_keyValue,w,c
  5480  001780  2424               	addwf	keyValue@str,w,c
  5481  001782  6ED9               	movwf	fsr2l,c
  5482  001784  5029               	movf	??_keyValue+1,w,c
  5483  001786  2025               	addwfc	keyValue@str+1,w,c
  5484  001788  6EDA               	movwf	fsr2h,c
  5485  00178A  50DF               	movf	indf2,w,c
  5486  00178C  A4D8               	btfss	status,2,c
  5487  00178E  D7DB               	goto	i2l3134
  5488                           
  5489                           ;KeyValue.c: 107: }
  5490                           ;KeyValue.c: 108: SerTxStr("   Value: ");
  5491  001790  0E25               	movlw	low STR_3
  5492  001792  6E02               	movwf	i2SerTxStr@string,c
  5493  001794  0E10               	movlw	high STR_3
  5494  001796  6E03               	movwf	i2SerTxStr@string+1,c
  5495  001798  ECB3  F016         	call	i2_SerTxStr	;wreg free
  5496                           
  5497                           ;KeyValue.c: 109: SerTxStr(value);
  5498  00179C  0E53               	movlw	low _value
  5499  00179E  6E02               	movwf	i2SerTxStr@string,c
  5500  0017A0  0E00               	movlw	high _value
  5501  0017A2  6E03               	movwf	i2SerTxStr@string+1,c
  5502  0017A4  ECB3  F016         	call	i2_SerTxStr	;wreg free
  5503                           
  5504                           ;KeyValue.c: 111: if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  5505  0017A8  0E5D               	movlw	low _key
  5506  0017AA  6E01               	movwf	strcmp@s1,c
  5507  0017AC  0E00               	movlw	high _key
  5508  0017AE  6E02               	movwf	strcmp@s1+1,c
  5509  0017B0  0E3E               	movlw	low STR_4
  5510  0017B2  6E03               	movwf	strcmp@s2,c
  5511  0017B4  0E10               	movlw	high STR_4
  5512  0017B6  6E04               	movwf	strcmp@s2+1,c
  5513  0017B8  EC08  F017         	call	_strcmp	;wreg free
  5514  0017BC  5001               	movf	?_strcmp,w,c
  5515  0017BE  1002               	iorwf	?_strcmp+1,w,c
  5516  0017C0  B4D8               	btfsc	status,2,c
  5517  0017C2  D00E               	goto	i2l3148
  5518  0017C4  0E5D               	movlw	low _key
  5519  0017C6  6E01               	movwf	strcmp@s1,c
  5520  0017C8  0E00               	movlw	high _key
  5521  0017CA  6E02               	movwf	strcmp@s1+1,c
  5522  0017CC  0E46               	movlw	low STR_5
  5523  0017CE  6E03               	movwf	strcmp@s2,c
  5524  0017D0  0E10               	movlw	high STR_5
  5525  0017D2  6E04               	movwf	strcmp@s2+1,c
  5526  0017D4  EC08  F017         	call	_strcmp	;wreg free
  5527  0017D8  5001               	movf	?_strcmp,w,c
  5528  0017DA  1002               	iorwf	?_strcmp+1,w,c
  5529  0017DC  A4D8               	btfss	status,2,c
  5530  0017DE  D006               	goto	i2l3152
  5531  0017E0                     i2l3148:
  5532                           
  5533                           ;KeyValue.c: 112: {
  5534                           ;KeyValue.c: 113: StrippedKey = 0x01;
  5535  0017E0  0E01               	movlw	1
  5536  0017E2  6E52               	movwf	_StrippedKey,c
  5537                           
  5538                           ;KeyValue.c: 114: SerTx(';');
  5539  0017E4  0E3B               	movlw	59
  5540  0017E6  EC2D  F018         	call	i2_SerTx
  5541                           
  5542                           ;KeyValue.c: 115: }
  5543  0017EA  D199               	goto	i2l3252
  5544  0017EC                     i2l3152:
  5545                           
  5546                           ;KeyValue.c: 117: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  5547  0017EC  0E5D               	movlw	low _key
  5548  0017EE  6E01               	movwf	strcmp@s1,c
  5549  0017F0  0E00               	movlw	high _key
  5550  0017F2  6E02               	movwf	strcmp@s1+1,c
  5551  0017F4  0E50               	movlw	low STR_6
  5552  0017F6  6E03               	movwf	strcmp@s2,c
  5553  0017F8  0E10               	movlw	high STR_6
  5554  0017FA  6E04               	movwf	strcmp@s2+1,c
  5555  0017FC  EC08  F017         	call	_strcmp	;wreg free
  5556  001800  5001               	movf	?_strcmp,w,c
  5557  001802  1002               	iorwf	?_strcmp+1,w,c
  5558  001804  B4D8               	btfsc	status,2,c
  5559  001806  D00E               	goto	i2l3156
  5560  001808  0E5D               	movlw	low _key
  5561  00180A  6E01               	movwf	strcmp@s1,c
  5562  00180C  0E00               	movlw	high _key
  5563  00180E  6E02               	movwf	strcmp@s1+1,c
  5564  001810  0E5C               	movlw	low STR_7
  5565  001812  6E03               	movwf	strcmp@s2,c
  5566  001814  0E10               	movlw	high STR_7
  5567  001816  6E04               	movwf	strcmp@s2+1,c
  5568  001818  EC08  F017         	call	_strcmp	;wreg free
  5569  00181C  5001               	movf	?_strcmp,w,c
  5570  00181E  1002               	iorwf	?_strcmp+1,w,c
  5571  001820  A4D8               	btfss	status,2,c
  5572  001822  D006               	goto	i2l3160
  5573  001824                     i2l3156:
  5574                           
  5575                           ;KeyValue.c: 118: {
  5576                           ;KeyValue.c: 119: StrippedKey = 0x05;
  5577  001824  0E05               	movlw	5
  5578  001826  6E52               	movwf	_StrippedKey,c
  5579                           
  5580                           ;KeyValue.c: 120: SerTx(';');
  5581  001828  0E3B               	movlw	59
  5582  00182A  EC2D  F018         	call	i2_SerTx
  5583                           
  5584                           ;KeyValue.c: 121: }
  5585  00182E  D177               	goto	i2l3252
  5586  001830                     i2l3160:
  5587                           
  5588                           ;KeyValue.c: 123: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  5589  001830  0E5D               	movlw	low _key
  5590  001832  6E01               	movwf	strcmp@s1,c
  5591  001834  0E00               	movlw	high _key
  5592  001836  6E02               	movwf	strcmp@s1+1,c
  5593  001838  0E4D               	movlw	low STR_8
  5594  00183A  6E03               	movwf	strcmp@s2,c
  5595  00183C  0E10               	movlw	high STR_8
  5596  00183E  6E04               	movwf	strcmp@s2+1,c
  5597  001840  EC08  F017         	call	_strcmp	;wreg free
  5598  001844  5001               	movf	?_strcmp,w,c
  5599  001846  1002               	iorwf	?_strcmp+1,w,c
  5600  001848  B4D8               	btfsc	status,2,c
  5601  00184A  D00E               	goto	i2l3164
  5602  00184C  0E5D               	movlw	low _key
  5603  00184E  6E01               	movwf	strcmp@s1,c
  5604  001850  0E00               	movlw	high _key
  5605  001852  6E02               	movwf	strcmp@s1+1,c
  5606  001854  0E59               	movlw	low STR_9
  5607  001856  6E03               	movwf	strcmp@s2,c
  5608  001858  0E10               	movlw	high STR_9
  5609  00185A  6E04               	movwf	strcmp@s2+1,c
  5610  00185C  EC08  F017         	call	_strcmp	;wreg free
  5611  001860  5001               	movf	?_strcmp,w,c
  5612  001862  1002               	iorwf	?_strcmp+1,w,c
  5613  001864  A4D8               	btfss	status,2,c
  5614  001866  D006               	goto	i2l3168
  5615  001868                     i2l3164:
  5616                           
  5617                           ;KeyValue.c: 124: {
  5618                           ;KeyValue.c: 125: StrippedKey = 0x07;
  5619  001868  0E07               	movlw	7
  5620  00186A  6E52               	movwf	_StrippedKey,c
  5621                           
  5622                           ;KeyValue.c: 126: SerTx(';');
  5623  00186C  0E3B               	movlw	59
  5624  00186E  EC2D  F018         	call	i2_SerTx
  5625                           
  5626                           ;KeyValue.c: 127: }
  5627  001872  D155               	goto	i2l3252
  5628  001874                     i2l3168:
  5629                           
  5630                           ;KeyValue.c: 129: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  5631  001874  0E5D               	movlw	low _key
  5632  001876  6E01               	movwf	strcmp@s1,c
  5633  001878  0E00               	movlw	high _key
  5634  00187A  6E02               	movwf	strcmp@s1+1,c
  5635  00187C  0E4A               	movlw	low STR_10
  5636  00187E  6E03               	movwf	strcmp@s2,c
  5637  001880  0E10               	movlw	high STR_10
  5638  001882  6E04               	movwf	strcmp@s2+1,c
  5639  001884  EC08  F017         	call	_strcmp	;wreg free
  5640  001888  5001               	movf	?_strcmp,w,c
  5641  00188A  1002               	iorwf	?_strcmp+1,w,c
  5642  00188C  B4D8               	btfsc	status,2,c
  5643  00188E  D00E               	goto	i2l3172
  5644  001890  0E5D               	movlw	low _key
  5645  001892  6E01               	movwf	strcmp@s1,c
  5646  001894  0E00               	movlw	high _key
  5647  001896  6E02               	movwf	strcmp@s1+1,c
  5648  001898  0E56               	movlw	low STR_11
  5649  00189A  6E03               	movwf	strcmp@s2,c
  5650  00189C  0E10               	movlw	high STR_11
  5651  00189E  6E04               	movwf	strcmp@s2+1,c
  5652  0018A0  EC08  F017         	call	_strcmp	;wreg free
  5653  0018A4  5001               	movf	?_strcmp,w,c
  5654  0018A6  1002               	iorwf	?_strcmp+1,w,c
  5655  0018A8  A4D8               	btfss	status,2,c
  5656  0018AA  D006               	goto	i2l3176
  5657  0018AC                     i2l3172:
  5658                           
  5659                           ;KeyValue.c: 130: {
  5660                           ;KeyValue.c: 131: StrippedKey = 0x09;
  5661  0018AC  0E09               	movlw	9
  5662  0018AE  6E52               	movwf	_StrippedKey,c
  5663                           
  5664                           ;KeyValue.c: 132: SerTx(';');
  5665  0018B0  0E3B               	movlw	59
  5666  0018B2  EC2D  F018         	call	i2_SerTx
  5667                           
  5668                           ;KeyValue.c: 133: }
  5669  0018B6  D133               	goto	i2l3252
  5670  0018B8                     i2l3176:
  5671                           
  5672                           ;KeyValue.c: 135: else
  5673                           ;KeyValue.c: 136: {
  5674                           ;KeyValue.c: 137: SerTxStr("???");
  5675  0018B8  0E36               	movlw	low STR_12
  5676  0018BA  6E02               	movwf	i2SerTxStr@string,c
  5677  0018BC  0E10               	movlw	high STR_12
  5678  0018BE  6E03               	movwf	i2SerTxStr@string+1,c
  5679  0018C0  ECB3  F016         	call	i2_SerTxStr	;wreg free
  5680  0018C4  D129               	goto	i2l3250
  5681                           
  5682                           ;KeyValue.c: 139: }
  5683                           ;KeyValue.c: 140: }
  5684                           
  5685                           ;KeyValue.c: 138: StrippedKey = 0;
  5686  0018C6  D12B               	goto	i2l3252
  5687  0018C8                     i2l3180:
  5688                           
  5689                           ;KeyValue.c: 142: else if (flag == 0)
  5690  0018C8  502C               	movf	keyValue@flag,w,c
  5691  0018CA  A4D8               	btfss	status,2,c
  5692  0018CC  D128               	goto	i2l3252
  5693                           
  5694                           ;KeyValue.c: 143: {
  5695                           ;KeyValue.c: 144: y = 0;
  5696  0018CE  0E00               	movlw	0
  5697  0018D0  6E2D               	movwf	keyValue@y,c
  5698                           
  5699                           ;KeyValue.c: 145: while (str[y] != 0x0D)
  5700  0018D2  D014               	goto	i2l3188
  5701  0018D4                     i2l3184:
  5702                           
  5703                           ;KeyValue.c: 146: {
  5704                           ;KeyValue.c: 148: key[y] = str[y];
  5705  0018D4  502D               	movf	keyValue@y,w,c
  5706  0018D6  0D01               	mullw	1
  5707  0018D8  50F3               	movf	prodl,w,c
  5708  0018DA  2424               	addwf	keyValue@str,w,c
  5709  0018DC  6ED9               	movwf	fsr2l,c
  5710  0018DE  50F4               	movf	prodh,w,c
  5711  0018E0  2025               	addwfc	keyValue@str+1,w,c
  5712  0018E2  6EDA               	movwf	fsr2h,c
  5713  0018E4  502D               	movf	keyValue@y,w,c
  5714  0018E6  0D01               	mullw	1
  5715  0018E8  0E5D               	movlw	low _key
  5716  0018EA  24F3               	addwf	prodl,w,c
  5717  0018EC  6EE1               	movwf	fsr1l,c
  5718  0018EE  0E00               	movlw	high _key
  5719  0018F0  20F4               	addwfc	prodh,w,c
  5720  0018F2  6EE2               	movwf	fsr1h,c
  5721  0018F4  CFDF FFE7          	movff	indf2,indf1
  5722                           
  5723                           ;KeyValue.c: 149: y++;
  5724  0018F8  2A2D               	incf	keyValue@y,f,c
  5725  0018FA  D000               	goto	i2l3188
  5726  0018FC                     i2l3188:
  5727  0018FC  502D               	movf	keyValue@y,w,c
  5728  0018FE  0D01               	mullw	1
  5729  001900  50F3               	movf	prodl,w,c
  5730  001902  2424               	addwf	keyValue@str,w,c
  5731  001904  6ED9               	movwf	fsr2l,c
  5732  001906  50F4               	movf	prodh,w,c
  5733  001908  2025               	addwfc	keyValue@str+1,w,c
  5734  00190A  6EDA               	movwf	fsr2h,c
  5735  00190C  0E0D               	movlw	13
  5736  00190E  18DE               	xorwf	postinc2,w,c
  5737  001910  A4D8               	btfss	status,2,c
  5738  001912  D7E0               	goto	i2l3184
  5739                           
  5740                           ;KeyValue.c: 150: }
  5741                           ;KeyValue.c: 152: SerTxStr("Key: ");
  5742  001914  0E30               	movlw	low STR_2
  5743  001916  6E02               	movwf	i2SerTxStr@string,c
  5744  001918  0E10               	movlw	high STR_2
  5745  00191A  6E03               	movwf	i2SerTxStr@string+1,c
  5746  00191C  ECB3  F016         	call	i2_SerTxStr	;wreg free
  5747                           
  5748                           ;KeyValue.c: 153: SerTxStr(key);
  5749  001920  0E5D               	movlw	low _key
  5750  001922  6E02               	movwf	i2SerTxStr@string,c
  5751  001924  0E00               	movlw	high _key
  5752  001926  6E03               	movwf	i2SerTxStr@string+1,c
  5753  001928  ECB3  F016         	call	i2_SerTxStr	;wreg free
  5754                           
  5755                           ;KeyValue.c: 155: if ((strcmp(key, "AZ") == 0) || (strcmp(key, "az") == 0))
  5756  00192C  0E5D               	movlw	low _key
  5757  00192E  6E01               	movwf	strcmp@s1,c
  5758  001930  0E00               	movlw	high _key
  5759  001932  6E02               	movwf	strcmp@s1+1,c
  5760  001934  0E53               	movlw	low STR_14
  5761  001936  6E03               	movwf	strcmp@s2,c
  5762  001938  0E10               	movlw	high STR_14
  5763  00193A  6E04               	movwf	strcmp@s2+1,c
  5764  00193C  EC08  F017         	call	_strcmp	;wreg free
  5765  001940  5001               	movf	?_strcmp,w,c
  5766  001942  1002               	iorwf	?_strcmp+1,w,c
  5767  001944  B4D8               	btfsc	status,2,c
  5768  001946  D00E               	goto	i2l3196
  5769  001948  0E5D               	movlw	low _key
  5770  00194A  6E01               	movwf	strcmp@s1,c
  5771  00194C  0E00               	movlw	high _key
  5772  00194E  6E02               	movwf	strcmp@s1+1,c
  5773  001950  0E5F               	movlw	low STR_15
  5774  001952  6E03               	movwf	strcmp@s2,c
  5775  001954  0E10               	movlw	high STR_15
  5776  001956  6E04               	movwf	strcmp@s2+1,c
  5777  001958  EC08  F017         	call	_strcmp	;wreg free
  5778  00195C  5001               	movf	?_strcmp,w,c
  5779  00195E  1002               	iorwf	?_strcmp+1,w,c
  5780  001960  A4D8               	btfss	status,2,c
  5781  001962  D007               	goto	i2l3200
  5782  001964                     i2l3196:
  5783                           
  5784                           ;KeyValue.c: 156: {
  5785                           ;KeyValue.c: 157: AZEL = 1;
  5786  001964  0E01               	movlw	1
  5787  001966  0100               	movlb	0	; () banked
  5788  001968  6FDE               	movwf	_AZEL& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;KeyValue.c: 158: SerTx(';');
  5792  00196A  0E3B               	movlw	59
  5793  00196C  EC2D  F018         	call	i2_SerTx
  5794                           
  5795                           ;KeyValue.c: 159: }
  5796  001970  D0D6               	goto	i2l3252
  5797  001972                     i2l3200:
  5798                           
  5799                           ;KeyValue.c: 161: else if ((strcmp(key, "EL") == 0) || (strcmp(key, "el") == 0))
  5800  001972  0E5D               	movlw	low _key
  5801  001974  6E01               	movwf	strcmp@s1,c
  5802  001976  0E00               	movlw	high _key
  5803  001978  6E02               	movwf	strcmp@s1+1,c
  5804  00197A  0E3B               	movlw	low (STR_20+1)
  5805  00197C  6E03               	movwf	strcmp@s2,c
  5806  00197E  0E10               	movlw	high (STR_20+1)
  5807  001980  6E04               	movwf	strcmp@s2+1,c
  5808  001982  EC08  F017         	call	_strcmp	;wreg free
  5809  001986  5001               	movf	?_strcmp,w,c
  5810  001988  1002               	iorwf	?_strcmp+1,w,c
  5811  00198A  B4D8               	btfsc	status,2,c
  5812  00198C  D00E               	goto	i2l3204
  5813  00198E  0E5D               	movlw	low _key
  5814  001990  6E01               	movwf	strcmp@s1,c
  5815  001992  0E00               	movlw	high _key
  5816  001994  6E02               	movwf	strcmp@s1+1,c
  5817  001996  0E43               	movlw	low (STR_21+1)
  5818  001998  6E03               	movwf	strcmp@s2,c
  5819  00199A  0E10               	movlw	high (STR_21+1)
  5820  00199C  6E04               	movwf	strcmp@s2+1,c
  5821  00199E  EC08  F017         	call	_strcmp	;wreg free
  5822  0019A2  5001               	movf	?_strcmp,w,c
  5823  0019A4  1002               	iorwf	?_strcmp+1,w,c
  5824  0019A6  A4D8               	btfss	status,2,c
  5825  0019A8  D007               	goto	i2l3208
  5826  0019AA                     i2l3204:
  5827                           
  5828                           ;KeyValue.c: 162: {
  5829                           ;KeyValue.c: 163: AZEL = 2;
  5830  0019AA  0E02               	movlw	2
  5831  0019AC  0100               	movlb	0	; () banked
  5832  0019AE  6FDE               	movwf	_AZEL& (0+255),b
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;KeyValue.c: 164: SerTx(';');
  5836  0019B0  0E3B               	movlw	59
  5837  0019B2  EC2D  F018         	call	i2_SerTx
  5838                           
  5839                           ;KeyValue.c: 165: }
  5840  0019B6  D0B3               	goto	i2l3252
  5841  0019B8                     i2l3208:
  5842                           
  5843                           ;KeyValue.c: 167: else if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  5844  0019B8  0E5D               	movlw	low _key
  5845  0019BA  6E01               	movwf	strcmp@s1,c
  5846  0019BC  0E00               	movlw	high _key
  5847  0019BE  6E02               	movwf	strcmp@s1+1,c
  5848  0019C0  0E3E               	movlw	low STR_4
  5849  0019C2  6E03               	movwf	strcmp@s2,c
  5850  0019C4  0E10               	movlw	high STR_4
  5851  0019C6  6E04               	movwf	strcmp@s2+1,c
  5852  0019C8  EC08  F017         	call	_strcmp	;wreg free
  5853  0019CC  5001               	movf	?_strcmp,w,c
  5854  0019CE  1002               	iorwf	?_strcmp+1,w,c
  5855  0019D0  B4D8               	btfsc	status,2,c
  5856  0019D2  D00E               	goto	i2l3212
  5857  0019D4  0E5D               	movlw	low _key
  5858  0019D6  6E01               	movwf	strcmp@s1,c
  5859  0019D8  0E00               	movlw	high _key
  5860  0019DA  6E02               	movwf	strcmp@s1+1,c
  5861  0019DC  0E46               	movlw	low STR_5
  5862  0019DE  6E03               	movwf	strcmp@s2,c
  5863  0019E0  0E10               	movlw	high STR_5
  5864  0019E2  6E04               	movwf	strcmp@s2+1,c
  5865  0019E4  EC08  F017         	call	_strcmp	;wreg free
  5866  0019E8  5001               	movf	?_strcmp,w,c
  5867  0019EA  1002               	iorwf	?_strcmp+1,w,c
  5868  0019EC  A4D8               	btfss	status,2,c
  5869  0019EE  D006               	goto	i2l3216
  5870  0019F0                     i2l3212:
  5871                           
  5872                           ;KeyValue.c: 168: {
  5873                           ;KeyValue.c: 169: StrippedKey = 0x02;
  5874  0019F0  0E02               	movlw	2
  5875  0019F2  6E52               	movwf	_StrippedKey,c
  5876                           
  5877                           ;KeyValue.c: 170: SerTx(';');
  5878  0019F4  0E3B               	movlw	59
  5879  0019F6  EC2D  F018         	call	i2_SerTx
  5880                           
  5881                           ;KeyValue.c: 171: }
  5882  0019FA  D091               	goto	i2l3252
  5883  0019FC                     i2l3216:
  5884                           
  5885                           ;KeyValue.c: 173: else if ((strcmp(key, "VEL") == 0) || (strcmp(key, "vel") == 0))
  5886  0019FC  0E5D               	movlw	low _key
  5887  0019FE  6E01               	movwf	strcmp@s1,c
  5888  001A00  0E00               	movlw	high _key
  5889  001A02  6E02               	movwf	strcmp@s1+1,c
  5890  001A04  0E3A               	movlw	low STR_20
  5891  001A06  6E03               	movwf	strcmp@s2,c
  5892  001A08  0E10               	movlw	high STR_20
  5893  001A0A  6E04               	movwf	strcmp@s2+1,c
  5894  001A0C  EC08  F017         	call	_strcmp	;wreg free
  5895  001A10  5001               	movf	?_strcmp,w,c
  5896  001A12  1002               	iorwf	?_strcmp+1,w,c
  5897  001A14  B4D8               	btfsc	status,2,c
  5898  001A16  D00E               	goto	i2l3220
  5899  001A18  0E5D               	movlw	low _key
  5900  001A1A  6E01               	movwf	strcmp@s1,c
  5901  001A1C  0E00               	movlw	high _key
  5902  001A1E  6E02               	movwf	strcmp@s1+1,c
  5903  001A20  0E42               	movlw	low STR_21
  5904  001A22  6E03               	movwf	strcmp@s2,c
  5905  001A24  0E10               	movlw	high STR_21
  5906  001A26  6E04               	movwf	strcmp@s2+1,c
  5907  001A28  EC08  F017         	call	_strcmp	;wreg free
  5908  001A2C  5001               	movf	?_strcmp,w,c
  5909  001A2E  1002               	iorwf	?_strcmp+1,w,c
  5910  001A30  A4D8               	btfss	status,2,c
  5911  001A32  D006               	goto	i2l3224
  5912  001A34                     i2l3220:
  5913                           
  5914                           ;KeyValue.c: 174: {
  5915                           ;KeyValue.c: 175: StrippedKey = 0x03;
  5916  001A34  0E03               	movlw	3
  5917  001A36  6E52               	movwf	_StrippedKey,c
  5918                           
  5919                           ;KeyValue.c: 176: SerTx(';');
  5920  001A38  0E3B               	movlw	59
  5921  001A3A  EC2D  F018         	call	i2_SerTx
  5922                           
  5923                           ;KeyValue.c: 177: }
  5924  001A3E  D06F               	goto	i2l3252
  5925  001A40                     i2l3224:
  5926                           
  5927                           ;KeyValue.c: 179: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  5928  001A40  0E5D               	movlw	low _key
  5929  001A42  6E01               	movwf	strcmp@s1,c
  5930  001A44  0E00               	movlw	high _key
  5931  001A46  6E02               	movwf	strcmp@s1+1,c
  5932  001A48  0E50               	movlw	low STR_6
  5933  001A4A  6E03               	movwf	strcmp@s2,c
  5934  001A4C  0E10               	movlw	high STR_6
  5935  001A4E  6E04               	movwf	strcmp@s2+1,c
  5936  001A50  EC08  F017         	call	_strcmp	;wreg free
  5937  001A54  5001               	movf	?_strcmp,w,c
  5938  001A56  1002               	iorwf	?_strcmp+1,w,c
  5939  001A58  B4D8               	btfsc	status,2,c
  5940  001A5A  D00E               	goto	i2l3228
  5941  001A5C  0E5D               	movlw	low _key
  5942  001A5E  6E01               	movwf	strcmp@s1,c
  5943  001A60  0E00               	movlw	high _key
  5944  001A62  6E02               	movwf	strcmp@s1+1,c
  5945  001A64  0E5C               	movlw	low STR_7
  5946  001A66  6E03               	movwf	strcmp@s2,c
  5947  001A68  0E10               	movlw	high STR_7
  5948  001A6A  6E04               	movwf	strcmp@s2+1,c
  5949  001A6C  EC08  F017         	call	_strcmp	;wreg free
  5950  001A70  5001               	movf	?_strcmp,w,c
  5951  001A72  1002               	iorwf	?_strcmp+1,w,c
  5952  001A74  A4D8               	btfss	status,2,c
  5953  001A76  D006               	goto	i2l3232
  5954  001A78                     i2l3228:
  5955                           
  5956                           ;KeyValue.c: 180: {
  5957                           ;KeyValue.c: 181: StrippedKey = 0x04;
  5958  001A78  0E04               	movlw	4
  5959  001A7A  6E52               	movwf	_StrippedKey,c
  5960                           
  5961                           ;KeyValue.c: 182: SerTx(';');
  5962  001A7C  0E3B               	movlw	59
  5963  001A7E  EC2D  F018         	call	i2_SerTx
  5964                           
  5965                           ;KeyValue.c: 183: }
  5966  001A82  D04D               	goto	i2l3252
  5967  001A84                     i2l3232:
  5968                           
  5969                           ;KeyValue.c: 185: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  5970  001A84  0E5D               	movlw	low _key
  5971  001A86  6E01               	movwf	strcmp@s1,c
  5972  001A88  0E00               	movlw	high _key
  5973  001A8A  6E02               	movwf	strcmp@s1+1,c
  5974  001A8C  0E4D               	movlw	low STR_8
  5975  001A8E  6E03               	movwf	strcmp@s2,c
  5976  001A90  0E10               	movlw	high STR_8
  5977  001A92  6E04               	movwf	strcmp@s2+1,c
  5978  001A94  EC08  F017         	call	_strcmp	;wreg free
  5979  001A98  5001               	movf	?_strcmp,w,c
  5980  001A9A  1002               	iorwf	?_strcmp+1,w,c
  5981  001A9C  B4D8               	btfsc	status,2,c
  5982  001A9E  D00E               	goto	i2l3236
  5983  001AA0  0E5D               	movlw	low _key
  5984  001AA2  6E01               	movwf	strcmp@s1,c
  5985  001AA4  0E00               	movlw	high _key
  5986  001AA6  6E02               	movwf	strcmp@s1+1,c
  5987  001AA8  0E59               	movlw	low STR_9
  5988  001AAA  6E03               	movwf	strcmp@s2,c
  5989  001AAC  0E10               	movlw	high STR_9
  5990  001AAE  6E04               	movwf	strcmp@s2+1,c
  5991  001AB0  EC08  F017         	call	_strcmp	;wreg free
  5992  001AB4  5001               	movf	?_strcmp,w,c
  5993  001AB6  1002               	iorwf	?_strcmp+1,w,c
  5994  001AB8  A4D8               	btfss	status,2,c
  5995  001ABA  D006               	goto	i2l3240
  5996  001ABC                     i2l3236:
  5997                           
  5998                           ;KeyValue.c: 186: {
  5999                           ;KeyValue.c: 187: StrippedKey = 0x06;
  6000  001ABC  0E06               	movlw	6
  6001  001ABE  6E52               	movwf	_StrippedKey,c
  6002                           
  6003                           ;KeyValue.c: 188: SerTx(';');
  6004  001AC0  0E3B               	movlw	59
  6005  001AC2  EC2D  F018         	call	i2_SerTx
  6006                           
  6007                           ;KeyValue.c: 189: }
  6008  001AC6  D02B               	goto	i2l3252
  6009  001AC8                     i2l3240:
  6010                           
  6011                           ;KeyValue.c: 191: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  6012  001AC8  0E5D               	movlw	low _key
  6013  001ACA  6E01               	movwf	strcmp@s1,c
  6014  001ACC  0E00               	movlw	high _key
  6015  001ACE  6E02               	movwf	strcmp@s1+1,c
  6016  001AD0  0E4A               	movlw	low STR_10
  6017  001AD2  6E03               	movwf	strcmp@s2,c
  6018  001AD4  0E10               	movlw	high STR_10
  6019  001AD6  6E04               	movwf	strcmp@s2+1,c
  6020  001AD8  EC08  F017         	call	_strcmp	;wreg free
  6021  001ADC  5001               	movf	?_strcmp,w,c
  6022  001ADE  1002               	iorwf	?_strcmp+1,w,c
  6023  001AE0  B4D8               	btfsc	status,2,c
  6024  001AE2  D00E               	goto	i2l3244
  6025  001AE4  0E5D               	movlw	low _key
  6026  001AE6  6E01               	movwf	strcmp@s1,c
  6027  001AE8  0E00               	movlw	high _key
  6028  001AEA  6E02               	movwf	strcmp@s1+1,c
  6029  001AEC  0E56               	movlw	low STR_11
  6030  001AEE  6E03               	movwf	strcmp@s2,c
  6031  001AF0  0E10               	movlw	high STR_11
  6032  001AF2  6E04               	movwf	strcmp@s2+1,c
  6033  001AF4  EC08  F017         	call	_strcmp	;wreg free
  6034  001AF8  5001               	movf	?_strcmp,w,c
  6035  001AFA  1002               	iorwf	?_strcmp+1,w,c
  6036  001AFC  A4D8               	btfss	status,2,c
  6037  001AFE  D006               	goto	i2l3248
  6038  001B00                     i2l3244:
  6039                           
  6040                           ;KeyValue.c: 192: {
  6041                           ;KeyValue.c: 193: StrippedKey = 0x08;
  6042  001B00  0E08               	movlw	8
  6043  001B02  6E52               	movwf	_StrippedKey,c
  6044                           
  6045                           ;KeyValue.c: 194: SerTx(';');
  6046  001B04  0E3B               	movlw	59
  6047  001B06  EC2D  F018         	call	i2_SerTx
  6048                           
  6049                           ;KeyValue.c: 195: }
  6050  001B0A  D009               	goto	i2l3252
  6051  001B0C                     i2l3248:
  6052                           
  6053                           ;KeyValue.c: 197: else
  6054                           ;KeyValue.c: 198: {
  6055                           ;KeyValue.c: 199: SerTxStr("???");
  6056  001B0C  0E36               	movlw	low STR_12
  6057  001B0E  6E02               	movwf	i2SerTxStr@string,c
  6058  001B10  0E10               	movlw	high STR_12
  6059  001B12  6E03               	movwf	i2SerTxStr@string+1,c
  6060  001B14  ECB3  F016         	call	i2_SerTxStr	;wreg free
  6061  001B18                     i2l3250:
  6062                           
  6063                           ;KeyValue.c: 200: StrippedKey = 0;
  6064  001B18  0E00               	movlw	0
  6065  001B1A  6E52               	movwf	_StrippedKey,c
  6066  001B1C  D000               	goto	i2l3252
  6067  001B1E                     i2l3252:
  6068                           
  6069                           ;KeyValue.c: 201: }
  6070                           ;KeyValue.c: 202: }
  6071                           ;KeyValue.c: 204: StrippedValue = strtod(value, &str_end);
  6072  001B1E  0E53               	movlw	low _value
  6073  001B20  6E18               	movwf	strtod@s,c
  6074  001B22  0E00               	movlw	high _value
  6075  001B24  6E19               	movwf	strtod@s+1,c
  6076  001B26  0E2A               	movlw	low keyValue@str_end
  6077  001B28  6E1A               	movwf	strtod@res,c
  6078  001B2A  0E00               	movlw	high keyValue@str_end
  6079  001B2C  6E1B               	movwf	strtod@res+1,c
  6080  001B2E  ECD8  F00D         	call	_strtod	;wreg free
  6081  001B32  C018  F04B         	movff	?_strtod,_StrippedValue
  6082  001B36  C019  F04C         	movff	?_strtod+1,_StrippedValue+1
  6083  001B3A  C01A  F04D         	movff	?_strtod+2,_StrippedValue+2
  6084                           
  6085                           ;KeyValue.c: 208: for (x = 0; x < 5; x++)
  6086  001B3E  0E00               	movlw	0
  6087  001B40  6E2E               	movwf	keyValue@x,c
  6088  001B42                     i2l3256:
  6089  001B42  0E04               	movlw	4
  6090  001B44  642E               	cpfsgt	keyValue@x,c
  6091  001B46  D001               	goto	i2l3260
  6092  001B48  D00C               	goto	i2l3266
  6093  001B4A                     i2l3260:
  6094                           
  6095                           ;KeyValue.c: 209: {
  6096                           ;KeyValue.c: 210: key[x] = (0);
  6097  001B4A  502E               	movf	keyValue@x,w,c
  6098  001B4C  0D01               	mullw	1
  6099  001B4E  0E5D               	movlw	low _key
  6100  001B50  24F3               	addwf	prodl,w,c
  6101  001B52  6ED9               	movwf	fsr2l,c
  6102  001B54  0E00               	movlw	high _key
  6103  001B56  20F4               	addwfc	prodh,w,c
  6104  001B58  6EDA               	movwf	fsr2h,c
  6105  001B5A  0E00               	movlw	0
  6106  001B5C  6EDF               	movwf	indf2,c
  6107  001B5E  2A2E               	incf	keyValue@x,f,c
  6108  001B60  D7F0               	goto	i2l3256
  6109  001B62                     i2l3266:
  6110                           
  6111                           ;KeyValue.c: 211: }
  6112                           ;KeyValue.c: 213: for (x = 0; x < 10; x++)
  6113  001B62  0E00               	movlw	0
  6114  001B64  6E2E               	movwf	keyValue@x,c
  6115  001B66                     i2l3268:
  6116  001B66  0E09               	movlw	9
  6117  001B68  642E               	cpfsgt	keyValue@x,c
  6118  001B6A  D001               	goto	i2l3272
  6119  001B6C  D00C               	goto	i2l3278
  6120  001B6E                     i2l3272:
  6121                           
  6122                           ;KeyValue.c: 214: {
  6123                           ;KeyValue.c: 215: value[x] = (0);
  6124  001B6E  502E               	movf	keyValue@x,w,c
  6125  001B70  0D01               	mullw	1
  6126  001B72  0E53               	movlw	low _value
  6127  001B74  24F3               	addwf	prodl,w,c
  6128  001B76  6ED9               	movwf	fsr2l,c
  6129  001B78  0E00               	movlw	high _value
  6130  001B7A  20F4               	addwfc	prodh,w,c
  6131  001B7C  6EDA               	movwf	fsr2h,c
  6132  001B7E  0E00               	movlw	0
  6133  001B80  6EDF               	movwf	indf2,c
  6134  001B82  2A2E               	incf	keyValue@x,f,c
  6135  001B84  D7F0               	goto	i2l3268
  6136  001B86                     i2l3278:
  6137                           
  6138                           ;KeyValue.c: 216: }
  6139                           ;KeyValue.c: 218: for (x = 0; x < 30; x++)
  6140  001B86  0E00               	movlw	0
  6141  001B88  6E2E               	movwf	keyValue@x,c
  6142  001B8A                     i2l3280:
  6143  001B8A  0E1D               	movlw	29
  6144  001B8C  642E               	cpfsgt	keyValue@x,c
  6145  001B8E  D001               	goto	i2l3284
  6146  001B90  D00C               	goto	i2l3290
  6147  001B92                     i2l3284:
  6148                           
  6149                           ;KeyValue.c: 219: {
  6150                           ;KeyValue.c: 220: received[x] = (0);
  6151  001B92  502E               	movf	keyValue@x,w,c
  6152  001B94  0D01               	mullw	1
  6153  001B96  0EBC               	movlw	low _received
  6154  001B98  24F3               	addwf	prodl,w,c
  6155  001B9A  6ED9               	movwf	fsr2l,c
  6156  001B9C  0E00               	movlw	high _received
  6157  001B9E  20F4               	addwfc	prodh,w,c
  6158  001BA0  6EDA               	movwf	fsr2h,c
  6159  001BA2  0E00               	movlw	0
  6160  001BA4  6EDF               	movwf	indf2,c
  6161  001BA6  2A2E               	incf	keyValue@x,f,c
  6162  001BA8  D7F0               	goto	i2l3280
  6163  001BAA                     i2l3290:
  6164                           
  6165                           ;KeyValue.c: 221: }
  6166                           ;KeyValue.c: 222: flag = 0;
  6167  001BAA  0E00               	movlw	0
  6168  001BAC  6E2C               	movwf	keyValue@flag,c
  6169  001BAE  0012               	return		;funcret
  6170  001BB0                     __end_of_keyValue:
  6171                           	opt stack 0
  6172                           pclatu	equ	0xFFB
  6173                           pclath	equ	0xFFA
  6174                           tblptru	equ	0xFF8
  6175                           tblptrh	equ	0xFF7
  6176                           tblptrl	equ	0xFF6
  6177                           tablat	equ	0xFF5
  6178                           prodh	equ	0xFF4
  6179                           prodl	equ	0xFF3
  6180                           intcon	equ	0xFF2
  6181                           indf0	equ	0xFEF
  6182                           postinc0	equ	0xFEE
  6183                           fsr0h	equ	0xFEA
  6184                           fsr0l	equ	0xFE9
  6185                           wreg	equ	0xFE8
  6186                           indf1	equ	0xFE7
  6187                           fsr1h	equ	0xFE2
  6188                           fsr1l	equ	0xFE1
  6189                           indf2	equ	0xFDF
  6190                           postinc2	equ	0xFDE
  6191                           fsr2h	equ	0xFDA
  6192                           fsr2l	equ	0xFD9
  6193                           status	equ	0xFD8
  6194                           
  6195 ;; *************** function i2_SerTxStr *****************
  6196 ;; Defined at:
  6197 ;;		line 50 in file "SerComm.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  string          2    1[COMRAM] PTR unsigned char 
  6200 ;;		 -> STR_28(4), STR_13(6), STR_12(4), STR_3(11), 
  6201 ;;		 -> value(10), STR_2(6), key(5), STR_1(36), 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6217 ;;Total ram usage:        2 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    1
  6220 ;; This function calls:
  6221 ;;		i2_SerTx
  6222 ;; This function is called by:
  6223 ;;		_keyValue
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text24
  6228  002D66                     __ptext24:
  6229                           	opt stack 0
  6230  002D66                     i2_SerTxStr:
  6231                           	opt stack 22
  6232                           
  6233                           ;SerComm.c: 52: while (*string)
  6234                           
  6235                           ;incstack = 0
  6236  002D66  D016               	goto	i2l3064
  6237  002D68                     i2l3060:
  6238                           
  6239                           ;SerComm.c: 53: SerTx(*string++);
  6240  002D68  C002  FFF6         	movff	i2SerTxStr@string,tblptrl
  6241  002D6C  C003  FFF7         	movff	i2SerTxStr@string+1,tblptrh
  6242  002D70  0E00               	movlw	low (__smallconst shr (0+16))
  6243  002D72  6EF8               	movwf	tblptru,c
  6244  002D74  0E0F               	movlw	(high __ramtop+-1)
  6245  002D76  64F7               	cpfsgt	tblptrh,c
  6246  002D78  D003               	bra	i2u338_47
  6247  002D7A  0008               	tblrd		*
  6248  002D7C  50F5               	movf	tablat,w,c
  6249  002D7E  D005               	bra	i2u338_40
  6250  002D80                     i2u338_47:
  6251  002D80  CFF6 FFE9          	movff	tblptrl,fsr0l
  6252  002D84  CFF7 FFEA          	movff	tblptrh,fsr0h
  6253  002D88  50EF               	movf	indf0,w,c
  6254  002D8A                     i2u338_40:
  6255  002D8A  EC2D  F018         	call	i2_SerTx
  6256  002D8E  4A02               	infsnz	i2SerTxStr@string,f,c
  6257  002D90  2A03               	incf	i2SerTxStr@string+1,f,c
  6258  002D92  D000               	goto	i2l3064
  6259  002D94                     i2l3064:
  6260  002D94  C002  FFF6         	movff	i2SerTxStr@string,tblptrl
  6261  002D98  C003  FFF7         	movff	i2SerTxStr@string+1,tblptrh
  6262  002D9C  0E00               	movlw	low (__smallconst shr (0+16))
  6263  002D9E  6EF8               	movwf	tblptru,c
  6264  002DA0  0E0F               	movlw	(high __ramtop+-1)
  6265  002DA2  64F7               	cpfsgt	tblptrh,c
  6266  002DA4  D003               	bra	i2u339_47
  6267  002DA6  0008               	tblrd		*
  6268  002DA8  50F5               	movf	tablat,w,c
  6269  002DAA  D005               	bra	i2u339_40
  6270  002DAC                     i2u339_47:
  6271  002DAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  6272  002DB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  6273  002DB4  50EF               	movf	indf0,w,c
  6274  002DB6                     i2u339_40:
  6275  002DB6  0900               	iorlw	0
  6276  002DB8  A4D8               	btfss	status,2,c
  6277  002DBA  D7D6               	goto	i2l3060
  6278  002DBC  0012               	return		;funcret
  6279  002DBE                     __end_ofi2_SerTxStr:
  6280                           	opt stack 0
  6281                           pclatu	equ	0xFFB
  6282                           pclath	equ	0xFFA
  6283                           tblptru	equ	0xFF8
  6284                           tblptrh	equ	0xFF7
  6285                           tblptrl	equ	0xFF6
  6286                           tablat	equ	0xFF5
  6287                           prodh	equ	0xFF4
  6288                           prodl	equ	0xFF3
  6289                           intcon	equ	0xFF2
  6290                           indf0	equ	0xFEF
  6291                           postinc0	equ	0xFEE
  6292                           fsr0h	equ	0xFEA
  6293                           fsr0l	equ	0xFE9
  6294                           wreg	equ	0xFE8
  6295                           indf1	equ	0xFE7
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function i2_SerTx *****************
  6305 ;; Defined at:
  6306 ;;		line 41 in file "SerComm.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  c               1    wreg     unsigned char 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  c               1    0[COMRAM] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;		None               void
  6313 ;; Registers used:
  6314 ;;		wreg
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;Total ram usage:        1 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_RCInt
  6330 ;;		_keyValue
  6331 ;;		i2_SerTxStr
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text25
  6336  00305A                     __ptext25:
  6337                           	opt stack 0
  6338  00305A                     i2_SerTx:
  6339                           	opt stack 24
  6340                           
  6341                           ;incstack = 0
  6342                           ;i2SerTx@c stored from wreg
  6343  00305A  6E01               	movwf	i2SerTx@c,c
  6344                           
  6345                           ;SerComm.c: 43: TXREG1 = c;
  6346  00305C  C001  FFAD         	movff	i2SerTx@c,4013	;volatile
  6347                           
  6348                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  6349  003060  D000               	goto	i2l28
  6350  003062                     i2l28:
  6351  003062  A89E               	btfss	3998,4,c	;volatile
  6352  003064  D7FE               	goto	i2l28
  6353  003066  0012               	return		;funcret
  6354  003068                     __end_ofi2_SerTx:
  6355                           	opt stack 0
  6356                           pclatu	equ	0xFFB
  6357                           pclath	equ	0xFFA
  6358                           tblptru	equ	0xFF8
  6359                           tblptrh	equ	0xFF7
  6360                           tblptrl	equ	0xFF6
  6361                           tablat	equ	0xFF5
  6362                           prodh	equ	0xFF4
  6363                           prodl	equ	0xFF3
  6364                           intcon	equ	0xFF2
  6365                           indf0	equ	0xFEF
  6366                           postinc0	equ	0xFEE
  6367                           fsr0h	equ	0xFEA
  6368                           fsr0l	equ	0xFE9
  6369                           wreg	equ	0xFE8
  6370                           indf1	equ	0xFE7
  6371                           fsr1h	equ	0xFE2
  6372                           fsr1l	equ	0xFE1
  6373                           indf2	equ	0xFDF
  6374                           postinc2	equ	0xFDE
  6375                           fsr2h	equ	0xFDA
  6376                           fsr2l	equ	0xFD9
  6377                           status	equ	0xFD8
  6378                           
  6379 ;; *************** function _strtod *****************
  6380 ;; Defined at:
  6381 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/common/atof.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  s               2   23[COMRAM] PTR const unsigned char 
  6384 ;;		 -> value(10), 
  6385 ;;  res             2   25[COMRAM] PTR PTR const unsigned c
  6386 ;;		 -> NULL(0), keyValue@str_end(2), 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  _u              4   31[COMRAM] struct .
  6389 ;;  expon           1   30[COMRAM] char 
  6390 ;;  flags           1   29[COMRAM] unsigned char 
  6391 ;;  eexp            1   28[COMRAM] char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  3   23[COMRAM] char 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;Total ram usage:       12 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    2
  6408 ;; This function calls:
  6409 ;;		___altoft
  6410 ;;		___ftdiv
  6411 ;;		___ftge
  6412 ;;		___ftneg
  6413 ;;		___lmul
  6414 ;;		_isdigit
  6415 ;;		_isspace
  6416 ;;		i2___ftmul
  6417 ;; This function is called by:
  6418 ;;		_keyValue
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text26
  6423  001BB0                     __ptext26:
  6424                           	opt stack 0
  6425  001BB0                     _strtod:
  6426                           	opt stack 21
  6427                           
  6428                           ;incstack = 0
  6429  001BB0  501A               	movf	strtod@res,w,c
  6430  001BB2  101B               	iorwf	strtod@res+1,w,c
  6431  001BB4  B4D8               	btfsc	status,2,c
  6432  001BB6  D00C               	goto	i2l2748
  6433  001BB8  C01A  FFD9         	movff	strtod@res,fsr2l
  6434  001BBC  C01B  FFDA         	movff	strtod@res+1,fsr2h
  6435  001BC0  C018  FFDE         	movff	strtod@s,postinc2
  6436  001BC4  C019  FFDD         	movff	strtod@s+1,postdec2
  6437  001BC8  D003               	goto	i2l2748
  6438  001BCA                     i2l2746:
  6439  001BCA  4A18               	infsnz	strtod@s,f,c
  6440  001BCC  2A19               	incf	strtod@s+1,f,c
  6441  001BCE  D000               	goto	i2l2748
  6442  001BD0                     i2l2748:
  6443  001BD0  C018  FFD9         	movff	strtod@s,fsr2l
  6444  001BD4  C019  FFDA         	movff	strtod@s+1,fsr2h
  6445  001BD8  50DF               	movf	indf2,w,c
  6446  001BDA  6E1D               	movwf	strtod@eexp,c
  6447  001BDC  501D               	movf	strtod@eexp,w,c
  6448  001BDE  ECAE  F017         	call	_isspace
  6449  001BE2  B0D8               	btfsc	status,0,c
  6450  001BE4  D7F2               	goto	i2l2746
  6451  001BE6  0E00               	movlw	0
  6452  001BE8  6E1E               	movwf	strtod@flags,c
  6453  001BEA  0E2D               	movlw	45
  6454  001BEC  181D               	xorwf	strtod@eexp,w,c
  6455  001BEE  A4D8               	btfss	status,2,c
  6456  001BF0  D003               	goto	i2l2758
  6457  001BF2  0E01               	movlw	1
  6458  001BF4  6E1E               	movwf	strtod@flags,c
  6459  001BF6  D004               	goto	i2l2760
  6460  001BF8                     i2l2758:
  6461  001BF8  0E2B               	movlw	43
  6462  001BFA  181D               	xorwf	strtod@eexp,w,c
  6463  001BFC  A4D8               	btfss	status,2,c
  6464  001BFE  D003               	goto	i2l2762
  6465  001C00                     i2l2760:
  6466  001C00  4A18               	infsnz	strtod@s,f,c
  6467  001C02  2A19               	incf	strtod@s+1,f,c
  6468  001C04  D000               	goto	i2l2762
  6469  001C06                     i2l2762:
  6470  001C06  0E00               	movlw	0
  6471  001C08  6E1D               	movwf	strtod@eexp,c
  6472  001C0A  0E00               	movlw	0
  6473  001C0C  6E20               	movwf	strtod@_u,c
  6474  001C0E  0E00               	movlw	0
  6475  001C10  6E21               	movwf	strtod@_u+1,c
  6476  001C12  0E00               	movlw	0
  6477  001C14  6E22               	movwf	strtod@_u+2,c
  6478  001C16  0E00               	movlw	0
  6479  001C18  6E23               	movwf	strtod@_u+3,c
  6480  001C1A  0E00               	movlw	0
  6481  001C1C  6E1F               	movwf	strtod@expon,c
  6482  001C1E  D000               	goto	i2l2768
  6483  001C20                     i2l2768:
  6484  001C20  B81E               	btfsc	strtod@flags,4,c
  6485  001C22  D00A               	goto	i2l2774
  6486  001C24  C018  FFD9         	movff	strtod@s,fsr2l
  6487  001C28  C019  FFDA         	movff	strtod@s+1,fsr2h
  6488  001C2C  0E2E               	movlw	46
  6489  001C2E  18DE               	xorwf	postinc2,w,c
  6490  001C30  A4D8               	btfss	status,2,c
  6491  001C32  D002               	goto	i2l2774
  6492  001C34  881E               	bsf	strtod@flags,4,c
  6493  001C36  D040               	goto	i2l624
  6494  001C38                     i2l2774:
  6495  001C38  C018  FFD9         	movff	strtod@s,fsr2l
  6496  001C3C  C019  FFDA         	movff	strtod@s+1,fsr2h
  6497  001C40  50DF               	movf	indf2,w,c
  6498  001C42  ECEA  F017         	call	_isdigit
  6499  001C46  A0D8               	btfss	status,0,c
  6500  001C48  D03A               	goto	i2l2792
  6501  001C4A  D001               	goto	i2l2778
  6502  001C4C  D038               	goto	i2l2792
  6503  001C4E                     i2l2778:
  6504  001C4E  821E               	bsf	strtod@flags,1,c
  6505  001C50  0E08               	movlw	8
  6506  001C52  181D               	xorwf	strtod@eexp,w,c
  6507  001C54  B4D8               	btfsc	status,2,c
  6508  001C56  D02C               	goto	i2l622
  6509  001C58  B81E               	btfsc	strtod@flags,4,c
  6510  001C5A  061F               	decf	strtod@expon,f,c
  6511  001C5C  2A1D               	incf	strtod@eexp,f,c
  6512  001C5E  C020  F001         	movff	strtod@_u,___lmul@multiplier
  6513  001C62  C021  F002         	movff	strtod@_u+1,___lmul@multiplier+1
  6514  001C66  C022  F003         	movff	strtod@_u+2,___lmul@multiplier+2
  6515  001C6A  C023  F004         	movff	strtod@_u+3,___lmul@multiplier+3
  6516  001C6E  0E0A               	movlw	10
  6517  001C70  6E05               	movwf	___lmul@multiplicand,c
  6518  001C72  0E00               	movlw	0
  6519  001C74  6E06               	movwf	___lmul@multiplicand+1,c
  6520  001C76  0E00               	movlw	0
  6521  001C78  6E07               	movwf	___lmul@multiplicand+2,c
  6522  001C7A  0E00               	movlw	0
  6523  001C7C  6E08               	movwf	___lmul@multiplicand+3,c
  6524  001C7E  EC86  F016         	call	___lmul	;wreg free
  6525  001C82  C001  F020         	movff	?___lmul,strtod@_u
  6526  001C86  C002  F021         	movff	?___lmul+1,strtod@_u+1
  6527  001C8A  C003  F022         	movff	?___lmul+2,strtod@_u+2
  6528  001C8E  C004  F023         	movff	?___lmul+3,strtod@_u+3
  6529  001C92  C018  FFD9         	movff	strtod@s,fsr2l
  6530  001C96  C019  FFDA         	movff	strtod@s+1,fsr2h
  6531  001C9A  50DF               	movf	indf2,w,c
  6532  001C9C  6E1C               	movwf	??_strtod& (0+255),c
  6533  001C9E  0ED0               	movlw	208
  6534  001CA0  261C               	addwf	??_strtod,f,c
  6535  001CA2  501C               	movf	??_strtod,w,c
  6536  001CA4  2620               	addwf	strtod@_u,f,c
  6537  001CA6  0E00               	movlw	0
  6538  001CA8  2221               	addwfc	strtod@_u+1,f,c
  6539  001CAA  2222               	addwfc	strtod@_u+2,f,c
  6540  001CAC  2223               	addwfc	strtod@_u+3,f,c
  6541  001CAE  D004               	goto	i2l624
  6542  001CB0                     i2l622:
  6543  001CB0  B81E               	btfsc	strtod@flags,4,c
  6544  001CB2  D002               	goto	i2l624
  6545  001CB4  2A1F               	incf	strtod@expon,f,c
  6546  001CB6  D000               	goto	i2l624
  6547  001CB8                     i2l624:
  6548  001CB8  4A18               	infsnz	strtod@s,f,c
  6549  001CBA  2A19               	incf	strtod@s+1,f,c
  6550  001CBC  D7B1               	goto	i2l2768
  6551  001CBE                     i2l2792:
  6552  001CBE  0E00               	movlw	0
  6553  001CC0  6E1D               	movwf	strtod@eexp,c
  6554  001CC2  C018  FFD9         	movff	strtod@s,fsr2l
  6555  001CC6  C019  FFDA         	movff	strtod@s+1,fsr2h
  6556  001CCA  0E65               	movlw	101
  6557  001CCC  18DE               	xorwf	postinc2,w,c
  6558  001CCE  B4D8               	btfsc	status,2,c
  6559  001CD0  D008               	goto	i2l2798
  6560  001CD2  C018  FFD9         	movff	strtod@s,fsr2l
  6561  001CD6  C019  FFDA         	movff	strtod@s+1,fsr2h
  6562  001CDA  0E45               	movlw	69
  6563  001CDC  18DE               	xorwf	postinc2,w,c
  6564  001CDE  A4D8               	btfss	status,2,c
  6565  001CE0  D065               	goto	i2l2830
  6566  001CE2                     i2l2798:
  6567  001CE2  4A18               	infsnz	strtod@s,f,c
  6568  001CE4  2A19               	incf	strtod@s+1,f,c
  6569  001CE6  C018  FFD9         	movff	strtod@s,fsr2l
  6570  001CEA  C019  FFDA         	movff	strtod@s+1,fsr2h
  6571  001CEE  0E2D               	movlw	45
  6572  001CF0  18DE               	xorwf	postinc2,w,c
  6573  001CF2  A4D8               	btfss	status,2,c
  6574  001CF4  D002               	goto	i2l2802
  6575  001CF6  861E               	bsf	strtod@flags,3,c
  6576  001CF8  D008               	goto	i2l2804
  6577  001CFA                     i2l2802:
  6578  001CFA  C018  FFD9         	movff	strtod@s,fsr2l
  6579  001CFE  C019  FFDA         	movff	strtod@s+1,fsr2h
  6580  001D02  0E2B               	movlw	43
  6581  001D04  18DE               	xorwf	postinc2,w,c
  6582  001D06  A4D8               	btfss	status,2,c
  6583  001D08  D006               	goto	i2l2808
  6584  001D0A                     i2l2804:
  6585  001D0A  4A18               	infsnz	strtod@s,f,c
  6586  001D0C  2A19               	incf	strtod@s+1,f,c
  6587  001D0E  D003               	goto	i2l2808
  6588  001D10                     i2l2806:
  6589  001D10  4A18               	infsnz	strtod@s,f,c
  6590  001D12  2A19               	incf	strtod@s+1,f,c
  6591  001D14  D000               	goto	i2l2808
  6592  001D16                     i2l2808:
  6593  001D16  C018  FFD9         	movff	strtod@s,fsr2l
  6594  001D1A  C019  FFDA         	movff	strtod@s+1,fsr2h
  6595  001D1E  0E30               	movlw	48
  6596  001D20  18DE               	xorwf	postinc2,w,c
  6597  001D22  B4D8               	btfsc	status,2,c
  6598  001D24  D7F5               	goto	i2l2806
  6599  001D26  C018  FFD9         	movff	strtod@s,fsr2l
  6600  001D2A  C019  FFDA         	movff	strtod@s+1,fsr2h
  6601  001D2E  50DF               	movf	indf2,w,c
  6602  001D30  ECEA  F017         	call	_isdigit
  6603  001D34  A0D8               	btfss	status,0,c
  6604  001D36  D036               	goto	i2l2826
  6605  001D38  C018  FFD9         	movff	strtod@s,fsr2l
  6606  001D3C  C019  FFDA         	movff	strtod@s+1,fsr2h
  6607  001D40  50DF               	movf	indf2,w,c
  6608  001D42  0FD0               	addlw	208
  6609  001D44  6E1D               	movwf	strtod@eexp,c
  6610  001D46  4A18               	infsnz	strtod@s,f,c
  6611  001D48  2A19               	incf	strtod@s+1,f,c
  6612  001D4A  C018  FFD9         	movff	strtod@s,fsr2l
  6613  001D4E  C019  FFDA         	movff	strtod@s+1,fsr2h
  6614  001D52  50DF               	movf	indf2,w,c
  6615  001D54  ECEA  F017         	call	_isdigit
  6616  001D58  A0D8               	btfss	status,0,c
  6617  001D5A  D024               	goto	i2l2826
  6618  001D5C  C018  FFD9         	movff	strtod@s,fsr2l
  6619  001D60  C019  FFDA         	movff	strtod@s+1,fsr2h
  6620  001D64  50DF               	movf	indf2,w,c
  6621  001D66  6E1C               	movwf	??_strtod& (0+255),c
  6622  001D68  501D               	movf	strtod@eexp,w,c
  6623  001D6A  0D0A               	mullw	10
  6624  001D6C  50F3               	movf	prodl,w,c
  6625  001D6E  241C               	addwf	??_strtod,w,c
  6626  001D70  0FD0               	addlw	208
  6627  001D72  6E1D               	movwf	strtod@eexp,c
  6628  001D74  4A18               	infsnz	strtod@s,f,c
  6629  001D76  2A19               	incf	strtod@s+1,f,c
  6630  001D78  C018  FFD9         	movff	strtod@s,fsr2l
  6631  001D7C  C019  FFDA         	movff	strtod@s+1,fsr2h
  6632  001D80  50DF               	movf	indf2,w,c
  6633  001D82  ECEA  F017         	call	_isdigit
  6634  001D86  A0D8               	btfss	status,0,c
  6635  001D88  D00D               	goto	i2l2826
  6636  001D8A  C018  FFD9         	movff	strtod@s,fsr2l
  6637  001D8E  C019  FFDA         	movff	strtod@s+1,fsr2h
  6638  001D92  50DF               	movf	indf2,w,c
  6639  001D94  6E1C               	movwf	??_strtod& (0+255),c
  6640  001D96  501D               	movf	strtod@eexp,w,c
  6641  001D98  0D0A               	mullw	10
  6642  001D9A  50F3               	movf	prodl,w,c
  6643  001D9C  241C               	addwf	??_strtod,w,c
  6644  001D9E  0FD0               	addlw	208
  6645  001DA0  6E1D               	movwf	strtod@eexp,c
  6646  001DA2  D000               	goto	i2l2826
  6647  001DA4                     i2l2826:
  6648  001DA4  A61E               	btfss	strtod@flags,3,c
  6649  001DA6  D002               	goto	i2l2830
  6650  001DA8  6C1D               	negf	strtod@eexp,c
  6651  001DAA  D000               	goto	i2l2830
  6652  001DAC                     i2l2830:
  6653  001DAC  501D               	movf	strtod@eexp,w,c
  6654  001DAE  261F               	addwf	strtod@expon,f,c
  6655  001DB0  501A               	movf	strtod@res,w,c
  6656  001DB2  101B               	iorwf	strtod@res+1,w,c
  6657  001DB4  A4D8               	btfss	status,2,c
  6658  001DB6  A21E               	btfss	strtod@flags,1,c
  6659  001DB8  D009               	goto	i2l2838
  6660  001DBA  C01A  FFD9         	movff	strtod@res,fsr2l
  6661  001DBE  C01B  FFDA         	movff	strtod@res+1,fsr2h
  6662  001DC2  C018  FFDE         	movff	strtod@s,postinc2
  6663  001DC6  C019  FFDD         	movff	strtod@s+1,postdec2
  6664  001DCA  D000               	goto	i2l2838
  6665  001DCC                     i2l2838:
  6666  001DCC  C020  F009         	movff	strtod@_u,___altoft@c
  6667  001DD0  C021  F00A         	movff	strtod@_u+1,___altoft@c+1
  6668  001DD4  C022  F00B         	movff	strtod@_u+2,___altoft@c+2
  6669  001DD8  C023  F00C         	movff	strtod@_u+3,___altoft@c+3
  6670  001DDC  EC7A  F015         	call	___altoft	;wreg free
  6671  001DE0  C009  F020         	movff	?___altoft,strtod@_u
  6672  001DE4  C00A  F021         	movff	?___altoft+1,strtod@_u+1
  6673  001DE8  C00B  F022         	movff	?___altoft+2,strtod@_u+2
  6674  001DEC  5020               	movf	strtod@_u,w,c
  6675  001DEE  1021               	iorwf	strtod@_u+1,w,c
  6676  001DF0  1022               	iorwf	strtod@_u+2,w,c
  6677  001DF2  A4D8               	btfss	status,2,c
  6678  001DF4  D005               	goto	i2l2846
  6679  001DF6  0E00               	movlw	0
  6680  001DF8  6E18               	movwf	?_strtod,c
  6681  001DFA  0E00               	movlw	0
  6682  001DFC  D0A6               	goto	L9
  6683  001DFE  D0C2               	goto	i2l641
  6684  001E00                     i2l2846:
  6685  001E00  AE1F               	btfss	strtod@expon,7,c
  6686  001E02  D04C               	goto	i2l2874
  6687  001E04  6C1F               	negf	strtod@expon,c
  6688  001E06  D017               	goto	i2l2854
  6689  001E08                     i2l2850:
  6690  001E08  C020  F009         	movff	strtod@_u,___ftdiv@f1
  6691  001E0C  C021  F00A         	movff	strtod@_u+1,___ftdiv@f1+1
  6692  001E10  C022  F00B         	movff	strtod@_u+2,___ftdiv@f1+2
  6693  001E14  0E03               	movlw	3
  6694  001E16  6E0C               	movwf	___ftdiv@f2,c
  6695  001E18  0E15               	movlw	21
  6696  001E1A  6E0D               	movwf	___ftdiv@f2+1,c
  6697  001E1C  0E50               	movlw	80
  6698  001E1E  6E0E               	movwf	___ftdiv@f2+2,c
  6699  001E20  EC83  F013         	call	___ftdiv	;wreg free
  6700  001E24  C009  F020         	movff	?___ftdiv,strtod@_u
  6701  001E28  C00A  F021         	movff	?___ftdiv+1,strtod@_u+1
  6702  001E2C  C00B  F022         	movff	?___ftdiv+2,strtod@_u+2
  6703  001E30  0EF6               	movlw	246
  6704  001E32  261F               	addwf	strtod@expon,f,c
  6705  001E34  D000               	goto	i2l2854
  6706  001E36                     i2l2854:
  6707  001E36  501F               	movf	strtod@expon,w,c
  6708  001E38  0A80               	xorlw	128
  6709  001E3A  0F76               	addlw	-138
  6710  001E3C  A0D8               	btfss	status,0,c
  6711  001E3E  D018               	goto	i2l2860
  6712  001E40  D7E3               	goto	i2l2850
  6713  001E42  D016               	goto	i2l2860
  6714  001E44                     i2l2856:
  6715  001E44  C020  F009         	movff	strtod@_u,___ftdiv@f1
  6716  001E48  C021  F00A         	movff	strtod@_u+1,___ftdiv@f1+1
  6717  001E4C  C022  F00B         	movff	strtod@_u+2,___ftdiv@f1+2
  6718  001E50  0E00               	movlw	0
  6719  001E52  6E0C               	movwf	___ftdiv@f2,c
  6720  001E54  0E20               	movlw	32
  6721  001E56  6E0D               	movwf	___ftdiv@f2+1,c
  6722  001E58  0E41               	movlw	65
  6723  001E5A  6E0E               	movwf	___ftdiv@f2+2,c
  6724  001E5C  EC83  F013         	call	___ftdiv	;wreg free
  6725  001E60  C009  F020         	movff	?___ftdiv,strtod@_u
  6726  001E64  C00A  F021         	movff	?___ftdiv+1,strtod@_u+1
  6727  001E68  C00B  F022         	movff	?___ftdiv+2,strtod@_u+2
  6728  001E6C  061F               	decf	strtod@expon,f,c
  6729  001E6E  D000               	goto	i2l2860
  6730  001E70                     i2l2860:
  6731  001E70  501F               	movf	strtod@expon,w,c
  6732  001E72  A4D8               	btfss	status,2,c
  6733  001E74  D7E7               	goto	i2l2856
  6734  001E76  C020  F001         	movff	strtod@_u,___ftge@ff1
  6735  001E7A  C021  F002         	movff	strtod@_u+1,___ftge@ff1+1
  6736  001E7E  C022  F003         	movff	strtod@_u+2,___ftge@ff1+2
  6737  001E82  0E00               	movlw	0
  6738  001E84  6E04               	movwf	___ftge@ff2,c
  6739  001E86  0E80               	movlw	128
  6740  001E88  6E05               	movwf	___ftge@ff2+1,c
  6741  001E8A  0E00               	movlw	0
  6742  001E8C  6E06               	movwf	___ftge@ff2+2,c
  6743  001E8E  ECB0  F014         	call	___ftge	;wreg free
  6744  001E92  D04D               	goto	L10
  6745  001E94  D077               	goto	i2l641
  6746  001E96  D056               	goto	i2l2898
  6747  001E98  D075               	goto	i2l641
  6748  001E9A  D05C               	goto	i2l651
  6749  001E9C                     i2l2874:
  6750  001E9C  501F               	movf	strtod@expon,w,c
  6751  001E9E  0A80               	xorlw	128
  6752  001EA0  0F7F               	addlw	-129
  6753  001EA2  B0D8               	btfsc	status,0,c
  6754  001EA4  D019               	goto	i2l2882
  6755  001EA6  D056               	goto	i2l651
  6756  001EA8  D017               	goto	i2l2882
  6757  001EAA                     i2l2878:
  6758  001EAA  C020  F009         	movff	strtod@_u,i2___ftmul@f1
  6759  001EAE  C021  F00A         	movff	strtod@_u+1,i2___ftmul@f1+1
  6760  001EB2  C022  F00B         	movff	strtod@_u+2,i2___ftmul@f1+2
  6761  001EB6  0E03               	movlw	3
  6762  001EB8  6E0C               	movwf	i2___ftmul@f2,c
  6763  001EBA  0E15               	movlw	21
  6764  001EBC  6E0D               	movwf	i2___ftmul@f2+1,c
  6765  001EBE  0E50               	movlw	80
  6766  001EC0  6E0E               	movwf	i2___ftmul@f2+2,c
  6767  001EC2  EC07  F013         	call	i2___ftmul	;wreg free
  6768  001EC6  C009  F020         	movff	?i2___ftmul,strtod@_u
  6769  001ECA  C00A  F021         	movff	?i2___ftmul+1,strtod@_u+1
  6770  001ECE  C00B  F022         	movff	?i2___ftmul+2,strtod@_u+2
  6771  001ED2  0EF6               	movlw	246
  6772  001ED4  261F               	addwf	strtod@expon,f,c
  6773  001ED6  D000               	goto	i2l2882
  6774  001ED8                     i2l2882:
  6775  001ED8  0E0A               	movlw	10
  6776  001EDA  601F               	cpfslt	strtod@expon,c
  6777  001EDC  D7E6               	goto	i2l2878
  6778  001EDE  D016               	goto	i2l2888
  6779  001EE0                     i2l2884:
  6780  001EE0  C020  F009         	movff	strtod@_u,i2___ftmul@f1
  6781  001EE4  C021  F00A         	movff	strtod@_u+1,i2___ftmul@f1+1
  6782  001EE8  C022  F00B         	movff	strtod@_u+2,i2___ftmul@f1+2
  6783  001EEC  0E00               	movlw	0
  6784  001EEE  6E0C               	movwf	i2___ftmul@f2,c
  6785  001EF0  0E20               	movlw	32
  6786  001EF2  6E0D               	movwf	i2___ftmul@f2+1,c
  6787  001EF4  0E41               	movlw	65
  6788  001EF6  6E0E               	movwf	i2___ftmul@f2+2,c
  6789  001EF8  EC07  F013         	call	i2___ftmul	;wreg free
  6790  001EFC  C009  F020         	movff	?i2___ftmul,strtod@_u
  6791  001F00  C00A  F021         	movff	?i2___ftmul+1,strtod@_u+1
  6792  001F04  C00B  F022         	movff	?i2___ftmul+2,strtod@_u+2
  6793  001F08  061F               	decf	strtod@expon,f,c
  6794  001F0A  D000               	goto	i2l2888
  6795  001F0C                     i2l2888:
  6796  001F0C  501F               	movf	strtod@expon,w,c
  6797  001F0E  A4D8               	btfss	status,2,c
  6798  001F10  D7E7               	goto	i2l2884
  6799  001F12  0EFF               	movlw	255
  6800  001F14  6E01               	movwf	___ftge@ff1,c
  6801  001F16  0E7F               	movlw	127
  6802  001F18  6E02               	movwf	___ftge@ff1+1,c
  6803  001F1A  0E7F               	movlw	127
  6804  001F1C  6E03               	movwf	___ftge@ff1+2,c
  6805  001F1E  C020  F004         	movff	strtod@_u,___ftge@ff2
  6806  001F22  C021  F005         	movff	strtod@_u+1,___ftge@ff2+1
  6807  001F26  C022  F006         	movff	strtod@_u+2,___ftge@ff2+2
  6808  001F2A  ECB0  F014         	call	___ftge	;wreg free
  6809  001F2E                     L10:
  6810  001F2E  B0D8               	btfsc	status,0,c
  6811  001F30  D011               	goto	i2l651
  6812  001F32  A01E               	btfss	strtod@flags,0,c
  6813  001F34  D007               	goto	i2l2898
  6814  001F36  0E00               	movlw	0
  6815  001F38  6E18               	movwf	?_strtod,c
  6816  001F3A  0E80               	movlw	128
  6817  001F3C  6E19               	movwf	?_strtod+1,c
  6818  001F3E  0E80               	movlw	128
  6819  001F40  D006               	goto	L6
  6820  001F42  D020               	goto	i2l641
  6821  001F44                     i2l2898:
  6822  001F44  0E00               	movlw	0
  6823  001F46  6E18               	movwf	?_strtod,c
  6824  001F48  0E80               	movlw	128
  6825  001F4A                     L9:
  6826  001F4A  6E19               	movwf	?_strtod+1,c
  6827  001F4C  0E00               	movlw	0
  6828  001F4E                     L6:
  6829  001F4E  6E1A               	movwf	?_strtod+2,c
  6830  001F50  D019               	goto	i2l641
  6831  001F52  D000               	goto	i2l651
  6832  001F54                     i2l651:
  6833  001F54  A01E               	btfss	strtod@flags,0,c
  6834  001F56  D00F               	goto	i2l2904
  6835  001F58  C020  F001         	movff	strtod@_u,___ftneg@f1
  6836  001F5C  C021  F002         	movff	strtod@_u+1,___ftneg@f1+1
  6837  001F60  C022  F003         	movff	strtod@_u+2,___ftneg@f1+2
  6838  001F64  ECD8  F017         	call	___ftneg	;wreg free
  6839  001F68  C001  F020         	movff	?___ftneg,strtod@_u
  6840  001F6C  C002  F021         	movff	?___ftneg+1,strtod@_u+1
  6841  001F70  C003  F022         	movff	?___ftneg+2,strtod@_u+2
  6842  001F74  D000               	goto	i2l2904
  6843  001F76                     i2l2904:
  6844  001F76  C020  F018         	movff	strtod@_u,?_strtod
  6845  001F7A  C021  F019         	movff	strtod@_u+1,?_strtod+1
  6846  001F7E  C022  F01A         	movff	strtod@_u+2,?_strtod+2
  6847  001F82  D000               	goto	i2l641
  6848  001F84                     i2l641:
  6849  001F84  0012               	return		;funcret
  6850  001F86                     __end_of_strtod:
  6851                           	opt stack 0
  6852                           pclatu	equ	0xFFB
  6853                           pclath	equ	0xFFA
  6854                           tblptru	equ	0xFF8
  6855                           tblptrh	equ	0xFF7
  6856                           tblptrl	equ	0xFF6
  6857                           tablat	equ	0xFF5
  6858                           prodh	equ	0xFF4
  6859                           prodl	equ	0xFF3
  6860                           intcon	equ	0xFF2
  6861                           indf0	equ	0xFEF
  6862                           postinc0	equ	0xFEE
  6863                           fsr0h	equ	0xFEA
  6864                           fsr0l	equ	0xFE9
  6865                           wreg	equ	0xFE8
  6866                           indf1	equ	0xFE7
  6867                           fsr1h	equ	0xFE2
  6868                           fsr1l	equ	0xFE1
  6869                           indf2	equ	0xFDF
  6870                           postinc2	equ	0xFDE
  6871                           postdec2	equ	0xFDD
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function i2___ftmul *****************
  6877 ;; Defined at:
  6878 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  f1              3    8[COMRAM] float 
  6881 ;;  f2              3   11[COMRAM] float 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  __ftmul         3   18[COMRAM] unsigned um
  6884 ;;  __ftmul         1   22[COMRAM] unsigned char 
  6885 ;;  __ftmul         1   21[COMRAM] unsigned char 
  6886 ;;  __ftmul         1   17[COMRAM] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  3    8[COMRAM] float 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0, cstack
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6896 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;Total ram usage:       15 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:    1
  6903 ;; This function calls:
  6904 ;;		i2___ftpack
  6905 ;; This function is called by:
  6906 ;;		_strtod
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text27
  6911  00260E                     __ptext27:
  6912                           	opt stack 0
  6913  00260E                     i2___ftmul:
  6914                           	opt stack 21
  6915                           
  6916                           ;incstack = 0
  6917  00260E  C00B  F00F         	movff	i2___ftmul@f1+2,??i2___ftmul
  6918  002612  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
  6919  002614  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
  6920  002616  340A               	rlcf	i2___ftmul@f1+1,w,c
  6921  002618  360F               	rlcf	??i2___ftmul& (0+255),f,c
  6922  00261A  E301               	bnc	u274_41
  6923  00261C  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
  6924  00261E                     u274_41:
  6925  00261E  500F               	movf	??i2___ftmul,w,c
  6926  002620  6E12               	movwf	i2___ftmul@exp,c
  6927  002622  5012               	movf	i2___ftmul@exp,w,c
  6928  002624  A4D8               	btfss	status,2,c
  6929  002626  D002               	goto	i2l2680
  6930  002628  D00E               	goto	i2l2682
  6931  00262A  D06C               	goto	i2l898
  6932  00262C                     i2l2680:
  6933  00262C  C00E  F00F         	movff	i2___ftmul@f2+2,??i2___ftmul
  6934  002630  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
  6935  002632  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
  6936  002634  340D               	rlcf	i2___ftmul@f2+1,w,c
  6937  002636  360F               	rlcf	??i2___ftmul& (0+255),f,c
  6938  002638  E301               	bnc	u276_41
  6939  00263A  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
  6940  00263C                     u276_41:
  6941  00263C  500F               	movf	??i2___ftmul,w,c
  6942  00263E  6E17               	movwf	i2___ftmul@sign,c
  6943  002640  5017               	movf	i2___ftmul@sign,w,c
  6944  002642  A4D8               	btfss	status,2,c
  6945  002644  D007               	goto	i2l2686
  6946  002646                     i2l2682:
  6947  002646  0E00               	movlw	0
  6948  002648  6E09               	movwf	?i2___ftmul,c
  6949  00264A  0E00               	movlw	0
  6950  00264C  6E0A               	movwf	?i2___ftmul+1,c
  6951  00264E  0E00               	movlw	0
  6952  002650  6E0B               	movwf	?i2___ftmul+2,c
  6953  002652  D058               	goto	i2l898
  6954  002654                     i2l2686:
  6955  002654  5017               	movf	i2___ftmul@sign,w,c
  6956  002656  0F7B               	addlw	123
  6957  002658  2612               	addwf	i2___ftmul@exp,f,c
  6958  00265A  C00B  F017         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  6959  00265E  500E               	movf	i2___ftmul@f2+2,w,c
  6960  002660  1A17               	xorwf	i2___ftmul@sign,f,c
  6961  002662  0E80               	movlw	128
  6962  002664  1617               	andwf	i2___ftmul@sign,f,c
  6963  002666  8E0A               	bsf	i2___ftmul@f1+1,7,c
  6964  002668  8E0D               	bsf	i2___ftmul@f2+1,7,c
  6965  00266A  0EFF               	movlw	255
  6966  00266C  160C               	andwf	i2___ftmul@f2,f,c
  6967  00266E  0EFF               	movlw	255
  6968  002670  160D               	andwf	i2___ftmul@f2+1,f,c
  6969  002672  0E00               	movlw	0
  6970  002674  160E               	andwf	i2___ftmul@f2+2,f,c
  6971  002676  0E00               	movlw	0
  6972  002678  6E13               	movwf	i2___ftmul@f3_as_product,c
  6973  00267A  0E00               	movlw	0
  6974  00267C  6E14               	movwf	i2___ftmul@f3_as_product+1,c
  6975  00267E  0E00               	movlw	0
  6976  002680  6E15               	movwf	i2___ftmul@f3_as_product+2,c
  6977  002682  0E07               	movlw	7
  6978  002684  6E16               	movwf	i2___ftmul@cntr,c
  6979  002686  D000               	goto	i2l2700
  6980  002688                     i2l2700:
  6981  002688  A009               	btfss	i2___ftmul@f1,0,c
  6982  00268A  D007               	goto	i2l2704
  6983  00268C  500C               	movf	i2___ftmul@f2,w,c
  6984  00268E  2613               	addwf	i2___ftmul@f3_as_product,f,c
  6985  002690  500D               	movf	i2___ftmul@f2+1,w,c
  6986  002692  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
  6987  002694  500E               	movf	i2___ftmul@f2+2,w,c
  6988  002696  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
  6989  002698  D000               	goto	i2l2704
  6990  00269A                     i2l2704:
  6991  00269A  90D8               	bcf	status,0,c
  6992  00269C  320B               	rrcf	i2___ftmul@f1+2,f,c
  6993  00269E  320A               	rrcf	i2___ftmul@f1+1,f,c
  6994  0026A0  3209               	rrcf	i2___ftmul@f1,f,c
  6995  0026A2  90D8               	bcf	status,0,c
  6996  0026A4  360C               	rlcf	i2___ftmul@f2,f,c
  6997  0026A6  360D               	rlcf	i2___ftmul@f2+1,f,c
  6998  0026A8  360E               	rlcf	i2___ftmul@f2+2,f,c
  6999  0026AA  2E16               	decfsz	i2___ftmul@cntr,f,c
  7000  0026AC  D7ED               	goto	i2l2700
  7001  0026AE  D000               	goto	i2l2708
  7002  0026B0                     i2l2708:
  7003  0026B0  0E09               	movlw	9
  7004  0026B2  6E16               	movwf	i2___ftmul@cntr,c
  7005  0026B4  D000               	goto	i2l2710
  7006  0026B6                     i2l2710:
  7007  0026B6  A009               	btfss	i2___ftmul@f1,0,c
  7008  0026B8  D007               	goto	i2l2714
  7009  0026BA  500C               	movf	i2___ftmul@f2,w,c
  7010  0026BC  2613               	addwf	i2___ftmul@f3_as_product,f,c
  7011  0026BE  500D               	movf	i2___ftmul@f2+1,w,c
  7012  0026C0  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
  7013  0026C2  500E               	movf	i2___ftmul@f2+2,w,c
  7014  0026C4  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
  7015  0026C6  D000               	goto	i2l2714
  7016  0026C8                     i2l2714:
  7017  0026C8  90D8               	bcf	status,0,c
  7018  0026CA  320B               	rrcf	i2___ftmul@f1+2,f,c
  7019  0026CC  320A               	rrcf	i2___ftmul@f1+1,f,c
  7020  0026CE  3209               	rrcf	i2___ftmul@f1,f,c
  7021  0026D0  90D8               	bcf	status,0,c
  7022  0026D2  3215               	rrcf	i2___ftmul@f3_as_product+2,f,c
  7023  0026D4  3214               	rrcf	i2___ftmul@f3_as_product+1,f,c
  7024  0026D6  3213               	rrcf	i2___ftmul@f3_as_product,f,c
  7025  0026D8  2E16               	decfsz	i2___ftmul@cntr,f,c
  7026  0026DA  D7ED               	goto	i2l2710
  7027  0026DC  D000               	goto	i2l2718
  7028  0026DE                     i2l2718:
  7029  0026DE  C013  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  7030  0026E2  C014  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  7031  0026E6  C015  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  7032  0026EA  C012  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  7033  0026EE  C017  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  7034  0026F2  ECF4  F013         	call	i2___ftpack	;wreg free
  7035  0026F6  C001  F009         	movff	?i2___ftpack,?i2___ftmul
  7036  0026FA  C002  F00A         	movff	?i2___ftpack+1,?i2___ftmul+1
  7037  0026FE  C003  F00B         	movff	?i2___ftpack+2,?i2___ftmul+2
  7038  002702  D000               	goto	i2l898
  7039  002704                     i2l898:
  7040  002704  0012               	return		;funcret
  7041  002706                     __end_ofi2___ftmul:
  7042                           	opt stack 0
  7043                           pclatu	equ	0xFFB
  7044                           pclath	equ	0xFFA
  7045                           tblptru	equ	0xFF8
  7046                           tblptrh	equ	0xFF7
  7047                           tblptrl	equ	0xFF6
  7048                           tablat	equ	0xFF5
  7049                           prodh	equ	0xFF4
  7050                           prodl	equ	0xFF3
  7051                           intcon	equ	0xFF2
  7052                           indf0	equ	0xFEF
  7053                           postinc0	equ	0xFEE
  7054                           fsr0h	equ	0xFEA
  7055                           fsr0l	equ	0xFE9
  7056                           wreg	equ	0xFE8
  7057                           indf1	equ	0xFE7
  7058                           fsr1h	equ	0xFE2
  7059                           fsr1l	equ	0xFE1
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           fsr2h	equ	0xFDA
  7064                           fsr2l	equ	0xFD9
  7065                           status	equ	0xFD8
  7066                           
  7067 ;; *************** function _isspace *****************
  7068 ;; Defined at:
  7069 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isspace.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  c               1    wreg     unsigned char 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  c               1    2[COMRAM] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;		None               void
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;Total ram usage:        3 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_keyValue
  7093 ;;		_strtod
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text28
  7098  002F5C                     __ptext28:
  7099                           	opt stack 0
  7100  002F5C                     _isspace:
  7101                           	opt stack 22
  7102                           
  7103                           ;incstack = 0
  7104                           ;isspace@c stored from wreg
  7105  002F5C  6E03               	movwf	isspace@c,c
  7106  002F5E  0E01               	movlw	1
  7107  002F60  6E02               	movwf	_isspace$1329,c
  7108  002F62  0E20               	movlw	32
  7109  002F64  1803               	xorwf	isspace@c,w,c
  7110  002F66  B4D8               	btfsc	status,2,c
  7111  002F68  D00A               	goto	i2l2526
  7112  002F6A  0E0E               	movlw	14
  7113  002F6C  6003               	cpfslt	isspace@c,c
  7114  002F6E  D004               	goto	i2l2524
  7115  002F70  0E09               	movlw	9
  7116  002F72  6003               	cpfslt	isspace@c,c
  7117  002F74  D004               	goto	i2l2526
  7118  002F76  D000               	goto	i2l2524
  7119  002F78                     i2l2524:
  7120  002F78  0E00               	movlw	0
  7121  002F7A  6E02               	movwf	_isspace$1329,c
  7122  002F7C  D000               	goto	i2l2526
  7123  002F7E                     i2l2526:
  7124  002F7E  C002  F001         	movff	_isspace$1329,??_isspace
  7125  002F82  3001               	rrcf	??_isspace,w,c
  7126  002F84  D000               	goto	i2l939
  7127  002F86                     i2l939:
  7128  002F86  0012               	return		;funcret
  7129  002F88                     __end_of_isspace:
  7130                           	opt stack 0
  7131                           pclatu	equ	0xFFB
  7132                           pclath	equ	0xFFA
  7133                           tblptru	equ	0xFF8
  7134                           tblptrh	equ	0xFF7
  7135                           tblptrl	equ	0xFF6
  7136                           tablat	equ	0xFF5
  7137                           prodh	equ	0xFF4
  7138                           prodl	equ	0xFF3
  7139                           intcon	equ	0xFF2
  7140                           indf0	equ	0xFEF
  7141                           postinc0	equ	0xFEE
  7142                           fsr0h	equ	0xFEA
  7143                           fsr0l	equ	0xFE9
  7144                           wreg	equ	0xFE8
  7145                           indf1	equ	0xFE7
  7146                           fsr1h	equ	0xFE2
  7147                           fsr1l	equ	0xFE1
  7148                           indf2	equ	0xFDF
  7149                           postinc2	equ	0xFDE
  7150                           postdec2	equ	0xFDD
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function _isdigit *****************
  7156 ;; Defined at:
  7157 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  c               1    wreg     unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  c               1    2[COMRAM] unsigned char 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;		None               void
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;Total ram usage:        3 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_strtod
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text29
  7185  002FD4                     __ptext29:
  7186                           	opt stack 0
  7187  002FD4                     _isdigit:
  7188                           	opt stack 22
  7189                           
  7190                           ;incstack = 0
  7191                           ;isdigit@c stored from wreg
  7192  002FD4  6E03               	movwf	isdigit@c,c
  7193  002FD6  0E00               	movlw	0
  7194  002FD8  6E02               	movwf	_isdigit$1326,c
  7195  002FDA  0E3A               	movlw	58
  7196  002FDC  6003               	cpfslt	isdigit@c,c
  7197  002FDE  D006               	goto	i2l2646
  7198  002FE0  0E2F               	movlw	47
  7199  002FE2  6403               	cpfsgt	isdigit@c,c
  7200  002FE4  D003               	goto	i2l2646
  7201  002FE6  0E01               	movlw	1
  7202  002FE8  6E02               	movwf	_isdigit$1326,c
  7203  002FEA  D000               	goto	i2l2646
  7204  002FEC                     i2l2646:
  7205  002FEC  C002  F001         	movff	_isdigit$1326,??_isdigit
  7206  002FF0  3001               	rrcf	??_isdigit,w,c
  7207  002FF2  D000               	goto	i2l934
  7208  002FF4                     i2l934:
  7209  002FF4  0012               	return		;funcret
  7210  002FF6                     __end_of_isdigit:
  7211                           	opt stack 0
  7212                           pclatu	equ	0xFFB
  7213                           pclath	equ	0xFFA
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodh	equ	0xFF4
  7219                           prodl	equ	0xFF3
  7220                           intcon	equ	0xFF2
  7221                           indf0	equ	0xFEF
  7222                           postinc0	equ	0xFEE
  7223                           fsr0h	equ	0xFEA
  7224                           fsr0l	equ	0xFE9
  7225                           wreg	equ	0xFE8
  7226                           indf1	equ	0xFE7
  7227                           fsr1h	equ	0xFE2
  7228                           fsr1l	equ	0xFE1
  7229                           indf2	equ	0xFDF
  7230                           postinc2	equ	0xFDE
  7231                           postdec2	equ	0xFDD
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function ___lmul *****************
  7237 ;; Defined at:
  7238 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul32.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  multiplier      4    0[COMRAM] unsigned long 
  7241 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  product         4    8[COMRAM] unsigned long 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  4    0[COMRAM] unsigned long 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7253 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7256 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;Total ram usage:       12 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; This function calls:
  7260 ;;		Nothing
  7261 ;; This function is called by:
  7262 ;;		_strtod
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text30
  7267  002D0C                     __ptext30:
  7268                           	opt stack 0
  7269  002D0C                     ___lmul:
  7270                           	opt stack 22
  7271                           
  7272                           ;incstack = 0
  7273  002D0C  0E00               	movlw	0
  7274  002D0E  6E09               	movwf	___lmul@product,c
  7275  002D10  0E00               	movlw	0
  7276  002D12  6E0A               	movwf	___lmul@product+1,c
  7277  002D14  0E00               	movlw	0
  7278  002D16  6E0B               	movwf	___lmul@product+2,c
  7279  002D18  0E00               	movlw	0
  7280  002D1A  6E0C               	movwf	___lmul@product+3,c
  7281  002D1C  D000               	goto	i2l2532
  7282  002D1E                     i2l2532:
  7283  002D1E  A001               	btfss	___lmul@multiplier,0,c
  7284  002D20  D009               	goto	i2l2536
  7285  002D22  5005               	movf	___lmul@multiplicand,w,c
  7286  002D24  2609               	addwf	___lmul@product,f,c
  7287  002D26  5006               	movf	___lmul@multiplicand+1,w,c
  7288  002D28  220A               	addwfc	___lmul@product+1,f,c
  7289  002D2A  5007               	movf	___lmul@multiplicand+2,w,c
  7290  002D2C  220B               	addwfc	___lmul@product+2,f,c
  7291  002D2E  5008               	movf	___lmul@multiplicand+3,w,c
  7292  002D30  220C               	addwfc	___lmul@product+3,f,c
  7293  002D32  D000               	goto	i2l2536
  7294  002D34                     i2l2536:
  7295  002D34  90D8               	bcf	status,0,c
  7296  002D36  3605               	rlcf	___lmul@multiplicand,f,c
  7297  002D38  3606               	rlcf	___lmul@multiplicand+1,f,c
  7298  002D3A  3607               	rlcf	___lmul@multiplicand+2,f,c
  7299  002D3C  3608               	rlcf	___lmul@multiplicand+3,f,c
  7300  002D3E  90D8               	bcf	status,0,c
  7301  002D40  3204               	rrcf	___lmul@multiplier+3,f,c
  7302  002D42  3203               	rrcf	___lmul@multiplier+2,f,c
  7303  002D44  3202               	rrcf	___lmul@multiplier+1,f,c
  7304  002D46  3201               	rrcf	___lmul@multiplier,f,c
  7305  002D48  5001               	movf	___lmul@multiplier,w,c
  7306  002D4A  1002               	iorwf	___lmul@multiplier+1,w,c
  7307  002D4C  1003               	iorwf	___lmul@multiplier+2,w,c
  7308  002D4E  1004               	iorwf	___lmul@multiplier+3,w,c
  7309  002D50  A4D8               	btfss	status,2,c
  7310  002D52  D7E5               	goto	i2l2532
  7311  002D54  C009  F001         	movff	___lmul@product,?___lmul
  7312  002D58  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7313  002D5C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7314  002D60  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7315  002D64  0012               	return		;funcret
  7316  002D66                     __end_of___lmul:
  7317                           	opt stack 0
  7318                           pclatu	equ	0xFFB
  7319                           pclath	equ	0xFFA
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           intcon	equ	0xFF2
  7327                           indf0	equ	0xFEF
  7328                           postinc0	equ	0xFEE
  7329                           fsr0h	equ	0xFEA
  7330                           fsr0l	equ	0xFE9
  7331                           wreg	equ	0xFE8
  7332                           indf1	equ	0xFE7
  7333                           fsr1h	equ	0xFE2
  7334                           fsr1l	equ	0xFE1
  7335                           indf2	equ	0xFDF
  7336                           postinc2	equ	0xFDE
  7337                           postdec2	equ	0xFDD
  7338                           fsr2h	equ	0xFDA
  7339                           fsr2l	equ	0xFD9
  7340                           status	equ	0xFD8
  7341                           
  7342 ;; *************** function ___ftneg *****************
  7343 ;; Defined at:
  7344 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  f1              3    0[COMRAM] float 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  3    0[COMRAM] float 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7358 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;Total ram usage:        3 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_strtod
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text31
  7372  002FB0                     __ptext31:
  7373                           	opt stack 0
  7374  002FB0                     ___ftneg:
  7375                           	opt stack 22
  7376                           
  7377                           ;incstack = 0
  7378  002FB0  5001               	movf	___ftneg@f1,w,c
  7379  002FB2  1002               	iorwf	___ftneg@f1+1,w,c
  7380  002FB4  1003               	iorwf	___ftneg@f1+2,w,c
  7381  002FB6  B4D8               	btfsc	status,2,c
  7382  002FB8  D006               	goto	i2l908
  7383  002FBA  0E00               	movlw	0
  7384  002FBC  1A01               	xorwf	___ftneg@f1,f,c
  7385  002FBE  0E00               	movlw	0
  7386  002FC0  1A02               	xorwf	___ftneg@f1+1,f,c
  7387  002FC2  0E80               	movlw	128
  7388  002FC4  1A03               	xorwf	___ftneg@f1+2,f,c
  7389  002FC6                     i2l908:
  7390  002FC6  C001  F001         	movff	___ftneg@f1,?___ftneg
  7391  002FCA  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  7392  002FCE  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  7393  002FD2  0012               	return		;funcret
  7394  002FD4                     __end_of___ftneg:
  7395                           	opt stack 0
  7396                           pclatu	equ	0xFFB
  7397                           pclath	equ	0xFFA
  7398                           tblptru	equ	0xFF8
  7399                           tblptrh	equ	0xFF7
  7400                           tblptrl	equ	0xFF6
  7401                           tablat	equ	0xFF5
  7402                           prodh	equ	0xFF4
  7403                           prodl	equ	0xFF3
  7404                           intcon	equ	0xFF2
  7405                           indf0	equ	0xFEF
  7406                           postinc0	equ	0xFEE
  7407                           fsr0h	equ	0xFEA
  7408                           fsr0l	equ	0xFE9
  7409                           wreg	equ	0xFE8
  7410                           indf1	equ	0xFE7
  7411                           fsr1h	equ	0xFE2
  7412                           fsr1l	equ	0xFE1
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           fsr2h	equ	0xFDA
  7417                           fsr2l	equ	0xFD9
  7418                           status	equ	0xFD8
  7419                           
  7420 ;; *************** function ___ftge *****************
  7421 ;; Defined at:
  7422 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  ff1             3    0[COMRAM] float 
  7425 ;;  ff2             3    3[COMRAM] float 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;		None               void
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7437 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;Total ram usage:        9 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_strtod
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text32
  7451  002960                     __ptext32:
  7452                           	opt stack 0
  7453  002960                     ___ftge:
  7454                           	opt stack 22
  7455                           
  7456                           ;incstack = 0
  7457  002960  AE03               	btfss	___ftge@ff1+2,7,c
  7458  002962  D017               	goto	i2l2654
  7459  002964  C001  F007         	movff	___ftge@ff1,??___ftge
  7460  002968  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  7461  00296C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  7462  002970  1E07               	comf	??___ftge,f,c
  7463  002972  1E08               	comf	??___ftge+1,f,c
  7464  002974  1E09               	comf	??___ftge+2,f,c
  7465  002976  2A07               	incf	??___ftge,f,c
  7466  002978  0E00               	movlw	0
  7467  00297A  2208               	addwfc	??___ftge+1,f,c
  7468  00297C  2209               	addwfc	??___ftge+2,f,c
  7469  00297E  0E00               	movlw	0
  7470  002980  2407               	addwf	??___ftge,w,c
  7471  002982  6E01               	movwf	___ftge@ff1,c
  7472  002984  0E00               	movlw	0
  7473  002986  2008               	addwfc	??___ftge+1,w,c
  7474  002988  6E02               	movwf	___ftge@ff1+1,c
  7475  00298A  0E80               	movlw	128
  7476  00298C  2009               	addwfc	??___ftge+2,w,c
  7477  00298E  6E03               	movwf	___ftge@ff1+2,c
  7478  002990  D000               	goto	i2l2654
  7479  002992                     i2l2654:
  7480  002992  AE06               	btfss	___ftge@ff2+2,7,c
  7481  002994  D017               	goto	i2l2658
  7482  002996  C004  F007         	movff	___ftge@ff2,??___ftge
  7483  00299A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  7484  00299E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  7485  0029A2  1E07               	comf	??___ftge,f,c
  7486  0029A4  1E08               	comf	??___ftge+1,f,c
  7487  0029A6  1E09               	comf	??___ftge+2,f,c
  7488  0029A8  2A07               	incf	??___ftge,f,c
  7489  0029AA  0E00               	movlw	0
  7490  0029AC  2208               	addwfc	??___ftge+1,f,c
  7491  0029AE  2209               	addwfc	??___ftge+2,f,c
  7492  0029B0  0E00               	movlw	0
  7493  0029B2  2407               	addwf	??___ftge,w,c
  7494  0029B4  6E04               	movwf	___ftge@ff2,c
  7495  0029B6  0E00               	movlw	0
  7496  0029B8  2008               	addwfc	??___ftge+1,w,c
  7497  0029BA  6E05               	movwf	___ftge@ff2+1,c
  7498  0029BC  0E80               	movlw	128
  7499  0029BE  2009               	addwfc	??___ftge+2,w,c
  7500  0029C0  6E06               	movwf	___ftge@ff2+2,c
  7501  0029C2  D000               	goto	i2l2658
  7502  0029C4                     i2l2658:
  7503  0029C4  0E00               	movlw	0
  7504  0029C6  1A01               	xorwf	___ftge@ff1,f,c
  7505  0029C8  0E00               	movlw	0
  7506  0029CA  1A02               	xorwf	___ftge@ff1+1,f,c
  7507  0029CC  0E80               	movlw	128
  7508  0029CE  1A03               	xorwf	___ftge@ff1+2,f,c
  7509  0029D0  0E00               	movlw	0
  7510  0029D2  1A04               	xorwf	___ftge@ff2,f,c
  7511  0029D4  0E00               	movlw	0
  7512  0029D6  1A05               	xorwf	___ftge@ff2+1,f,c
  7513  0029D8  0E80               	movlw	128
  7514  0029DA  1A06               	xorwf	___ftge@ff2+2,f,c
  7515  0029DC  5004               	movf	___ftge@ff2,w,c
  7516  0029DE  5C01               	subwf	___ftge@ff1,w,c
  7517  0029E0  5005               	movf	___ftge@ff2+1,w,c
  7518  0029E2  5802               	subwfb	___ftge@ff1+1,w,c
  7519  0029E4  5006               	movf	___ftge@ff2+2,w,c
  7520  0029E6  5803               	subwfb	___ftge@ff1+2,w,c
  7521  0029E8  B0D8               	btfsc	status,0,c
  7522  0029EA  D002               	goto	i2l2664
  7523  0029EC  90D8               	bcf	status,0,c
  7524  0029EE  D002               	goto	i2l892
  7525  0029F0                     i2l2664:
  7526  0029F0  80D8               	bsf	status,0,c
  7527  0029F2  D000               	goto	i2l892
  7528  0029F4                     i2l892:
  7529  0029F4  0012               	return		;funcret
  7530  0029F6                     __end_of___ftge:
  7531                           	opt stack 0
  7532                           pclatu	equ	0xFFB
  7533                           pclath	equ	0xFFA
  7534                           tblptru	equ	0xFF8
  7535                           tblptrh	equ	0xFF7
  7536                           tblptrl	equ	0xFF6
  7537                           tablat	equ	0xFF5
  7538                           prodh	equ	0xFF4
  7539                           prodl	equ	0xFF3
  7540                           intcon	equ	0xFF2
  7541                           indf0	equ	0xFEF
  7542                           postinc0	equ	0xFEE
  7543                           fsr0h	equ	0xFEA
  7544                           fsr0l	equ	0xFE9
  7545                           wreg	equ	0xFE8
  7546                           indf1	equ	0xFE7
  7547                           fsr1h	equ	0xFE2
  7548                           fsr1l	equ	0xFE1
  7549                           indf2	equ	0xFDF
  7550                           postinc2	equ	0xFDE
  7551                           postdec2	equ	0xFDD
  7552                           fsr2h	equ	0xFDA
  7553                           fsr2l	equ	0xFD9
  7554                           status	equ	0xFD8
  7555                           
  7556 ;; *************** function ___ftdiv *****************
  7557 ;; Defined at:
  7558 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  f1              3    8[COMRAM] float 
  7561 ;;  f2              3   11[COMRAM] float 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  f3              3   18[COMRAM] float 
  7564 ;;  sign            1   22[COMRAM] unsigned char 
  7565 ;;  exp             1   21[COMRAM] unsigned char 
  7566 ;;  cntr            1   17[COMRAM] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  3    8[COMRAM] float 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7576 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;Total ram usage:       15 bytes
  7581 ;; Hardware stack levels used:    1
  7582 ;; Hardware stack levels required when called:    1
  7583 ;; This function calls:
  7584 ;;		i2___ftpack
  7585 ;; This function is called by:
  7586 ;;		_strtod
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text33
  7591  002706                     __ptext33:
  7592                           	opt stack 0
  7593  002706                     ___ftdiv:
  7594                           	opt stack 21
  7595                           
  7596                           ;incstack = 0
  7597  002706  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  7598  00270A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  7599  00270C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  7600  00270E  340A               	rlcf	___ftdiv@f1+1,w,c
  7601  002710  360F               	rlcf	??___ftdiv& (0+255),f,c
  7602  002712  E301               	bnc	u262_41
  7603  002714  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  7604  002716                     u262_41:
  7605  002716  500F               	movf	??___ftdiv,w,c
  7606  002718  6E16               	movwf	___ftdiv@exp,c
  7607  00271A  5016               	movf	___ftdiv@exp,w,c
  7608  00271C  A4D8               	btfss	status,2,c
  7609  00271E  D002               	goto	i2l2598
  7610  002720  D00E               	goto	i2l2600
  7611  002722  D061               	goto	i2l883
  7612  002724                     i2l2598:
  7613  002724  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  7614  002728  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  7615  00272A  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  7616  00272C  340D               	rlcf	___ftdiv@f2+1,w,c
  7617  00272E  360F               	rlcf	??___ftdiv& (0+255),f,c
  7618  002730  E301               	bnc	u264_41
  7619  002732  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  7620  002734                     u264_41:
  7621  002734  500F               	movf	??___ftdiv,w,c
  7622  002736  6E17               	movwf	___ftdiv@sign,c
  7623  002738  5017               	movf	___ftdiv@sign,w,c
  7624  00273A  A4D8               	btfss	status,2,c
  7625  00273C  D007               	goto	i2l2604
  7626  00273E                     i2l2600:
  7627  00273E  0E00               	movlw	0
  7628  002740  6E09               	movwf	?___ftdiv,c
  7629  002742  0E00               	movlw	0
  7630  002744  6E0A               	movwf	?___ftdiv+1,c
  7631  002746  0E00               	movlw	0
  7632  002748  6E0B               	movwf	?___ftdiv+2,c
  7633  00274A  D04D               	goto	i2l883
  7634  00274C                     i2l2604:
  7635  00274C  0E00               	movlw	0
  7636  00274E  6E13               	movwf	___ftdiv@f3,c
  7637  002750  0E00               	movlw	0
  7638  002752  6E14               	movwf	___ftdiv@f3+1,c
  7639  002754  0E00               	movlw	0
  7640  002756  6E15               	movwf	___ftdiv@f3+2,c
  7641  002758  5017               	movf	___ftdiv@sign,w,c
  7642  00275A  0F89               	addlw	137
  7643  00275C  5E16               	subwf	___ftdiv@exp,f,c
  7644  00275E  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  7645  002762  500E               	movf	___ftdiv@f2+2,w,c
  7646  002764  1A17               	xorwf	___ftdiv@sign,f,c
  7647  002766  0E80               	movlw	128
  7648  002768  1617               	andwf	___ftdiv@sign,f,c
  7649  00276A  8E0A               	bsf	___ftdiv@f1+1,7,c
  7650  00276C  0EFF               	movlw	255
  7651  00276E  1609               	andwf	___ftdiv@f1,f,c
  7652  002770  0EFF               	movlw	255
  7653  002772  160A               	andwf	___ftdiv@f1+1,f,c
  7654  002774  0E00               	movlw	0
  7655  002776  160B               	andwf	___ftdiv@f1+2,f,c
  7656  002778  8E0D               	bsf	___ftdiv@f2+1,7,c
  7657  00277A  0EFF               	movlw	255
  7658  00277C  160C               	andwf	___ftdiv@f2,f,c
  7659  00277E  0EFF               	movlw	255
  7660  002780  160D               	andwf	___ftdiv@f2+1,f,c
  7661  002782  0E00               	movlw	0
  7662  002784  160E               	andwf	___ftdiv@f2+2,f,c
  7663  002786  0E18               	movlw	24
  7664  002788  6E12               	movwf	___ftdiv@cntr,c
  7665  00278A  D000               	goto	i2l2624
  7666  00278C                     i2l2624:
  7667  00278C  90D8               	bcf	status,0,c
  7668  00278E  3613               	rlcf	___ftdiv@f3,f,c
  7669  002790  3614               	rlcf	___ftdiv@f3+1,f,c
  7670  002792  3615               	rlcf	___ftdiv@f3+2,f,c
  7671  002794  500C               	movf	___ftdiv@f2,w,c
  7672  002796  5C09               	subwf	___ftdiv@f1,w,c
  7673  002798  500D               	movf	___ftdiv@f2+1,w,c
  7674  00279A  580A               	subwfb	___ftdiv@f1+1,w,c
  7675  00279C  500E               	movf	___ftdiv@f2+2,w,c
  7676  00279E  580B               	subwfb	___ftdiv@f1+2,w,c
  7677  0027A0  A0D8               	btfss	status,0,c
  7678  0027A2  D007               	goto	i2l886
  7679  0027A4  500C               	movf	___ftdiv@f2,w,c
  7680  0027A6  5E09               	subwf	___ftdiv@f1,f,c
  7681  0027A8  500D               	movf	___ftdiv@f2+1,w,c
  7682  0027AA  5A0A               	subwfb	___ftdiv@f1+1,f,c
  7683  0027AC  500E               	movf	___ftdiv@f2+2,w,c
  7684  0027AE  5A0B               	subwfb	___ftdiv@f1+2,f,c
  7685  0027B0  8013               	bsf	___ftdiv@f3,0,c
  7686  0027B2                     i2l886:
  7687  0027B2  90D8               	bcf	status,0,c
  7688  0027B4  3609               	rlcf	___ftdiv@f1,f,c
  7689  0027B6  360A               	rlcf	___ftdiv@f1+1,f,c
  7690  0027B8  360B               	rlcf	___ftdiv@f1+2,f,c
  7691  0027BA  2E12               	decfsz	___ftdiv@cntr,f,c
  7692  0027BC  D7E7               	goto	i2l2624
  7693  0027BE  D000               	goto	i2l2634
  7694  0027C0                     i2l2634:
  7695  0027C0  C013  F001         	movff	___ftdiv@f3,i2___ftpack@arg
  7696  0027C4  C014  F002         	movff	___ftdiv@f3+1,i2___ftpack@arg+1
  7697  0027C8  C015  F003         	movff	___ftdiv@f3+2,i2___ftpack@arg+2
  7698  0027CC  C016  F004         	movff	___ftdiv@exp,i2___ftpack@exp
  7699  0027D0  C017  F005         	movff	___ftdiv@sign,i2___ftpack@sign
  7700  0027D4  ECF4  F013         	call	i2___ftpack	;wreg free
  7701  0027D8  C001  F009         	movff	?i2___ftpack,?___ftdiv
  7702  0027DC  C002  F00A         	movff	?i2___ftpack+1,?___ftdiv+1
  7703  0027E0  C003  F00B         	movff	?i2___ftpack+2,?___ftdiv+2
  7704  0027E4  D000               	goto	i2l883
  7705  0027E6                     i2l883:
  7706  0027E6  0012               	return		;funcret
  7707  0027E8                     __end_of___ftdiv:
  7708                           	opt stack 0
  7709                           pclatu	equ	0xFFB
  7710                           pclath	equ	0xFFA
  7711                           tblptru	equ	0xFF8
  7712                           tblptrh	equ	0xFF7
  7713                           tblptrl	equ	0xFF6
  7714                           tablat	equ	0xFF5
  7715                           prodh	equ	0xFF4
  7716                           prodl	equ	0xFF3
  7717                           intcon	equ	0xFF2
  7718                           indf0	equ	0xFEF
  7719                           postinc0	equ	0xFEE
  7720                           fsr0h	equ	0xFEA
  7721                           fsr0l	equ	0xFE9
  7722                           wreg	equ	0xFE8
  7723                           indf1	equ	0xFE7
  7724                           fsr1h	equ	0xFE2
  7725                           fsr1l	equ	0xFE1
  7726                           indf2	equ	0xFDF
  7727                           postinc2	equ	0xFDE
  7728                           postdec2	equ	0xFDD
  7729                           fsr2h	equ	0xFDA
  7730                           fsr2l	equ	0xFD9
  7731                           status	equ	0xFD8
  7732                           
  7733 ;; *************** function ___altoft *****************
  7734 ;; Defined at:
  7735 ;;		line 42 in file "/opt/microchip/xc8/v1.34/sources/common/altoft.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  c               4    8[COMRAM] long 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  sign            1   17[COMRAM] unsigned char 
  7740 ;;  exp             1   16[COMRAM] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  3    8[COMRAM] float 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;Total ram usage:       10 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    1
  7757 ;; This function calls:
  7758 ;;		i2___ftpack
  7759 ;; This function is called by:
  7760 ;;		_strtod
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text34
  7765  002AF4                     __ptext34:
  7766                           	opt stack 0
  7767  002AF4                     ___altoft:
  7768                           	opt stack 21
  7769                           
  7770                           ;incstack = 0
  7771  002AF4  0E00               	movlw	0
  7772  002AF6  6E12               	movwf	___altoft@sign,c
  7773  002AF8  0E8E               	movlw	142
  7774  002AFA  6E11               	movwf	___altoft@exp,c
  7775  002AFC  AE0C               	btfss	___altoft@c+3,7,c
  7776  002AFE  D012               	goto	i2l2586
  7777  002B00  1E0C               	comf	___altoft@c+3,f,c
  7778  002B02  1E0B               	comf	___altoft@c+2,f,c
  7779  002B04  1E0A               	comf	___altoft@c+1,f,c
  7780  002B06  6C09               	negf	___altoft@c,c
  7781  002B08  0E00               	movlw	0
  7782  002B0A  220A               	addwfc	___altoft@c+1,f,c
  7783  002B0C  220B               	addwfc	___altoft@c+2,f,c
  7784  002B0E  220C               	addwfc	___altoft@c+3,f,c
  7785  002B10  0E01               	movlw	1
  7786  002B12  6E12               	movwf	___altoft@sign,c
  7787  002B14  D007               	goto	i2l2586
  7788  002B16                     i2l2584:
  7789  002B16  90D8               	bcf	status,0,c
  7790  002B18  320C               	rrcf	___altoft@c+3,f,c
  7791  002B1A  320B               	rrcf	___altoft@c+2,f,c
  7792  002B1C  320A               	rrcf	___altoft@c+1,f,c
  7793  002B1E  3209               	rrcf	___altoft@c,f,c
  7794  002B20  2A11               	incf	___altoft@exp,f,c
  7795  002B22  D000               	goto	i2l2586
  7796  002B24                     i2l2586:
  7797  002B24  0E00               	movlw	0
  7798  002B26  1409               	andwf	___altoft@c,w,c
  7799  002B28  6E0D               	movwf	??___altoft& (0+255),c
  7800  002B2A  0E00               	movlw	0
  7801  002B2C  140A               	andwf	___altoft@c+1,w,c
  7802  002B2E  6E0E               	movwf	(??___altoft+1)& (0+255),c
  7803  002B30  0E00               	movlw	0
  7804  002B32  140B               	andwf	___altoft@c+2,w,c
  7805  002B34  6E0F               	movwf	(??___altoft+2)& (0+255),c
  7806  002B36  0EFF               	movlw	255
  7807  002B38  140C               	andwf	___altoft@c+3,w,c
  7808  002B3A  6E10               	movwf	(??___altoft+3)& (0+255),c
  7809  002B3C  500D               	movf	??___altoft,w,c
  7810  002B3E  100E               	iorwf	??___altoft+1,w,c
  7811  002B40  100F               	iorwf	??___altoft+2,w,c
  7812  002B42  1010               	iorwf	??___altoft+3,w,c
  7813  002B44  A4D8               	btfss	status,2,c
  7814  002B46  D7E7               	goto	i2l2584
  7815  002B48  C009  F001         	movff	___altoft@c,i2___ftpack@arg
  7816  002B4C  C00A  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
  7817  002B50  C00B  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
  7818  002B54  C011  F004         	movff	___altoft@exp,i2___ftpack@exp
  7819  002B58  C012  F005         	movff	___altoft@sign,i2___ftpack@sign
  7820  002B5C  ECF4  F013         	call	i2___ftpack	;wreg free
  7821  002B60  C001  F009         	movff	?i2___ftpack,?___altoft
  7822  002B64  C002  F00A         	movff	?i2___ftpack+1,?___altoft+1
  7823  002B68  C003  F00B         	movff	?i2___ftpack+2,?___altoft+2
  7824  002B6C  D000               	goto	i2l532
  7825  002B6E                     i2l532:
  7826  002B6E  0012               	return		;funcret
  7827  002B70                     __end_of___altoft:
  7828                           	opt stack 0
  7829                           pclatu	equ	0xFFB
  7830                           pclath	equ	0xFFA
  7831                           tblptru	equ	0xFF8
  7832                           tblptrh	equ	0xFF7
  7833                           tblptrl	equ	0xFF6
  7834                           tablat	equ	0xFF5
  7835                           prodh	equ	0xFF4
  7836                           prodl	equ	0xFF3
  7837                           intcon	equ	0xFF2
  7838                           indf0	equ	0xFEF
  7839                           postinc0	equ	0xFEE
  7840                           fsr0h	equ	0xFEA
  7841                           fsr0l	equ	0xFE9
  7842                           wreg	equ	0xFE8
  7843                           indf1	equ	0xFE7
  7844                           fsr1h	equ	0xFE2
  7845                           fsr1l	equ	0xFE1
  7846                           indf2	equ	0xFDF
  7847                           postinc2	equ	0xFDE
  7848                           postdec2	equ	0xFDD
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function i2___ftpack *****************
  7854 ;; Defined at:
  7855 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  arg             3    0[COMRAM] unsigned um
  7858 ;;  exp             1    3[COMRAM] unsigned char 
  7859 ;;  sign            1    4[COMRAM] unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  3    0[COMRAM] float 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7871 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7873 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7874 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7875 ;;Total ram usage:        8 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		___altoft
  7881 ;;		___ftdiv
  7882 ;;		i2___ftmul
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text35
  7887  0027E8                     __ptext35:
  7888                           	opt stack 0
  7889  0027E8                     i2___ftpack:
  7890                           	opt stack 21
  7891                           
  7892                           ;incstack = 0
  7893  0027E8  5004               	movf	i2___ftpack@exp,w,c
  7894  0027EA  B4D8               	btfsc	status,2,c
  7895  0027EC  D005               	goto	i2l2482
  7896  0027EE  5001               	movf	i2___ftpack@arg,w,c
  7897  0027F0  1002               	iorwf	i2___ftpack@arg+1,w,c
  7898  0027F2  1003               	iorwf	i2___ftpack@arg+2,w,c
  7899  0027F4  A4D8               	btfss	status,2,c
  7900  0027F6  D00E               	goto	i2l2488
  7901  0027F8                     i2l2482:
  7902  0027F8  0E00               	movlw	0
  7903  0027FA  6E01               	movwf	?i2___ftpack,c
  7904  0027FC  0E00               	movlw	0
  7905  0027FE  6E02               	movwf	?i2___ftpack+1,c
  7906  002800  0E00               	movlw	0
  7907  002802  6E03               	movwf	?i2___ftpack+2,c
  7908  002804  D053               	goto	i2l811
  7909  002806  D006               	goto	i2l2488
  7910  002808                     i2l2486:
  7911  002808  2A04               	incf	i2___ftpack@exp,f,c
  7912  00280A  90D8               	bcf	status,0,c
  7913  00280C  3203               	rrcf	i2___ftpack@arg+2,f,c
  7914  00280E  3202               	rrcf	i2___ftpack@arg+1,f,c
  7915  002810  3201               	rrcf	i2___ftpack@arg,f,c
  7916  002812  D000               	goto	i2l2488
  7917  002814                     i2l2488:
  7918  002814  0E00               	movlw	0
  7919  002816  1401               	andwf	i2___ftpack@arg,w,c
  7920  002818  6E06               	movwf	??i2___ftpack& (0+255),c
  7921  00281A  0E00               	movlw	0
  7922  00281C  1402               	andwf	i2___ftpack@arg+1,w,c
  7923  00281E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  7924  002820  0EFE               	movlw	254
  7925  002822  1403               	andwf	i2___ftpack@arg+2,w,c
  7926  002824  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  7927  002826  5006               	movf	??i2___ftpack,w,c
  7928  002828  1007               	iorwf	??i2___ftpack+1,w,c
  7929  00282A  1008               	iorwf	??i2___ftpack+2,w,c
  7930  00282C  B4D8               	btfsc	status,2,c
  7931  00282E  D00E               	goto	i2l2494
  7932  002830  D7EB               	goto	i2l2486
  7933  002832  D00C               	goto	i2l2494
  7934  002834                     i2l2490:
  7935  002834  2A04               	incf	i2___ftpack@exp,f,c
  7936  002836  0E01               	movlw	1
  7937  002838  2601               	addwf	i2___ftpack@arg,f,c
  7938  00283A  0E00               	movlw	0
  7939  00283C  2202               	addwfc	i2___ftpack@arg+1,f,c
  7940  00283E  0E00               	movlw	0
  7941  002840  2203               	addwfc	i2___ftpack@arg+2,f,c
  7942  002842  90D8               	bcf	status,0,c
  7943  002844  3203               	rrcf	i2___ftpack@arg+2,f,c
  7944  002846  3202               	rrcf	i2___ftpack@arg+1,f,c
  7945  002848  3201               	rrcf	i2___ftpack@arg,f,c
  7946  00284A  D000               	goto	i2l2494
  7947  00284C                     i2l2494:
  7948  00284C  0E00               	movlw	0
  7949  00284E  1401               	andwf	i2___ftpack@arg,w,c
  7950  002850  6E06               	movwf	??i2___ftpack& (0+255),c
  7951  002852  0E00               	movlw	0
  7952  002854  1402               	andwf	i2___ftpack@arg+1,w,c
  7953  002856  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  7954  002858  0EFF               	movlw	255
  7955  00285A  1403               	andwf	i2___ftpack@arg+2,w,c
  7956  00285C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  7957  00285E  5006               	movf	??i2___ftpack,w,c
  7958  002860  1007               	iorwf	??i2___ftpack+1,w,c
  7959  002862  1008               	iorwf	??i2___ftpack+2,w,c
  7960  002864  B4D8               	btfsc	status,2,c
  7961  002866  D008               	goto	i2l2498
  7962  002868  D7E5               	goto	i2l2490
  7963  00286A  D006               	goto	i2l2498
  7964  00286C                     i2l2496:
  7965  00286C  0604               	decf	i2___ftpack@exp,f,c
  7966  00286E  90D8               	bcf	status,0,c
  7967  002870  3601               	rlcf	i2___ftpack@arg,f,c
  7968  002872  3602               	rlcf	i2___ftpack@arg+1,f,c
  7969  002874  3603               	rlcf	i2___ftpack@arg+2,f,c
  7970  002876  D000               	goto	i2l2498
  7971  002878                     i2l2498:
  7972  002878  BE02               	btfsc	i2___ftpack@arg+1,7,c
  7973  00287A  D004               	goto	i2l822
  7974  00287C  0E02               	movlw	2
  7975  00287E  6004               	cpfslt	i2___ftpack@exp,c
  7976  002880  D7F5               	goto	i2l2496
  7977  002882  D000               	goto	i2l822
  7978  002884                     i2l822:
  7979  002884  B004               	btfsc	i2___ftpack@exp,0,c
  7980  002886  D002               	goto	i2l2504
  7981  002888  9E02               	bcf	i2___ftpack@arg+1,7,c
  7982  00288A  D000               	goto	i2l2504
  7983  00288C                     i2l2504:
  7984  00288C  90D8               	bcf	status,0,c
  7985  00288E  3204               	rrcf	i2___ftpack@exp,f,c
  7986  002890  5004               	movf	i2___ftpack@exp,w,c
  7987  002892  1203               	iorwf	i2___ftpack@arg+2,f,c
  7988  002894  5005               	movf	i2___ftpack@sign,w,c
  7989  002896  B4D8               	btfsc	status,2,c
  7990  002898  D002               	goto	i2l2510
  7991  00289A  8E03               	bsf	i2___ftpack@arg+2,7,c
  7992  00289C  D000               	goto	i2l2510
  7993  00289E                     i2l2510:
  7994  00289E  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  7995  0028A2  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  7996  0028A6  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  7997  0028AA  D000               	goto	i2l811
  7998  0028AC                     i2l811:
  7999  0028AC  0012               	return		;funcret
  8000  0028AE                     __end_ofi2___ftpack:
  8001                           	opt stack 0
  8002                           pclatu	equ	0xFFB
  8003                           pclath	equ	0xFFA
  8004                           tblptru	equ	0xFF8
  8005                           tblptrh	equ	0xFF7
  8006                           tblptrl	equ	0xFF6
  8007                           tablat	equ	0xFF5
  8008                           prodh	equ	0xFF4
  8009                           prodl	equ	0xFF3
  8010                           intcon	equ	0xFF2
  8011                           indf0	equ	0xFEF
  8012                           postinc0	equ	0xFEE
  8013                           fsr0h	equ	0xFEA
  8014                           fsr0l	equ	0xFE9
  8015                           wreg	equ	0xFE8
  8016                           indf1	equ	0xFE7
  8017                           fsr1h	equ	0xFE2
  8018                           fsr1l	equ	0xFE1
  8019                           indf2	equ	0xFDF
  8020                           postinc2	equ	0xFDE
  8021                           postdec2	equ	0xFDD
  8022                           fsr2h	equ	0xFDA
  8023                           fsr2l	equ	0xFD9
  8024                           status	equ	0xFD8
  8025                           
  8026 ;; *************** function _strcmp *****************
  8027 ;; Defined at:
  8028 ;;		line 33 in file "/opt/microchip/xc8/v1.34/sources/common/strcmp.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  8031 ;;		 -> key(5), 
  8032 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  8033 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  8034 ;;		 -> STR_23(3), STR_22(3), STR_21(4), STR_20(4), 
  8035 ;;		 -> STR_19(4), STR_18(4), STR_17(3), STR_16(3), 
  8036 ;;		 -> STR_15(3), STR_14(3), STR_11(3), STR_10(3), 
  8037 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  8038 ;;		 -> STR_5(4), STR_4(4), 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  r               1    5[COMRAM] char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  2    0[COMRAM] int 
  8043 ;; Registers used:
  8044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;Total ram usage:        6 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_keyValue
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text36
  8064  002E10                     __ptext36:
  8065                           	opt stack 0
  8066  002E10                     _strcmp:
  8067                           	opt stack 23
  8068                           
  8069                           ;incstack = 0
  8070  002E10  D005               	goto	i2l2734
  8071  002E12                     i2l2732:
  8072  002E12  4A01               	infsnz	strcmp@s1,f,c
  8073  002E14  2A02               	incf	strcmp@s1+1,f,c
  8074  002E16  4A03               	infsnz	strcmp@s2,f,c
  8075  002E18  2A04               	incf	strcmp@s2+1,f,c
  8076  002E1A  D000               	goto	i2l2734
  8077  002E1C                     i2l2734:
  8078  002E1C  C001  FFD9         	movff	strcmp@s1,fsr2l
  8079  002E20  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  8080  002E24  50DF               	movf	indf2,w,c
  8081  002E26  6E05               	movwf	??_strcmp& (0+255),c
  8082  002E28  C003  FFF6         	movff	strcmp@s2,tblptrl
  8083  002E2C  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  8084  002E30                     	if	0	;tblptru may be non-zero
  8085  002E30                     	endif
  8086  002E30                     	if	0	;tblptru may be non-zero
  8087  002E30                     	endif
  8088  002E30  0008               	tblrd		*
  8089  002E32  50F5               	movf	tablat,w,c
  8090  002E34  0800               	sublw	0
  8091  002E36  2405               	addwf	??_strcmp,w,c
  8092  002E38  6E06               	movwf	strcmp@r,c
  8093  002E3A  5006               	movf	strcmp@r,w,c
  8094  002E3C  A4D8               	btfss	status,2,c
  8095  002E3E  D009               	goto	i2l2738
  8096  002E40  C001  FFD9         	movff	strcmp@s1,fsr2l
  8097  002E44  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  8098  002E48  50DF               	movf	indf2,w,c
  8099  002E4A  B4D8               	btfsc	status,2,c
  8100  002E4C  D002               	goto	i2l2738
  8101  002E4E  D7E1               	goto	i2l2732
  8102  002E50  D000               	goto	i2l2738
  8103  002E52                     i2l2738:
  8104  002E52  5006               	movf	strcmp@r,w,c
  8105  002E54  6E01               	movwf	?_strcmp,c
  8106  002E56  6A02               	clrf	?_strcmp+1,c
  8107  002E58  BE01               	btfsc	?_strcmp,7,c
  8108  002E5A  0602               	decf	?_strcmp+1,f,c
  8109  002E5C  D000               	goto	i2l1066
  8110  002E5E                     i2l1066:
  8111  002E5E  0012               	return		;funcret
  8112  002E60                     __end_of_strcmp:
  8113                           	opt stack 0
  8114                           pclatu	equ	0xFFB
  8115                           pclath	equ	0xFFA
  8116                           tblptru	equ	0xFF8
  8117                           tblptrh	equ	0xFF7
  8118                           tblptrl	equ	0xFF6
  8119                           tablat	equ	0xFF5
  8120                           prodh	equ	0xFF4
  8121                           prodl	equ	0xFF3
  8122                           intcon	equ	0xFF2
  8123                           indf0	equ	0xFEF
  8124                           postinc0	equ	0xFEE
  8125                           fsr0h	equ	0xFEA
  8126                           fsr0l	equ	0xFE9
  8127                           wreg	equ	0xFE8
  8128                           indf1	equ	0xFE7
  8129                           fsr1h	equ	0xFE2
  8130                           fsr1l	equ	0xFE1
  8131                           indf2	equ	0xFDF
  8132                           postinc2	equ	0xFDE
  8133                           postdec2	equ	0xFDD
  8134                           fsr2h	equ	0xFDA
  8135                           fsr2l	equ	0xFD9
  8136                           status	equ	0xFD8
  8137                           pclatu	equ	0xFFB
  8138                           pclath	equ	0xFFA
  8139                           tblptru	equ	0xFF8
  8140                           tblptrh	equ	0xFF7
  8141                           tblptrl	equ	0xFF6
  8142                           tablat	equ	0xFF5
  8143                           prodh	equ	0xFF4
  8144                           prodl	equ	0xFF3
  8145                           intcon	equ	0xFF2
  8146                           indf0	equ	0xFEF
  8147                           postinc0	equ	0xFEE
  8148                           fsr0h	equ	0xFEA
  8149                           fsr0l	equ	0xFE9
  8150                           wreg	equ	0xFE8
  8151                           indf1	equ	0xFE7
  8152                           fsr1h	equ	0xFE2
  8153                           fsr1l	equ	0xFE1
  8154                           indf2	equ	0xFDF
  8155                           postinc2	equ	0xFDE
  8156                           postdec2	equ	0xFDD
  8157                           fsr2h	equ	0xFDA
  8158                           fsr2l	equ	0xFD9
  8159                           status	equ	0xFD8
  8160                           
  8161                           	psect	rparam
  8162  0000                     pclatu	equ	0xFFB
  8163                           pclath	equ	0xFFA
  8164                           tblptru	equ	0xFF8
  8165                           tblptrh	equ	0xFF7
  8166                           tblptrl	equ	0xFF6
  8167                           tablat	equ	0xFF5
  8168                           prodh	equ	0xFF4
  8169                           prodl	equ	0xFF3
  8170                           intcon	equ	0xFF2
  8171                           indf0	equ	0xFEF
  8172                           postinc0	equ	0xFEE
  8173                           fsr0h	equ	0xFEA
  8174                           fsr0l	equ	0xFE9
  8175                           wreg	equ	0xFE8
  8176                           indf1	equ	0xFE7
  8177                           fsr1h	equ	0xFE2
  8178                           fsr1l	equ	0xFE1
  8179                           indf2	equ	0xFDF
  8180                           postinc2	equ	0xFDE
  8181                           postdec2	equ	0xFDD
  8182                           fsr2h	equ	0xFDA
  8183                           fsr2l	equ	0xFD9
  8184                           status	equ	0xFD8


Data Sizes:
    Strings     97
    Constant    0
    Data        1
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      97
    BANK0           128     53      95
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> key(COMRAM[5]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), keyValue@str_end(COMRAM[2]), 

    DoublePtr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), SPIDisassembleDouble@dub(BANK0[3]), SPIReassembleDouble@dub(BANK0[3]), 

    MReceiveStrSPI@str	PTR unsigned char  size(2) Largest target is 4
		 -> DoubleSPIM(BANK0[4]), 

    keyValue@str_end	PTR unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    keyValue@str	PTR unsigned char  size(2) Largest target is 30
		 -> received(BANK0[30]), 

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 36
		 -> STR_28(CODE[4]), STR_13(CODE[6]), STR_12(CODE[4]), STR_3(CODE[11]), 
		 -> value(COMRAM[10]), STR_2(CODE[6]), key(COMRAM[5]), STR_1(CODE[36]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_RCInt
    _RCInt->_keyValue
    _keyValue->_strtod
    i2_SerTxStr->i2_SerTx
    _strtod->___ftdiv
    _strtod->i2___ftmul
    i2___ftmul->i2___ftpack
    ___ftdiv->i2___ftpack
    ___altoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_MReceiveStrSPI
    _SerInit->_SerTxStr
    _SerTxStr->_SerTx
    _SPIInitM->_OpenSPI
    _SPIDisassembleDouble->_MGenerateChecksum
    _MSendSPI->_Delay10TCYx
    _MReceiveStrSPI->_breakDouble
    _breakDouble->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftpack

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10280
                                             52 BANK0      1     1      0
                        _Delay10TCYx
                     _MReceiveStrSPI
                           _MSendSPI
               _SPIDisassembleDouble
                _SPIReassembleDouble
                           _checksum
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     655
                           _SPIInitM
                            _SerInit
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0     401
                           _SerTxStr
 ---------------------------------------------------------------------------------
 (3) _SerTxStr                                             2     0      2     401
                                              1 BANK0      2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (2) _SPIInitM                                             0     0      0     254
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     1      2     254
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _checksum                                             6     6      0     136
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SPIDisassembleDouble                                 3     0      3     324
                                              2 BANK0      3     0      3
                  _MGenerateChecksum
 ---------------------------------------------------------------------------------
 (2) _MGenerateChecksum                                    2     2      0     136
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _MSendSPI                                             4     3      1    1077
                                              1 BANK0      4     3      1
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (1) _MReceiveStrSPI                                       5     2      3    6777
                                             47 BANK0      5     2      3
                        _Delay10TCYx
                        _MReceiveSPI
                _SPIReassembleDouble
                        _breakDouble
 ---------------------------------------------------------------------------------
 (2) _breakDouble                                          9     6      3    5063
                                             38 BANK0      9     6      3
                _SPIReassembleDouble (ARG)
                              _SerTx
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     761
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     305
                                             23 BANK0     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2626
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1798
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _SerTx                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPIReassembleDouble                                  6     3      3      89
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _MReceiveSPI                                          1     1      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10TCYx                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0    8840
                                             48 COMRAM    14    14      0
                              _RCInt
 ---------------------------------------------------------------------------------
 (6) _RCInt                                                2     2      0    8840
                                             46 COMRAM     2     2      0
                           _keyValue
                            i2_SerTx
 ---------------------------------------------------------------------------------
 (7) _keyValue                                            11     7      4    8661
                                             35 COMRAM    11     7      4
                            _isspace
                             _strcmp
                             _strtod
                            i2_SerTx
                         i2_SerTxStr
 ---------------------------------------------------------------------------------
 (8) i2_SerTxStr                                           2     0      2     275
                                              1 COMRAM     2     0      2
                            i2_SerTx
 ---------------------------------------------------------------------------------
 (7) i2_SerTx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _strtod                                              12     8      4    4885
                                             23 COMRAM    12     8      4
                           ___altoft
                            ___ftdiv
                             ___ftge
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (9) i2___ftmul                                           15     9      6     895
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) _isspace                                              3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     278
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (9) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (9) ___ftge                                               9     3      6     348
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (9) ___ftdiv                                             15     9      6    1037
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) ___altoft                                            10     6      4     656
                                              8 COMRAM    10     6      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     465
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4    2423
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10TCYx
   _MReceiveStrSPI
     _Delay10TCYx
     _MReceiveSPI
     _SPIReassembleDouble
     _breakDouble
       _SPIReassembleDouble (ARG)
       _SerTx (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___lwdiv (ARG)
       ___lwmod (ARG)
   _MSendSPI
     _Delay10TCYx
   _SPIDisassembleDouble
     _MGenerateChecksum
   _SPIReassembleDouble
   _checksum
   _initialize
     _SPIInitM
       _OpenSPI
     _SerInit
       _SerTxStr
         _SerTx

 _ISR (ROOT)
   _RCInt
     _keyValue
       _isspace
       _strcmp
       _strtod
         ___altoft
           i2___ftpack
         ___ftdiv
           i2___ftpack
         ___ftge
         ___ftneg
         ___lmul
         _isdigit
         _isspace
         i2___ftmul
           i2___ftpack
       i2_SerTx
       i2_SerTxStr
         i2_SerTx
     i2_SerTx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     35      5F       5       74.2%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      61       1       76.4%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0       6        0.0%
DATA                 0      0      C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 29 01:53:13 2015

                 ___altoft@exp 0011                    _SSPSTATbits 000FC7                  ___altoft@sign 0012  
                           l50 2064                             l28 3046                             l49 2012  
                           _Kd 003F                             _Ki 0042                             _Kp 0045  
                   i2___ftpack 27E8                            l311 1606                            l315 1648  
                          l245 108A                            l406 2F26                            l430 2C90  
                          l422 2C68                            l431 2C94                            l424 2C6C  
                          l280 1364                            l425 2C6E                            l363 2E02  
                          l372 3024                            l428 2C8A                            l276 1322  
                          l365 2E06                            l429 2CAA                            l366 2E0E  
                          l358 2DDE                            l391 2EE6                            l383 2918  
                          l376 28BA                            l721 303A                            l369 301C  
                          l811 260C                            l388 295E                            l397 2AF2  
                          l822 25D4                            l919 24EC                            l898 2268  
                          _ISR 0008                            _key 005D                            prod 000FF3  
                          wreg 000FE8                           ?_ISR 0001                   ___ftdiv@cntr 0012  
                 ___ftdiv@sign 0017                   __CFG_WDT$OFF 000000                           l1031 2A6E  
                         l1041 2C44                           l3010 24AE                           l3002 247E  
                         l3004 2486                           l3012 24BC                           l3016 24DA  
                         l3008 249C                           l4100 2954                           l4014 2EF4  
                         l4110 2A92                           l4024 2F20                           l4018 2F02  
                         l4106 2A84                           l4202 1192                           l4124 2AEE  
                         l4116 2AB0                           l4212 11D2                           l4222 11FE  
                         l4072 28D4                           l4048 2DE4                           l4304 139E  
                         l4232 123E                           l4216 11E0                           l4144 1070  
                         l4090 2928                           l4082 290A                           l4314 13DE  
                         l4242 126A                           l4162 10BA                           l4068 28CA  
                         l4404 15BA                           l4324 140A                           l4252 12AA  
                         l4236 124C                           l4172 10FA                           l4094 2932  
                         l4078 28F2                           l4414 15E6                           l4334 144A  
                         l4318 13EC                           l4406 15C8                           l4262 12D6  
                         l4182 1126                           l4424 1616                           l4344 1476  
                         l4272 1302                           l4256 12B8                           l4192 1166  
                         l4176 1108                           l4264 12E4                           l3810 251E  
                         l4354 14B6                           l4338 1458                           l4282 1332  
                         l3820 25B4                           l3812 252E                           l3900 2206  
                         l4428 1624                           l4364 14E2                           l4196 1174  
                         l4292 1368                           l3822 25C4                           l3814 2560  
                         l3806 2508                           l4374 1522                           l4358 14C4  
                         l4286 1340                           l3904 2226                           l3920 2A22  
                         l3840 2CB4                           l4384 154E                           l3834 25FE  
                         l3818 2582                           l3930 2A5E                           l3922 2A2C  
                         l4394 158E                           l4378 1530                           l3828 25E0  
                         l3908 2242                           l2980 23E6                           l3940 2C04  
                         l3860 2C98                           l3844 2CE2                           l3870 2138  
                         l3918 2A14                           l3942 2C0E                           l4398 159C  
                         l3872 215E                           l3856 2C72                           l3890 21C2  
                         l3946 2C34                           l3938 2BF6                           l3876 2172  
                         l3894 21E2                           l2998 246A                           l3992 302A  
                         l3898 21FE                           STR_1 1001                           STR_2 1030  
                         STR_3 1025                           STR_4 103E                           STR_5 1046  
                         STR_6 1050                           STR_7 105C                           STR_8 104D  
                         STR_9 1059                           _AZEL 00DE                           u3241 23D2  
                         u3260 240C                           u3265 2402                           u4820 2CD6  
                         u4830 2D04                           u4851 2124                           u4827 2CCC  
                         i2l28 3062                           u4837 2CFA                           u4871 214E  
                         u5777 302C                           i2l99 2270                           _main 1064  
                 ___ftpack@arg 0080                   ___ftpack@exp 0083                           fsr0h 000FEA  
                         fsr1h 000FE2                __end_ofi2_SerTx 3068                           indf0 000FEF  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0018              MReceiveSPI@tempCH 0080                   ___ftmul@cntr 0095  
                 i2___ftmul@f1 0009                   i2___ftmul@f2 000C                   ___param_bank 000010  
                 ___ftmul@sign 0096                    _MReceiveSPI 3010                          ??_ISR 0031  
                  _Delay10TCYx 3026                   ___fttol@exp1 00A5                __end_of_OpenSPI 2CB2  
              __end_of_SerInit 2FB0                   ___fttol@lval 00A1              _MGenerateChecksum 2EE8  
                        ?_main 0001             ?_MGenerateChecksum 0001                          STR_10 104A  
                        STR_11 1056                          STR_20 103A                          STR_12 1036  
                        STR_13 1030                          STR_21 1042                          STR_22 1050  
                        STR_14 1053                          STR_23 105C                          STR_15 105F  
                        STR_24 104D                          STR_16 103B                          STR_25 1059  
                        STR_17 1043                          STR_26 104A                          STR_18 103E  
                        STR_27 1056                          STR_19 1046                          STR_28 1036  
              __end_of___ftdiv 27E8                __end_of___ftneg 2FD4                __end_of___ftmul 226A  
              __end_of___fttol 24EE                __end_of___lwdiv 2A78                          i2l112 23B8  
              __end_of___lwmod 2C4E                          i2l322 2BA8                          i2l532 2B6E  
                        i2l622 1CB0                          i2l624 1CB8                          i2l641 1F84  
                        i2l811 28AC                          i2l651 1F54                          i2l822 2884  
                        i2l908 2FC6                          i2l934 2FF4                          i2l883 27E6  
                        i2l939 2F86                          i2l892 29F4                          i2l886 27B2  
                        i2l898 2704                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _RCInt 226A         ??_SPIDisassembleDouble 0085            ___lmul@multiplicand 0005  
               __CFG_FCMEN$OFF 000000                          _SerTx 303C            ??_MGenerateChecksum 0080  
              __end_of_isdigit 2FF6                  ___ftpack@sign 0084                          _value 0053  
             __end_of_SPIInitM 3010                     _DoubleSPIM 00DA                          main@x 00B4  
              __end_of_isspace 2F88                          tablat 000FF5                          status 000FD8  
             __end_of_MSendSPI 2E10             __size_ofi2___ftmul 00F8                    ?i2_SerTxStr 0002  
              __initialization 2F28      __end_of_MGenerateChecksum 2F28                   __end_of_main 1650  
                i2___ftmul@exp 0012                 __CFG_OSC$HSPLL 000000                    ?i2___ftpack 0001  
                _StrippedValue 004B                    keyValue@str 0024                         ??_main 00B4  
                ___fttol@sign1 00A0           __size_of_breakDouble 0188               __end_of_SerTxStr 2D0C  
                __activetblptr 000002                         ?_RCInt 0001                         ?_SerTx 0001  
             __end_of___altoft 2B70                      ??i2_SerTx 0001            MReceiveStrSPI@Slave 00B1  
             __end_of___ftpack 260E            MReceiveStrSPI@x_717 00B3                         i2l1066 2E5E  
                       i2l3102 1664                         i2l3110 1688                         i2l3200 1972  
                       i2l3120 16D4                         i2l3130 1728                         i2l3114 16B6  
                       i2l3060 2D68                         i2l3220 1A34                         i2l3212 19F0  
                       i2l3204 19AA                         i2l3140 1770                         i2l3124 1714  
                       i2l3108 1682                         i2l2510 289E                         i2l3134 1746  
                       i2l3126 1718                         i2l2504 288C                         i2l2600 273E  
                       i2l3064 2D94                         i2l3240 1AC8                         i2l3232 1A84  
                       i2l3224 1A40                         i2l3216 19FC                         i2l3208 19B8  
                       i2l3160 1830                         i2l3152 17EC                         i2l3250 1B18  
                       i2l2604 274C                         i2l2532 2D1E                         i2l2524 2F78  
                       i2l2700 2688                         i2l3260 1B4A                         i2l3244 1B00  
                       i2l3236 1ABC                         i2l3228 1A78                         i2l3172 18AC  
                       i2l3164 1868                         i2l3156 1824                         i2l3252 1B1E  
                       i2l3148 17E0                         i2l3180 18C8                         i2l2526 2F7E  
                       i2l2710 26B6                         i2l3350 22C8                         i2l2624 278C  
                       i2l2536 2D34                         i2l2704 269A                         i2l3280 1B8A  
                       i2l3272 1B6E                         i2l3256 1B42                         i2l3248 1B0C  
                       i2l3184 18D4                         i2l3176 18B8                         i2l3168 1874  
                       i2l3352 22DE                         i2l2490 2834                         i2l2482 27F8  
                       i2l2634 27C0                         i2l2714 26C8                         i2l2802 1CFA  
                       i2l3290 1BAA                         i2l3266 1B62                         i2l3346 22BE  
                       i2l2732 2E12                         i2l2708 26B0                         i2l2804 1D0A  
                       i2l3284 1B92                         i2l3268 1B66                         i2l3196 1964  
                       i2l3188 18FC                         i2l2734 2E1C                         i2l2494 284C  
                       i2l2486 2808                         i2l2654 2992                         i2l2646 2FEC  
                       i2l2718 26DE                         i2l2806 1D10                         i2l2830 1DAC  
                       i2l3278 1B86                         i2l3382 238C                         i2l3358 2312  
                       i2l2496 286C                         i2l2488 2814                         i2l2584 2B16  
                       i2l2664 29F0                         i2l2680 262C                         i2l2904 1F76  
                       i2l2808 1D16                         i2l2760 1C00                         i2l3376 2370  
                       i2l2738 2E52                         i2l2498 2878                         i2l2586 2B24  
                       i2l2658 29C4                         i2l2682 2646                         i2l2850 1E08  
                       i2l2826 1DA4                         i2l2762 1C06                         i2l2746 1BCA  
                       i2l3386 23A2                         i2l3378 2376                         i2l2860 1E70  
                       i2l2748 1BD0                         i2l2598 2724                         i2l2686 2654  
                       i2l2854 1E36                         i2l2846 1E00                         i2l2838 1DCC  
                       i2l2774 1C38                         i2l2758 1BF8                         i2l2856 1E44  
                       i2l2792 1CBE                         i2l2768 1C20                         i2l2882 1ED8  
                       i2l2874 1E9C                         i2l2778 1C4E                         i2l2884 1EE0  
                       i2l2878 1EAA                         i2l2798 1CE2                         i2l2888 1F0C  
                       i2l2898 1F44                         u262_41 2716                         _RCREG1 000FAE  
                       u264_41 2734                         u274_41 261E                         u276_41 263C  
                       _RCSTA1 000FAB                         _SSPBUF 000FC9                         _TXREG1 000FAD  
                       _RCflag 00BB                         _TXSTA1 000FAC               __end_of_checksum 2AF4  
                       SerTx@c 0080                      ??_OpenSPI 0082                      ??_SerInit 0083  
                       ___ftge 2960                         ___lmul 2D0C                 keyValue@length 0026  
                    ??___ftdiv 000F                      ??___ftneg 0004                      ??___ftmul 008E  
                    ??___fttol 009B               __end_of_keyValue 1BB0                      ??___lwdiv 0084  
                    ??___lwmod 0084               i2SerTxStr@string 0002                         clear_0 2F2E  
                       clear_1 2F3A                         _strcmp 2E10                         _strtod 1BB0  
        ___ftmul@f3_as_product 0092                      ??_isdigit 0001              __end_ofi2___ftmul 2706  
                 __mediumconst 0000                      ??_isspace 0001                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8            __size_ofi2_SerTxStr 0058  
                   __accesstop 0080        __end_of__initialization 2F52                     ___altoft@c 0009  
          __size_ofi2___ftpack 00C6                     ___ftge@ff1 0001                     ___ftge@ff2 0004  
                ___rparam_used 000001                     ___ftdiv@f1 0009                     ___ftdiv@f2 000C  
                   ___ftdiv@f3 0013                     ___ftneg@f1 0001                 i2___ftpack@arg 0001  
                __end_of_RCInt 23BC                 i2___ftpack@exp 0004                     ___ftmul@f1 0088  
                   ___ftmul@f2 008B                     ___fttol@f1 0097                 __pcstackCOMRAM 0001  
                __end_of_SerTx 304C     __size_of_MGenerateChecksum 0040                   __pidataBANK0 3068  
               i2___ftmul@cntr 0016                 i2___ftmul@sign 0017                      ?_SPIInitM 0001  
 __size_of_SPIReassembleDouble 0044                      ?_MSendSPI 0081                        ??_RCInt 002F  
            MReceiveStrSPI@str 00AF                        ??_SerTx 0080                   keyValue@flag 002C  
                   __pbssBANK0 00B5                MReceiveStrSPI@x 00B2                      ?_SerTxStr 0081  
                 ?_MReceiveSPI 0001                        ?___ftge 0001                        ?___lmul 0001  
                 ?_Delay10TCYx 0001                      ?___altoft 0009                        _BAUDCON 000FB8  
               ___lmul@product 0009                     ??_SPIInitM 0083                      ?___ftpack 0080  
                      ?_strcmp 0001                        ?_strtod 0018                     ??_MSendSPI 0082  
                    ?_checksum 0001        __size_of_MReceiveStrSPI 00B2                  _PIDEnableFlag 0050  
                      _SSPCON1 000FC6                 SerTxStr@string 0081                        i2_SerTx 305A  
                      _SSPSTAT 000FC7                      ?_keyValue 0024                   ??i2_SerTxStr 0004  
                   ??_SerTxStr 0083                        _OpenSPI 2C4E                        __Hparam 0000  
                      _SerInit 2F88                        __Lparam 0000                __size_of___ftge 0096  
              __size_of___lmul 005A                        ___ftdiv 2706                        ___ftneg 2FB0  
                      ___ftmul 210E                        ___fttol 23BC                        ___lwdiv 29F6  
                      ___lwmod 2BE2                   __psmallconst 1000                     ??___altoft 000D  
                      __pcinit 2F28                   ??i2___ftpack 0006                     ??___ftpack 0085  
              Delay10TCYx@unit 0080        i2___ftmul@f3_as_product 0013                        __ramtop 1000  
                   _initialize 304C                        __ptext0 1064                        __ptext1 304C  
                      __ptext2 2F88                        __ptext3 2CB2                        __ptext4 2FF6  
                      __ptext5 2C4E                        __ptext6 2A78                        __ptext7 2E60  
                      __ptext8 2EE8                        __ptext9 2DBE                __size_of_strcmp 0050  
                 __size_of_ISR 2BDA                __size_of_strtod 03D6                        _isdigit 2FD4  
              keyValue@str_end 002A                     ??_checksum 0080                   MSendSPI@data 0084  
                      _isspace 2F5C  __size_of_SPIDisassembleDouble 0044             __end_ofi2_SerTxStr 2DBE  
               __pintcode_body 2B70           end_of_initialization 2F52                     ??_keyValue 0028  
                __Lmediumconst 0000                        int_func 2B70             __end_ofi2___ftpack 28AE  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                ??_breakDouble 00A9                        strcmp@r 0006                        strtod@s 0018  
                    _PORTBbits 000F81                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISCbits 000F94                      i2___ftmul 260E                    ___ftdiv@exp 0016  
          _SPIReassembleDouble 2EA4                i2___ftpack@sign 0005                    ___ftmul@exp 0091  
                  _StrippedKey 0052                 __end_of___ftge 29F6           __size_of_MReceiveSPI 0016  
               __end_of___lmul 2D66           __size_of_Delay10TCYx 0016                    ?_initialize 0001  
             OpenSPI@smp_phase 0081           ?_SPIReassembleDouble 0080                      _DoublePtr 004E  
            __size_of_SPIInitM 001A                 __end_of_strcmp 2E60                 _MReceiveStrSPI 28AE  
               __end_of_strtod 1F86            __end_of_breakDouble 210E            start_initialization 2F28  
              _CurrentVelocity 00B8                   _CurrentAngle 00B5                    __end_of_ISR 2BE2  
            __size_of_MSendSPI 0052                     ?i2___ftmul 0009               OpenSPI@sync_mode 0082  
                     ??___ftge 0007                       ??___lmul 0009              __size_of_SerTxStr 005A  
                  __pdataBANK0 00DE         __end_of_MReceiveStrSPI 2960          ??_SPIReassembleDouble 0083  
                     ??_strcmp 0005                       ??_strtod 001C              __size_of___altoft 007C  
            __size_of___ftpack 0120                    __pbssCOMRAM 003F                  __pcstackBANK0 0080  
                 _ReceivedChar 0051                   _isdigit$1326 0002              __size_of_checksum 007C  
                     ?i2_SerTx 0001           MSendSPI@tempChar_708 0083            __size_of_initialize 000E  
            __size_of_keyValue 0560         SPIReassembleDouble@dub 0083                       ?_OpenSPI 0080  
                     ?_SerInit 0001               ___lwdiv@dividend 0080                      __pintcode 0008  
             breakDouble@temp1 00AB               breakDouble@temp2 00AD                       ?___ftdiv 0009  
                     ?___ftneg 0001                       ?___ftmul 0088                       ?___fttol 0097  
                     ?___lwdiv 0080                       ?___lwmod 0080                    _breakDouble 1F86  
           breakDouble@tempDub 00A9                ?_MReceiveStrSPI 00AF                    __smallconst 1000  
                     ?_isdigit 0001                 __size_of_RCInt 0152                       ?_isspace 0001  
               __size_of_SerTx 0010               ___lwdiv@quotient 0085                    ??i2___ftmul 000F  
                    checksum@y 0085                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
 __end_of_SPIDisassembleDouble 2EA4                       _PIR1bits 000F9E                       i2u338_40 2D8A  
                     i2u338_47 2D80                       i2u339_40 2DB6                       i2u339_47 2DAC  
                     i2u393_40 2360                       _RCONbits 000FD0                    strtod@flags 001E  
                  strtod@expon 001F                       i2SerTx@c 0001                       _SPIInitM 2FF6  
              OpenSPI@bus_mode 0080                       _MSendSPI 2DBE                   _isspace$1329 0002  
            ___lmul@multiplier 0001               __size_ofi2_SerTx 000E                      keyValue@x 002E  
                    keyValue@y 002D                       _SetAngle 0048                       _SerTxStr 2CB2  
                     __Hrparam 0000                       __Lrparam 0000               __size_of_OpenSPI 0064  
             __size_of_SerInit 0028               __size_of___ftdiv 00E2               __size_of___ftneg 0024  
                     ___altoft 2AF4               __size_of___ftmul 015C               __size_of___fttol 0132  
             __size_of___lwdiv 0082               __size_of___lwmod 006C                   ??_initialize 0083  
                     ___ftpack 24EE                       _checksum 2A78               __size_of_isdigit 0022  
         MGenerateChecksum@sum 0080                ___lwdiv@divisor 0082                breakDouble@dubs 00A6  
             __size_of_isspace 002C                ___lwdiv@counter 0084                   RCInt@counter 0030  
                     __ptext10 28AE                       __ptext11 1F86                       __ptext20 3026  
                     __ptext12 2BE2                       __ptext13 29F6                       __ptext30 2D0C  
                     __ptext22 226A                       __ptext14 23BC                       __ptext31 2FB0  
                     __ptext23 1650                       __ptext15 210E                       __ptext32 2960  
                     __ptext24 2D66                       __ptext16 24EE                       __ptext33 2706  
                     __ptext25 305A                       __ptext17 303C                       __ptext34 2AF4  
                     __ptext26 1BB0                       __ptext18 2EA4                       __ptext35 27E8  
                     __ptext27 260E                       __ptext19 3010                       __ptext36 2E10  
                     __ptext28 2F5C                       __ptext29 2FD4                    checksum@sum 0084  
                     _keyValue 1650                  __size_of_main 05EC                  MSendSPI@Slave 0081  
                     _received 00BC             __end_of_initialize 305A                  ??_MReceiveSPI 0080  
                ??_Delay10TCYx 0080                     strtod@eexp 001D                     _INTCONbits 000FF2  
         _SPIDisassembleDouble 2E60                       isdigit@c 0003                       intlevel2 0000  
             MSendSPI@tempChar 0082               ___lwmod@dividend 0080                       isspace@c 0003  
                    strtod@res 001A    __end_of_SPIReassembleDouble 2EE8               ??_MReceiveStrSPI 00B2  
                 ?_breakDouble 00A6            __end_of_MReceiveSPI 3026            __end_of_Delay10TCYx 303C  
           MGenerateChecksum@z 0081                       strcmp@s1 0001                       strcmp@s2 0003  
              ___lwmod@divisor 0082                ___lwmod@counter 0084          ?_SPIDisassembleDouble 0082  
                     strtod@_u 0020                    _SSPCON1bits 000FC6        SPIDisassembleDouble@dub 0082  
                   i2_SerTxStr 2D66  
