

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Oct  2 04:06:25 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  002D34                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _AZEL
    58  002D34  01                 	db	1
    59  0000                     _PORTAbits	set	3968
    60  0000                     _TRISAbits	set	3986
    61  0000                     _TRISCbits	set	3988
    62  0000                     _BAUDCON	set	4024
    63  0000                     _IPR1bits	set	3999
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIR1bits	set	3998
    66  0000                     _RCONbits	set	4048
    67  0000                     _RCREG	set	4014
    68  0000                     _RCREG1	set	4014
    69  0000                     _RCSTA1	set	4011
    70  0000                     _SPBRG	set	4015
    71  0000                     _SSPBUF	set	4041
    72  0000                     _SSPCON1	set	4038
    73  0000                     _SSPCON1bits	set	4038
    74  0000                     _SSPSTAT	set	4039
    75  0000                     _SSPSTATbits	set	4039
    76  0000                     _TXREG1	set	4013
    77  0000                     _TXSTA1	set	4012
    78  0000                     _INTCONbits	set	4082
    79                           
    80                           	psect	smallconst
    81  001000                     __psmallconst:
    82                           	opt stack 0
    83  001000  00                 	db	0
    84  001001                     STR_1:
    85  001001  57                 	db	87	;'W'
    86  001002  65                 	db	101	;'e'
    87  001003  6C                 	db	108	;'l'
    88  001004  63                 	db	99	;'c'
    89  001005  6F                 	db	111	;'o'
    90  001006  6D                 	db	109	;'m'
    91  001007  65                 	db	101	;'e'
    92  001008  20                 	db	32
    93  001009  74                 	db	116	;'t'
    94  00100A  6F                 	db	111	;'o'
    95  00100B  20                 	db	32
    96  00100C  74                 	db	116	;'t'
    97  00100D  68                 	db	104	;'h'
    98  00100E  65                 	db	101	;'e'
    99  00100F  20                 	db	32
   100  001010  77                 	db	119	;'w'
   101  001011  6F                 	db	111	;'o'
   102  001012  72                 	db	114	;'r'
   103  001013  6C                 	db	108	;'l'
   104  001014  64                 	db	100	;'d'
   105  001015  20                 	db	32
   106  001016  6F                 	db	111	;'o'
   107  001017  66                 	db	102	;'f'
   108  001018  20                 	db	32
   109  001019  74                 	db	116	;'t'
   110  00101A  6F                 	db	111	;'o'
   111  00101B  6D                 	db	109	;'m'
   112  00101C  6F                 	db	111	;'o'
   113  00101D  72                 	db	114	;'r'
   114  00101E  72                 	db	114	;'r'
   115  00101F  6F                 	db	111	;'o'
   116  001020  77                 	db	119	;'w'
   117  001021  21                 	db	33
   118  001022  21                 	db	33
   119  001023  21                 	db	33
   120  001024  00                 	db	0
   121  001025                     STR_3:
   122  001025  20                 	db	32
   123  001026  20                 	db	32
   124  001027  20                 	db	32
   125  001028  56                 	db	86	;'V'
   126  001029  61                 	db	97	;'a'
   127  00102A  6C                 	db	108	;'l'
   128  00102B  75                 	db	117	;'u'
   129  00102C  65                 	db	101	;'e'
   130  00102D  3A                 	db	58	;':'
   131  00102E  20                 	db	32
   132  00102F  00                 	db	0
   133  001030                     STR_2:
   134  001030  4B                 	db	75	;'K'
   135  001031  65                 	db	101	;'e'
   136  001032  79                 	db	121	;'y'
   137  001033  3A                 	db	58	;':'
   138  001034  20                 	db	32
   139  001035  00                 	db	0
   140  001036                     STR_12:
   141  001036  3F                 	db	63	;'?'
   142  001037  3F                 	db	63	;'?'
   143  001038  3F                 	db	63	;'?'
   144  001039  00                 	db	0
   145  00103A                     STR_20:
   146  00103A  56                 	db	86	;'V'
   147  00103B  45                 	db	69	;'E'
   148  00103C  4C                 	db	76	;'L'
   149  00103D  00                 	db	0
   150  00103E                     STR_4:
   151  00103E  50                 	db	80	;'P'
   152  00103F  4F                 	db	79	;'O'
   153  001040  53                 	db	83	;'S'
   154  001041  00                 	db	0
   155  001042                     STR_21:
   156  001042  76                 	db	118	;'v'
   157  001043  65                 	db	101	;'e'
   158  001044  6C                 	db	108	;'l'
   159  001045  00                 	db	0
   160  001046                     STR_5:
   161  001046  70                 	db	112	;'p'
   162  001047  6F                 	db	111	;'o'
   163  001048  73                 	db	115	;'s'
   164  001049  00                 	db	0
   165  00104A                     STR_10:
   166  00104A  4B                 	db	75	;'K'
   167  00104B  44                 	db	68	;'D'
   168  00104C  00                 	db	0
   169  00104D                     STR_8:
   170  00104D  4B                 	db	75	;'K'
   171  00104E  49                 	db	73	;'I'
   172  00104F  00                 	db	0
   173  001050                     STR_6:
   174  001050  4B                 	db	75	;'K'
   175  001051  50                 	db	80	;'P'
   176  001052  00                 	db	0
   177  001053                     STR_14:
   178  001053  41                 	db	65	;'A'
   179  001054  5A                 	db	90	;'Z'
   180  001055  00                 	db	0
   181  001056                     STR_11:
   182  001056  6B                 	db	107	;'k'
   183  001057  64                 	db	100	;'d'
   184  001058  00                 	db	0
   185  001059                     STR_9:
   186  001059  6B                 	db	107	;'k'
   187  00105A  69                 	db	105	;'i'
   188  00105B  00                 	db	0
   189  00105C                     STR_7:
   190  00105C  6B                 	db	107	;'k'
   191  00105D  70                 	db	112	;'p'
   192  00105E  00                 	db	0
   193  00105F                     STR_15:
   194  00105F  61                 	db	97	;'a'
   195  001060  7A                 	db	122	;'z'
   196  001061  00                 	db	0
   197  0000                     
   198                           ; #config settings
   199  001062  00                 	db	0	; dummy byte at the end
   200  0000                     
   201                           	psect	cinit
   202  002BD8                     __pcinit:
   203                           	opt stack 0
   204  002BD8                     start_initialization:
   205                           	opt stack 0
   206  002BD8                     __initialization:
   207                           	opt stack 0
   208                           
   209                           ; Clear objects allocated to BANK0 (15 bytes)
   210  002BD8  EE00  F0B5         	lfsr	0,__pbssBANK0
   211  002BDC  0E0F               	movlw	15
   212  002BDE                     clear_0:
   213  002BDE  6AEE               	clrf	postinc0,c
   214  002BE0  06E8               	decf	wreg,f,c
   215  002BE2  E1FD               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to COMRAM (60 bytes)
   218  002BE4  EE00  F03F         	lfsr	0,__pbssCOMRAM
   219  002BE8  0E3C               	movlw	60
   220  002BEA                     clear_1:
   221  002BEA  6AEE               	clrf	postinc0,c
   222  002BEC  06E8               	decf	wreg,f,c
   223  002BEE  E1FD               	bnz	clear_1
   224                           
   225                           ; Initialize objects allocated to COMRAM (1 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227  002BF0  0E34               	movlw	low __pidataCOMRAM
   228  002BF2  6EF6               	movwf	tblptrl,c
   229  002BF4  0E2D               	movlw	high __pidataCOMRAM
   230  002BF6  6EF7               	movwf	tblptrh,c
   231  002BF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232  002BFA  6EF8               	movwf	tblptru,c
   233  002BFC  0009               	tblrd		*+	;fetch initializer
   234  002BFE  CFF5 F07B          	movff	tablat,__pdataCOMRAM
   235  002C02                     end_of_initialization:
   236                           	opt stack 0
   237  002C02                     __end_of__initialization:
   238                           	opt stack 0
   239  002C02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  002C04  6EF8               	movwf	tblptru,c
   241  002C06  0100               	movlb	0
   242  002C08  EFD3  F00C         	goto	_main	;jump to C main() function
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           
   250                           	psect	bssCOMRAM
   251  00003F                     __pbssCOMRAM:
   252                           	opt stack 0
   253  00003F                     _Kd:
   254                           	opt stack 0
   255  00003F                     	ds	3
   256  000042                     _Ki:
   257                           	opt stack 0
   258  000042                     	ds	3
   259  000045                     _Kp:
   260                           	opt stack 0
   261  000045                     	ds	3
   262  000048                     _SetAngle:
   263                           	opt stack 0
   264  000048                     	ds	3
   265  00004B                     _DoublePtr:
   266                           	opt stack 0
   267  00004B                     	ds	2
   268  00004D                     _ReceivedChar:
   269                           	opt stack 0
   270  00004D                     	ds	1
   271  00004E                     _received:
   272                           	opt stack 0
   273  00004E                     	ds	30
   274  00006C                     _value:
   275                           	opt stack 0
   276  00006C                     	ds	10
   277  000076                     _key:
   278                           	opt stack 0
   279  000076                     	ds	5
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	dataCOMRAM
   288  00007B                     __pdataCOMRAM:
   289                           	opt stack 0
   290  00007B                     _AZEL:
   291                           	opt stack 0
   292  00007B                     	ds	1
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           
   300                           	psect	bssBANK0
   301  0000B5                     __pbssBANK0:
   302                           	opt stack 0
   303  0000B5                     _CurrentAngle:
   304                           	opt stack 0
   305  0000B5                     	ds	3
   306  0000B8                     _CurrentVelocity:
   307                           	opt stack 0
   308  0000B8                     	ds	3
   309  0000BB                     _StrippedValue:
   310                           	opt stack 0
   311  0000BB                     	ds	3
   312  0000BE                     _RCflag:
   313                           	opt stack 0
   314  0000BE                     	ds	1
   315  0000BF                     _StrippedKey:
   316                           	opt stack 0
   317  0000BF                     	ds	1
   318  0000C0                     _DoubleSPIM:
   319                           	opt stack 0
   320  0000C0                     	ds	4
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           
   328                           	psect	cstackBANK0
   329  000080                     __pcstackBANK0:
   330                           	opt stack 0
   331  000080                     ??_checksum:
   332  000080                     ?___lwdiv:
   333                           	opt stack 0
   334  000080                     ?___lwmod:
   335                           	opt stack 0
   336  000080                     ?_SPIReassembleDouble:
   337                           	opt stack 0
   338  000080                     ?___ftpack:
   339                           	opt stack 0
   340  000080                     SerTx@c:
   341                           	opt stack 0
   342  000080                     MReceiveSPI@tempCH:
   343                           	opt stack 0
   344  000080                     MGenerateChecksum@sum:
   345                           	opt stack 0
   346  000080                     OpenSPI@bus_mode:
   347                           	opt stack 0
   348  000080                     Delay10TCYx@unit:
   349                           	opt stack 0
   350  000080                     ___lwdiv@dividend:
   351                           	opt stack 0
   352  000080                     ___lwmod@dividend:
   353                           	opt stack 0
   354  000080                     ___ftpack@arg:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x0
   358  000080                     	ds	1
   359  000081                     MSendSPI@tempChar:
   360                           	opt stack 0
   361  000081                     MGenerateChecksum@z:
   362                           	opt stack 0
   363  000081                     OpenSPI@smp_phase:
   364                           	opt stack 0
   365  000081                     SerTxStr@string:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x1
   369  000081                     	ds	1
   370  000082                     MSendSPI@data:
   371                           	opt stack 0
   372  000082                     OpenSPI@sync_mode:
   373                           	opt stack 0
   374  000082                     ___lwdiv@divisor:
   375                           	opt stack 0
   376  000082                     ___lwmod@divisor:
   377                           	opt stack 0
   378  000082                     SPIDisassembleDouble@dub:
   379                           	opt stack 0
   380                           
   381                           ; 3 bytes @ 0x2
   382  000082                     	ds	1
   383  000083                     ___ftpack@exp:
   384                           	opt stack 0
   385  000083                     SPIReassembleDouble@dub:
   386                           	opt stack 0
   387                           
   388                           ; 3 bytes @ 0x3
   389  000083                     	ds	1
   390  000084                     checksum@sum:
   391                           	opt stack 0
   392  000084                     ___ftpack@sign:
   393                           	opt stack 0
   394  000084                     ___lwdiv@counter:
   395                           	opt stack 0
   396  000084                     ___lwmod@counter:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x4
   400  000084                     	ds	1
   401  000085                     ??___ftpack:
   402  000085                     checksum@y:
   403                           	opt stack 0
   404  000085                     ___lwdiv@quotient:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x5
   408  000085                     	ds	3
   409  000088                     ?___ftmul:
   410                           	opt stack 0
   411  000088                     ___ftmul@f1:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x8
   415  000088                     	ds	3
   416  00008B                     ___ftmul@f2:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0xB
   420  00008B                     	ds	3
   421  00008E                     ??___ftmul:
   422                           
   423                           ; 0 bytes @ 0xE
   424  00008E                     	ds	3
   425  000091                     ___ftmul@exp:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x11
   429  000091                     	ds	1
   430  000092                     ___ftmul@f3_as_product:
   431                           	opt stack 0
   432                           
   433                           ; 3 bytes @ 0x12
   434  000092                     	ds	3
   435  000095                     ___ftmul@cntr:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x15
   439  000095                     	ds	1
   440  000096                     ___ftmul@sign:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x16
   444  000096                     	ds	1
   445  000097                     ?___fttol:
   446                           	opt stack 0
   447  000097                     ___fttol@f1:
   448                           	opt stack 0
   449                           
   450                           ; 3 bytes @ 0x17
   451  000097                     	ds	4
   452  00009B                     ??___fttol:
   453                           
   454                           ; 0 bytes @ 0x1B
   455  00009B                     	ds	5
   456  0000A0                     ___fttol@sign1:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x20
   460  0000A0                     	ds	1
   461  0000A1                     ___fttol@lval:
   462                           	opt stack 0
   463                           
   464                           ; 4 bytes @ 0x21
   465  0000A1                     	ds	4
   466  0000A5                     ___fttol@exp1:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x25
   470  0000A5                     	ds	1
   471  0000A6                     breakDouble@dubs:
   472                           	opt stack 0
   473                           
   474                           ; 3 bytes @ 0x26
   475  0000A6                     	ds	3
   476  0000A9                     breakDouble@tempDub:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x29
   480  0000A9                     	ds	2
   481  0000AB                     breakDouble@temp1:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x2B
   485  0000AB                     	ds	2
   486  0000AD                     breakDouble@temp2:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x2D
   490  0000AD                     	ds	2
   491  0000AF                     MReceiveStrSPI@str:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x2F
   495  0000AF                     	ds	2
   496  0000B1                     MReceiveStrSPI@Slave:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x31
   500  0000B1                     	ds	1
   501  0000B2                     MReceiveStrSPI@x:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x32
   505  0000B2                     	ds	1
   506  0000B3                     MReceiveStrSPI@x_567:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x33
   510  0000B3                     	ds	1
   511  0000B4                     main@x:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x34
   515  0000B4                     	ds	1
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           tblptrl	equ	0xFF6
   519                           tablat	equ	0xFF5
   520                           postinc0	equ	0xFEE
   521                           wreg	equ	0xFE8
   522                           
   523                           	psect	cstackCOMRAM
   524  000001                     __pcstackCOMRAM:
   525                           	opt stack 0
   526  000001                     ??_isspace:
   527  000001                     ??_isdigit:
   528  000001                     ?_strcmp:
   529                           	opt stack 0
   530  000001                     ?___ftneg:
   531                           	opt stack 0
   532  000001                     ?i2___ftpack:
   533                           	opt stack 0
   534  000001                     ?___lmul:
   535                           	opt stack 0
   536  000001                     i2SerTx@c:
   537                           	opt stack 0
   538  000001                     strcmp@s1:
   539                           	opt stack 0
   540  000001                     ___ftge@ff1:
   541                           	opt stack 0
   542  000001                     ___ftneg@f1:
   543                           	opt stack 0
   544  000001                     i2___ftpack@arg:
   545                           	opt stack 0
   546  000001                     ___lmul@multiplier:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x0
   550  000001                     	ds	1
   551  000002                     _isdigit$1252:
   552                           	opt stack 0
   553  000002                     _isspace$1255:
   554                           	opt stack 0
   555  000002                     i2SerTxStr@string:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x1
   559  000002                     	ds	1
   560  000003                     isdigit@c:
   561                           	opt stack 0
   562  000003                     isspace@c:
   563                           	opt stack 0
   564  000003                     strcmp@s2:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x2
   568  000003                     	ds	1
   569  000004                     i2___ftpack@exp:
   570                           	opt stack 0
   571  000004                     ___ftge@ff2:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x3
   575  000004                     	ds	1
   576  000005                     ??_strcmp:
   577  000005                     i2___ftpack@sign:
   578                           	opt stack 0
   579  000005                     ___lmul@multiplicand:
   580                           	opt stack 0
   581                           
   582                           ; 4 bytes @ 0x4
   583  000005                     	ds	1
   584  000006                     ??i2___ftpack:
   585  000006                     strcmp@r:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x5
   589  000006                     	ds	1
   590  000007                     ??___ftge:
   591                           
   592                           ; 0 bytes @ 0x6
   593  000007                     	ds	2
   594  000009                     ?___ftdiv:
   595                           	opt stack 0
   596  000009                     ?___altoft:
   597                           	opt stack 0
   598  000009                     ?i2___ftmul:
   599                           	opt stack 0
   600  000009                     ___ftdiv@f1:
   601                           	opt stack 0
   602  000009                     i2___ftmul@f1:
   603                           	opt stack 0
   604  000009                     ___lmul@product:
   605                           	opt stack 0
   606  000009                     ___altoft@c:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x8
   610  000009                     	ds	3
   611  00000C                     ___ftdiv@f2:
   612                           	opt stack 0
   613  00000C                     i2___ftmul@f2:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0xB
   617  00000C                     	ds	1
   618  00000D                     ??___altoft:
   619                           
   620                           ; 0 bytes @ 0xC
   621  00000D                     	ds	2
   622  00000F                     ??___ftdiv:
   623  00000F                     ??i2___ftmul:
   624                           
   625                           ; 0 bytes @ 0xE
   626  00000F                     	ds	2
   627  000011                     ___altoft@exp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x10
   631  000011                     	ds	1
   632  000012                     ___altoft@sign:
   633                           	opt stack 0
   634  000012                     ___ftdiv@cntr:
   635                           	opt stack 0
   636  000012                     i2___ftmul@exp:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x11
   640  000012                     	ds	1
   641  000013                     ___ftdiv@f3:
   642                           	opt stack 0
   643  000013                     i2___ftmul@f3_as_product:
   644                           	opt stack 0
   645                           
   646                           ; 3 bytes @ 0x12
   647  000013                     	ds	3
   648  000016                     ___ftdiv@exp:
   649                           	opt stack 0
   650  000016                     i2___ftmul@cntr:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x15
   654  000016                     	ds	1
   655  000017                     ___ftdiv@sign:
   656                           	opt stack 0
   657  000017                     i2___ftmul@sign:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x16
   661  000017                     	ds	1
   662  000018                     ?_strtod:
   663                           	opt stack 0
   664  000018                     strtod@s:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x17
   668  000018                     	ds	2
   669  00001A                     strtod@res:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x19
   673  00001A                     	ds	2
   674  00001C                     ??_strtod:
   675                           
   676                           ; 0 bytes @ 0x1B
   677  00001C                     	ds	1
   678  00001D                     strtod@eexp:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x1C
   682  00001D                     	ds	1
   683  00001E                     strtod@flags:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x1D
   687  00001E                     	ds	1
   688  00001F                     strtod@expon:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x1E
   692  00001F                     	ds	1
   693  000020                     strtod@_u:
   694                           	opt stack 0
   695                           
   696                           ; 4 bytes @ 0x1F
   697  000020                     	ds	4
   698  000024                     keyValue@str:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x23
   702  000024                     	ds	2
   703  000026                     keyValue@length:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x25
   707  000026                     	ds	2
   708  000028                     ??_keyValue:
   709                           
   710                           ; 0 bytes @ 0x27
   711  000028                     	ds	2
   712  00002A                     keyValue@str_end:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x29
   716  00002A                     	ds	2
   717  00002C                     keyValue@flag:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x2B
   721  00002C                     	ds	1
   722  00002D                     keyValue@y:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x2C
   726  00002D                     	ds	1
   727  00002E                     keyValue@x:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x2D
   731  00002E                     	ds	1
   732  00002F                     
   733                           ; 0 bytes @ 0x2E
   734  00002F                     	ds	1
   735  000030                     RCInt@counter:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x2F
   739  000030                     	ds	1
   740  000031                     ??_ISR:
   741                           
   742                           ; 0 bytes @ 0x30
   743  000031                     	ds	14
   744                           tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           postinc0	equ	0xFEE
   749                           wreg	equ	0xFE8
   750                           
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   753 ;;
   754 ;; *************** function _main *****************
   755 ;; Defined at:
   756 ;;		line 33 in file "SPItest-MASTER.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  x               1   52[BANK0 ] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;		None               void
   763 ;; Registers used:
   764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;Total ram usage:        1 bytes
   775 ;; Hardware stack levels required when called:   10
   776 ;; This function calls:
   777 ;;		_Delay10TCYx
   778 ;;		_MReceiveStrSPI
   779 ;;		_MSendSPI
   780 ;;		_SPIDisassembleDouble
   781 ;;		_SPIReassembleDouble
   782 ;;		_checksum
   783 ;;		_initialize
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text0
   790  0019A6                     __ptext0:
   791                           	opt stack 0
   792  0019A6                     _main:
   793                           	opt stack 21
   794                           
   795                           ;SPItest-MASTER.c: 35: unsigned char x = 0;
   796                           
   797                           ;incstack = 0
   798  0019A6  0E00               	movlw	0
   799  0019A8  0100               	movlb	0	; () banked
   800  0019AA  6FB4               	movwf	main@x& (0+255),b
   801                           
   802                           ; BSR set to: 0
   803                           ;SPItest-MASTER.c: 36: initialize();
   804  0019AC  EC65  F016         	call	_initialize	;wreg free
   805  0019B0  D171               	goto	l144
   806  0019B2                     l3718:
   807                           
   808                           ;SPItest-MASTER.c: 40: {
   809                           ;SPItest-MASTER.c: 41: if (RCflag == 1)
   810  0019B2  0100               	movlb	0	; () banked
   811  0019B4  05BE               	decf	_RCflag& (0+255),w,b
   812  0019B6  A4D8               	btfss	status,2,c
   813  0019B8  D7FC               	goto	l3718
   814                           
   815                           ; BSR set to: 0
   816                           ;SPItest-MASTER.c: 42: {
   817                           ;SPItest-MASTER.c: 43: RCflag = 0;
   818  0019BA  0E00               	movlw	0
   819  0019BC  0100               	movlb	0	; () banked
   820  0019BE  6FBE               	movwf	_RCflag& (0+255),b
   821                           
   822                           ; BSR set to: 0
   823                           ;SPItest-MASTER.c: 44: if ((StrippedKey == 0x02) || (StrippedKey == 0x03) || (StrippedKe
      +                          y == 0x04) || (StrippedKey == 0x06) || StrippedKey == 0x08)
   824  0019C0  0E02               	movlw	2
   825  0019C2  0100               	movlb	0	; () banked
   826  0019C4  19BF               	xorwf	_StrippedKey& (0+255),w,b
   827  0019C6  B4D8               	btfsc	status,2,c
   828  0019C8  D016               	goto	l3732
   829                           
   830                           ; BSR set to: 0
   831  0019CA  0E03               	movlw	3
   832  0019CC  0100               	movlb	0	; () banked
   833  0019CE  19BF               	xorwf	_StrippedKey& (0+255),w,b
   834  0019D0  B4D8               	btfsc	status,2,c
   835  0019D2  D011               	goto	l3732
   836                           
   837                           ; BSR set to: 0
   838  0019D4  0E04               	movlw	4
   839  0019D6  0100               	movlb	0	; () banked
   840  0019D8  19BF               	xorwf	_StrippedKey& (0+255),w,b
   841  0019DA  B4D8               	btfsc	status,2,c
   842  0019DC  D00C               	goto	l3732
   843                           
   844                           ; BSR set to: 0
   845  0019DE  0E06               	movlw	6
   846  0019E0  0100               	movlb	0	; () banked
   847  0019E2  19BF               	xorwf	_StrippedKey& (0+255),w,b
   848  0019E4  B4D8               	btfsc	status,2,c
   849  0019E6  D007               	goto	l3732
   850                           
   851                           ; BSR set to: 0
   852  0019E8  0E08               	movlw	8
   853  0019EA  0100               	movlb	0	; () banked
   854  0019EC  19BF               	xorwf	_StrippedKey& (0+255),w,b
   855  0019EE  B4D8               	btfsc	status,2,c
   856  0019F0  D002               	goto	l3732
   857  0019F2  D111               	goto	l3834
   858                           
   859                           ; BSR set to: 0
   860  0019F4  D000               	goto	l3732
   861  0019F6                     l3732:
   862                           
   863                           ;SPItest-MASTER.c: 47: {
   864                           ;SPItest-MASTER.c: 48: if (StrippedKey == 0x02)
   865  0019F6  0E02               	movlw	2
   866  0019F8  0100               	movlb	0	; () banked
   867  0019FA  19BF               	xorwf	_StrippedKey& (0+255),w,b
   868  0019FC  A4D8               	btfss	status,2,c
   869  0019FE  D030               	goto	l3752
   870                           
   871                           ; BSR set to: 0
   872                           ;SPItest-MASTER.c: 49: {
   873                           ;SPItest-MASTER.c: 50: MSendSPI(StrippedKey);
   874  001A00  0100               	movlb	0	; () banked
   875  001A02  51BF               	movf	_StrippedKey& (0+255),w,b
   876  001A04  EC30  F016         	call	_MSendSPI
   877                           
   878                           ;SPItest-MASTER.c: 51: MReceiveStrSPI(DoubleSPIM, 1);
   879  001A08  0EC0               	movlw	low _DoubleSPIM
   880  001A0A  0100               	movlb	0	; () banked
   881  001A0C  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
   882  001A0E  0E00               	movlw	high _DoubleSPIM
   883  001A10  0100               	movlb	0	; () banked
   884  001A12  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
   885  001A14  0E01               	movlw	1
   886  001A16  0100               	movlb	0	; () banked
   887  001A18  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
   888  001A1A  ECD8  F012         	call	_MReceiveStrSPI	;wreg free
   889                           
   890                           ;SPItest-MASTER.c: 52: CurrentAngle = SPIReassembleDouble();
   891  001A1E  ECAA  F015         	call	_SPIReassembleDouble	;wreg free
   892  001A22  C080  F0B5         	movff	?_SPIReassembleDouble,_CurrentAngle
   893  001A26  C081  F0B6         	movff	?_SPIReassembleDouble+1,_CurrentAngle+1
   894  001A2A  C082  F0B7         	movff	?_SPIReassembleDouble+2,_CurrentAngle+2
   895                           
   896                           ;SPItest-MASTER.c: 53: for (x = 0; x != 4; x++)
   897  001A2E  0E00               	movlw	0
   898  001A30  0100               	movlb	0	; () banked
   899  001A32  6FB4               	movwf	main@x& (0+255),b
   900  001A34                     l3742:
   901                           
   902                           ; BSR set to: 0
   903  001A34  0E04               	movlw	4
   904  001A36  0100               	movlb	0	; () banked
   905  001A38  19B4               	xorwf	main@x& (0+255),w,b
   906  001A3A  B4D8               	btfsc	status,2,c
   907  001A3C  D0E5               	goto	l3832
   908  001A3E  D001               	goto	l3746
   909                           
   910                           ; BSR set to: 0
   911  001A40  D0E3               	goto	l3832
   912  001A42                     l3746:
   913                           
   914                           ; BSR set to: 0
   915                           ;SPItest-MASTER.c: 54: DoubleSPIM[x] = '\0';
   916  001A42  0100               	movlb	0	; () banked
   917  001A44  51B4               	movf	main@x& (0+255),w,b
   918  001A46  0D01               	mullw	1
   919  001A48  0EC0               	movlw	low _DoubleSPIM
   920  001A4A  24F3               	addwf	prodl,w,c
   921  001A4C  6ED9               	movwf	fsr2l,c
   922  001A4E  0E00               	movlw	high _DoubleSPIM
   923  001A50  20F4               	addwfc	prodh,w,c
   924  001A52  6EDA               	movwf	fsr2h,c
   925  001A54  0E00               	movlw	0
   926  001A56  6EDF               	movwf	indf2,c
   927                           
   928                           ; BSR set to: 0
   929  001A58  0100               	movlb	0	; () banked
   930  001A5A  2BB4               	incf	main@x& (0+255),f,b
   931  001A5C  D7EB               	goto	l3742
   932                           
   933                           ; BSR set to: 0
   934                           ;SPItest-MASTER.c: 55: }
   935                           
   936                           ; BSR set to: 0
   937  001A5E  D0D4               	goto	l3832
   938  001A60                     l3752:
   939                           
   940                           ; BSR set to: 0
   941                           ;SPItest-MASTER.c: 56: else if (StrippedKey == 0x03)
   942  001A60  0E03               	movlw	3
   943  001A62  0100               	movlb	0	; () banked
   944  001A64  19BF               	xorwf	_StrippedKey& (0+255),w,b
   945  001A66  A4D8               	btfss	status,2,c
   946  001A68  D030               	goto	l3772
   947                           
   948                           ; BSR set to: 0
   949                           ;SPItest-MASTER.c: 57: {
   950                           ;SPItest-MASTER.c: 58: MSendSPI(StrippedKey);
   951  001A6A  0100               	movlb	0	; () banked
   952  001A6C  51BF               	movf	_StrippedKey& (0+255),w,b
   953  001A6E  EC30  F016         	call	_MSendSPI
   954                           
   955                           ;SPItest-MASTER.c: 59: MReceiveStrSPI(DoubleSPIM, 1);
   956  001A72  0EC0               	movlw	low _DoubleSPIM
   957  001A74  0100               	movlb	0	; () banked
   958  001A76  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
   959  001A78  0E00               	movlw	high _DoubleSPIM
   960  001A7A  0100               	movlb	0	; () banked
   961  001A7C  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
   962  001A7E  0E01               	movlw	1
   963  001A80  0100               	movlb	0	; () banked
   964  001A82  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
   965  001A84  ECD8  F012         	call	_MReceiveStrSPI	;wreg free
   966                           
   967                           ;SPItest-MASTER.c: 60: CurrentVelocity = SPIReassembleDouble();
   968  001A88  ECAA  F015         	call	_SPIReassembleDouble	;wreg free
   969  001A8C  C080  F0B8         	movff	?_SPIReassembleDouble,_CurrentVelocity
   970  001A90  C081  F0B9         	movff	?_SPIReassembleDouble+1,_CurrentVelocity+1
   971  001A94  C082  F0BA         	movff	?_SPIReassembleDouble+2,_CurrentVelocity+2
   972                           
   973                           ;SPItest-MASTER.c: 61: for (x = 0; x != 4; x++)
   974  001A98  0E00               	movlw	0
   975  001A9A  0100               	movlb	0	; () banked
   976  001A9C  6FB4               	movwf	main@x& (0+255),b
   977  001A9E                     l3762:
   978                           
   979                           ; BSR set to: 0
   980  001A9E  0E04               	movlw	4
   981  001AA0  0100               	movlb	0	; () banked
   982  001AA2  19B4               	xorwf	main@x& (0+255),w,b
   983  001AA4  B4D8               	btfsc	status,2,c
   984  001AA6  D0B0               	goto	l3832
   985  001AA8  D001               	goto	l3766
   986                           
   987                           ; BSR set to: 0
   988  001AAA  D0AE               	goto	l3832
   989  001AAC                     l3766:
   990                           
   991                           ; BSR set to: 0
   992                           ;SPItest-MASTER.c: 62: DoubleSPIM[x] = '\0';
   993  001AAC  0100               	movlb	0	; () banked
   994  001AAE  51B4               	movf	main@x& (0+255),w,b
   995  001AB0  0D01               	mullw	1
   996  001AB2  0EC0               	movlw	low _DoubleSPIM
   997  001AB4  24F3               	addwf	prodl,w,c
   998  001AB6  6ED9               	movwf	fsr2l,c
   999  001AB8  0E00               	movlw	high _DoubleSPIM
  1000  001ABA  20F4               	addwfc	prodh,w,c
  1001  001ABC  6EDA               	movwf	fsr2h,c
  1002  001ABE  0E00               	movlw	0
  1003  001AC0  6EDF               	movwf	indf2,c
  1004                           
  1005                           ; BSR set to: 0
  1006  001AC2  0100               	movlb	0	; () banked
  1007  001AC4  2BB4               	incf	main@x& (0+255),f,b
  1008  001AC6  D7EB               	goto	l3762
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;SPItest-MASTER.c: 63: }
  1012                           
  1013                           ; BSR set to: 0
  1014  001AC8  D09F               	goto	l3832
  1015  001ACA                     l3772:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;SPItest-MASTER.c: 64: else if (StrippedKey == 0x04)
  1019  001ACA  0E04               	movlw	4
  1020  001ACC  0100               	movlb	0	; () banked
  1021  001ACE  19BF               	xorwf	_StrippedKey& (0+255),w,b
  1022  001AD0  A4D8               	btfss	status,2,c
  1023  001AD2  D030               	goto	l3792
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;SPItest-MASTER.c: 65: {
  1027                           ;SPItest-MASTER.c: 66: MSendSPI(StrippedKey);
  1028  001AD4  0100               	movlb	0	; () banked
  1029  001AD6  51BF               	movf	_StrippedKey& (0+255),w,b
  1030  001AD8  EC30  F016         	call	_MSendSPI
  1031                           
  1032                           ;SPItest-MASTER.c: 67: MReceiveStrSPI(DoubleSPIM, 1);
  1033  001ADC  0EC0               	movlw	low _DoubleSPIM
  1034  001ADE  0100               	movlb	0	; () banked
  1035  001AE0  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1036  001AE2  0E00               	movlw	high _DoubleSPIM
  1037  001AE4  0100               	movlb	0	; () banked
  1038  001AE6  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1039  001AE8  0E01               	movlw	1
  1040  001AEA  0100               	movlb	0	; () banked
  1041  001AEC  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1042  001AEE  ECD8  F012         	call	_MReceiveStrSPI	;wreg free
  1043                           
  1044                           ;SPItest-MASTER.c: 68: Kp = SPIReassembleDouble();
  1045  001AF2  ECAA  F015         	call	_SPIReassembleDouble	;wreg free
  1046  001AF6  C080  F045         	movff	?_SPIReassembleDouble,_Kp
  1047  001AFA  C081  F046         	movff	?_SPIReassembleDouble+1,_Kp+1
  1048  001AFE  C082  F047         	movff	?_SPIReassembleDouble+2,_Kp+2
  1049                           
  1050                           ;SPItest-MASTER.c: 69: for (x = 0; x != 4; x++)
  1051  001B02  0E00               	movlw	0
  1052  001B04  0100               	movlb	0	; () banked
  1053  001B06  6FB4               	movwf	main@x& (0+255),b
  1054  001B08                     l3782:
  1055                           
  1056                           ; BSR set to: 0
  1057  001B08  0E04               	movlw	4
  1058  001B0A  0100               	movlb	0	; () banked
  1059  001B0C  19B4               	xorwf	main@x& (0+255),w,b
  1060  001B0E  B4D8               	btfsc	status,2,c
  1061  001B10  D07B               	goto	l3832
  1062  001B12  D001               	goto	l3786
  1063                           
  1064                           ; BSR set to: 0
  1065  001B14  D079               	goto	l3832
  1066  001B16                     l3786:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;SPItest-MASTER.c: 70: DoubleSPIM[x] = '\0';
  1070  001B16  0100               	movlb	0	; () banked
  1071  001B18  51B4               	movf	main@x& (0+255),w,b
  1072  001B1A  0D01               	mullw	1
  1073  001B1C  0EC0               	movlw	low _DoubleSPIM
  1074  001B1E  24F3               	addwf	prodl,w,c
  1075  001B20  6ED9               	movwf	fsr2l,c
  1076  001B22  0E00               	movlw	high _DoubleSPIM
  1077  001B24  20F4               	addwfc	prodh,w,c
  1078  001B26  6EDA               	movwf	fsr2h,c
  1079  001B28  0E00               	movlw	0
  1080  001B2A  6EDF               	movwf	indf2,c
  1081                           
  1082                           ; BSR set to: 0
  1083  001B2C  0100               	movlb	0	; () banked
  1084  001B2E  2BB4               	incf	main@x& (0+255),f,b
  1085  001B30  D7EB               	goto	l3782
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;SPItest-MASTER.c: 71: }
  1089                           
  1090                           ; BSR set to: 0
  1091  001B32  D06A               	goto	l3832
  1092  001B34                     l3792:
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;SPItest-MASTER.c: 72: else if (StrippedKey == 0x06)
  1096  001B34  0E06               	movlw	6
  1097  001B36  0100               	movlb	0	; () banked
  1098  001B38  19BF               	xorwf	_StrippedKey& (0+255),w,b
  1099  001B3A  A4D8               	btfss	status,2,c
  1100  001B3C  D030               	goto	l3812
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;SPItest-MASTER.c: 73: {
  1104                           ;SPItest-MASTER.c: 74: MSendSPI(StrippedKey);
  1105  001B3E  0100               	movlb	0	; () banked
  1106  001B40  51BF               	movf	_StrippedKey& (0+255),w,b
  1107  001B42  EC30  F016         	call	_MSendSPI
  1108                           
  1109                           ;SPItest-MASTER.c: 75: MReceiveStrSPI(DoubleSPIM, 1);
  1110  001B46  0EC0               	movlw	low _DoubleSPIM
  1111  001B48  0100               	movlb	0	; () banked
  1112  001B4A  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1113  001B4C  0E00               	movlw	high _DoubleSPIM
  1114  001B4E  0100               	movlb	0	; () banked
  1115  001B50  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1116  001B52  0E01               	movlw	1
  1117  001B54  0100               	movlb	0	; () banked
  1118  001B56  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1119  001B58  ECD8  F012         	call	_MReceiveStrSPI	;wreg free
  1120                           
  1121                           ;SPItest-MASTER.c: 76: Ki = SPIReassembleDouble();
  1122  001B5C  ECAA  F015         	call	_SPIReassembleDouble	;wreg free
  1123  001B60  C080  F042         	movff	?_SPIReassembleDouble,_Ki
  1124  001B64  C081  F043         	movff	?_SPIReassembleDouble+1,_Ki+1
  1125  001B68  C082  F044         	movff	?_SPIReassembleDouble+2,_Ki+2
  1126                           
  1127                           ;SPItest-MASTER.c: 77: for (x = 0; x != 4; x++)
  1128  001B6C  0E00               	movlw	0
  1129  001B6E  0100               	movlb	0	; () banked
  1130  001B70  6FB4               	movwf	main@x& (0+255),b
  1131  001B72                     l3802:
  1132                           
  1133                           ; BSR set to: 0
  1134  001B72  0E04               	movlw	4
  1135  001B74  0100               	movlb	0	; () banked
  1136  001B76  19B4               	xorwf	main@x& (0+255),w,b
  1137  001B78  B4D8               	btfsc	status,2,c
  1138  001B7A  D046               	goto	l3832
  1139  001B7C  D001               	goto	l3806
  1140                           
  1141                           ; BSR set to: 0
  1142  001B7E  D044               	goto	l3832
  1143  001B80                     l3806:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;SPItest-MASTER.c: 78: DoubleSPIM[x] = '\0';
  1147  001B80  0100               	movlb	0	; () banked
  1148  001B82  51B4               	movf	main@x& (0+255),w,b
  1149  001B84  0D01               	mullw	1
  1150  001B86  0EC0               	movlw	low _DoubleSPIM
  1151  001B88  24F3               	addwf	prodl,w,c
  1152  001B8A  6ED9               	movwf	fsr2l,c
  1153  001B8C  0E00               	movlw	high _DoubleSPIM
  1154  001B8E  20F4               	addwfc	prodh,w,c
  1155  001B90  6EDA               	movwf	fsr2h,c
  1156  001B92  0E00               	movlw	0
  1157  001B94  6EDF               	movwf	indf2,c
  1158                           
  1159                           ; BSR set to: 0
  1160  001B96  0100               	movlb	0	; () banked
  1161  001B98  2BB4               	incf	main@x& (0+255),f,b
  1162  001B9A  D7EB               	goto	l3802
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;SPItest-MASTER.c: 79: }
  1166                           
  1167                           ; BSR set to: 0
  1168  001B9C  D035               	goto	l3832
  1169  001B9E                     l3812:
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;SPItest-MASTER.c: 80: else if (StrippedKey == 0x08)
  1173  001B9E  0E08               	movlw	8
  1174  001BA0  0100               	movlb	0	; () banked
  1175  001BA2  19BF               	xorwf	_StrippedKey& (0+255),w,b
  1176  001BA4  A4D8               	btfss	status,2,c
  1177  001BA6  D030               	goto	l3832
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;SPItest-MASTER.c: 81: {
  1181                           ;SPItest-MASTER.c: 82: MSendSPI(StrippedKey);
  1182  001BA8  0100               	movlb	0	; () banked
  1183  001BAA  51BF               	movf	_StrippedKey& (0+255),w,b
  1184  001BAC  EC30  F016         	call	_MSendSPI
  1185                           
  1186                           ;SPItest-MASTER.c: 83: MReceiveStrSPI(DoubleSPIM, 1);
  1187  001BB0  0EC0               	movlw	low _DoubleSPIM
  1188  001BB2  0100               	movlb	0	; () banked
  1189  001BB4  6FAF               	movwf	MReceiveStrSPI@str& (0+255),b
  1190  001BB6  0E00               	movlw	high _DoubleSPIM
  1191  001BB8  0100               	movlb	0	; () banked
  1192  001BBA  6FB0               	movwf	(MReceiveStrSPI@str+1)& (0+255),b
  1193  001BBC  0E01               	movlw	1
  1194  001BBE  0100               	movlb	0	; () banked
  1195  001BC0  6FB1               	movwf	MReceiveStrSPI@Slave& (0+255),b
  1196  001BC2  ECD8  F012         	call	_MReceiveStrSPI	;wreg free
  1197                           
  1198                           ;SPItest-MASTER.c: 84: Kd = SPIReassembleDouble();
  1199  001BC6  ECAA  F015         	call	_SPIReassembleDouble	;wreg free
  1200  001BCA  C080  F03F         	movff	?_SPIReassembleDouble,_Kd
  1201  001BCE  C081  F040         	movff	?_SPIReassembleDouble+1,_Kd+1
  1202  001BD2  C082  F041         	movff	?_SPIReassembleDouble+2,_Kd+2
  1203                           
  1204                           ;SPItest-MASTER.c: 85: for (x = 0; x != 4; x++)
  1205  001BD6  0E00               	movlw	0
  1206  001BD8  0100               	movlb	0	; () banked
  1207  001BDA  6FB4               	movwf	main@x& (0+255),b
  1208  001BDC                     l3822:
  1209                           
  1210                           ; BSR set to: 0
  1211  001BDC  0E04               	movlw	4
  1212  001BDE  0100               	movlb	0	; () banked
  1213  001BE0  19B4               	xorwf	main@x& (0+255),w,b
  1214  001BE2  B4D8               	btfsc	status,2,c
  1215  001BE4  D011               	goto	l3832
  1216  001BE6  D001               	goto	l3826
  1217                           
  1218                           ; BSR set to: 0
  1219  001BE8  D00F               	goto	l3832
  1220  001BEA                     l3826:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;SPItest-MASTER.c: 86: DoubleSPIM[x] = '\0';
  1224  001BEA  0100               	movlb	0	; () banked
  1225  001BEC  51B4               	movf	main@x& (0+255),w,b
  1226  001BEE  0D01               	mullw	1
  1227  001BF0  0EC0               	movlw	low _DoubleSPIM
  1228  001BF2  24F3               	addwf	prodl,w,c
  1229  001BF4  6ED9               	movwf	fsr2l,c
  1230  001BF6  0E00               	movlw	high _DoubleSPIM
  1231  001BF8  20F4               	addwfc	prodh,w,c
  1232  001BFA  6EDA               	movwf	fsr2h,c
  1233  001BFC  0E00               	movlw	0
  1234  001BFE  6EDF               	movwf	indf2,c
  1235                           
  1236                           ; BSR set to: 0
  1237  001C00  0100               	movlb	0	; () banked
  1238  001C02  2BB4               	incf	main@x& (0+255),f,b
  1239  001C04  D7EB               	goto	l3822
  1240                           
  1241                           ; BSR set to: 0
  1242                           
  1243                           ; BSR set to: 0
  1244                           
  1245                           ; BSR set to: 0
  1246                           
  1247                           ; BSR set to: 0
  1248                           
  1249                           ; BSR set to: 0
  1250                           
  1251                           ; BSR set to: 0
  1252  001C06  D000               	goto	l3832
  1253  001C08                     l3832:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;SPItest-MASTER.c: 87: }
  1257                           ;SPItest-MASTER.c: 88: }
  1258                           ;SPItest-MASTER.c: 89: while (!checksum());
  1259  001C08  ECBD  F013         	call	_checksum	;wreg free
  1260  001C0C  0900               	iorlw	0
  1261  001C0E  A4D8               	btfss	status,2,c
  1262  001C10  D6D0               	goto	l3718
  1263  001C12  D6F1               	goto	l3732
  1264                           
  1265                           ;SPItest-MASTER.c: 90: }
  1266  001C14  D6CE               	goto	l3718
  1267  001C16                     l3834:
  1268                           
  1269                           ;SPItest-MASTER.c: 91: else if ((StrippedKey == 0x01) || (StrippedKey == 0x05) || (Strip
      +                          pedKey == 0x07) || (StrippedKey == 0x09))
  1270  001C16  0100               	movlb	0	; () banked
  1271  001C18  05BF               	decf	_StrippedKey& (0+255),w,b
  1272  001C1A  B4D8               	btfsc	status,2,c
  1273  001C1C  D00F               	goto	l3842
  1274                           
  1275                           ; BSR set to: 0
  1276  001C1E  0E05               	movlw	5
  1277  001C20  0100               	movlb	0	; () banked
  1278  001C22  19BF               	xorwf	_StrippedKey& (0+255),w,b
  1279  001C24  B4D8               	btfsc	status,2,c
  1280  001C26  D00A               	goto	l3842
  1281                           
  1282                           ; BSR set to: 0
  1283  001C28  0E07               	movlw	7
  1284  001C2A  0100               	movlb	0	; () banked
  1285  001C2C  19BF               	xorwf	_StrippedKey& (0+255),w,b
  1286  001C2E  B4D8               	btfsc	status,2,c
  1287  001C30  D005               	goto	l3842
  1288                           
  1289                           ; BSR set to: 0
  1290  001C32  0E09               	movlw	9
  1291  001C34  0100               	movlb	0	; () banked
  1292  001C36  19BF               	xorwf	_StrippedKey& (0+255),w,b
  1293  001C38  A4D8               	btfss	status,2,c
  1294  001C3A  D6BB               	goto	l3718
  1295  001C3C                     l3842:
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;SPItest-MASTER.c: 92: {
  1299                           ;SPItest-MASTER.c: 94: MSendSPI(StrippedKey);
  1300  001C3C  0100               	movlb	0	; () banked
  1301  001C3E  51BF               	movf	_StrippedKey& (0+255),w,b
  1302  001C40  EC30  F016         	call	_MSendSPI
  1303                           
  1304                           ;SPItest-MASTER.c: 95: SPIDisassembleDouble(StrippedValue);
  1305  001C44  C0BB  F082         	movff	_StrippedValue,SPIDisassembleDouble@dub
  1306  001C48  C0BC  F083         	movff	_StrippedValue+1,SPIDisassembleDouble@dub+1
  1307  001C4C  C0BD  F084         	movff	_StrippedValue+2,SPIDisassembleDouble@dub+2
  1308  001C50  EC88  F015         	call	_SPIDisassembleDouble	;wreg free
  1309                           
  1310                           ;SPItest-MASTER.c: 96: PORTAbits.RA3 = 0;
  1311  001C54  9680               	bcf	3968,3,c	;volatile
  1312                           
  1313                           ;SPItest-MASTER.c: 97: while (PORTAbits.RA1);
  1314  001C56  D000               	goto	l140
  1315  001C58                     l140:
  1316  001C58  B280               	btfsc	3968,1,c	;volatile
  1317  001C5A  D7FE               	goto	l140
  1318                           
  1319                           ;SPItest-MASTER.c: 98: Delay10TCYx(50);
  1320  001C5C  0E32               	movlw	50
  1321  001C5E  EC80  F016         	call	_Delay10TCYx
  1322                           
  1323                           ;SPItest-MASTER.c: 99: for (x = 0; x != 4; x++)
  1324  001C62  0E00               	movlw	0
  1325  001C64  0100               	movlb	0	; () banked
  1326  001C66  6FB4               	movwf	main@x& (0+255),b
  1327  001C68                     l3852:
  1328                           
  1329                           ; BSR set to: 0
  1330  001C68  0E04               	movlw	4
  1331  001C6A  0100               	movlb	0	; () banked
  1332  001C6C  19B4               	xorwf	main@x& (0+255),w,b
  1333  001C6E  B4D8               	btfsc	status,2,c
  1334  001C70  D011               	goto	l144
  1335  001C72  D001               	goto	l3856
  1336                           
  1337                           ; BSR set to: 0
  1338  001C74  D00F               	goto	l144
  1339  001C76                     l3856:
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;SPItest-MASTER.c: 100: MSendSPI(DoubleSPIM[x]);
  1343  001C76  0100               	movlb	0	; () banked
  1344  001C78  51B4               	movf	main@x& (0+255),w,b
  1345  001C7A  0D01               	mullw	1
  1346  001C7C  0EC0               	movlw	low _DoubleSPIM
  1347  001C7E  24F3               	addwf	prodl,w,c
  1348  001C80  6ED9               	movwf	fsr2l,c
  1349  001C82  0E00               	movlw	high _DoubleSPIM
  1350  001C84  20F4               	addwfc	prodh,w,c
  1351  001C86  6EDA               	movwf	fsr2h,c
  1352  001C88  50DF               	movf	indf2,w,c
  1353  001C8A  EC30  F016         	call	_MSendSPI
  1354  001C8E  0100               	movlb	0	; () banked
  1355  001C90  2BB4               	incf	main@x& (0+255),f,b
  1356  001C92  D7EA               	goto	l3852
  1357  001C94                     l144:
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;SPItest-MASTER.c: 101: PORTAbits.RA3 = 1;
  1361  001C94  8680               	bsf	3968,3,c	;volatile
  1362                           
  1363                           ; BSR set to: 0
  1364                           
  1365                           ; BSR set to: 0
  1366                           
  1367                           ; BSR set to: 0
  1368                           
  1369                           ; BSR set to: 0
  1370  001C96  D68D               	goto	l3718
  1371                           
  1372                           ; BSR set to: 0
  1373                           
  1374                           ; BSR set to: 0
  1375  001C98  EF0C  F000         	goto	start
  1376  001C9C                     __end_of_main:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           prodh	equ	0xFF4
  1383                           prodl	equ	0xFF3
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           indf2	equ	0xFDF
  1387                           fsr2h	equ	0xFDA
  1388                           fsr2l	equ	0xFD9
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function _initialize *****************
  1392 ;; Defined at:
  1393 ;;		line 115 in file "SPItest-MASTER.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;		None               void
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    9
  1414 ;; This function calls:
  1415 ;;		_OpenSPI
  1416 ;;		_SerInit
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text1
  1423  002CCA                     __ptext1:
  1424                           	opt stack 0
  1425  002CCA                     _initialize:
  1426                           	opt stack 21
  1427                           
  1428                           ;SPItest-MASTER.c: 117: OpenSPI(0b00000000, 0b00000000, 0b00000000);
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;incstack = 0
  1432  002CCA  0E00               	movlw	0
  1433  002CCC  0100               	movlb	0	; () banked
  1434  002CCE  6F80               	movwf	OpenSPI@bus_mode& (0+255),b
  1435  002CD0  0E00               	movlw	0
  1436  002CD2  0100               	movlb	0	; () banked
  1437  002CD4  6F81               	movwf	OpenSPI@smp_phase& (0+255),b
  1438  002CD6  0E00               	movlw	0
  1439  002CD8  ECA8  F014         	call	_OpenSPI
  1440                           
  1441                           ;SPItest-MASTER.c: 118: INTCONbits.GIE = 1;
  1442  002CDC  8EF2               	bsf	intcon,7,c	;volatile
  1443                           
  1444                           ;SPItest-MASTER.c: 119: INTCONbits.PEIE = 1;
  1445  002CDE  8CF2               	bsf	intcon,6,c	;volatile
  1446                           
  1447                           ;SPItest-MASTER.c: 120: TRISAbits.RA1 = 1;
  1448  002CE0  8292               	bsf	3986,1,c	;volatile
  1449                           
  1450                           ;SPItest-MASTER.c: 121: TRISAbits.RA3 = 0;
  1451  002CE2  9692               	bcf	3986,3,c	;volatile
  1452                           
  1453                           ;SPItest-MASTER.c: 122: SerInit();
  1454  002CE4  EC1C  F016         	call	_SerInit	;wreg free
  1455  002CE8  0012               	return		;funcret
  1456  002CEA                     __end_of_initialize:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           intcon	equ	0xFF2
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           indf2	equ	0xFDF
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _SerInit *****************
  1473 ;; Defined at:
  1474 ;;		line 19 in file "SerComm.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    8
  1495 ;; This function calls:
  1496 ;;		_SerTxStr
  1497 ;; This function is called by:
  1498 ;;		_initialize
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text2
  1503  002C38                     __ptext2:
  1504                           	opt stack 0
  1505  002C38                     _SerInit:
  1506                           	opt stack 21
  1507                           
  1508                           ;SerComm.c: 26: TXSTA1 = 0x24;
  1509                           
  1510                           ;incstack = 0
  1511  002C38  0E24               	movlw	36
  1512  002C3A  6EAC               	movwf	4012,c	;volatile
  1513                           
  1514                           ;SerComm.c: 27: RCSTA1 = 0x90;
  1515  002C3C  0E90               	movlw	144
  1516  002C3E  6EAB               	movwf	4011,c	;volatile
  1517                           
  1518                           ;SerComm.c: 28: BAUDCON = 0x00;
  1519  002C40  0E00               	movlw	0
  1520  002C42  6EB8               	movwf	4024,c	;volatile
  1521                           
  1522                           ;SerComm.c: 29: SPBRG = 21;
  1523  002C44  0E15               	movlw	21
  1524  002C46  6EAF               	movwf	4015,c	;volatile
  1525                           
  1526                           ;SerComm.c: 31: RCONbits.IPEN = 1;
  1527  002C48  8ED0               	bsf	4048,7,c	;volatile
  1528                           
  1529                           ;SerComm.c: 32: IPR1bits.RCIP = 1;
  1530  002C4A  8A9F               	bsf	3999,5,c	;volatile
  1531                           
  1532                           ;SerComm.c: 33: PIE1bits.RC1IE = 1;
  1533  002C4C  8A9D               	bsf	3997,5,c	;volatile
  1534                           
  1535                           ;SerComm.c: 35: SerTxStr("Welcome to the world of tomorrow!!!");
  1536  002C4E  0E01               	movlw	low STR_1
  1537  002C50  0100               	movlb	0	; () banked
  1538  002C52  6F81               	movwf	SerTxStr@string& (0+255),b
  1539  002C54  0E10               	movlw	high STR_1
  1540  002C56  0100               	movlb	0	; () banked
  1541  002C58  6F82               	movwf	(SerTxStr@string+1)& (0+255),b
  1542  002C5A  ECDA  F014         	call	_SerTxStr	;wreg free
  1543  002C5E  0012               	return		;funcret
  1544  002C60                     __end_of_SerInit:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           prodh	equ	0xFF4
  1551                           prodl	equ	0xFF3
  1552                           intcon	equ	0xFF2
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           indf2	equ	0xFDF
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function _SerTxStr *****************
  1561 ;; Defined at:
  1562 ;;		line 50 in file "SerComm.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  string          2    1[BANK0 ] PTR unsigned char 
  1565 ;;		 -> STR_28(4), STR_13(6), STR_12(4), STR_3(11), 
  1566 ;;		 -> value(10), STR_2(6), key(5), STR_1(36), 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;		None               void
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1578 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;Total ram usage:        2 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    7
  1585 ;; This function calls:
  1586 ;;		_SerTx
  1587 ;; This function is called by:
  1588 ;;		_SerInit
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text3
  1593  0029B4                     __ptext3:
  1594                           	opt stack 0
  1595  0029B4                     _SerTxStr:
  1596                           	opt stack 21
  1597                           
  1598                           ;SerComm.c: 52: while (*string)
  1599                           
  1600                           ;incstack = 0
  1601  0029B4  D017               	goto	l3436
  1602  0029B6                     l3432:
  1603                           
  1604                           ;SerComm.c: 53: SerTx(*string++);
  1605  0029B6  C081  FFF6         	movff	SerTxStr@string,tblptrl
  1606  0029BA  C082  FFF7         	movff	SerTxStr@string+1,tblptrh
  1607  0029BE  0E00               	movlw	low (__smallconst shr (0+16))
  1608  0029C0  6EF8               	movwf	tblptru,c
  1609  0029C2  0E0F               	movlw	(high __ramtop+-1)
  1610  0029C4  64F7               	cpfsgt	tblptrh,c
  1611  0029C6  D003               	bra	u4127
  1612  0029C8  0008               	tblrd		*
  1613  0029CA  50F5               	movf	tablat,w,c
  1614  0029CC  D005               	bra	u4120
  1615  0029CE                     u4127:
  1616  0029CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1617  0029D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1618  0029D6  50EF               	movf	indf0,w,c
  1619  0029D8                     u4120:
  1620  0029D8  EC8B  F016         	call	_SerTx
  1621  0029DC  0100               	movlb	0	; () banked
  1622  0029DE  4B81               	infsnz	SerTxStr@string& (0+255),f,b
  1623  0029E0  2B82               	incf	(SerTxStr@string+1)& (0+255),f,b
  1624  0029E2  D000               	goto	l3436
  1625  0029E4                     l3436:
  1626  0029E4  C081  FFF6         	movff	SerTxStr@string,tblptrl
  1627  0029E8  C082  FFF7         	movff	SerTxStr@string+1,tblptrh
  1628  0029EC  0E00               	movlw	low (__smallconst shr (0+16))
  1629  0029EE  6EF8               	movwf	tblptru,c
  1630  0029F0  0E0F               	movlw	(high __ramtop+-1)
  1631  0029F2  64F7               	cpfsgt	tblptrh,c
  1632  0029F4  D003               	bra	u4137
  1633  0029F6  0008               	tblrd		*
  1634  0029F8  50F5               	movf	tablat,w,c
  1635  0029FA  D005               	bra	u4130
  1636  0029FC                     u4137:
  1637  0029FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1638  002A00  CFF7 FFEA          	movff	tblptrh,fsr0h
  1639  002A04  50EF               	movf	indf0,w,c
  1640  002A06                     u4130:
  1641  002A06  0900               	iorlw	0
  1642  002A08  A4D8               	btfss	status,2,c
  1643  002A0A  D7D5               	goto	l3432
  1644  002A0C  0012               	return		;funcret
  1645  002A0E                     __end_of_SerTxStr:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           prodh	equ	0xFF4
  1652                           prodl	equ	0xFF3
  1653                           intcon	equ	0xFF2
  1654                           indf0	equ	0xFEF
  1655                           postinc0	equ	0xFEE
  1656                           fsr0h	equ	0xFEA
  1657                           fsr0l	equ	0xFE9
  1658                           wreg	equ	0xFE8
  1659                           indf2	equ	0xFDF
  1660                           fsr2h	equ	0xFDA
  1661                           fsr2l	equ	0xFD9
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _OpenSPI *****************
  1665 ;; Defined at:
  1666 ;;		line 14 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi_open.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  sync_mode       1    wreg     unsigned char 
  1669 ;;  bus_mode        1    0[BANK0 ] unsigned char 
  1670 ;;  smp_phase       1    1[BANK0 ] unsigned char 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  sync_mode       1    2[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:        3 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    6
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_initialize
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text4
  1697  002950                     __ptext4:
  1698                           	opt stack 0
  1699  002950                     _OpenSPI:
  1700                           	opt stack 23
  1701                           
  1702                           ;incstack = 0
  1703                           ;OpenSPI@sync_mode stored from wreg
  1704  002950  0100               	movlb	0	; () banked
  1705  002952  6F82               	movwf	OpenSPI@sync_mode& (0+255),b
  1706                           
  1707                           ; BSR set to: 0
  1708  002954  0E3F               	movlw	63
  1709  002956  16C7               	andwf	4039,f,c	;volatile
  1710                           
  1711                           ; BSR set to: 0
  1712  002958  0E00               	movlw	0
  1713  00295A  6EC6               	movwf	4038,c	;volatile
  1714                           
  1715                           ; BSR set to: 0
  1716  00295C  0100               	movlb	0	; () banked
  1717  00295E  5182               	movf	OpenSPI@sync_mode& (0+255),w,b
  1718  002960  12C6               	iorwf	4038,f,c	;volatile
  1719                           
  1720                           ; BSR set to: 0
  1721  002962  0100               	movlb	0	; () banked
  1722  002964  5181               	movf	OpenSPI@smp_phase& (0+255),w,b
  1723  002966  12C7               	iorwf	4039,f,c	;volatile
  1724  002968  D005               	goto	l3580
  1725  00296A                     l354:
  1726                           
  1727                           ; BSR set to: 0
  1728  00296A  8CC7               	bsf	4039,6,c	;volatile
  1729  00296C  D016               	goto	l3584
  1730  00296E                     l356:
  1731                           
  1732                           ; BSR set to: 0
  1733  00296E  8CC7               	bsf	4039,6,c	;volatile
  1734  002970                     l357:
  1735                           
  1736                           ; BSR set to: 0
  1737  002970  88C6               	bsf	4038,4,c	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740                           
  1741                           ; BSR set to: 0
  1742  002972  D013               	goto	l3584
  1743  002974                     l3580:
  1744                           
  1745                           ; BSR set to: 0
  1746  002974  0100               	movlb	0	; () banked
  1747  002976  5180               	movf	OpenSPI@bus_mode& (0+255),w,b
  1748                           
  1749                           ; Switch size 1, requested type "space"
  1750                           ; Number of cases is 3, Range of values is 0 to 3
  1751                           ; switch strategies available:
  1752                           ; Name         Instructions Cycles
  1753                           ; simple_byte           10     6 (average)
  1754                           ;	Chosen strategy is simple_byte
  1755  002978  0A00               	xorlw	0	; case 0
  1756  00297A  B4D8               	btfsc	status,2,c
  1757  00297C  D7F6               	goto	l354
  1758  00297E  0A02               	xorlw	2	; case 2
  1759  002980  B4D8               	btfsc	status,2,c
  1760  002982  D7F5               	goto	l356
  1761  002984  0A01               	xorlw	1	; case 3
  1762  002986  B4D8               	btfsc	status,2,c
  1763  002988  D7F3               	goto	l357
  1764                           
  1765                           ; BSR set to: 0
  1766  00298A  D007               	goto	l3584
  1767  00298C                     l360:
  1768                           
  1769                           ; BSR set to: 0
  1770  00298C  8694               	bsf	3988,3,c	;volatile
  1771  00298E  8A92               	bsf	3986,5,c	;volatile
  1772  002990  D00D               	goto	l361
  1773  002992                     l362:
  1774                           
  1775                           ; BSR set to: 0
  1776  002992  8694               	bsf	3988,3,c	;volatile
  1777  002994  D00B               	goto	l361
  1778  002996                     l363:
  1779                           
  1780                           ; BSR set to: 0
  1781  002996  9694               	bcf	3988,3,c	;volatile
  1782                           
  1783                           ; BSR set to: 0
  1784  002998  D009               	goto	l361
  1785  00299A                     l3584:
  1786                           
  1787                           ; BSR set to: 0
  1788  00299A  0100               	movlb	0	; () banked
  1789  00299C  5182               	movf	OpenSPI@sync_mode& (0+255),w,b
  1790                           
  1791                           ; Switch size 1, requested type "space"
  1792                           ; Number of cases is 2, Range of values is 4 to 5
  1793                           ; switch strategies available:
  1794                           ; Name         Instructions Cycles
  1795                           ; simple_byte            7     4 (average)
  1796                           ;	Chosen strategy is simple_byte
  1797  00299E  0A04               	xorlw	4	; case 4
  1798  0029A0  B4D8               	btfsc	status,2,c
  1799  0029A2  D7F4               	goto	l360
  1800  0029A4  0A01               	xorlw	1	; case 5
  1801  0029A6  B4D8               	btfsc	status,2,c
  1802  0029A8  D7F4               	goto	l362
  1803  0029AA  D7F5               	goto	l363
  1804  0029AC                     l361:
  1805                           
  1806                           ; BSR set to: 0
  1807  0029AC  8894               	bsf	3988,4,c	;volatile
  1808  0029AE  9A94               	bcf	3988,5,c	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811  0029B0  8AC6               	bsf	4038,5,c	;volatile
  1812                           
  1813                           ; BSR set to: 0
  1814  0029B2  0012               	return		;funcret
  1815  0029B4                     __end_of_OpenSPI:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           prodh	equ	0xFF4
  1822                           prodl	equ	0xFF3
  1823                           intcon	equ	0xFF2
  1824                           indf0	equ	0xFEF
  1825                           postinc0	equ	0xFEE
  1826                           fsr0h	equ	0xFEA
  1827                           fsr0l	equ	0xFE9
  1828                           wreg	equ	0xFE8
  1829                           indf2	equ	0xFDF
  1830                           fsr2h	equ	0xFDA
  1831                           fsr2l	equ	0xFD9
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _checksum *****************
  1835 ;; Defined at:
  1836 ;;		line 184 in file "SPItest-MASTER.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  y               1    5[BANK0 ] unsigned char 
  1841 ;;  sum             1    4[BANK0 ] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      unsigned char 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;Total ram usage:        6 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    6
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text5
  1866  00277A                     __ptext5:
  1867                           	opt stack 0
  1868  00277A                     _checksum:
  1869                           	opt stack 24
  1870                           
  1871                           ;SPItest-MASTER.c: 186: unsigned char y, sum = 0;
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;incstack = 0
  1875  00277A  0E00               	movlw	0
  1876  00277C  0100               	movlb	0	; () banked
  1877  00277E  6F84               	movwf	checksum@sum& (0+255),b
  1878                           
  1879                           ;SPItest-MASTER.c: 187: for (y = 0; y != 3; y++)
  1880  002780  0E00               	movlw	0
  1881  002782  0100               	movlb	0	; () banked
  1882  002784  6F85               	movwf	checksum@y& (0+255),b
  1883  002786                     l3680:
  1884                           
  1885                           ; BSR set to: 0
  1886  002786  0E03               	movlw	3
  1887  002788  0100               	movlb	0	; () banked
  1888  00278A  1985               	xorwf	checksum@y& (0+255),w,b
  1889  00278C  B4D8               	btfsc	status,2,c
  1890  00278E  D011               	goto	l3690
  1891  002790  D001               	goto	l3684
  1892                           
  1893                           ; BSR set to: 0
  1894  002792  D00F               	goto	l3690
  1895  002794                     l3684:
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;SPItest-MASTER.c: 188: sum += DoubleSPIM[y];
  1899  002794  0100               	movlb	0	; () banked
  1900  002796  5185               	movf	checksum@y& (0+255),w,b
  1901  002798  0D01               	mullw	1
  1902  00279A  0EC0               	movlw	low _DoubleSPIM
  1903  00279C  24F3               	addwf	prodl,w,c
  1904  00279E  6ED9               	movwf	fsr2l,c
  1905  0027A0  0E00               	movlw	high _DoubleSPIM
  1906  0027A2  20F4               	addwfc	prodh,w,c
  1907  0027A4  6EDA               	movwf	fsr2h,c
  1908  0027A6  50DF               	movf	indf2,w,c
  1909  0027A8  0100               	movlb	0	; () banked
  1910  0027AA  2784               	addwf	checksum@sum& (0+255),f,b
  1911                           
  1912                           ; BSR set to: 0
  1913  0027AC  0100               	movlb	0	; () banked
  1914  0027AE  2B85               	incf	checksum@y& (0+255),f,b
  1915  0027B0  D7EA               	goto	l3680
  1916  0027B2                     l3690:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;SPItest-MASTER.c: 189: if ((sum - DoubleSPIM[3]) == 0)
  1920  0027B2  0100               	movlb	0	; () banked
  1921  0027B4  51C3               	movf	(_DoubleSPIM+3)& (0+255),w,b
  1922  0027B6  0100               	movlb	0	; () banked
  1923  0027B8  6F80               	movwf	??_checksum& (0+255),b
  1924  0027BA  6B81               	clrf	(??_checksum+1)& (0+255),b
  1925  0027BC  0100               	movlb	0	; () banked
  1926  0027BE  1F80               	comf	??_checksum& (0+255),f,b
  1927  0027C0  1F81               	comf	(??_checksum+1)& (0+255),f,b
  1928  0027C2  4B80               	infsnz	??_checksum& (0+255),f,b
  1929  0027C4  2B81               	incf	(??_checksum+1)& (0+255),f,b
  1930  0027C6  0100               	movlb	0	; () banked
  1931  0027C8  5184               	movf	checksum@sum& (0+255),w,b
  1932  0027CA  0100               	movlb	0	; () banked
  1933  0027CC  6F82               	movwf	(??_checksum+2)& (0+255),b
  1934  0027CE  6B83               	clrf	(??_checksum+3)& (0+255),b
  1935  0027D0  0100               	movlb	0	; () banked
  1936  0027D2  5180               	movf	??_checksum& (0+255),w,b
  1937  0027D4  0100               	movlb	0	; () banked
  1938  0027D6  2782               	addwf	(??_checksum+2)& (0+255),f,b
  1939  0027D8  0100               	movlb	0	; () banked
  1940  0027DA  5181               	movf	(??_checksum+1)& (0+255),w,b
  1941  0027DC  0100               	movlb	0	; () banked
  1942  0027DE  2383               	addwfc	(??_checksum+3)& (0+255),f,b
  1943  0027E0  0100               	movlb	0	; () banked
  1944  0027E2  5182               	movf	(??_checksum+2)& (0+255),w,b
  1945  0027E4  0100               	movlb	0	; () banked
  1946  0027E6  1183               	iorwf	(??_checksum+3)& (0+255),w,b
  1947  0027E8  A4D8               	btfss	status,2,c
  1948  0027EA  D002               	goto	l3698
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;SPItest-MASTER.c: 190: return 1;
  1952  0027EC  0E01               	movlw	1
  1953                           
  1954                           ; BSR set to: 0
  1955                           
  1956                           ; BSR set to: 0
  1957  0027EE  D002               	goto	l191
  1958  0027F0                     l3698:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;SPItest-MASTER.c: 191: else
  1962                           ;SPItest-MASTER.c: 192: return 0;
  1963  0027F0  0E00               	movlw	0
  1964                           
  1965                           ; BSR set to: 0
  1966  0027F2  D000               	goto	l191
  1967  0027F4                     l191:
  1968                           
  1969                           ; BSR set to: 0
  1970  0027F4  0012               	return		;funcret
  1971  0027F6                     __end_of_checksum:
  1972                           	opt stack 0
  1973                           tblptru	equ	0xFF8
  1974                           tblptrh	equ	0xFF7
  1975                           tblptrl	equ	0xFF6
  1976                           tablat	equ	0xFF5
  1977                           prodh	equ	0xFF4
  1978                           prodl	equ	0xFF3
  1979                           intcon	equ	0xFF2
  1980                           indf0	equ	0xFEF
  1981                           postinc0	equ	0xFEE
  1982                           fsr0h	equ	0xFEA
  1983                           fsr0l	equ	0xFE9
  1984                           wreg	equ	0xFE8
  1985                           indf2	equ	0xFDF
  1986                           fsr2h	equ	0xFDA
  1987                           fsr2l	equ	0xFD9
  1988                           status	equ	0xFD8
  1989                           
  1990 ;; *************** function _SPIDisassembleDouble *****************
  1991 ;; Defined at:
  1992 ;;		line 195 in file "SPItest-MASTER.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  dub             3    2[BANK0 ] unsigned char 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;		None               void
  1999 ;; Registers used:
  2000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2006 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;Total ram usage:        3 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    7
  2013 ;; This function calls:
  2014 ;;		_MGenerateChecksum
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text6
  2021  002B10                     __ptext6:
  2022                           	opt stack 0
  2023  002B10                     _SPIDisassembleDouble:
  2024                           	opt stack 23
  2025                           
  2026                           ;SPItest-MASTER.c: 197: DoublePtr = (unsigned char*) &dub;
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;incstack = 0
  2030  002B10  0E82               	movlw	low SPIDisassembleDouble@dub
  2031  002B12  6E4B               	movwf	_DoublePtr,c
  2032  002B14  0E00               	movlw	high SPIDisassembleDouble@dub
  2033  002B16  6E4C               	movwf	_DoublePtr+1,c
  2034                           
  2035                           ;SPItest-MASTER.c: 198: DoubleSPIM[0] = DoublePtr[0];
  2036  002B18  C04B  FFD9         	movff	_DoublePtr,fsr2l
  2037  002B1C  C04C  FFDA         	movff	_DoublePtr+1,fsr2h
  2038  002B20  50DF               	movf	indf2,w,c
  2039  002B22  0100               	movlb	0	; () banked
  2040  002B24  6FC0               	movwf	_DoubleSPIM& (0+255),b
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;SPItest-MASTER.c: 199: DoubleSPIM[1] = DoublePtr[1];
  2044  002B26  EE20 F001          	lfsr	2,1
  2045  002B2A  504B               	movf	_DoublePtr,w,c
  2046  002B2C  26D9               	addwf	fsr2l,f,c
  2047  002B2E  504C               	movf	_DoublePtr+1,w,c
  2048  002B30  22DA               	addwfc	fsr2h,f,c
  2049  002B32  50DF               	movf	indf2,w,c
  2050  002B34  0100               	movlb	0	; () banked
  2051  002B36  6FC1               	movwf	(_DoubleSPIM+1)& (0+255),b
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;SPItest-MASTER.c: 200: DoubleSPIM[2] = DoublePtr[2];
  2055  002B38  EE20 F002          	lfsr	2,2
  2056  002B3C  504B               	movf	_DoublePtr,w,c
  2057  002B3E  26D9               	addwf	fsr2l,f,c
  2058  002B40  504C               	movf	_DoublePtr+1,w,c
  2059  002B42  22DA               	addwfc	fsr2h,f,c
  2060  002B44  50DF               	movf	indf2,w,c
  2061  002B46  0100               	movlb	0	; () banked
  2062  002B48  6FC2               	movwf	(_DoubleSPIM+2)& (0+255),b
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;SPItest-MASTER.c: 201: DoubleSPIM[3] = MGenerateChecksum();
  2066  002B4A  ECCC  F015         	call	_MGenerateChecksum	;wreg free
  2067  002B4E  0100               	movlb	0	; () banked
  2068  002B50  6FC3               	movwf	(_DoubleSPIM+3)& (0+255),b
  2069                           
  2070                           ; BSR set to: 0
  2071  002B52  0012               	return		;funcret
  2072  002B54                     __end_of_SPIDisassembleDouble:
  2073                           	opt stack 0
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           prodh	equ	0xFF4
  2079                           prodl	equ	0xFF3
  2080                           intcon	equ	0xFF2
  2081                           indf0	equ	0xFEF
  2082                           postinc0	equ	0xFEE
  2083                           fsr0h	equ	0xFEA
  2084                           fsr0l	equ	0xFE9
  2085                           wreg	equ	0xFE8
  2086                           indf2	equ	0xFDF
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _MGenerateChecksum *****************
  2092 ;; Defined at:
  2093 ;;		line 204 in file "SPItest-MASTER.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  z               1    1[BANK0 ] unsigned char 
  2098 ;;  sum             1    0[BANK0 ] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      unsigned char 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    6
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_SPIDisassembleDouble
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text7
  2123  002B98                     __ptext7:
  2124                           	opt stack 0
  2125  002B98                     _MGenerateChecksum:
  2126                           	opt stack 23
  2127                           
  2128                           ;SPItest-MASTER.c: 206: unsigned char z, sum = 0;
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;incstack = 0
  2132  002B98  0E00               	movlw	0
  2133  002B9A  0100               	movlb	0	; () banked
  2134  002B9C  6F80               	movwf	MGenerateChecksum@sum& (0+255),b
  2135                           
  2136                           ;SPItest-MASTER.c: 207: for (z = 0; z != 3; z++)
  2137  002B9E  0E00               	movlw	0
  2138  002BA0  0100               	movlb	0	; () banked
  2139  002BA2  6F81               	movwf	MGenerateChecksum@z& (0+255),b
  2140  002BA4                     l3598:
  2141                           
  2142                           ; BSR set to: 0
  2143  002BA4  0E03               	movlw	3
  2144  002BA6  0100               	movlb	0	; () banked
  2145  002BA8  1981               	xorwf	MGenerateChecksum@z& (0+255),w,b
  2146  002BAA  B4D8               	btfsc	status,2,c
  2147  002BAC  D011               	goto	l3608
  2148  002BAE  D001               	goto	l3602
  2149                           
  2150                           ; BSR set to: 0
  2151  002BB0  D00F               	goto	l3608
  2152  002BB2                     l3602:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;SPItest-MASTER.c: 208: sum += DoubleSPIM[z];
  2156  002BB2  0100               	movlb	0	; () banked
  2157  002BB4  5181               	movf	MGenerateChecksum@z& (0+255),w,b
  2158  002BB6  0D01               	mullw	1
  2159  002BB8  0EC0               	movlw	low _DoubleSPIM
  2160  002BBA  24F3               	addwf	prodl,w,c
  2161  002BBC  6ED9               	movwf	fsr2l,c
  2162  002BBE  0E00               	movlw	high _DoubleSPIM
  2163  002BC0  20F4               	addwfc	prodh,w,c
  2164  002BC2  6EDA               	movwf	fsr2h,c
  2165  002BC4  50DF               	movf	indf2,w,c
  2166  002BC6  0100               	movlb	0	; () banked
  2167  002BC8  2780               	addwf	MGenerateChecksum@sum& (0+255),f,b
  2168                           
  2169                           ; BSR set to: 0
  2170  002BCA  0100               	movlb	0	; () banked
  2171  002BCC  2B81               	incf	MGenerateChecksum@z& (0+255),f,b
  2172  002BCE  D7EA               	goto	l3598
  2173  002BD0                     l3608:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;SPItest-MASTER.c: 209: return sum;
  2177  002BD0  0100               	movlb	0	; () banked
  2178  002BD2  5180               	movf	MGenerateChecksum@sum& (0+255),w,b
  2179  002BD4  D000               	goto	l200
  2180  002BD6                     l200:
  2181                           
  2182                           ; BSR set to: 0
  2183  002BD6  0012               	return		;funcret
  2184  002BD8                     __end_of_MGenerateChecksum:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodh	equ	0xFF4
  2191                           prodl	equ	0xFF3
  2192                           intcon	equ	0xFF2
  2193                           indf0	equ	0xFEF
  2194                           postinc0	equ	0xFEE
  2195                           fsr0h	equ	0xFEA
  2196                           fsr0l	equ	0xFE9
  2197                           wreg	equ	0xFE8
  2198                           indf2	equ	0xFDF
  2199                           fsr2h	equ	0xFDA
  2200                           fsr2l	equ	0xFD9
  2201                           status	equ	0xFD8
  2202                           
  2203 ;; *************** function _MSendSPI *****************
  2204 ;; Defined at:
  2205 ;;		line 125 in file "SPItest-MASTER.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  data            1    wreg     unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  data            1    2[BANK0 ] unsigned char 
  2210 ;;  tempChar        1    1[BANK0 ] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;Total ram usage:        2 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    7
  2227 ;; This function calls:
  2228 ;;		_Delay10TCYx
  2229 ;; This function is called by:
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text8
  2235  002C60                     __ptext8:
  2236                           	opt stack 0
  2237  002C60                     _MSendSPI:
  2238                           	opt stack 23
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;incstack = 0
  2242                           ;MSendSPI@data stored from wreg
  2243  002C60  0100               	movlb	0	; () banked
  2244  002C62  6F82               	movwf	MSendSPI@data& (0+255),b
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;SPItest-MASTER.c: 127: PORTAbits.RA3 = 0;
  2248  002C64  9680               	bcf	3968,3,c	;volatile
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;SPItest-MASTER.c: 128: Delay10TCYx(1);
  2252  002C66  0E01               	movlw	1
  2253  002C68  EC80  F016         	call	_Delay10TCYx
  2254                           
  2255                           ;SPItest-MASTER.c: 129: unsigned char tempChar;
  2256                           ;SPItest-MASTER.c: 130: tempChar = SSPBUF;
  2257  002C6C  CFC9 F081          	movff	4041,MSendSPI@tempChar	;volatile
  2258                           
  2259                           ;SPItest-MASTER.c: 131: PIR1bits.SSPIF = 0;
  2260  002C70  969E               	bcf	3998,3,c	;volatile
  2261                           
  2262                           ;SPItest-MASTER.c: 132: SSPBUF = data;
  2263  002C72  C082  FFC9         	movff	MSendSPI@data,4041	;volatile
  2264                           
  2265                           ;SPItest-MASTER.c: 133: while (!PIR1bits.SSPIF);
  2266  002C76  D000               	goto	l157
  2267  002C78                     l157:
  2268  002C78  A69E               	btfss	3998,3,c	;volatile
  2269  002C7A  D7FE               	goto	l157
  2270                           
  2271                           ;SPItest-MASTER.c: 134: data = SSPBUF;
  2272  002C7C  CFC9 F082          	movff	4041,MSendSPI@data	;volatile
  2273                           
  2274                           ;SPItest-MASTER.c: 135: PORTAbits.RA3 = 1;
  2275  002C80  8680               	bsf	3968,3,c	;volatile
  2276  002C82  0012               	return		;funcret
  2277  002C84                     __end_of_MSendSPI:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           tblptrh	equ	0xFF7
  2281                           tblptrl	equ	0xFF6
  2282                           tablat	equ	0xFF5
  2283                           prodh	equ	0xFF4
  2284                           prodl	equ	0xFF3
  2285                           intcon	equ	0xFF2
  2286                           indf0	equ	0xFEF
  2287                           postinc0	equ	0xFEE
  2288                           fsr0h	equ	0xFEA
  2289                           fsr0l	equ	0xFE9
  2290                           wreg	equ	0xFE8
  2291                           indf2	equ	0xFDF
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _MReceiveStrSPI *****************
  2297 ;; Defined at:
  2298 ;;		line 148 in file "SPItest-MASTER.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  str             2   47[BANK0 ] PTR unsigned char 
  2301 ;;		 -> DoubleSPIM(4), 
  2302 ;;  Slave           1   49[BANK0 ] unsigned char 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  x               1   51[BANK0 ] unsigned char 
  2305 ;;  x               1   50[BANK0 ] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;		None               void
  2308 ;; Registers used:
  2309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2315 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;Total ram usage:        5 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    9
  2322 ;; This function calls:
  2323 ;;		_Delay10TCYx
  2324 ;;		_MReceiveSPI
  2325 ;;		_SPIReassembleDouble
  2326 ;;		_breakDouble
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text9
  2333  0025B0                     __ptext9:
  2334                           	opt stack 0
  2335  0025B0                     _MReceiveStrSPI:
  2336                           	opt stack 21
  2337                           
  2338                           ;SPItest-MASTER.c: 150: if (Slave == 1)
  2339                           
  2340                           ;incstack = 0
  2341  0025B0  0100               	movlb	0	; () banked
  2342  0025B2  05B1               	decf	MReceiveStrSPI@Slave& (0+255),w,b
  2343  0025B4  A4D8               	btfss	status,2,c
  2344  0025B6  D02A               	goto	l3656
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;SPItest-MASTER.c: 151: {
  2348                           ;SPItest-MASTER.c: 152: unsigned char x;
  2349                           ;SPItest-MASTER.c: 153: PORTAbits.RA3 = 0;
  2350  0025B8  9680               	bcf	3968,3,c	;volatile
  2351                           
  2352                           ;SPItest-MASTER.c: 154: while (PORTAbits.RA1);
  2353  0025BA  D000               	goto	l170
  2354  0025BC                     l170:
  2355  0025BC  B280               	btfsc	3968,1,c	;volatile
  2356  0025BE  D7FE               	goto	l170
  2357                           
  2358                           ;SPItest-MASTER.c: 155: Delay10TCYx(25);
  2359  0025C0  0E19               	movlw	25
  2360  0025C2  EC80  F016         	call	_Delay10TCYx
  2361                           
  2362                           ;SPItest-MASTER.c: 156: for (x = 0; x < 4; x++)
  2363  0025C6  0E00               	movlw	0
  2364  0025C8  0100               	movlb	0	; () banked
  2365  0025CA  6FB2               	movwf	MReceiveStrSPI@x& (0+255),b
  2366  0025CC                     l3642:
  2367                           
  2368                           ; BSR set to: 0
  2369  0025CC  0E03               	movlw	3
  2370  0025CE  0100               	movlb	0	; () banked
  2371  0025D0  65B2               	cpfsgt	MReceiveStrSPI@x& (0+255),b
  2372  0025D2  D001               	goto	l3646
  2373                           
  2374                           ; BSR set to: 0
  2375  0025D4  D00F               	goto	l3652
  2376  0025D6                     l3646:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;SPItest-MASTER.c: 157: DoubleSPIM[x] = MReceiveSPI();
  2380  0025D6  0100               	movlb	0	; () banked
  2381  0025D8  51B2               	movf	MReceiveStrSPI@x& (0+255),w,b
  2382  0025DA  0D01               	mullw	1
  2383  0025DC  0EC0               	movlw	low _DoubleSPIM
  2384  0025DE  24F3               	addwf	prodl,w,c
  2385  0025E0  6ED9               	movwf	fsr2l,c
  2386  0025E2  0E00               	movlw	high _DoubleSPIM
  2387  0025E4  20F4               	addwfc	prodh,w,c
  2388  0025E6  6EDA               	movwf	fsr2h,c
  2389  0025E8  EC75  F016         	call	_MReceiveSPI	;wreg free
  2390  0025EC  6EDF               	movwf	indf2,c
  2391  0025EE  0100               	movlb	0	; () banked
  2392  0025F0  2BB2               	incf	MReceiveStrSPI@x& (0+255),f,b
  2393  0025F2  D7EC               	goto	l3642
  2394  0025F4                     l3652:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;SPItest-MASTER.c: 158: breakDouble(SPIReassembleDouble());
  2398  0025F4  ECAA  F015         	call	_SPIReassembleDouble	;wreg free
  2399  0025F8  C080  F0A6         	movff	?_SPIReassembleDouble,breakDouble@dubs
  2400  0025FC  C081  F0A7         	movff	?_SPIReassembleDouble+1,breakDouble@dubs+1
  2401  002600  C082  F0A8         	movff	?_SPIReassembleDouble+2,breakDouble@dubs+2
  2402  002604  EC4E  F00E         	call	_breakDouble	;wreg free
  2403                           
  2404                           ;SPItest-MASTER.c: 159: PORTAbits.RA3 = 1;
  2405  002608  8680               	bsf	3968,3,c	;volatile
  2406                           
  2407                           ;SPItest-MASTER.c: 160: }
  2408  00260A  D02A               	goto	l182
  2409  00260C                     l3656:
  2410                           
  2411                           ;SPItest-MASTER.c: 161: else if (Slave == 2)
  2412  00260C  0E02               	movlw	2
  2413  00260E  0100               	movlb	0	; () banked
  2414  002610  19B1               	xorwf	MReceiveStrSPI@Slave& (0+255),w,b
  2415  002612  A4D8               	btfss	status,2,c
  2416  002614  D025               	goto	l182
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;SPItest-MASTER.c: 162: {
  2420                           ;SPItest-MASTER.c: 163: unsigned char x;
  2421                           ;SPItest-MASTER.c: 164: PORTAbits.RA4 = 0;
  2422  002616  9880               	bcf	3968,4,c	;volatile
  2423                           
  2424                           ;SPItest-MASTER.c: 165: while (PORTAbits.RA2);
  2425  002618  D000               	goto	l177
  2426  00261A                     l177:
  2427  00261A  B480               	btfsc	3968,2,c	;volatile
  2428  00261C  D7FE               	goto	l177
  2429                           
  2430                           ;SPItest-MASTER.c: 166: Delay10TCYx(50);
  2431  00261E  0E32               	movlw	50
  2432  002620  EC80  F016         	call	_Delay10TCYx
  2433                           
  2434                           ;SPItest-MASTER.c: 167: for (x = 0; x < 3; x++)
  2435  002624  0E00               	movlw	0
  2436  002626  0100               	movlb	0	; () banked
  2437  002628  6FB3               	movwf	MReceiveStrSPI@x_567& (0+255),b
  2438  00262A                     l3664:
  2439                           
  2440                           ; BSR set to: 0
  2441  00262A  0E02               	movlw	2
  2442  00262C  0100               	movlb	0	; () banked
  2443  00262E  65B3               	cpfsgt	MReceiveStrSPI@x_567& (0+255),b
  2444  002630  D001               	goto	l3668
  2445                           
  2446                           ; BSR set to: 0
  2447  002632  D011               	goto	l3674
  2448  002634                     l3668:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;SPItest-MASTER.c: 168: str[x] = MReceiveSPI();
  2452  002634  0100               	movlb	0	; () banked
  2453  002636  51B3               	movf	MReceiveStrSPI@x_567& (0+255),w,b
  2454  002638  0D01               	mullw	1
  2455  00263A  50F3               	movf	prodl,w,c
  2456  00263C  0100               	movlb	0	; () banked
  2457  00263E  25AF               	addwf	MReceiveStrSPI@str& (0+255),w,b
  2458  002640  6ED9               	movwf	fsr2l,c
  2459  002642  50F4               	movf	prodh,w,c
  2460  002644  0100               	movlb	0	; () banked
  2461  002646  21B0               	addwfc	(MReceiveStrSPI@str+1)& (0+255),w,b
  2462  002648  6EDA               	movwf	fsr2h,c
  2463  00264A  EC75  F016         	call	_MReceiveSPI	;wreg free
  2464  00264E  6EDF               	movwf	indf2,c
  2465  002650  0100               	movlb	0	; () banked
  2466  002652  2BB3               	incf	MReceiveStrSPI@x_567& (0+255),f,b
  2467  002654  D7EA               	goto	l3664
  2468  002656                     l3674:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;SPItest-MASTER.c: 169: Delay10TCYx(1);
  2472  002656  0E01               	movlw	1
  2473  002658  EC80  F016         	call	_Delay10TCYx
  2474                           
  2475                           ;SPItest-MASTER.c: 170: PORTAbits.RA4 = 1;
  2476  00265C  8880               	bsf	3968,4,c	;volatile
  2477  00265E  D000               	goto	l182
  2478  002660                     l182:
  2479  002660  0012               	return		;funcret
  2480  002662                     __end_of_MReceiveStrSPI:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           prodh	equ	0xFF4
  2487                           prodl	equ	0xFF3
  2488                           intcon	equ	0xFF2
  2489                           indf0	equ	0xFEF
  2490                           postinc0	equ	0xFEE
  2491                           fsr0h	equ	0xFEA
  2492                           fsr0l	equ	0xFE9
  2493                           wreg	equ	0xFE8
  2494                           indf2	equ	0xFDF
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _breakDouble *****************
  2500 ;; Defined at:
  2501 ;;		line 80 in file "SerComm.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  dubs            3   38[BANK0 ] unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  temp2           2   45[BANK0 ] unsigned int 
  2506 ;;  temp1           2   43[BANK0 ] unsigned int 
  2507 ;;  tempDub         2   41[BANK0 ] unsigned int 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;		None               void
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2517 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;Total ram usage:        9 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    8
  2524 ;; This function calls:
  2525 ;;		_SerTx
  2526 ;;		___ftmul
  2527 ;;		___fttol
  2528 ;;		___lwdiv
  2529 ;;		___lwmod
  2530 ;; This function is called by:
  2531 ;;		_MReceiveStrSPI
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text10
  2536  001C9C                     __ptext10:
  2537                           	opt stack 0
  2538  001C9C                     _breakDouble:
  2539                           	opt stack 21
  2540                           
  2541                           ;SerComm.c: 82: unsigned int temp1, temp2;
  2542                           ;SerComm.c: 83: unsigned int tempDub;
  2543                           ;SerComm.c: 85: tempDub = dubs * 100;
  2544                           
  2545                           ;incstack = 0
  2546  001C9C  0E00               	movlw	0
  2547  001C9E  0100               	movlb	0	; () banked
  2548  001CA0  6F8B               	movwf	___ftmul@f2& (0+255),b
  2549  001CA2  0EC8               	movlw	200
  2550  001CA4  0100               	movlb	0	; () banked
  2551  001CA6  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  2552  001CA8  0E42               	movlw	66
  2553  001CAA  0100               	movlb	0	; () banked
  2554  001CAC  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  2555  001CAE  C0A6  F088         	movff	breakDouble@dubs,___ftmul@f1
  2556  001CB2  C0A7  F089         	movff	breakDouble@dubs+1,___ftmul@f1+1
  2557  001CB6  C0A8  F08A         	movff	breakDouble@dubs+2,___ftmul@f1+2
  2558  001CBA  EC12  F00F         	call	___ftmul	;wreg free
  2559  001CBE  C088  F097         	movff	?___ftmul,___fttol@f1
  2560  001CC2  C089  F098         	movff	?___ftmul+1,___fttol@f1+1
  2561  001CC6  C08A  F099         	movff	?___ftmul+2,___fttol@f1+2
  2562  001CCA  EC5F  F010         	call	___fttol	;wreg free
  2563  001CCE  C097  F0A9         	movff	?___fttol,breakDouble@tempDub
  2564  001CD2  C098  F0AA         	movff	?___fttol+1,breakDouble@tempDub+1
  2565                           
  2566                           ;SerComm.c: 86: temp1 = tempDub / 10000;
  2567  001CD6  C0A9  F080         	movff	breakDouble@tempDub,___lwdiv@dividend
  2568  001CDA  C0AA  F081         	movff	breakDouble@tempDub+1,___lwdiv@dividend+1
  2569  001CDE  0E27               	movlw	39
  2570  001CE0  0100               	movlb	0	; () banked
  2571  001CE2  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2572  001CE4  0E10               	movlw	16
  2573  001CE6  6F82               	movwf	___lwdiv@divisor& (0+255),b
  2574  001CE8  EC7C  F013         	call	___lwdiv	;wreg free
  2575  001CEC  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  2576  001CF0  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  2577                           
  2578                           ;SerComm.c: 87: temp2 = tempDub % 10000;
  2579  001CF4  C0A9  F080         	movff	breakDouble@tempDub,___lwmod@dividend
  2580  001CF8  C0AA  F081         	movff	breakDouble@tempDub+1,___lwmod@dividend+1
  2581  001CFC  0E27               	movlw	39
  2582  001CFE  0100               	movlb	0	; () banked
  2583  001D00  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  2584  001D02  0E10               	movlw	16
  2585  001D04  6F82               	movwf	___lwmod@divisor& (0+255),b
  2586  001D06  EC72  F014         	call	___lwmod	;wreg free
  2587  001D0A  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  2588  001D0E  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  2589                           
  2590                           ;SerComm.c: 88: if (temp1 != 0)
  2591  001D12  0100               	movlb	0	; () banked
  2592  001D14  51AB               	movf	breakDouble@temp1& (0+255),w,b
  2593  001D16  0100               	movlb	0	; () banked
  2594  001D18  11AC               	iorwf	(breakDouble@temp1+1)& (0+255),w,b
  2595  001D1A  B4D8               	btfsc	status,2,c
  2596  001D1C  D005               	goto	l49
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;SerComm.c: 89: SerTx(temp1 + 0x30);
  2600  001D1E  0100               	movlb	0	; () banked
  2601  001D20  51AB               	movf	breakDouble@temp1& (0+255),w,b
  2602  001D22  0F30               	addlw	48
  2603  001D24  EC8B  F016         	call	_SerTx
  2604  001D28                     l49:
  2605                           
  2606                           ;SerComm.c: 90: temp1 = temp2 / 1000;
  2607  001D28  C0AD  F080         	movff	breakDouble@temp2,___lwdiv@dividend
  2608  001D2C  C0AE  F081         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  2609  001D30  0E03               	movlw	3
  2610  001D32  0100               	movlb	0	; () banked
  2611  001D34  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2612  001D36  0EE8               	movlw	232
  2613  001D38  6F82               	movwf	___lwdiv@divisor& (0+255),b
  2614  001D3A  EC7C  F013         	call	___lwdiv	;wreg free
  2615  001D3E  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  2616  001D42  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  2617                           
  2618                           ;SerComm.c: 91: temp2 = temp2 % 1000;
  2619  001D46  C0AD  F080         	movff	breakDouble@temp2,___lwmod@dividend
  2620  001D4A  C0AE  F081         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  2621  001D4E  0E03               	movlw	3
  2622  001D50  0100               	movlb	0	; () banked
  2623  001D52  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  2624  001D54  0EE8               	movlw	232
  2625  001D56  6F82               	movwf	___lwmod@divisor& (0+255),b
  2626  001D58  EC72  F014         	call	___lwmod	;wreg free
  2627  001D5C  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  2628  001D60  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  2629                           
  2630                           ;SerComm.c: 92: if (temp1 != 0)
  2631  001D64  0100               	movlb	0	; () banked
  2632  001D66  51AB               	movf	breakDouble@temp1& (0+255),w,b
  2633  001D68  0100               	movlb	0	; () banked
  2634  001D6A  11AC               	iorwf	(breakDouble@temp1+1)& (0+255),w,b
  2635  001D6C  B4D8               	btfsc	status,2,c
  2636  001D6E  D005               	goto	l50
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;SerComm.c: 93: SerTx(temp1 + 0x30);
  2640  001D70  0100               	movlb	0	; () banked
  2641  001D72  51AB               	movf	breakDouble@temp1& (0+255),w,b
  2642  001D74  0F30               	addlw	48
  2643  001D76  EC8B  F016         	call	_SerTx
  2644  001D7A                     l50:
  2645                           
  2646                           ;SerComm.c: 94: temp1 = temp2 / 100;
  2647  001D7A  C0AD  F080         	movff	breakDouble@temp2,___lwdiv@dividend
  2648  001D7E  C0AE  F081         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  2649  001D82  0E00               	movlw	0
  2650  001D84  0100               	movlb	0	; () banked
  2651  001D86  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2652  001D88  0E64               	movlw	100
  2653  001D8A  6F82               	movwf	___lwdiv@divisor& (0+255),b
  2654  001D8C  EC7C  F013         	call	___lwdiv	;wreg free
  2655  001D90  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  2656  001D94  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  2657                           
  2658                           ;SerComm.c: 95: temp2 = temp2 % 100;
  2659  001D98  C0AD  F080         	movff	breakDouble@temp2,___lwmod@dividend
  2660  001D9C  C0AE  F081         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  2661  001DA0  0E00               	movlw	0
  2662  001DA2  0100               	movlb	0	; () banked
  2663  001DA4  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  2664  001DA6  0E64               	movlw	100
  2665  001DA8  6F82               	movwf	___lwmod@divisor& (0+255),b
  2666  001DAA  EC72  F014         	call	___lwmod	;wreg free
  2667  001DAE  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  2668  001DB2  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  2669                           
  2670                           ;SerComm.c: 96: SerTx(temp1 + 0x30);
  2671  001DB6  0100               	movlb	0	; () banked
  2672  001DB8  51AB               	movf	breakDouble@temp1& (0+255),w,b
  2673  001DBA  0F30               	addlw	48
  2674  001DBC  EC8B  F016         	call	_SerTx
  2675                           
  2676                           ;SerComm.c: 97: SerTx('.');
  2677  001DC0  0E2E               	movlw	46
  2678  001DC2  EC8B  F016         	call	_SerTx
  2679                           
  2680                           ;SerComm.c: 98: temp1 = temp2 / 10;
  2681  001DC6  C0AD  F080         	movff	breakDouble@temp2,___lwdiv@dividend
  2682  001DCA  C0AE  F081         	movff	breakDouble@temp2+1,___lwdiv@dividend+1
  2683  001DCE  0E00               	movlw	0
  2684  001DD0  0100               	movlb	0	; () banked
  2685  001DD2  6F83               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2686  001DD4  0E0A               	movlw	10
  2687  001DD6  6F82               	movwf	___lwdiv@divisor& (0+255),b
  2688  001DD8  EC7C  F013         	call	___lwdiv	;wreg free
  2689  001DDC  C080  F0AB         	movff	?___lwdiv,breakDouble@temp1
  2690  001DE0  C081  F0AC         	movff	?___lwdiv+1,breakDouble@temp1+1
  2691                           
  2692                           ;SerComm.c: 99: temp2 = temp2 % 10;
  2693  001DE4  C0AD  F080         	movff	breakDouble@temp2,___lwmod@dividend
  2694  001DE8  C0AE  F081         	movff	breakDouble@temp2+1,___lwmod@dividend+1
  2695  001DEC  0E00               	movlw	0
  2696  001DEE  0100               	movlb	0	; () banked
  2697  001DF0  6F83               	movwf	(___lwmod@divisor+1)& (0+255),b
  2698  001DF2  0E0A               	movlw	10
  2699  001DF4  6F82               	movwf	___lwmod@divisor& (0+255),b
  2700  001DF6  EC72  F014         	call	___lwmod	;wreg free
  2701  001DFA  C080  F0AD         	movff	?___lwmod,breakDouble@temp2
  2702  001DFE  C081  F0AE         	movff	?___lwmod+1,breakDouble@temp2+1
  2703                           
  2704                           ;SerComm.c: 100: SerTx(temp1 + 0x30);
  2705  001E02  0100               	movlb	0	; () banked
  2706  001E04  51AB               	movf	breakDouble@temp1& (0+255),w,b
  2707  001E06  0F30               	addlw	48
  2708  001E08  EC8B  F016         	call	_SerTx
  2709                           
  2710                           ;SerComm.c: 101: SerTx(temp2 + 0x30);
  2711  001E0C  0100               	movlb	0	; () banked
  2712  001E0E  51AD               	movf	breakDouble@temp2& (0+255),w,b
  2713  001E10  0F30               	addlw	48
  2714  001E12  EC8B  F016         	call	_SerTx
  2715                           
  2716                           ;SerComm.c: 102: SerTx(0x0A);
  2717  001E16  0E0A               	movlw	10
  2718  001E18  EC8B  F016         	call	_SerTx
  2719                           
  2720                           ;SerComm.c: 103: SerTx(0x0D);
  2721  001E1C  0E0D               	movlw	13
  2722  001E1E  EC8B  F016         	call	_SerTx
  2723  001E22  0012               	return		;funcret
  2724  001E24                     __end_of_breakDouble:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodh	equ	0xFF4
  2731                           prodl	equ	0xFF3
  2732                           intcon	equ	0xFF2
  2733                           indf0	equ	0xFEF
  2734                           postinc0	equ	0xFEE
  2735                           fsr0h	equ	0xFEA
  2736                           fsr0l	equ	0xFE9
  2737                           wreg	equ	0xFE8
  2738                           indf2	equ	0xFDF
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function ___lwmod *****************
  2744 ;; Defined at:
  2745 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  dividend        2    0[BANK0 ] unsigned int 
  2748 ;;  divisor         2    2[BANK0 ] unsigned int 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  counter         1    4[BANK0 ] unsigned char 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  2    0[BANK0 ] unsigned int 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:        5 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    6
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_breakDouble
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text11
  2775  0028E4                     __ptext11:
  2776                           	opt stack 0
  2777  0028E4                     ___lwmod:
  2778                           	opt stack 22
  2779                           
  2780                           ;incstack = 0
  2781  0028E4  0100               	movlb	0	; () banked
  2782  0028E6  5182               	movf	___lwmod@divisor& (0+255),w,b
  2783  0028E8  0100               	movlb	0	; () banked
  2784  0028EA  1183               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  2785  0028EC  B4D8               	btfsc	status,2,c
  2786  0028EE  D02B               	goto	l973
  2787                           
  2788                           ; BSR set to: 0
  2789  0028F0  0E01               	movlw	1
  2790  0028F2  0100               	movlb	0	; () banked
  2791  0028F4  6F84               	movwf	___lwmod@counter& (0+255),b
  2792  0028F6  D007               	goto	l3514
  2793  0028F8                     l3512:
  2794                           
  2795                           ; BSR set to: 0
  2796  0028F8  0100               	movlb	0	; () banked
  2797  0028FA  90D8               	bcf	status,0,c
  2798  0028FC  3782               	rlcf	___lwmod@divisor& (0+255),f,b
  2799  0028FE  3783               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2800  002900  0100               	movlb	0	; () banked
  2801  002902  2B84               	incf	___lwmod@counter& (0+255),f,b
  2802  002904  D000               	goto	l3514
  2803  002906                     l3514:
  2804                           
  2805                           ; BSR set to: 0
  2806  002906  0100               	movlb	0	; () banked
  2807  002908  BF83               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  2808  00290A  D002               	goto	l3516
  2809  00290C  D7F5               	goto	l3512
  2810                           
  2811                           ; BSR set to: 0
  2812  00290E  D000               	goto	l3516
  2813  002910                     l3516:
  2814                           
  2815                           ; BSR set to: 0
  2816  002910  0100               	movlb	0	; () banked
  2817  002912  5182               	movf	___lwmod@divisor& (0+255),w,b
  2818  002914  0100               	movlb	0	; () banked
  2819  002916  5D80               	subwf	___lwmod@dividend& (0+255),w,b
  2820  002918  0100               	movlb	0	; () banked
  2821  00291A  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2822  00291C  0100               	movlb	0	; () banked
  2823  00291E  5981               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2824  002920  A0D8               	btfss	status,0,c
  2825  002922  D009               	goto	l3520
  2826                           
  2827                           ; BSR set to: 0
  2828  002924  0100               	movlb	0	; () banked
  2829  002926  5182               	movf	___lwmod@divisor& (0+255),w,b
  2830  002928  0100               	movlb	0	; () banked
  2831  00292A  5F80               	subwf	___lwmod@dividend& (0+255),f,b
  2832  00292C  0100               	movlb	0	; () banked
  2833  00292E  5183               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2834  002930  0100               	movlb	0	; () banked
  2835  002932  5B81               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2836  002934  D000               	goto	l3520
  2837  002936                     l3520:
  2838                           
  2839                           ; BSR set to: 0
  2840  002936  0100               	movlb	0	; () banked
  2841  002938  90D8               	bcf	status,0,c
  2842  00293A  3383               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2843  00293C  3382               	rrcf	___lwmod@divisor& (0+255),f,b
  2844                           
  2845                           ; BSR set to: 0
  2846  00293E  0100               	movlb	0	; () banked
  2847  002940  2F84               	decfsz	___lwmod@counter& (0+255),f,b
  2848  002942  D7E6               	goto	l3516
  2849  002944  D000               	goto	l973
  2850  002946                     l973:
  2851                           
  2852                           ; BSR set to: 0
  2853  002946  C080  F080         	movff	___lwmod@dividend,?___lwmod
  2854  00294A  C081  F081         	movff	___lwmod@dividend+1,?___lwmod+1
  2855                           
  2856                           ; BSR set to: 0
  2857  00294E  0012               	return		;funcret
  2858  002950                     __end_of___lwmod:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           prodh	equ	0xFF4
  2865                           prodl	equ	0xFF3
  2866                           intcon	equ	0xFF2
  2867                           indf0	equ	0xFEF
  2868                           postinc0	equ	0xFEE
  2869                           fsr0h	equ	0xFEA
  2870                           fsr0l	equ	0xFE9
  2871                           wreg	equ	0xFE8
  2872                           indf2	equ	0xFDF
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function ___lwdiv *****************
  2878 ;; Defined at:
  2879 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  dividend        2    0[BANK0 ] unsigned int 
  2882 ;;  divisor         2    2[BANK0 ] unsigned int 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  quotient        2    5[BANK0 ] unsigned int 
  2885 ;;  counter         1    4[BANK0 ] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2    0[BANK0 ] unsigned int 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2895 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;Total ram usage:        7 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    6
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_breakDouble
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text12
  2910  0026F8                     __ptext12:
  2911                           	opt stack 0
  2912  0026F8                     ___lwdiv:
  2913                           	opt stack 22
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;incstack = 0
  2917  0026F8  0E00               	movlw	0
  2918  0026FA  0100               	movlb	0	; () banked
  2919  0026FC  6F86               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2920  0026FE  0E00               	movlw	0
  2921  002700  6F85               	movwf	___lwdiv@quotient& (0+255),b
  2922                           
  2923                           ; BSR set to: 0
  2924  002702  0100               	movlb	0	; () banked
  2925  002704  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2926  002706  0100               	movlb	0	; () banked
  2927  002708  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2928  00270A  B4D8               	btfsc	status,2,c
  2929  00270C  D031               	goto	l963
  2930                           
  2931                           ; BSR set to: 0
  2932  00270E  0E01               	movlw	1
  2933  002710  0100               	movlb	0	; () banked
  2934  002712  6F84               	movwf	___lwdiv@counter& (0+255),b
  2935  002714  D007               	goto	l3494
  2936  002716                     l3492:
  2937                           
  2938                           ; BSR set to: 0
  2939  002716  0100               	movlb	0	; () banked
  2940  002718  90D8               	bcf	status,0,c
  2941  00271A  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  2942  00271C  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2943  00271E  0100               	movlb	0	; () banked
  2944  002720  2B84               	incf	___lwdiv@counter& (0+255),f,b
  2945  002722  D000               	goto	l3494
  2946  002724                     l3494:
  2947                           
  2948                           ; BSR set to: 0
  2949  002724  0100               	movlb	0	; () banked
  2950  002726  BF83               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  2951  002728  D002               	goto	l3496
  2952  00272A  D7F5               	goto	l3492
  2953                           
  2954                           ; BSR set to: 0
  2955  00272C  D000               	goto	l3496
  2956  00272E                     l3496:
  2957                           
  2958                           ; BSR set to: 0
  2959  00272E  0100               	movlb	0	; () banked
  2960  002730  90D8               	bcf	status,0,c
  2961  002732  3785               	rlcf	___lwdiv@quotient& (0+255),f,b
  2962  002734  3786               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2963                           
  2964                           ; BSR set to: 0
  2965  002736  0100               	movlb	0	; () banked
  2966  002738  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2967  00273A  0100               	movlb	0	; () banked
  2968  00273C  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  2969  00273E  0100               	movlb	0	; () banked
  2970  002740  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2971  002742  0100               	movlb	0	; () banked
  2972  002744  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2973  002746  A0D8               	btfss	status,0,c
  2974  002748  D00B               	goto	l3504
  2975                           
  2976                           ; BSR set to: 0
  2977  00274A  0100               	movlb	0	; () banked
  2978  00274C  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2979  00274E  0100               	movlb	0	; () banked
  2980  002750  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  2981  002752  0100               	movlb	0	; () banked
  2982  002754  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2983  002756  0100               	movlb	0	; () banked
  2984  002758  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2985                           
  2986                           ; BSR set to: 0
  2987  00275A  0100               	movlb	0	; () banked
  2988  00275C  8185               	bsf	___lwdiv@quotient& (0+255),0,b
  2989  00275E  D000               	goto	l3504
  2990  002760                     l3504:
  2991                           
  2992                           ; BSR set to: 0
  2993  002760  0100               	movlb	0	; () banked
  2994  002762  90D8               	bcf	status,0,c
  2995  002764  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2996  002766  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  2997                           
  2998                           ; BSR set to: 0
  2999  002768  0100               	movlb	0	; () banked
  3000  00276A  2F84               	decfsz	___lwdiv@counter& (0+255),f,b
  3001  00276C  D7E0               	goto	l3496
  3002  00276E  D000               	goto	l963
  3003  002770                     l963:
  3004                           
  3005                           ; BSR set to: 0
  3006  002770  C085  F080         	movff	___lwdiv@quotient,?___lwdiv
  3007  002774  C086  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3008                           
  3009                           ; BSR set to: 0
  3010  002778  0012               	return		;funcret
  3011  00277A                     __end_of___lwdiv:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           intcon	equ	0xFF2
  3020                           indf0	equ	0xFEF
  3021                           postinc0	equ	0xFEE
  3022                           fsr0h	equ	0xFEA
  3023                           fsr0l	equ	0xFE9
  3024                           wreg	equ	0xFE8
  3025                           indf2	equ	0xFDF
  3026                           fsr2h	equ	0xFDA
  3027                           fsr2l	equ	0xFD9
  3028                           status	equ	0xFD8
  3029                           
  3030 ;; *************** function ___fttol *****************
  3031 ;; Defined at:
  3032 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  f1              3   23[BANK0 ] float 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  lval            4   33[BANK0 ] unsigned long 
  3037 ;;  exp1            1   37[BANK0 ] unsigned char 
  3038 ;;  sign1           1   32[BANK0 ] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  4   23[BANK0 ] long 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;Total ram usage:       15 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    6
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_breakDouble
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text13
  3063  0020BE                     __ptext13:
  3064                           	opt stack 0
  3065  0020BE                     ___fttol:
  3066                           	opt stack 22
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;incstack = 0
  3070  0020BE  C099  F09B         	movff	___fttol@f1+2,??___fttol
  3071  0020C2  0100               	movlb	0	; () banked
  3072  0020C4  6B9C               	clrf	(??___fttol+1)& (0+255),b
  3073  0020C6  6B9D               	clrf	(??___fttol+2)& (0+255),b
  3074  0020C8  0100               	movlb	0	; () banked
  3075  0020CA  3598               	rlcf	(___fttol@f1+1)& (0+255),w,b
  3076  0020CC  0100               	movlb	0	; () banked
  3077  0020CE  379B               	rlcf	??___fttol& (0+255),f,b
  3078  0020D0  E301               	bnc	u2891
  3079  0020D2  819C               	bsf	(??___fttol+1)& (0+255),0,b
  3080  0020D4                     u2891:
  3081  0020D4  0100               	movlb	0	; () banked
  3082  0020D6  519B               	movf	??___fttol& (0+255),w,b
  3083  0020D8  0100               	movlb	0	; () banked
  3084  0020DA  6FA5               	movwf	___fttol@exp1& (0+255),b
  3085  0020DC  0100               	movlb	0	; () banked
  3086  0020DE  51A5               	movf	___fttol@exp1& (0+255),w,b
  3087  0020E0  A4D8               	btfss	status,2,c
  3088  0020E2  D002               	goto	l2724
  3089  0020E4  D051               	goto	l2748
  3090                           
  3091                           ; BSR set to: 0
  3092                           
  3093                           ; BSR set to: 0
  3094  0020E6  D083               	goto	l851
  3095  0020E8                     l2724:
  3096                           
  3097                           ; BSR set to: 0
  3098  0020E8  0E17               	movlw	23
  3099  0020EA  0100               	movlb	0	; () banked
  3100  0020EC  6F9B               	movwf	??___fttol& (0+255),b
  3101  0020EE  C097  F09C         	movff	___fttol@f1,??___fttol+1
  3102  0020F2  C098  F09D         	movff	___fttol@f1+1,??___fttol+2
  3103  0020F6  C099  F09E         	movff	___fttol@f1+2,??___fttol+3
  3104  0020FA  0100               	movlb	0	; () banked
  3105  0020FC  299B               	incf	??___fttol& (0+255),w,b
  3106  0020FE  0100               	movlb	0	; () banked
  3107  002100  6F9F               	movwf	(??___fttol+4)& (0+255),b
  3108  002102  D005               	goto	u2910
  3109  002104                     u2915:
  3110  002104  0100               	movlb	0	; () banked
  3111  002106  90D8               	bcf	status,0,c
  3112  002108  339E               	rrcf	(??___fttol+3)& (0+255),f,b
  3113  00210A  339D               	rrcf	(??___fttol+2)& (0+255),f,b
  3114  00210C  339C               	rrcf	(??___fttol+1)& (0+255),f,b
  3115  00210E                     u2910:
  3116  00210E  0100               	movlb	0	; () banked
  3117  002110  2F9F               	decfsz	(??___fttol+4)& (0+255),f,b
  3118  002112  D7F8               	goto	u2915
  3119  002114  0100               	movlb	0	; () banked
  3120  002116  519C               	movf	(??___fttol+1)& (0+255),w,b
  3121  002118  0100               	movlb	0	; () banked
  3122  00211A  6FA0               	movwf	___fttol@sign1& (0+255),b
  3123                           
  3124                           ; BSR set to: 0
  3125  00211C  0100               	movlb	0	; () banked
  3126  00211E  8F98               	bsf	(___fttol@f1+1)& (0+255),7,b
  3127                           
  3128                           ; BSR set to: 0
  3129  002120  0EFF               	movlw	255
  3130  002122  0100               	movlb	0	; () banked
  3131  002124  1797               	andwf	___fttol@f1& (0+255),f,b
  3132  002126  0EFF               	movlw	255
  3133  002128  0100               	movlb	0	; () banked
  3134  00212A  1798               	andwf	(___fttol@f1+1)& (0+255),f,b
  3135  00212C  0E00               	movlw	0
  3136  00212E  0100               	movlb	0	; () banked
  3137  002130  1799               	andwf	(___fttol@f1+2)& (0+255),f,b
  3138                           
  3139                           ; BSR set to: 0
  3140  002132  0100               	movlb	0	; () banked
  3141  002134  5197               	movf	___fttol@f1& (0+255),w,b
  3142  002136  0100               	movlb	0	; () banked
  3143  002138  6FA1               	movwf	___fttol@lval& (0+255),b
  3144  00213A  0100               	movlb	0	; () banked
  3145  00213C  5198               	movf	(___fttol@f1+1)& (0+255),w,b
  3146  00213E  0100               	movlb	0	; () banked
  3147  002140  6FA2               	movwf	(___fttol@lval+1)& (0+255),b
  3148  002142  0100               	movlb	0	; () banked
  3149  002144  5199               	movf	(___fttol@f1+2)& (0+255),w,b
  3150  002146  0100               	movlb	0	; () banked
  3151  002148  6FA3               	movwf	(___fttol@lval+2)& (0+255),b
  3152  00214A  0100               	movlb	0	; () banked
  3153  00214C  6BA4               	clrf	(___fttol@lval+3)& (0+255),b
  3154                           
  3155                           ; BSR set to: 0
  3156  00214E  0E8E               	movlw	142
  3157  002150  0100               	movlb	0	; () banked
  3158  002152  5FA5               	subwf	___fttol@exp1& (0+255),f,b
  3159                           
  3160                           ; BSR set to: 0
  3161  002154  0100               	movlb	0	; () banked
  3162  002156  AFA5               	btfss	___fttol@exp1& (0+255),7,b
  3163  002158  D013               	goto	l2746
  3164                           
  3165                           ; BSR set to: 0
  3166  00215A  0100               	movlb	0	; () banked
  3167  00215C  51A5               	movf	___fttol@exp1& (0+255),w,b
  3168  00215E  0A80               	xorlw	128
  3169  002160  0F8F               	addlw	143
  3170  002162  B0D8               	btfsc	status,0,c
  3171  002164  D003               	goto	l2742
  3172  002166  D010               	goto	l2748
  3173                           
  3174                           ; BSR set to: 0
  3175                           
  3176                           ; BSR set to: 0
  3177  002168  D042               	goto	l851
  3178                           
  3179                           ; BSR set to: 0
  3180  00216A  D000               	goto	l2742
  3181  00216C                     l2742:
  3182                           
  3183                           ; BSR set to: 0
  3184  00216C  0100               	movlb	0	; () banked
  3185  00216E  90D8               	bcf	status,0,c
  3186  002170  33A4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3187  002172  33A3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3188  002174  33A2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3189  002176  33A1               	rrcf	___fttol@lval& (0+255),f,b
  3190                           
  3191                           ; BSR set to: 0
  3192  002178  0100               	movlb	0	; () banked
  3193  00217A  3FA5               	incfsz	___fttol@exp1& (0+255),f,b
  3194  00217C  D7F7               	goto	l2742
  3195                           
  3196                           ; BSR set to: 0
  3197  00217E  D01F               	goto	l2756
  3198  002180                     l2746:
  3199                           
  3200                           ; BSR set to: 0
  3201  002180  0E17               	movlw	23
  3202  002182  0100               	movlb	0	; () banked
  3203  002184  65A5               	cpfsgt	___fttol@exp1& (0+255),b
  3204  002186  D014               	goto	l2754
  3205  002188                     l2748:
  3206                           
  3207                           ; BSR set to: 0
  3208  002188  0E00               	movlw	0
  3209  00218A  0100               	movlb	0	; () banked
  3210  00218C  6F97               	movwf	?___fttol& (0+255),b
  3211  00218E  0E00               	movlw	0
  3212  002190  6F98               	movwf	(?___fttol+1)& (0+255),b
  3213  002192  0E00               	movlw	0
  3214  002194  6F99               	movwf	(?___fttol+2)& (0+255),b
  3215  002196  0E00               	movlw	0
  3216  002198  6F9A               	movwf	(?___fttol+3)& (0+255),b
  3217                           
  3218                           ; BSR set to: 0
  3219  00219A  D029               	goto	l851
  3220                           
  3221                           ; BSR set to: 0
  3222  00219C  D009               	goto	l2754
  3223  00219E                     l2752:
  3224                           
  3225                           ; BSR set to: 0
  3226  00219E  0100               	movlb	0	; () banked
  3227  0021A0  90D8               	bcf	status,0,c
  3228  0021A2  37A1               	rlcf	___fttol@lval& (0+255),f,b
  3229  0021A4  37A2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3230  0021A6  37A3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3231  0021A8  37A4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3232  0021AA  0100               	movlb	0	; () banked
  3233  0021AC  07A5               	decf	___fttol@exp1& (0+255),f,b
  3234  0021AE  D000               	goto	l2754
  3235  0021B0                     l2754:
  3236                           
  3237                           ; BSR set to: 0
  3238  0021B0  0100               	movlb	0	; () banked
  3239  0021B2  51A5               	movf	___fttol@exp1& (0+255),w,b
  3240  0021B4  0100               	movlb	0	; () banked
  3241  0021B6  B4D8               	btfsc	status,2,c
  3242  0021B8  D002               	goto	l2756
  3243  0021BA  D7F1               	goto	l2752
  3244                           
  3245                           ; BSR set to: 0
  3246  0021BC  D000               	goto	l2756
  3247  0021BE                     l2756:
  3248                           
  3249                           ; BSR set to: 0
  3250  0021BE  0100               	movlb	0	; () banked
  3251  0021C0  51A0               	movf	___fttol@sign1& (0+255),w,b
  3252  0021C2  0100               	movlb	0	; () banked
  3253  0021C4  B4D8               	btfsc	status,2,c
  3254  0021C6  D00A               	goto	l2760
  3255                           
  3256                           ; BSR set to: 0
  3257  0021C8  0100               	movlb	0	; () banked
  3258  0021CA  1FA4               	comf	(___fttol@lval+3)& (0+255),f,b
  3259  0021CC  1FA3               	comf	(___fttol@lval+2)& (0+255),f,b
  3260  0021CE  1FA2               	comf	(___fttol@lval+1)& (0+255),f,b
  3261  0021D0  6DA1               	negf	___fttol@lval& (0+255),b
  3262  0021D2  0E00               	movlw	0
  3263  0021D4  23A2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3264  0021D6  23A3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3265  0021D8  23A4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3266  0021DA  D000               	goto	l2760
  3267  0021DC                     l2760:
  3268                           
  3269                           ; BSR set to: 0
  3270  0021DC  C0A1  F097         	movff	___fttol@lval,?___fttol
  3271  0021E0  C0A2  F098         	movff	___fttol@lval+1,?___fttol+1
  3272  0021E4  C0A3  F099         	movff	___fttol@lval+2,?___fttol+2
  3273  0021E8  C0A4  F09A         	movff	___fttol@lval+3,?___fttol+3
  3274  0021EC  D000               	goto	l851
  3275  0021EE                     l851:
  3276                           
  3277                           ; BSR set to: 0
  3278  0021EE  0012               	return		;funcret
  3279  0021F0                     __end_of___fttol:
  3280                           	opt stack 0
  3281                           tblptru	equ	0xFF8
  3282                           tblptrh	equ	0xFF7
  3283                           tblptrl	equ	0xFF6
  3284                           tablat	equ	0xFF5
  3285                           prodh	equ	0xFF4
  3286                           prodl	equ	0xFF3
  3287                           intcon	equ	0xFF2
  3288                           indf0	equ	0xFEF
  3289                           postinc0	equ	0xFEE
  3290                           fsr0h	equ	0xFEA
  3291                           fsr0l	equ	0xFE9
  3292                           wreg	equ	0xFE8
  3293                           indf2	equ	0xFDF
  3294                           fsr2h	equ	0xFDA
  3295                           fsr2l	equ	0xFD9
  3296                           status	equ	0xFD8
  3297                           
  3298 ;; *************** function ___ftmul *****************
  3299 ;; Defined at:
  3300 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  f1              3    8[BANK0 ] float 
  3303 ;;  f2              3   11[BANK0 ] float 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  3306 ;;  sign            1   22[BANK0 ] unsigned char 
  3307 ;;  cntr            1   21[BANK0 ] unsigned char 
  3308 ;;  exp             1   17[BANK0 ] unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  3    8[BANK0 ] float 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3318 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;Total ram usage:       15 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    7
  3325 ;; This function calls:
  3326 ;;		___ftpack
  3327 ;; This function is called by:
  3328 ;;		_breakDouble
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text14
  3333  001E24                     __ptext14:
  3334                           	opt stack 0
  3335  001E24                     ___ftmul:
  3336                           	opt stack 21
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;incstack = 0
  3340  001E24  C08A  F08E         	movff	___ftmul@f1+2,??___ftmul
  3341  001E28  0100               	movlb	0	; () banked
  3342  001E2A  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  3343  001E2C  6B90               	clrf	(??___ftmul+2)& (0+255),b
  3344  001E2E  0100               	movlb	0	; () banked
  3345  001E30  3589               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3346  001E32  0100               	movlb	0	; () banked
  3347  001E34  378E               	rlcf	??___ftmul& (0+255),f,b
  3348  001E36  E301               	bnc	u4151
  3349  001E38  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  3350  001E3A                     u4151:
  3351  001E3A  0100               	movlb	0	; () banked
  3352  001E3C  518E               	movf	??___ftmul& (0+255),w,b
  3353  001E3E  0100               	movlb	0	; () banked
  3354  001E40  6F91               	movwf	___ftmul@exp& (0+255),b
  3355  001E42  0100               	movlb	0	; () banked
  3356  001E44  5191               	movf	___ftmul@exp& (0+255),w,b
  3357  001E46  A4D8               	btfss	status,2,c
  3358  001E48  D002               	goto	l3444
  3359  001E4A  D014               	goto	l3446
  3360                           
  3361                           ; BSR set to: 0
  3362                           
  3363                           ; BSR set to: 0
  3364  001E4C  D098               	goto	l830
  3365  001E4E                     l3444:
  3366                           
  3367                           ; BSR set to: 0
  3368  001E4E  C08D  F08E         	movff	___ftmul@f2+2,??___ftmul
  3369  001E52  0100               	movlb	0	; () banked
  3370  001E54  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  3371  001E56  6B90               	clrf	(??___ftmul+2)& (0+255),b
  3372  001E58  0100               	movlb	0	; () banked
  3373  001E5A  358C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3374  001E5C  0100               	movlb	0	; () banked
  3375  001E5E  378E               	rlcf	??___ftmul& (0+255),f,b
  3376  001E60  E301               	bnc	u4171
  3377  001E62  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  3378  001E64                     u4171:
  3379  001E64  0100               	movlb	0	; () banked
  3380  001E66  518E               	movf	??___ftmul& (0+255),w,b
  3381  001E68  0100               	movlb	0	; () banked
  3382  001E6A  6F96               	movwf	___ftmul@sign& (0+255),b
  3383  001E6C  0100               	movlb	0	; () banked
  3384  001E6E  5196               	movf	___ftmul@sign& (0+255),w,b
  3385  001E70  A4D8               	btfss	status,2,c
  3386  001E72  D00A               	goto	l3450
  3387  001E74                     l3446:
  3388                           
  3389                           ; BSR set to: 0
  3390  001E74  0E00               	movlw	0
  3391  001E76  0100               	movlb	0	; () banked
  3392  001E78  6F88               	movwf	?___ftmul& (0+255),b
  3393  001E7A  0E00               	movlw	0
  3394  001E7C  0100               	movlb	0	; () banked
  3395  001E7E  6F89               	movwf	(?___ftmul+1)& (0+255),b
  3396  001E80  0E00               	movlw	0
  3397  001E82  0100               	movlb	0	; () banked
  3398  001E84  6F8A               	movwf	(?___ftmul+2)& (0+255),b
  3399                           
  3400                           ; BSR set to: 0
  3401  001E86  D07B               	goto	l830
  3402  001E88                     l3450:
  3403                           
  3404                           ; BSR set to: 0
  3405  001E88  0100               	movlb	0	; () banked
  3406  001E8A  5196               	movf	___ftmul@sign& (0+255),w,b
  3407  001E8C  0F7B               	addlw	123
  3408  001E8E  0100               	movlb	0	; () banked
  3409  001E90  2791               	addwf	___ftmul@exp& (0+255),f,b
  3410                           
  3411                           ; BSR set to: 0
  3412  001E92  C08A  F096         	movff	___ftmul@f1+2,___ftmul@sign
  3413  001E96  0100               	movlb	0	; () banked
  3414  001E98  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  3415  001E9A  0100               	movlb	0	; () banked
  3416  001E9C  1B96               	xorwf	___ftmul@sign& (0+255),f,b
  3417  001E9E  0E80               	movlw	128
  3418  001EA0  0100               	movlb	0	; () banked
  3419  001EA2  1796               	andwf	___ftmul@sign& (0+255),f,b
  3420                           
  3421                           ; BSR set to: 0
  3422  001EA4  0100               	movlb	0	; () banked
  3423  001EA6  8F89               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3424                           
  3425                           ; BSR set to: 0
  3426  001EA8  0100               	movlb	0	; () banked
  3427  001EAA  8F8C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3428                           
  3429                           ; BSR set to: 0
  3430  001EAC  0EFF               	movlw	255
  3431  001EAE  0100               	movlb	0	; () banked
  3432  001EB0  178B               	andwf	___ftmul@f2& (0+255),f,b
  3433  001EB2  0EFF               	movlw	255
  3434  001EB4  0100               	movlb	0	; () banked
  3435  001EB6  178C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3436  001EB8  0E00               	movlw	0
  3437  001EBA  0100               	movlb	0	; () banked
  3438  001EBC  178D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3439                           
  3440                           ; BSR set to: 0
  3441  001EBE  0E00               	movlw	0
  3442  001EC0  0100               	movlb	0	; () banked
  3443  001EC2  6F92               	movwf	___ftmul@f3_as_product& (0+255),b
  3444  001EC4  0E00               	movlw	0
  3445  001EC6  0100               	movlb	0	; () banked
  3446  001EC8  6F93               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3447  001ECA  0E00               	movlw	0
  3448  001ECC  0100               	movlb	0	; () banked
  3449  001ECE  6F94               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3450                           
  3451                           ; BSR set to: 0
  3452  001ED0  0E07               	movlw	7
  3453  001ED2  0100               	movlb	0	; () banked
  3454  001ED4  6F95               	movwf	___ftmul@cntr& (0+255),b
  3455  001ED6  D000               	goto	l3464
  3456  001ED8                     l3464:
  3457                           
  3458                           ; BSR set to: 0
  3459  001ED8  0100               	movlb	0	; () banked
  3460  001EDA  A188               	btfss	___ftmul@f1& (0+255),0,b
  3461  001EDC  D00D               	goto	l3468
  3462                           
  3463                           ; BSR set to: 0
  3464  001EDE  0100               	movlb	0	; () banked
  3465  001EE0  518B               	movf	___ftmul@f2& (0+255),w,b
  3466  001EE2  0100               	movlb	0	; () banked
  3467  001EE4  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3468  001EE6  0100               	movlb	0	; () banked
  3469  001EE8  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  3470  001EEA  0100               	movlb	0	; () banked
  3471  001EEC  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3472  001EEE  0100               	movlb	0	; () banked
  3473  001EF0  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  3474  001EF2  0100               	movlb	0	; () banked
  3475  001EF4  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3476  001EF6  D000               	goto	l3468
  3477  001EF8                     l3468:
  3478                           
  3479                           ; BSR set to: 0
  3480  001EF8  0100               	movlb	0	; () banked
  3481  001EFA  90D8               	bcf	status,0,c
  3482  001EFC  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3483  001EFE  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3484  001F00  3388               	rrcf	___ftmul@f1& (0+255),f,b
  3485  001F02  0100               	movlb	0	; () banked
  3486  001F04  90D8               	bcf	status,0,c
  3487  001F06  378B               	rlcf	___ftmul@f2& (0+255),f,b
  3488  001F08  378C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3489  001F0A  378D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3490                           
  3491                           ; BSR set to: 0
  3492  001F0C  0100               	movlb	0	; () banked
  3493  001F0E  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  3494  001F10  D7E3               	goto	l3464
  3495  001F12  D000               	goto	l3472
  3496  001F14                     l3472:
  3497                           
  3498                           ; BSR set to: 0
  3499  001F14  0E09               	movlw	9
  3500  001F16  0100               	movlb	0	; () banked
  3501  001F18  6F95               	movwf	___ftmul@cntr& (0+255),b
  3502  001F1A  D000               	goto	l3474
  3503  001F1C                     l3474:
  3504                           
  3505                           ; BSR set to: 0
  3506  001F1C  0100               	movlb	0	; () banked
  3507  001F1E  A188               	btfss	___ftmul@f1& (0+255),0,b
  3508  001F20  D00D               	goto	l3478
  3509                           
  3510                           ; BSR set to: 0
  3511  001F22  0100               	movlb	0	; () banked
  3512  001F24  518B               	movf	___ftmul@f2& (0+255),w,b
  3513  001F26  0100               	movlb	0	; () banked
  3514  001F28  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3515  001F2A  0100               	movlb	0	; () banked
  3516  001F2C  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  3517  001F2E  0100               	movlb	0	; () banked
  3518  001F30  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3519  001F32  0100               	movlb	0	; () banked
  3520  001F34  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  3521  001F36  0100               	movlb	0	; () banked
  3522  001F38  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3523  001F3A  D000               	goto	l3478
  3524  001F3C                     l3478:
  3525                           
  3526                           ; BSR set to: 0
  3527  001F3C  0100               	movlb	0	; () banked
  3528  001F3E  90D8               	bcf	status,0,c
  3529  001F40  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3530  001F42  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3531  001F44  3388               	rrcf	___ftmul@f1& (0+255),f,b
  3532  001F46  0100               	movlb	0	; () banked
  3533  001F48  90D8               	bcf	status,0,c
  3534  001F4A  3394               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3535  001F4C  3393               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3536  001F4E  3392               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3537                           
  3538                           ; BSR set to: 0
  3539  001F50  0100               	movlb	0	; () banked
  3540  001F52  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  3541  001F54  D7E3               	goto	l3474
  3542  001F56  D000               	goto	l3482
  3543  001F58                     l3482:
  3544                           
  3545                           ; BSR set to: 0
  3546  001F58  C092  F080         	movff	___ftmul@f3_as_product,___ftpack@arg
  3547  001F5C  C093  F081         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3548  001F60  C094  F082         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3549  001F64  C091  F083         	movff	___ftmul@exp,___ftpack@exp
  3550  001F68  C096  F084         	movff	___ftmul@sign,___ftpack@sign
  3551  001F6C  ECF8  F010         	call	___ftpack	;wreg free
  3552  001F70  C080  F088         	movff	?___ftpack,?___ftmul
  3553  001F74  C081  F089         	movff	?___ftpack+1,?___ftmul+1
  3554  001F78  C082  F08A         	movff	?___ftpack+2,?___ftmul+2
  3555  001F7C  D000               	goto	l830
  3556  001F7E                     l830:
  3557  001F7E  0012               	return		;funcret
  3558  001F80                     __end_of___ftmul:
  3559                           	opt stack 0
  3560                           tblptru	equ	0xFF8
  3561                           tblptrh	equ	0xFF7
  3562                           tblptrl	equ	0xFF6
  3563                           tablat	equ	0xFF5
  3564                           prodh	equ	0xFF4
  3565                           prodl	equ	0xFF3
  3566                           intcon	equ	0xFF2
  3567                           indf0	equ	0xFEF
  3568                           postinc0	equ	0xFEE
  3569                           fsr0h	equ	0xFEA
  3570                           fsr0l	equ	0xFE9
  3571                           wreg	equ	0xFE8
  3572                           indf2	equ	0xFDF
  3573                           fsr2h	equ	0xFDA
  3574                           fsr2l	equ	0xFD9
  3575                           status	equ	0xFD8
  3576                           
  3577 ;; *************** function ___ftpack *****************
  3578 ;; Defined at:
  3579 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  arg             3    0[BANK0 ] unsigned um
  3582 ;;  exp             1    3[BANK0 ] unsigned char 
  3583 ;;  sign            1    4[BANK0 ] unsigned char 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  3    0[BANK0 ] float 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3595 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;Total ram usage:        8 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    6
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		___ftmul
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text15
  3610  0021F0                     __ptext15:
  3611                           	opt stack 0
  3612  0021F0                     ___ftpack:
  3613                           	opt stack 21
  3614                           
  3615                           ;incstack = 0
  3616  0021F0  0100               	movlb	0	; () banked
  3617  0021F2  5183               	movf	___ftpack@exp& (0+255),w,b
  3618  0021F4  0100               	movlb	0	; () banked
  3619  0021F6  B4D8               	btfsc	status,2,c
  3620  0021F8  D008               	goto	l3398
  3621                           
  3622                           ; BSR set to: 0
  3623  0021FA  0100               	movlb	0	; () banked
  3624  0021FC  5180               	movf	___ftpack@arg& (0+255),w,b
  3625  0021FE  0100               	movlb	0	; () banked
  3626  002200  1181               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  3627  002202  0100               	movlb	0	; () banked
  3628  002204  1182               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  3629  002206  A4D8               	btfss	status,2,c
  3630  002208  D013               	goto	l3404
  3631  00220A                     l3398:
  3632                           
  3633                           ; BSR set to: 0
  3634  00220A  0E00               	movlw	0
  3635  00220C  0100               	movlb	0	; () banked
  3636  00220E  6F80               	movwf	?___ftpack& (0+255),b
  3637  002210  0E00               	movlw	0
  3638  002212  0100               	movlb	0	; () banked
  3639  002214  6F81               	movwf	(?___ftpack+1)& (0+255),b
  3640  002216  0E00               	movlw	0
  3641  002218  0100               	movlb	0	; () banked
  3642  00221A  6F82               	movwf	(?___ftpack+2)& (0+255),b
  3643                           
  3644                           ; BSR set to: 0
  3645  00221C  D078               	goto	l743
  3646                           
  3647                           ; BSR set to: 0
  3648  00221E  D008               	goto	l3404
  3649  002220                     l3402:
  3650                           
  3651                           ; BSR set to: 0
  3652  002220  0100               	movlb	0	; () banked
  3653  002222  2B83               	incf	___ftpack@exp& (0+255),f,b
  3654  002224  0100               	movlb	0	; () banked
  3655  002226  90D8               	bcf	status,0,c
  3656  002228  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3657  00222A  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3658  00222C  3380               	rrcf	___ftpack@arg& (0+255),f,b
  3659  00222E  D000               	goto	l3404
  3660  002230                     l3404:
  3661                           
  3662                           ; BSR set to: 0
  3663  002230  0E00               	movlw	0
  3664  002232  0100               	movlb	0	; () banked
  3665  002234  1580               	andwf	___ftpack@arg& (0+255),w,b
  3666  002236  0100               	movlb	0	; () banked
  3667  002238  6F85               	movwf	??___ftpack& (0+255),b
  3668  00223A  0E00               	movlw	0
  3669  00223C  0100               	movlb	0	; () banked
  3670  00223E  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3671  002240  0100               	movlb	0	; () banked
  3672  002242  6F86               	movwf	(??___ftpack+1)& (0+255),b
  3673  002244  0EFE               	movlw	254
  3674  002246  0100               	movlb	0	; () banked
  3675  002248  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3676  00224A  0100               	movlb	0	; () banked
  3677  00224C  6F87               	movwf	(??___ftpack+2)& (0+255),b
  3678  00224E  0100               	movlb	0	; () banked
  3679  002250  5185               	movf	??___ftpack& (0+255),w,b
  3680  002252  0100               	movlb	0	; () banked
  3681  002254  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  3682  002256  0100               	movlb	0	; () banked
  3683  002258  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  3684  00225A  B4D8               	btfsc	status,2,c
  3685  00225C  D013               	goto	l3410
  3686  00225E  D7E0               	goto	l3402
  3687                           
  3688                           ; BSR set to: 0
  3689  002260  D011               	goto	l3410
  3690  002262                     l3406:
  3691                           
  3692                           ; BSR set to: 0
  3693  002262  0100               	movlb	0	; () banked
  3694  002264  2B83               	incf	___ftpack@exp& (0+255),f,b
  3695                           
  3696                           ; BSR set to: 0
  3697  002266  0E01               	movlw	1
  3698  002268  0100               	movlb	0	; () banked
  3699  00226A  2780               	addwf	___ftpack@arg& (0+255),f,b
  3700  00226C  0E00               	movlw	0
  3701  00226E  0100               	movlb	0	; () banked
  3702  002270  2381               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3703  002272  0E00               	movlw	0
  3704  002274  0100               	movlb	0	; () banked
  3705  002276  2382               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3706  002278  0100               	movlb	0	; () banked
  3707  00227A  90D8               	bcf	status,0,c
  3708  00227C  3382               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3709  00227E  3381               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3710  002280  3380               	rrcf	___ftpack@arg& (0+255),f,b
  3711  002282  D000               	goto	l3410
  3712  002284                     l3410:
  3713                           
  3714                           ; BSR set to: 0
  3715  002284  0E00               	movlw	0
  3716  002286  0100               	movlb	0	; () banked
  3717  002288  1580               	andwf	___ftpack@arg& (0+255),w,b
  3718  00228A  0100               	movlb	0	; () banked
  3719  00228C  6F85               	movwf	??___ftpack& (0+255),b
  3720  00228E  0E00               	movlw	0
  3721  002290  0100               	movlb	0	; () banked
  3722  002292  1581               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3723  002294  0100               	movlb	0	; () banked
  3724  002296  6F86               	movwf	(??___ftpack+1)& (0+255),b
  3725  002298  0EFF               	movlw	255
  3726  00229A  0100               	movlb	0	; () banked
  3727  00229C  1582               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3728  00229E  0100               	movlb	0	; () banked
  3729  0022A0  6F87               	movwf	(??___ftpack+2)& (0+255),b
  3730  0022A2  0100               	movlb	0	; () banked
  3731  0022A4  5185               	movf	??___ftpack& (0+255),w,b
  3732  0022A6  0100               	movlb	0	; () banked
  3733  0022A8  1186               	iorwf	(??___ftpack+1)& (0+255),w,b
  3734  0022AA  0100               	movlb	0	; () banked
  3735  0022AC  1187               	iorwf	(??___ftpack+2)& (0+255),w,b
  3736  0022AE  B4D8               	btfsc	status,2,c
  3737  0022B0  D00A               	goto	l3414
  3738  0022B2  D7D7               	goto	l3406
  3739                           
  3740                           ; BSR set to: 0
  3741  0022B4  D008               	goto	l3414
  3742  0022B6                     l3412:
  3743                           
  3744                           ; BSR set to: 0
  3745  0022B6  0100               	movlb	0	; () banked
  3746  0022B8  0783               	decf	___ftpack@exp& (0+255),f,b
  3747  0022BA  0100               	movlb	0	; () banked
  3748  0022BC  90D8               	bcf	status,0,c
  3749  0022BE  3780               	rlcf	___ftpack@arg& (0+255),f,b
  3750  0022C0  3781               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3751  0022C2  3782               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3752  0022C4  D000               	goto	l3414
  3753  0022C6                     l3414:
  3754                           
  3755                           ; BSR set to: 0
  3756  0022C6  0100               	movlb	0	; () banked
  3757  0022C8  BF81               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3758  0022CA  D005               	goto	l754
  3759                           
  3760                           ; BSR set to: 0
  3761  0022CC  0E02               	movlw	2
  3762  0022CE  0100               	movlb	0	; () banked
  3763  0022D0  6183               	cpfslt	___ftpack@exp& (0+255),b
  3764  0022D2  D7F1               	goto	l3412
  3765  0022D4  D000               	goto	l754
  3766  0022D6                     l754:
  3767                           
  3768                           ; BSR set to: 0
  3769  0022D6  0100               	movlb	0	; () banked
  3770  0022D8  B183               	btfsc	___ftpack@exp& (0+255),0,b
  3771  0022DA  D003               	goto	l3420
  3772                           
  3773                           ; BSR set to: 0
  3774  0022DC  0100               	movlb	0	; () banked
  3775  0022DE  9F81               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3776  0022E0  D000               	goto	l3420
  3777  0022E2                     l3420:
  3778                           
  3779                           ; BSR set to: 0
  3780  0022E2  0100               	movlb	0	; () banked
  3781  0022E4  90D8               	bcf	status,0,c
  3782  0022E6  3383               	rrcf	___ftpack@exp& (0+255),f,b
  3783  0022E8  0100               	movlb	0	; () banked
  3784  0022EA  5183               	movf	___ftpack@exp& (0+255),w,b
  3785  0022EC  0100               	movlb	0	; () banked
  3786  0022EE  1382               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3787                           
  3788                           ; BSR set to: 0
  3789  0022F0  0100               	movlb	0	; () banked
  3790  0022F2  5184               	movf	___ftpack@sign& (0+255),w,b
  3791  0022F4  0100               	movlb	0	; () banked
  3792  0022F6  B4D8               	btfsc	status,2,c
  3793  0022F8  D003               	goto	l3426
  3794                           
  3795                           ; BSR set to: 0
  3796  0022FA  0100               	movlb	0	; () banked
  3797  0022FC  8F82               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3798  0022FE  D000               	goto	l3426
  3799  002300                     l3426:
  3800                           
  3801                           ; BSR set to: 0
  3802  002300  C080  F080         	movff	___ftpack@arg,?___ftpack
  3803  002304  C081  F081         	movff	___ftpack@arg+1,?___ftpack+1
  3804  002308  C082  F082         	movff	___ftpack@arg+2,?___ftpack+2
  3805  00230C  D000               	goto	l743
  3806  00230E                     l743:
  3807                           
  3808                           ; BSR set to: 0
  3809  00230E  0012               	return		;funcret
  3810  002310                     __end_of___ftpack:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           prodh	equ	0xFF4
  3817                           prodl	equ	0xFF3
  3818                           intcon	equ	0xFF2
  3819                           indf0	equ	0xFEF
  3820                           postinc0	equ	0xFEE
  3821                           fsr0h	equ	0xFEA
  3822                           fsr0l	equ	0xFE9
  3823                           wreg	equ	0xFE8
  3824                           indf2	equ	0xFDF
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function _SerTx *****************
  3830 ;; Defined at:
  3831 ;;		line 41 in file "SerComm.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  c               1    wreg     unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  c               1    0[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;		None               void
  3838 ;; Registers used:
  3839 ;;		wreg
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    6
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_SerTxStr
  3856 ;;		_breakDouble
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text16
  3861  002D16                     __ptext16:
  3862                           	opt stack 0
  3863  002D16                     _SerTx:
  3864                           	opt stack 21
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;incstack = 0
  3868                           ;SerTx@c stored from wreg
  3869  002D16  0100               	movlb	0	; () banked
  3870  002D18  6F80               	movwf	SerTx@c& (0+255),b
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;SerComm.c: 43: TXREG1 = c;
  3874  002D1A  C080  FFAD         	movff	SerTx@c,4013	;volatile
  3875                           
  3876                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  3877  002D1E  D000               	goto	l28
  3878  002D20                     l28:
  3879  002D20  A89E               	btfss	3998,4,c	;volatile
  3880  002D22  D7FE               	goto	l28
  3881  002D24  0012               	return		;funcret
  3882  002D26                     __end_of_SerTx:
  3883                           	opt stack 0
  3884                           tblptru	equ	0xFF8
  3885                           tblptrh	equ	0xFF7
  3886                           tblptrl	equ	0xFF6
  3887                           tablat	equ	0xFF5
  3888                           prodh	equ	0xFF4
  3889                           prodl	equ	0xFF3
  3890                           intcon	equ	0xFF2
  3891                           indf0	equ	0xFEF
  3892                           postinc0	equ	0xFEE
  3893                           fsr0h	equ	0xFEA
  3894                           fsr0l	equ	0xFE9
  3895                           wreg	equ	0xFE8
  3896                           indf2	equ	0xFDF
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           
  3901 ;; *************** function _SPIReassembleDouble *****************
  3902 ;; Defined at:
  3903 ;;		line 174 in file "SPItest-MASTER.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  dub             3    3[BANK0 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  3    0[BANK0 ] unsigned char 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3917 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;Total ram usage:        6 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    6
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;;		_MReceiveStrSPI
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text17
  3933  002B54                     __ptext17:
  3934                           	opt stack 0
  3935  002B54                     _SPIReassembleDouble:
  3936                           	opt stack 24
  3937                           
  3938                           ;SPItest-MASTER.c: 176: double dub;
  3939                           ;SPItest-MASTER.c: 177: DoublePtr = (unsigned char*) &dub;
  3940                           
  3941                           ;incstack = 0
  3942  002B54  0E83               	movlw	low SPIReassembleDouble@dub
  3943  002B56  6E4B               	movwf	_DoublePtr,c
  3944  002B58  0E00               	movlw	high SPIReassembleDouble@dub
  3945  002B5A  6E4C               	movwf	_DoublePtr+1,c
  3946                           
  3947                           ;SPItest-MASTER.c: 178: DoublePtr[0] = DoubleSPIM[0];
  3948  002B5C  C04B  FFD9         	movff	_DoublePtr,fsr2l
  3949  002B60  C04C  FFDA         	movff	_DoublePtr+1,fsr2h
  3950  002B64  C0C0  FFDF         	movff	_DoubleSPIM,indf2
  3951                           
  3952                           ;SPItest-MASTER.c: 179: DoublePtr[1] = DoubleSPIM[1];
  3953  002B68  EE20 F001          	lfsr	2,1
  3954  002B6C  504B               	movf	_DoublePtr,w,c
  3955  002B6E  26D9               	addwf	fsr2l,f,c
  3956  002B70  504C               	movf	_DoublePtr+1,w,c
  3957  002B72  22DA               	addwfc	fsr2h,f,c
  3958  002B74  C0C1  FFDF         	movff	_DoubleSPIM+1,indf2
  3959                           
  3960                           ;SPItest-MASTER.c: 180: DoublePtr[2] = DoubleSPIM[2];
  3961  002B78  EE20 F002          	lfsr	2,2
  3962  002B7C  504B               	movf	_DoublePtr,w,c
  3963  002B7E  26D9               	addwf	fsr2l,f,c
  3964  002B80  504C               	movf	_DoublePtr+1,w,c
  3965  002B82  22DA               	addwfc	fsr2h,f,c
  3966  002B84  C0C2  FFDF         	movff	_DoubleSPIM+2,indf2
  3967                           
  3968                           ;SPItest-MASTER.c: 181: return dub;
  3969  002B88  C083  F080         	movff	SPIReassembleDouble@dub,?_SPIReassembleDouble
  3970  002B8C  C084  F081         	movff	SPIReassembleDouble@dub+1,?_SPIReassembleDouble+1
  3971  002B90  C085  F082         	movff	SPIReassembleDouble@dub+2,?_SPIReassembleDouble+2
  3972  002B94  D000               	goto	l185
  3973  002B96                     l185:
  3974  002B96  0012               	return		;funcret
  3975  002B98                     __end_of_SPIReassembleDouble:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           indf0	equ	0xFEF
  3985                           postinc0	equ	0xFEE
  3986                           fsr0h	equ	0xFEA
  3987                           fsr0l	equ	0xFE9
  3988                           wreg	equ	0xFE8
  3989                           indf2	equ	0xFDF
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _MReceiveSPI *****************
  3995 ;; Defined at:
  3996 ;;		line 138 in file "SPItest-MASTER.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  tempCH          1    0[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      unsigned char 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:        1 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    6
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_MReceiveStrSPI
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text18
  4025  002CEA                     __ptext18:
  4026                           	opt stack 0
  4027  002CEA                     _MReceiveSPI:
  4028                           	opt stack 23
  4029                           
  4030                           ;SPItest-MASTER.c: 140: unsigned char tempCH;
  4031                           ;SPItest-MASTER.c: 141: tempCH = SSPBUF;
  4032                           
  4033                           ;incstack = 0
  4034  002CEA  CFC9 F080          	movff	4041,MReceiveSPI@tempCH	;volatile
  4035                           
  4036                           ;SPItest-MASTER.c: 142: PIR1bits.SSPIF = 0;
  4037  002CEE  969E               	bcf	3998,3,c	;volatile
  4038                           
  4039                           ;SPItest-MASTER.c: 143: SSPBUF = 0x00;
  4040  002CF0  0E00               	movlw	0
  4041  002CF2  6EC9               	movwf	4041,c	;volatile
  4042                           
  4043                           ;SPItest-MASTER.c: 144: while (!PIR1bits.SSPIF);
  4044  002CF4  D000               	goto	l163
  4045  002CF6                     l163:
  4046  002CF6  A69E               	btfss	3998,3,c	;volatile
  4047  002CF8  D7FE               	goto	l163
  4048                           
  4049                           ;SPItest-MASTER.c: 145: return SSPBUF;
  4050  002CFA  50C9               	movf	4041,w,c	;volatile
  4051  002CFC  D000               	goto	l166
  4052  002CFE                     l166:
  4053  002CFE  0012               	return		;funcret
  4054  002D00                     __end_of_MReceiveSPI:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           indf0	equ	0xFEF
  4064                           postinc0	equ	0xFEE
  4065                           fsr0h	equ	0xFEA
  4066                           fsr0l	equ	0xFE9
  4067                           wreg	equ	0xFE8
  4068                           indf2	equ	0xFDF
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _Delay10TCYx *****************
  4074 ;; Defined at:
  4075 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  unit            1    wreg     unsigned char 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  unit            1    0[BANK0 ] unsigned char 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;		None               void
  4082 ;; Registers used:
  4083 ;;		wreg
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;Total ram usage:        1 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    6
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_main
  4100 ;;		_MSendSPI
  4101 ;;		_MReceiveStrSPI
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text19
  4106  002D00                     __ptext19:
  4107                           	opt stack 0
  4108  002D00                     _Delay10TCYx:
  4109                           	opt stack 23
  4110                           
  4111                           ;incstack = 0
  4112                           ;Delay10TCYx@unit stored from wreg
  4113  002D00  0100               	movlb	0	; () banked
  4114  002D02  6F80               	movwf	Delay10TCYx@unit& (0+255),b
  4115  002D04                     
  4116                           ; BSR set to: 0
  4117  002D04  0E03               	movlw	3
  4118  002D06                     u4737:
  4119  002D06  2EE8               	decfsz	wreg,f,c
  4120  002D08  D7FE               	goto	u4737
  4121  002D0A  F000               	nop	
  4122  002D0C  0100               	movlb	0	; () banked
  4123  002D0E  2F80               	decfsz	Delay10TCYx@unit& (0+255),f,b
  4124  002D10  D7F9               	goto	l3566
  4125  002D12  D000               	goto	l653
  4126  002D14                     l653:
  4127                           
  4128                           ; BSR set to: 0
  4129  002D14  0012               	return		;funcret
  4130  002D16                     __end_of_Delay10TCYx:
  4131                           	opt stack 0
  4132                           tblptru	equ	0xFF8
  4133                           tblptrh	equ	0xFF7
  4134                           tblptrl	equ	0xFF6
  4135                           tablat	equ	0xFF5
  4136                           prodh	equ	0xFF4
  4137                           prodl	equ	0xFF3
  4138                           intcon	equ	0xFF2
  4139                           indf0	equ	0xFEF
  4140                           postinc0	equ	0xFEE
  4141                           fsr0h	equ	0xFEA
  4142                           fsr0l	equ	0xFE9
  4143                           wreg	equ	0xFE8
  4144                           indf2	equ	0xFDF
  4145                           fsr2h	equ	0xFDA
  4146                           fsr2l	equ	0xFD9
  4147                           status	equ	0xFD8
  4148                           
  4149 ;; *************** function _ISR *****************
  4150 ;; Defined at:
  4151 ;;		line 107 in file "SPItest-MASTER.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;		None               void
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;Total ram usage:       14 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    5
  4172 ;; This function calls:
  4173 ;;		_RCInt
  4174 ;; This function is called by:
  4175 ;;		Interrupt level 2
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	intcode
  4180  000008                     __pintcode:
  4181                           	opt stack 0
  4182  000008                     _ISR:
  4183                           	opt stack 21
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;incstack = 0
  4187  000008  CFFA F031          	movff	pclath,??_ISR
  4188  00000C  CFFB F032          	movff	pclatu,??_ISR+1
  4189  000010  CFE9 F033          	movff	fsr0l,??_ISR+2
  4190  000014  ED39  F014         	call	int_func,f	;refresh shadow registers
  4191                           pclatu	equ	0xFFB
  4192                           pclath	equ	0xFFA
  4193                           tblptru	equ	0xFF8
  4194                           tblptrh	equ	0xFF7
  4195                           tblptrl	equ	0xFF6
  4196                           tablat	equ	0xFF5
  4197                           prodh	equ	0xFF4
  4198                           prodl	equ	0xFF3
  4199                           intcon	equ	0xFF2
  4200                           indf0	equ	0xFEF
  4201                           postinc0	equ	0xFEE
  4202                           fsr0h	equ	0xFEA
  4203                           fsr0l	equ	0xFE9
  4204                           wreg	equ	0xFE8
  4205                           indf2	equ	0xFDF
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210                           	psect	intcode_body
  4211  002872                     __pintcode_body:
  4212                           	opt stack 21
  4213  002872                     int_func:
  4214                           	opt stack 21
  4215  002872  0006               	pop		; remove dummy address from shadow register refresh
  4216  002874  CFEA F034          	movff	fsr0h,??_ISR+3
  4217  002878  CFE1 F035          	movff	fsr1l,??_ISR+4
  4218  00287C  CFE2 F036          	movff	fsr1h,??_ISR+5
  4219  002880  CFD9 F037          	movff	fsr2l,??_ISR+6
  4220  002884  CFDA F038          	movff	fsr2h,??_ISR+7
  4221  002888  CFF3 F039          	movff	prodl,??_ISR+8
  4222  00288C  CFF4 F03A          	movff	prodh,??_ISR+9
  4223  002890  CFF6 F03B          	movff	tblptrl,??_ISR+10
  4224  002894  CFF7 F03C          	movff	tblptrh,??_ISR+11
  4225  002898  CFF8 F03D          	movff	tblptru,??_ISR+12
  4226  00289C  CFF5 F03E          	movff	tablat,??_ISR+13
  4227                           
  4228                           ;SPItest-MASTER.c: 109: if (PIR1bits.RCIF == 1)
  4229  0028A0  AA9E               	btfss	3998,5,c	;volatile
  4230  0028A2  D003               	goto	i2l151
  4231                           
  4232                           ;SPItest-MASTER.c: 110: {
  4233                           ;SPItest-MASTER.c: 111: RCInt();
  4234  0028A4  ECC0  F00F         	call	_RCInt	;wreg free
  4235  0028A8  D000               	goto	i2l151
  4236  0028AA                     i2l151:
  4237  0028AA  C03E  FFF5         	movff	??_ISR+13,tablat
  4238  0028AE  C03D  FFF8         	movff	??_ISR+12,tblptru
  4239  0028B2  C03C  FFF7         	movff	??_ISR+11,tblptrh
  4240  0028B6  C03B  FFF6         	movff	??_ISR+10,tblptrl
  4241  0028BA  C03A  FFF4         	movff	??_ISR+9,prodh
  4242  0028BE  C039  FFF3         	movff	??_ISR+8,prodl
  4243  0028C2  C038  FFDA         	movff	??_ISR+7,fsr2h
  4244  0028C6  C037  FFD9         	movff	??_ISR+6,fsr2l
  4245  0028CA  C036  FFE2         	movff	??_ISR+5,fsr1h
  4246  0028CE  C035  FFE1         	movff	??_ISR+4,fsr1l
  4247  0028D2  C034  FFEA         	movff	??_ISR+3,fsr0h
  4248  0028D6  C033  FFE9         	movff	??_ISR+2,fsr0l
  4249  0028DA  C032  FFFB         	movff	??_ISR+1,pclatu
  4250  0028DE  C031  FFFA         	movff	??_ISR,pclath
  4251  0028E2  0011               	retfie		f
  4252  0028E4                     __end_of_ISR:
  4253                           	opt stack 0
  4254                           pclatu	equ	0xFFB
  4255                           pclath	equ	0xFFA
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           prodh	equ	0xFF4
  4261                           prodl	equ	0xFF3
  4262                           intcon	equ	0xFF2
  4263                           indf0	equ	0xFEF
  4264                           postinc0	equ	0xFEE
  4265                           fsr0h	equ	0xFEA
  4266                           fsr0l	equ	0xFE9
  4267                           wreg	equ	0xFE8
  4268                           fsr1h	equ	0xFE2
  4269                           fsr1l	equ	0xFE1
  4270                           indf2	equ	0xFDF
  4271                           fsr2h	equ	0xFDA
  4272                           fsr2l	equ	0xFD9
  4273                           status	equ	0xFD8
  4274                           
  4275 ;; *************** function _RCInt *****************
  4276 ;; Defined at:
  4277 ;;		line 19 in file "KeyValue.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  counter         1   47[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;		None               void
  4284 ;; Registers used:
  4285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;Total ram usage:        2 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    4
  4298 ;; This function calls:
  4299 ;;		_keyValue
  4300 ;;		i2_SerTx
  4301 ;; This function is called by:
  4302 ;;		_ISR
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text21
  4307  001F80                     __ptext21:
  4308                           	opt stack 0
  4309  001F80                     _RCInt:
  4310                           	opt stack 21
  4311                           
  4312                           ;KeyValue.c: 21: unsigned char counter = 0;
  4313                           
  4314                           ;incstack = 0
  4315  001F80  0E00               	movlw	0
  4316  001F82  6E30               	movwf	RCInt@counter,c
  4317                           
  4318                           ;KeyValue.c: 23: {
  4319                           ;KeyValue.c: 24: while (PIR1bits.RCIF == 0);
  4320                           
  4321                           ;KeyValue.c: 22: do
  4322  001F84  D000               	goto	i2l246
  4323  001F86                     i2l246:
  4324  001F86  AA9E               	btfss	3998,5,c	;volatile
  4325  001F88  D7FE               	goto	i2l246
  4326                           
  4327                           ;KeyValue.c: 25: received[counter] = RCREG;
  4328  001F8A  5030               	movf	RCInt@counter,w,c
  4329  001F8C  0D01               	mullw	1
  4330  001F8E  0E4E               	movlw	low _received
  4331  001F90  24F3               	addwf	prodl,w,c
  4332  001F92  6ED9               	movwf	fsr2l,c
  4333  001F94  0E00               	movlw	high _received
  4334  001F96  20F4               	addwfc	prodh,w,c
  4335  001F98  6EDA               	movwf	fsr2h,c
  4336  001F9A  CFAE FFDF          	movff	4014,indf2	;volatile
  4337                           
  4338                           ;KeyValue.c: 26: SerTx(RCREG);
  4339  001F9E  50AE               	movf	4014,w,c	;volatile
  4340  001FA0  EC93  F016         	call	i2_SerTx
  4341                           
  4342                           ;KeyValue.c: 27: if ((received[counter] == 0x08) || received[counter] == 0x7F)
  4343  001FA4  5030               	movf	RCInt@counter,w,c
  4344  001FA6  0D01               	mullw	1
  4345  001FA8  0E4E               	movlw	low _received
  4346  001FAA  24F3               	addwf	prodl,w,c
  4347  001FAC  6ED9               	movwf	fsr2l,c
  4348  001FAE  0E00               	movlw	high _received
  4349  001FB0  20F4               	addwfc	prodh,w,c
  4350  001FB2  6EDA               	movwf	fsr2h,c
  4351  001FB4  0E08               	movlw	8
  4352  001FB6  18DE               	xorwf	postinc2,w,c
  4353  001FB8  B4D8               	btfsc	status,2,c
  4354  001FBA  D00C               	goto	i2l3200
  4355  001FBC  5030               	movf	RCInt@counter,w,c
  4356  001FBE  0D01               	mullw	1
  4357  001FC0  0E4E               	movlw	low _received
  4358  001FC2  24F3               	addwf	prodl,w,c
  4359  001FC4  6ED9               	movwf	fsr2l,c
  4360  001FC6  0E00               	movlw	high _received
  4361  001FC8  20F4               	addwfc	prodh,w,c
  4362  001FCA  6EDA               	movwf	fsr2h,c
  4363  001FCC  0E7F               	movlw	127
  4364  001FCE  18DE               	xorwf	postinc2,w,c
  4365  001FD0  A4D8               	btfss	status,2,c
  4366  001FD2  D010               	goto	i2l3206
  4367  001FD4                     i2l3200:
  4368                           
  4369                           ;KeyValue.c: 28: {
  4370                           ;KeyValue.c: 29: if (counter != 0)
  4371  001FD4  5030               	movf	RCInt@counter,w,c
  4372  001FD6  B4D8               	btfsc	status,2,c
  4373  001FD8  D002               	goto	i2l3204
  4374                           
  4375                           ;KeyValue.c: 30: counter--;
  4376  001FDA  0630               	decf	RCInt@counter,f,c
  4377  001FDC  D000               	goto	i2l3204
  4378  001FDE                     i2l3204:
  4379                           
  4380                           ;KeyValue.c: 31: received[counter] = '\0';
  4381  001FDE  5030               	movf	RCInt@counter,w,c
  4382  001FE0  0D01               	mullw	1
  4383  001FE2  0E4E               	movlw	low _received
  4384  001FE4  24F3               	addwf	prodl,w,c
  4385  001FE6  6ED9               	movwf	fsr2l,c
  4386  001FE8  0E00               	movlw	high _received
  4387  001FEA  20F4               	addwfc	prodh,w,c
  4388  001FEC  6EDA               	movwf	fsr2h,c
  4389  001FEE  0E00               	movlw	0
  4390  001FF0  6EDF               	movwf	indf2,c
  4391                           
  4392                           ;KeyValue.c: 32: }
  4393  001FF2  D01A               	goto	i2l3212
  4394  001FF4                     i2l3206:
  4395                           
  4396                           ;KeyValue.c: 33: else if ((received[counter] != 0x08) && (received[counter] != 0x0D))
  4397  001FF4  5030               	movf	RCInt@counter,w,c
  4398  001FF6  0D01               	mullw	1
  4399  001FF8  0E4E               	movlw	low _received
  4400  001FFA  24F3               	addwf	prodl,w,c
  4401  001FFC  6ED9               	movwf	fsr2l,c
  4402  001FFE  0E00               	movlw	high _received
  4403  002000  20F4               	addwfc	prodh,w,c
  4404  002002  6EDA               	movwf	fsr2h,c
  4405  002004  0E08               	movlw	8
  4406  002006  18DE               	xorwf	postinc2,w,c
  4407  002008  B4D8               	btfsc	status,2,c
  4408  00200A  D00E               	goto	i2l3212
  4409  00200C  5030               	movf	RCInt@counter,w,c
  4410  00200E  0D01               	mullw	1
  4411  002010  0E4E               	movlw	low _received
  4412  002012  24F3               	addwf	prodl,w,c
  4413  002014  6ED9               	movwf	fsr2l,c
  4414  002016  0E00               	movlw	high _received
  4415  002018  20F4               	addwfc	prodh,w,c
  4416  00201A  6EDA               	movwf	fsr2h,c
  4417  00201C  0E0D               	movlw	13
  4418  00201E  18DE               	xorwf	postinc2,w,c
  4419  002020  B4D8               	btfsc	status,2,c
  4420  002022  D002               	goto	i2l3212
  4421                           
  4422                           ;KeyValue.c: 34: counter++;
  4423  002024  2A30               	incf	RCInt@counter,f,c
  4424  002026  D000               	goto	i2l3212
  4425  002028                     i2l3212:
  4426                           
  4427                           ;KeyValue.c: 35: }
  4428                           ;KeyValue.c: 36: while (RCREG != 0x0D);
  4429  002028  0E0D               	movlw	13
  4430  00202A  18AE               	xorwf	4014,w,c	;volatile
  4431  00202C  A4D8               	btfss	status,2,c
  4432  00202E  D7AB               	goto	i2l246
  4433                           
  4434                           ;KeyValue.c: 38: SerTx(0x0A);
  4435  002030  0E0A               	movlw	10
  4436  002032  EC93  F016         	call	i2_SerTx
  4437                           
  4438                           ;KeyValue.c: 39: SerTx(0x0D);
  4439  002036  0E0D               	movlw	13
  4440  002038  EC93  F016         	call	i2_SerTx
  4441                           
  4442                           ;KeyValue.c: 40: keyValue(received, 30);
  4443  00203C  0E4E               	movlw	low _received
  4444  00203E  6E24               	movwf	keyValue@str,c
  4445  002040  0E00               	movlw	high _received
  4446  002042  6E25               	movwf	keyValue@str+1,c
  4447  002044  0E00               	movlw	0
  4448  002046  6E27               	movwf	keyValue@length+1,c
  4449  002048  0E1E               	movlw	30
  4450  00204A  6E26               	movwf	keyValue@length,c
  4451  00204C  EC32  F008         	call	_keyValue	;wreg free
  4452                           
  4453                           ;KeyValue.c: 41: SerTx(0x0A);
  4454  002050  0E0A               	movlw	10
  4455  002052  EC93  F016         	call	i2_SerTx
  4456                           
  4457                           ;KeyValue.c: 42: SerTx(0x0D);
  4458  002056  0E0D               	movlw	13
  4459  002058  EC93  F016         	call	i2_SerTx
  4460                           
  4461                           ;KeyValue.c: 44: if (StrippedKey == 0x01)
  4462  00205C  0100               	movlb	0	; () banked
  4463  00205E  05BF               	decf	_StrippedKey& (0+255),w,b
  4464  002060  A4D8               	btfss	status,2,c
  4465  002062  D007               	goto	i2l3226
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;KeyValue.c: 45: {
  4469                           ;KeyValue.c: 46: SetAngle = StrippedValue;
  4470  002064  C0BB  F048         	movff	_StrippedValue,_SetAngle
  4471  002068  C0BC  F049         	movff	_StrippedValue+1,_SetAngle+1
  4472  00206C  C0BD  F04A         	movff	_StrippedValue+2,_SetAngle+2
  4473                           
  4474                           ;KeyValue.c: 47: }
  4475  002070  D024               	goto	i2l257
  4476  002072                     i2l3226:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;KeyValue.c: 49: else if (StrippedKey == 0x05)
  4480  002072  0E05               	movlw	5
  4481  002074  0100               	movlb	0	; () banked
  4482  002076  19BF               	xorwf	_StrippedKey& (0+255),w,b
  4483  002078  A4D8               	btfss	status,2,c
  4484  00207A  D007               	goto	i2l3230
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;KeyValue.c: 50: {
  4488                           ;KeyValue.c: 51: Kp = StrippedValue;
  4489  00207C  C0BB  F045         	movff	_StrippedValue,_Kp
  4490  002080  C0BC  F046         	movff	_StrippedValue+1,_Kp+1
  4491  002084  C0BD  F047         	movff	_StrippedValue+2,_Kp+2
  4492                           
  4493                           ;KeyValue.c: 52: }
  4494  002088  D018               	goto	i2l257
  4495  00208A                     i2l3230:
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;KeyValue.c: 54: else if (StrippedKey == 0x07)
  4499  00208A  0E07               	movlw	7
  4500  00208C  0100               	movlb	0	; () banked
  4501  00208E  19BF               	xorwf	_StrippedKey& (0+255),w,b
  4502  002090  A4D8               	btfss	status,2,c
  4503  002092  D007               	goto	i2l3234
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;KeyValue.c: 55: {
  4507                           ;KeyValue.c: 56: Ki = StrippedValue;
  4508  002094  C0BB  F042         	movff	_StrippedValue,_Ki
  4509  002098  C0BC  F043         	movff	_StrippedValue+1,_Ki+1
  4510  00209C  C0BD  F044         	movff	_StrippedValue+2,_Ki+2
  4511                           
  4512                           ;KeyValue.c: 57: }
  4513  0020A0  D00C               	goto	i2l257
  4514  0020A2                     i2l3234:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;KeyValue.c: 59: else if (StrippedKey == 0x09)
  4518  0020A2  0E09               	movlw	9
  4519  0020A4  0100               	movlb	0	; () banked
  4520  0020A6  19BF               	xorwf	_StrippedKey& (0+255),w,b
  4521  0020A8  A4D8               	btfss	status,2,c
  4522  0020AA  D007               	goto	i2l257
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;KeyValue.c: 60: {
  4526                           ;KeyValue.c: 61: Kd = StrippedValue;
  4527  0020AC  C0BB  F03F         	movff	_StrippedValue,_Kd
  4528  0020B0  C0BC  F040         	movff	_StrippedValue+1,_Kd+1
  4529  0020B4  C0BD  F041         	movff	_StrippedValue+2,_Kd+2
  4530                           
  4531                           ; BSR set to: 0
  4532                           
  4533                           ; BSR set to: 0
  4534  0020B8  D000               	goto	i2l257
  4535  0020BA                     i2l257:
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;KeyValue.c: 62: }
  4539                           ;KeyValue.c: 64: PIR1bits.RCIF = 0;
  4540  0020BA  9A9E               	bcf	3998,5,c	;volatile
  4541                           
  4542                           ; BSR set to: 0
  4543  0020BC  0012               	return		;funcret
  4544  0020BE                     __end_of_RCInt:
  4545                           	opt stack 0
  4546                           pclatu	equ	0xFFB
  4547                           pclath	equ	0xFFA
  4548                           tblptru	equ	0xFF8
  4549                           tblptrh	equ	0xFF7
  4550                           tblptrl	equ	0xFF6
  4551                           tablat	equ	0xFF5
  4552                           prodh	equ	0xFF4
  4553                           prodl	equ	0xFF3
  4554                           intcon	equ	0xFF2
  4555                           indf0	equ	0xFEF
  4556                           postinc0	equ	0xFEE
  4557                           fsr0h	equ	0xFEA
  4558                           fsr0l	equ	0xFE9
  4559                           wreg	equ	0xFE8
  4560                           fsr1h	equ	0xFE2
  4561                           fsr1l	equ	0xFE1
  4562                           indf2	equ	0xFDF
  4563                           postinc2	equ	0xFDE
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function _keyValue *****************
  4569 ;; Defined at:
  4570 ;;		line 67 in file "KeyValue.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  str             2   35[COMRAM] PTR unsigned char 
  4573 ;;		 -> received(30), 
  4574 ;;  length          2   37[COMRAM] unsigned short 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  str_end         2   41[COMRAM] PTR unsigned char 
  4577 ;;		 -> value(10), 
  4578 ;;  x               1   45[COMRAM] unsigned char 
  4579 ;;  y               1   44[COMRAM] unsigned char 
  4580 ;;  flag            1   43[COMRAM] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:       11 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    3
  4597 ;; This function calls:
  4598 ;;		_isspace
  4599 ;;		_strcmp
  4600 ;;		_strtod
  4601 ;;		i2_SerTx
  4602 ;;		i2_SerTxStr
  4603 ;; This function is called by:
  4604 ;;		_RCInt
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text22
  4609  001064                     __ptext22:
  4610                           	opt stack 0
  4611  001064                     _keyValue:
  4612                           	opt stack 21
  4613                           
  4614                           ;KeyValue.c: 69: unsigned char x = 0;
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;incstack = 0
  4618  001064  0E00               	movlw	0
  4619  001066  6E2E               	movwf	keyValue@x,c
  4620                           
  4621                           ;KeyValue.c: 70: unsigned char y = 0;
  4622  001068  0E00               	movlw	0
  4623  00106A  6E2D               	movwf	keyValue@y,c
  4624  00106C  D00F               	goto	i2l2906
  4625  00106E                     i2l2900:
  4626                           
  4627                           ;KeyValue.c: 75: {
  4628                           ;KeyValue.c: 76: x++;
  4629  00106E  2A2E               	incf	keyValue@x,f,c
  4630                           
  4631                           ;KeyValue.c: 77: if (str[x] == '=')
  4632  001070  502E               	movf	keyValue@x,w,c
  4633  001072  0D01               	mullw	1
  4634  001074  50F3               	movf	prodl,w,c
  4635  001076  2424               	addwf	keyValue@str,w,c
  4636  001078  6ED9               	movwf	fsr2l,c
  4637  00107A  50F4               	movf	prodh,w,c
  4638  00107C  2025               	addwfc	keyValue@str+1,w,c
  4639  00107E  6EDA               	movwf	fsr2h,c
  4640  001080  0E3D               	movlw	61
  4641  001082  18DE               	xorwf	postinc2,w,c
  4642  001084  A4D8               	btfss	status,2,c
  4643  001086  D002               	goto	i2l2906
  4644                           
  4645                           ;KeyValue.c: 78: {
  4646                           ;KeyValue.c: 79: flag = 1;
  4647  001088  0E01               	movlw	1
  4648  00108A  D001               	goto	L2
  4649  00108C                     i2l2906:
  4650                           
  4651                           ;KeyValue.c: 81: else
  4652                           ;KeyValue.c: 82: flag = 0;
  4653  00108C  0E00               	movlw	0
  4654  00108E                     L2:
  4655  00108E  6E2C               	movwf	keyValue@flag,c
  4656  001090  D000               	goto	i2l2908
  4657  001092                     i2l2908:
  4658  001092  502E               	movf	keyValue@x,w,c
  4659  001094  0D01               	mullw	1
  4660  001096  50F3               	movf	prodl,w,c
  4661  001098  2424               	addwf	keyValue@str,w,c
  4662  00109A  6ED9               	movwf	fsr2l,c
  4663  00109C  50F4               	movf	prodh,w,c
  4664  00109E  2025               	addwfc	keyValue@str+1,w,c
  4665  0010A0  6EDA               	movwf	fsr2h,c
  4666  0010A2  0E3D               	movlw	61
  4667  0010A4  18DE               	xorwf	postinc2,w,c
  4668  0010A6  B4D8               	btfsc	status,2,c
  4669  0010A8  D00B               	goto	i2l2912
  4670  0010AA  502E               	movf	keyValue@x,w,c
  4671  0010AC  6E28               	movwf	??_keyValue& (0+255),c
  4672  0010AE  6A29               	clrf	(??_keyValue+1)& (0+255),c
  4673  0010B0  5026               	movf	keyValue@length,w,c
  4674  0010B2  5C28               	subwf	??_keyValue,w,c
  4675  0010B4  5027               	movf	keyValue@length+1,w,c
  4676  0010B6  5829               	subwfb	??_keyValue+1,w,c
  4677  0010B8  B0D8               	btfsc	status,0,c
  4678  0010BA  D002               	goto	i2l2912
  4679  0010BC  D7D8               	goto	i2l2900
  4680  0010BE  D000               	goto	i2l2912
  4681  0010C0                     i2l2912:
  4682                           
  4683                           ;KeyValue.c: 83: }
  4684                           ;KeyValue.c: 84: if ((x < length) && flag)
  4685  0010C0  502E               	movf	keyValue@x,w,c
  4686  0010C2  6E28               	movwf	??_keyValue& (0+255),c
  4687  0010C4  6A29               	clrf	(??_keyValue+1)& (0+255),c
  4688  0010C6  5026               	movf	keyValue@length,w,c
  4689  0010C8  5C28               	subwf	??_keyValue,w,c
  4690  0010CA  5027               	movf	keyValue@length+1,w,c
  4691  0010CC  5829               	subwfb	??_keyValue+1,w,c
  4692  0010CE  B0D8               	btfsc	status,0,c
  4693  0010D0  D104               	goto	i2l2978
  4694  0010D2  502C               	movf	keyValue@flag,w,c
  4695  0010D4  B4D8               	btfsc	status,2,c
  4696  0010D6  D101               	goto	i2l2978
  4697                           
  4698                           ;KeyValue.c: 85: {
  4699                           ;KeyValue.c: 86: for (y = 0; y < x && y < 5; y++)
  4700  0010D8  0E00               	movlw	0
  4701  0010DA  6E2D               	movwf	keyValue@y,c
  4702  0010DC  D022               	goto	i2l2924
  4703  0010DE                     i2l2918:
  4704                           
  4705                           ;KeyValue.c: 87: {
  4706                           ;KeyValue.c: 88: if (isspace(str[y]) == 0)
  4707  0010DE  502D               	movf	keyValue@y,w,c
  4708  0010E0  0D01               	mullw	1
  4709  0010E2  50F3               	movf	prodl,w,c
  4710  0010E4  2424               	addwf	keyValue@str,w,c
  4711  0010E6  6ED9               	movwf	fsr2l,c
  4712  0010E8  50F4               	movf	prodh,w,c
  4713  0010EA  2025               	addwfc	keyValue@str+1,w,c
  4714  0010EC  6EDA               	movwf	fsr2h,c
  4715  0010EE  50DF               	movf	indf2,w,c
  4716  0010F0  EC06  F016         	call	_isspace
  4717  0010F4  B0D8               	btfsc	status,0,c
  4718  0010F6  D013               	goto	i2l2922
  4719                           
  4720                           ;KeyValue.c: 89: key[y] = str[y];
  4721  0010F8  502D               	movf	keyValue@y,w,c
  4722  0010FA  0D01               	mullw	1
  4723  0010FC  50F3               	movf	prodl,w,c
  4724  0010FE  2424               	addwf	keyValue@str,w,c
  4725  001100  6ED9               	movwf	fsr2l,c
  4726  001102  50F4               	movf	prodh,w,c
  4727  001104  2025               	addwfc	keyValue@str+1,w,c
  4728  001106  6EDA               	movwf	fsr2h,c
  4729  001108  502D               	movf	keyValue@y,w,c
  4730  00110A  0D01               	mullw	1
  4731  00110C  0E76               	movlw	low _key
  4732  00110E  24F3               	addwf	prodl,w,c
  4733  001110  6EE1               	movwf	fsr1l,c
  4734  001112  0E00               	movlw	high _key
  4735  001114  20F4               	addwfc	prodh,w,c
  4736  001116  6EE2               	movwf	fsr1h,c
  4737  001118  CFDF FFE7          	movff	indf2,indf1
  4738  00111C  D000               	goto	i2l2922
  4739  00111E                     i2l2922:
  4740  00111E  2A2D               	incf	keyValue@y,f,c
  4741  001120  D000               	goto	i2l2924
  4742  001122                     i2l2924:
  4743  001122  502E               	movf	keyValue@x,w,c
  4744  001124  5C2D               	subwf	keyValue@y,w,c
  4745  001126  B0D8               	btfsc	status,0,c
  4746  001128  D004               	goto	i2l2928
  4747  00112A  0E04               	movlw	4
  4748  00112C  642D               	cpfsgt	keyValue@y,c
  4749  00112E  D7D7               	goto	i2l2918
  4750  001130  D000               	goto	i2l2928
  4751  001132                     i2l2928:
  4752                           
  4753                           ;KeyValue.c: 90: }
  4754                           ;KeyValue.c: 92: SerTxStr("Key: ");
  4755  001132  0E30               	movlw	low STR_2
  4756  001134  6E02               	movwf	i2SerTxStr@string,c
  4757  001136  0E10               	movlw	high STR_2
  4758  001138  6E03               	movwf	i2SerTxStr@string+1,c
  4759  00113A  EC34  F015         	call	i2_SerTxStr	;wreg free
  4760                           
  4761                           ;KeyValue.c: 93: SerTxStr(key);
  4762  00113E  0E76               	movlw	low _key
  4763  001140  6E02               	movwf	i2SerTxStr@string,c
  4764  001142  0E00               	movlw	high _key
  4765  001144  6E03               	movwf	i2SerTxStr@string+1,c
  4766  001146  EC34  F015         	call	i2_SerTxStr	;wreg free
  4767                           
  4768                           ;KeyValue.c: 95: for (y = 0; str[x + 1] != (0); y++)
  4769  00114A  0E00               	movlw	0
  4770  00114C  6E2D               	movwf	keyValue@y,c
  4771  00114E  D015               	goto	i2l2938
  4772  001150                     i2l2932:
  4773                           
  4774                           ;KeyValue.c: 96: {
  4775                           ;KeyValue.c: 97: x++;
  4776  001150  2A2E               	incf	keyValue@x,f,c
  4777                           
  4778                           ;KeyValue.c: 99: value[y] = str[x];
  4779  001152  502E               	movf	keyValue@x,w,c
  4780  001154  0D01               	mullw	1
  4781  001156  50F3               	movf	prodl,w,c
  4782  001158  2424               	addwf	keyValue@str,w,c
  4783  00115A  6ED9               	movwf	fsr2l,c
  4784  00115C  50F4               	movf	prodh,w,c
  4785  00115E  2025               	addwfc	keyValue@str+1,w,c
  4786  001160  6EDA               	movwf	fsr2h,c
  4787  001162  502D               	movf	keyValue@y,w,c
  4788  001164  0D01               	mullw	1
  4789  001166  0E6C               	movlw	low _value
  4790  001168  24F3               	addwf	prodl,w,c
  4791  00116A  6EE1               	movwf	fsr1l,c
  4792  00116C  0E00               	movlw	high _value
  4793  00116E  20F4               	addwfc	prodh,w,c
  4794  001170  6EE2               	movwf	fsr1h,c
  4795  001172  CFDF FFE7          	movff	indf2,indf1
  4796  001176  2A2D               	incf	keyValue@y,f,c
  4797  001178  D000               	goto	i2l2938
  4798  00117A                     i2l2938:
  4799  00117A  502E               	movf	keyValue@x,w,c
  4800  00117C  6E28               	movwf	??_keyValue& (0+255),c
  4801  00117E  6A29               	clrf	(??_keyValue+1)& (0+255),c
  4802  001180  0E01               	movlw	1
  4803  001182  2628               	addwf	??_keyValue,f,c
  4804  001184  0E00               	movlw	0
  4805  001186  2229               	addwfc	??_keyValue+1,f,c
  4806  001188  5028               	movf	??_keyValue,w,c
  4807  00118A  2424               	addwf	keyValue@str,w,c
  4808  00118C  6ED9               	movwf	fsr2l,c
  4809  00118E  5029               	movf	??_keyValue+1,w,c
  4810  001190  2025               	addwfc	keyValue@str+1,w,c
  4811  001192  6EDA               	movwf	fsr2h,c
  4812  001194  50DF               	movf	indf2,w,c
  4813  001196  A4D8               	btfss	status,2,c
  4814  001198  D7DB               	goto	i2l2932
  4815                           
  4816                           ;KeyValue.c: 100: }
  4817                           ;KeyValue.c: 101: SerTxStr("   Value: ");
  4818  00119A  0E25               	movlw	low STR_3
  4819  00119C  6E02               	movwf	i2SerTxStr@string,c
  4820  00119E  0E10               	movlw	high STR_3
  4821  0011A0  6E03               	movwf	i2SerTxStr@string+1,c
  4822  0011A2  EC34  F015         	call	i2_SerTxStr	;wreg free
  4823                           
  4824                           ;KeyValue.c: 102: SerTxStr(value);
  4825  0011A6  0E6C               	movlw	low _value
  4826  0011A8  6E02               	movwf	i2SerTxStr@string,c
  4827  0011AA  0E00               	movlw	high _value
  4828  0011AC  6E03               	movwf	i2SerTxStr@string+1,c
  4829  0011AE  EC34  F015         	call	i2_SerTxStr	;wreg free
  4830                           
  4831                           ;KeyValue.c: 104: if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  4832  0011B2  0E76               	movlw	low _key
  4833  0011B4  6E01               	movwf	strcmp@s1,c
  4834  0011B6  0E00               	movlw	high _key
  4835  0011B8  6E02               	movwf	strcmp@s1+1,c
  4836  0011BA  0E3E               	movlw	low STR_4
  4837  0011BC  6E03               	movwf	strcmp@s2,c
  4838  0011BE  0E10               	movlw	high STR_4
  4839  0011C0  6E04               	movwf	strcmp@s2+1,c
  4840  0011C2  EC60  F015         	call	_strcmp	;wreg free
  4841  0011C6  5001               	movf	?_strcmp,w,c
  4842  0011C8  1002               	iorwf	?_strcmp+1,w,c
  4843  0011CA  B4D8               	btfsc	status,2,c
  4844  0011CC  D00E               	goto	i2l2946
  4845  0011CE  0E76               	movlw	low _key
  4846  0011D0  6E01               	movwf	strcmp@s1,c
  4847  0011D2  0E00               	movlw	high _key
  4848  0011D4  6E02               	movwf	strcmp@s1+1,c
  4849  0011D6  0E46               	movlw	low STR_5
  4850  0011D8  6E03               	movwf	strcmp@s2,c
  4851  0011DA  0E10               	movlw	high STR_5
  4852  0011DC  6E04               	movwf	strcmp@s2+1,c
  4853  0011DE  EC60  F015         	call	_strcmp	;wreg free
  4854  0011E2  5001               	movf	?_strcmp,w,c
  4855  0011E4  1002               	iorwf	?_strcmp+1,w,c
  4856  0011E6  A4D8               	btfss	status,2,c
  4857  0011E8  D007               	goto	i2l2950
  4858  0011EA                     i2l2946:
  4859                           
  4860                           ;KeyValue.c: 105: {
  4861                           ;KeyValue.c: 106: StrippedKey = 0x01;
  4862  0011EA  0E01               	movlw	1
  4863  0011EC  0100               	movlb	0	; () banked
  4864  0011EE  6FBF               	movwf	_StrippedKey& (0+255),b
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;KeyValue.c: 107: SerTx(';');
  4868  0011F0  0E3B               	movlw	59
  4869  0011F2  EC93  F016         	call	i2_SerTx
  4870                           
  4871                           ;KeyValue.c: 108: }
  4872  0011F6  D1A0               	goto	i2l3050
  4873  0011F8                     i2l2950:
  4874                           
  4875                           ;KeyValue.c: 110: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  4876  0011F8  0E76               	movlw	low _key
  4877  0011FA  6E01               	movwf	strcmp@s1,c
  4878  0011FC  0E00               	movlw	high _key
  4879  0011FE  6E02               	movwf	strcmp@s1+1,c
  4880  001200  0E50               	movlw	low STR_6
  4881  001202  6E03               	movwf	strcmp@s2,c
  4882  001204  0E10               	movlw	high STR_6
  4883  001206  6E04               	movwf	strcmp@s2+1,c
  4884  001208  EC60  F015         	call	_strcmp	;wreg free
  4885  00120C  5001               	movf	?_strcmp,w,c
  4886  00120E  1002               	iorwf	?_strcmp+1,w,c
  4887  001210  B4D8               	btfsc	status,2,c
  4888  001212  D00E               	goto	i2l2954
  4889  001214  0E76               	movlw	low _key
  4890  001216  6E01               	movwf	strcmp@s1,c
  4891  001218  0E00               	movlw	high _key
  4892  00121A  6E02               	movwf	strcmp@s1+1,c
  4893  00121C  0E5C               	movlw	low STR_7
  4894  00121E  6E03               	movwf	strcmp@s2,c
  4895  001220  0E10               	movlw	high STR_7
  4896  001222  6E04               	movwf	strcmp@s2+1,c
  4897  001224  EC60  F015         	call	_strcmp	;wreg free
  4898  001228  5001               	movf	?_strcmp,w,c
  4899  00122A  1002               	iorwf	?_strcmp+1,w,c
  4900  00122C  A4D8               	btfss	status,2,c
  4901  00122E  D007               	goto	i2l2958
  4902  001230                     i2l2954:
  4903                           
  4904                           ;KeyValue.c: 111: {
  4905                           ;KeyValue.c: 112: StrippedKey = 0x05;
  4906  001230  0E05               	movlw	5
  4907  001232  0100               	movlb	0	; () banked
  4908  001234  6FBF               	movwf	_StrippedKey& (0+255),b
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;KeyValue.c: 113: SerTx(';');
  4912  001236  0E3B               	movlw	59
  4913  001238  EC93  F016         	call	i2_SerTx
  4914                           
  4915                           ;KeyValue.c: 114: }
  4916  00123C  D17D               	goto	i2l3050
  4917  00123E                     i2l2958:
  4918                           
  4919                           ;KeyValue.c: 116: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  4920  00123E  0E76               	movlw	low _key
  4921  001240  6E01               	movwf	strcmp@s1,c
  4922  001242  0E00               	movlw	high _key
  4923  001244  6E02               	movwf	strcmp@s1+1,c
  4924  001246  0E4D               	movlw	low STR_8
  4925  001248  6E03               	movwf	strcmp@s2,c
  4926  00124A  0E10               	movlw	high STR_8
  4927  00124C  6E04               	movwf	strcmp@s2+1,c
  4928  00124E  EC60  F015         	call	_strcmp	;wreg free
  4929  001252  5001               	movf	?_strcmp,w,c
  4930  001254  1002               	iorwf	?_strcmp+1,w,c
  4931  001256  B4D8               	btfsc	status,2,c
  4932  001258  D00E               	goto	i2l2962
  4933  00125A  0E76               	movlw	low _key
  4934  00125C  6E01               	movwf	strcmp@s1,c
  4935  00125E  0E00               	movlw	high _key
  4936  001260  6E02               	movwf	strcmp@s1+1,c
  4937  001262  0E59               	movlw	low STR_9
  4938  001264  6E03               	movwf	strcmp@s2,c
  4939  001266  0E10               	movlw	high STR_9
  4940  001268  6E04               	movwf	strcmp@s2+1,c
  4941  00126A  EC60  F015         	call	_strcmp	;wreg free
  4942  00126E  5001               	movf	?_strcmp,w,c
  4943  001270  1002               	iorwf	?_strcmp+1,w,c
  4944  001272  A4D8               	btfss	status,2,c
  4945  001274  D007               	goto	i2l2966
  4946  001276                     i2l2962:
  4947                           
  4948                           ;KeyValue.c: 117: {
  4949                           ;KeyValue.c: 118: StrippedKey = 0x07;
  4950  001276  0E07               	movlw	7
  4951  001278  0100               	movlb	0	; () banked
  4952  00127A  6FBF               	movwf	_StrippedKey& (0+255),b
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;KeyValue.c: 119: SerTx(';');
  4956  00127C  0E3B               	movlw	59
  4957  00127E  EC93  F016         	call	i2_SerTx
  4958                           
  4959                           ;KeyValue.c: 120: }
  4960  001282  D15A               	goto	i2l3050
  4961  001284                     i2l2966:
  4962                           
  4963                           ;KeyValue.c: 122: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  4964  001284  0E76               	movlw	low _key
  4965  001286  6E01               	movwf	strcmp@s1,c
  4966  001288  0E00               	movlw	high _key
  4967  00128A  6E02               	movwf	strcmp@s1+1,c
  4968  00128C  0E4A               	movlw	low STR_10
  4969  00128E  6E03               	movwf	strcmp@s2,c
  4970  001290  0E10               	movlw	high STR_10
  4971  001292  6E04               	movwf	strcmp@s2+1,c
  4972  001294  EC60  F015         	call	_strcmp	;wreg free
  4973  001298  5001               	movf	?_strcmp,w,c
  4974  00129A  1002               	iorwf	?_strcmp+1,w,c
  4975  00129C  B4D8               	btfsc	status,2,c
  4976  00129E  D00E               	goto	i2l2970
  4977  0012A0  0E76               	movlw	low _key
  4978  0012A2  6E01               	movwf	strcmp@s1,c
  4979  0012A4  0E00               	movlw	high _key
  4980  0012A6  6E02               	movwf	strcmp@s1+1,c
  4981  0012A8  0E56               	movlw	low STR_11
  4982  0012AA  6E03               	movwf	strcmp@s2,c
  4983  0012AC  0E10               	movlw	high STR_11
  4984  0012AE  6E04               	movwf	strcmp@s2+1,c
  4985  0012B0  EC60  F015         	call	_strcmp	;wreg free
  4986  0012B4  5001               	movf	?_strcmp,w,c
  4987  0012B6  1002               	iorwf	?_strcmp+1,w,c
  4988  0012B8  A4D8               	btfss	status,2,c
  4989  0012BA  D007               	goto	i2l2974
  4990  0012BC                     i2l2970:
  4991                           
  4992                           ;KeyValue.c: 123: {
  4993                           ;KeyValue.c: 124: StrippedKey = 0x09;
  4994  0012BC  0E09               	movlw	9
  4995  0012BE  0100               	movlb	0	; () banked
  4996  0012C0  6FBF               	movwf	_StrippedKey& (0+255),b
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;KeyValue.c: 125: SerTx(';');
  5000  0012C2  0E3B               	movlw	59
  5001  0012C4  EC93  F016         	call	i2_SerTx
  5002                           
  5003                           ;KeyValue.c: 126: }
  5004  0012C8  D137               	goto	i2l3050
  5005  0012CA                     i2l2974:
  5006                           
  5007                           ;KeyValue.c: 128: else
  5008                           ;KeyValue.c: 129: {
  5009                           ;KeyValue.c: 130: SerTxStr("???");
  5010  0012CA  0E36               	movlw	low STR_12
  5011  0012CC  6E02               	movwf	i2SerTxStr@string,c
  5012  0012CE  0E10               	movlw	high STR_12
  5013  0012D0  6E03               	movwf	i2SerTxStr@string+1,c
  5014  0012D2  EC34  F015         	call	i2_SerTxStr	;wreg free
  5015  0012D6  D12C               	goto	i2l3048
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;KeyValue.c: 132: }
  5019                           ;KeyValue.c: 133: }
  5020                           
  5021                           ; BSR set to: 0
  5022                           
  5023                           ; BSR set to: 0
  5024                           
  5025                           ; BSR set to: 0
  5026                           
  5027                           ;KeyValue.c: 131: StrippedKey = 0;
  5028  0012D8  D12F               	goto	i2l3050
  5029  0012DA                     i2l2978:
  5030                           
  5031                           ;KeyValue.c: 135: else if (flag == 0)
  5032  0012DA  502C               	movf	keyValue@flag,w,c
  5033  0012DC  A4D8               	btfss	status,2,c
  5034  0012DE  D12C               	goto	i2l3050
  5035                           
  5036                           ;KeyValue.c: 136: {
  5037                           ;KeyValue.c: 137: y = 0;
  5038  0012E0  0E00               	movlw	0
  5039  0012E2  6E2D               	movwf	keyValue@y,c
  5040                           
  5041                           ;KeyValue.c: 138: while (str[y] != 0x0D)
  5042  0012E4  D014               	goto	i2l2986
  5043  0012E6                     i2l2982:
  5044                           
  5045                           ;KeyValue.c: 139: {
  5046                           ;KeyValue.c: 141: key[y] = str[y];
  5047  0012E6  502D               	movf	keyValue@y,w,c
  5048  0012E8  0D01               	mullw	1
  5049  0012EA  50F3               	movf	prodl,w,c
  5050  0012EC  2424               	addwf	keyValue@str,w,c
  5051  0012EE  6ED9               	movwf	fsr2l,c
  5052  0012F0  50F4               	movf	prodh,w,c
  5053  0012F2  2025               	addwfc	keyValue@str+1,w,c
  5054  0012F4  6EDA               	movwf	fsr2h,c
  5055  0012F6  502D               	movf	keyValue@y,w,c
  5056  0012F8  0D01               	mullw	1
  5057  0012FA  0E76               	movlw	low _key
  5058  0012FC  24F3               	addwf	prodl,w,c
  5059  0012FE  6EE1               	movwf	fsr1l,c
  5060  001300  0E00               	movlw	high _key
  5061  001302  20F4               	addwfc	prodh,w,c
  5062  001304  6EE2               	movwf	fsr1h,c
  5063  001306  CFDF FFE7          	movff	indf2,indf1
  5064                           
  5065                           ;KeyValue.c: 142: y++;
  5066  00130A  2A2D               	incf	keyValue@y,f,c
  5067  00130C  D000               	goto	i2l2986
  5068  00130E                     i2l2986:
  5069  00130E  502D               	movf	keyValue@y,w,c
  5070  001310  0D01               	mullw	1
  5071  001312  50F3               	movf	prodl,w,c
  5072  001314  2424               	addwf	keyValue@str,w,c
  5073  001316  6ED9               	movwf	fsr2l,c
  5074  001318  50F4               	movf	prodh,w,c
  5075  00131A  2025               	addwfc	keyValue@str+1,w,c
  5076  00131C  6EDA               	movwf	fsr2h,c
  5077  00131E  0E0D               	movlw	13
  5078  001320  18DE               	xorwf	postinc2,w,c
  5079  001322  A4D8               	btfss	status,2,c
  5080  001324  D7E0               	goto	i2l2982
  5081                           
  5082                           ;KeyValue.c: 143: }
  5083                           ;KeyValue.c: 145: SerTxStr("Key: ");
  5084  001326  0E30               	movlw	low STR_2
  5085  001328  6E02               	movwf	i2SerTxStr@string,c
  5086  00132A  0E10               	movlw	high STR_2
  5087  00132C  6E03               	movwf	i2SerTxStr@string+1,c
  5088  00132E  EC34  F015         	call	i2_SerTxStr	;wreg free
  5089                           
  5090                           ;KeyValue.c: 146: SerTxStr(key);
  5091  001332  0E76               	movlw	low _key
  5092  001334  6E02               	movwf	i2SerTxStr@string,c
  5093  001336  0E00               	movlw	high _key
  5094  001338  6E03               	movwf	i2SerTxStr@string+1,c
  5095  00133A  EC34  F015         	call	i2_SerTxStr	;wreg free
  5096                           
  5097                           ;KeyValue.c: 148: if ((strcmp(key, "AZ") == 0) || (strcmp(key, "az") == 0))
  5098  00133E  0E76               	movlw	low _key
  5099  001340  6E01               	movwf	strcmp@s1,c
  5100  001342  0E00               	movlw	high _key
  5101  001344  6E02               	movwf	strcmp@s1+1,c
  5102  001346  0E53               	movlw	low STR_14
  5103  001348  6E03               	movwf	strcmp@s2,c
  5104  00134A  0E10               	movlw	high STR_14
  5105  00134C  6E04               	movwf	strcmp@s2+1,c
  5106  00134E  EC60  F015         	call	_strcmp	;wreg free
  5107  001352  5001               	movf	?_strcmp,w,c
  5108  001354  1002               	iorwf	?_strcmp+1,w,c
  5109  001356  B4D8               	btfsc	status,2,c
  5110  001358  D00E               	goto	i2l2994
  5111  00135A  0E76               	movlw	low _key
  5112  00135C  6E01               	movwf	strcmp@s1,c
  5113  00135E  0E00               	movlw	high _key
  5114  001360  6E02               	movwf	strcmp@s1+1,c
  5115  001362  0E5F               	movlw	low STR_15
  5116  001364  6E03               	movwf	strcmp@s2,c
  5117  001366  0E10               	movlw	high STR_15
  5118  001368  6E04               	movwf	strcmp@s2+1,c
  5119  00136A  EC60  F015         	call	_strcmp	;wreg free
  5120  00136E  5001               	movf	?_strcmp,w,c
  5121  001370  1002               	iorwf	?_strcmp+1,w,c
  5122  001372  A4D8               	btfss	status,2,c
  5123  001374  D006               	goto	i2l2998
  5124  001376                     i2l2994:
  5125                           
  5126                           ;KeyValue.c: 149: {
  5127                           ;KeyValue.c: 150: AZEL = 1;
  5128  001376  0E01               	movlw	1
  5129  001378  6E7B               	movwf	_AZEL,c
  5130                           
  5131                           ;KeyValue.c: 151: SerTx(';');
  5132  00137A  0E3B               	movlw	59
  5133  00137C  EC93  F016         	call	i2_SerTx
  5134                           
  5135                           ;KeyValue.c: 152: }
  5136  001380  D0DB               	goto	i2l3050
  5137  001382                     i2l2998:
  5138                           
  5139                           ;KeyValue.c: 154: else if ((strcmp(key, "EL") == 0) || (strcmp(key, "el") == 0))
  5140  001382  0E76               	movlw	low _key
  5141  001384  6E01               	movwf	strcmp@s1,c
  5142  001386  0E00               	movlw	high _key
  5143  001388  6E02               	movwf	strcmp@s1+1,c
  5144  00138A  0E3B               	movlw	low (STR_20+1)
  5145  00138C  6E03               	movwf	strcmp@s2,c
  5146  00138E  0E10               	movlw	high (STR_20+1)
  5147  001390  6E04               	movwf	strcmp@s2+1,c
  5148  001392  EC60  F015         	call	_strcmp	;wreg free
  5149  001396  5001               	movf	?_strcmp,w,c
  5150  001398  1002               	iorwf	?_strcmp+1,w,c
  5151  00139A  B4D8               	btfsc	status,2,c
  5152  00139C  D00E               	goto	i2l3002
  5153  00139E  0E76               	movlw	low _key
  5154  0013A0  6E01               	movwf	strcmp@s1,c
  5155  0013A2  0E00               	movlw	high _key
  5156  0013A4  6E02               	movwf	strcmp@s1+1,c
  5157  0013A6  0E43               	movlw	low (STR_21+1)
  5158  0013A8  6E03               	movwf	strcmp@s2,c
  5159  0013AA  0E10               	movlw	high (STR_21+1)
  5160  0013AC  6E04               	movwf	strcmp@s2+1,c
  5161  0013AE  EC60  F015         	call	_strcmp	;wreg free
  5162  0013B2  5001               	movf	?_strcmp,w,c
  5163  0013B4  1002               	iorwf	?_strcmp+1,w,c
  5164  0013B6  A4D8               	btfss	status,2,c
  5165  0013B8  D006               	goto	i2l3006
  5166  0013BA                     i2l3002:
  5167                           
  5168                           ;KeyValue.c: 155: {
  5169                           ;KeyValue.c: 156: AZEL = 2;
  5170  0013BA  0E02               	movlw	2
  5171  0013BC  6E7B               	movwf	_AZEL,c
  5172                           
  5173                           ;KeyValue.c: 157: SerTx(';');
  5174  0013BE  0E3B               	movlw	59
  5175  0013C0  EC93  F016         	call	i2_SerTx
  5176                           
  5177                           ;KeyValue.c: 158: }
  5178  0013C4  D0B9               	goto	i2l3050
  5179  0013C6                     i2l3006:
  5180                           
  5181                           ;KeyValue.c: 160: else if ((strcmp(key, "POS") == 0) || (strcmp(key, "pos") == 0))
  5182  0013C6  0E76               	movlw	low _key
  5183  0013C8  6E01               	movwf	strcmp@s1,c
  5184  0013CA  0E00               	movlw	high _key
  5185  0013CC  6E02               	movwf	strcmp@s1+1,c
  5186  0013CE  0E3E               	movlw	low STR_4
  5187  0013D0  6E03               	movwf	strcmp@s2,c
  5188  0013D2  0E10               	movlw	high STR_4
  5189  0013D4  6E04               	movwf	strcmp@s2+1,c
  5190  0013D6  EC60  F015         	call	_strcmp	;wreg free
  5191  0013DA  5001               	movf	?_strcmp,w,c
  5192  0013DC  1002               	iorwf	?_strcmp+1,w,c
  5193  0013DE  B4D8               	btfsc	status,2,c
  5194  0013E0  D00E               	goto	i2l3010
  5195  0013E2  0E76               	movlw	low _key
  5196  0013E4  6E01               	movwf	strcmp@s1,c
  5197  0013E6  0E00               	movlw	high _key
  5198  0013E8  6E02               	movwf	strcmp@s1+1,c
  5199  0013EA  0E46               	movlw	low STR_5
  5200  0013EC  6E03               	movwf	strcmp@s2,c
  5201  0013EE  0E10               	movlw	high STR_5
  5202  0013F0  6E04               	movwf	strcmp@s2+1,c
  5203  0013F2  EC60  F015         	call	_strcmp	;wreg free
  5204  0013F6  5001               	movf	?_strcmp,w,c
  5205  0013F8  1002               	iorwf	?_strcmp+1,w,c
  5206  0013FA  A4D8               	btfss	status,2,c
  5207  0013FC  D007               	goto	i2l3014
  5208  0013FE                     i2l3010:
  5209                           
  5210                           ;KeyValue.c: 161: {
  5211                           ;KeyValue.c: 162: StrippedKey = 0x02;
  5212  0013FE  0E02               	movlw	2
  5213  001400  0100               	movlb	0	; () banked
  5214  001402  6FBF               	movwf	_StrippedKey& (0+255),b
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;KeyValue.c: 163: SerTx(';');
  5218  001404  0E3B               	movlw	59
  5219  001406  EC93  F016         	call	i2_SerTx
  5220                           
  5221                           ;KeyValue.c: 164: }
  5222  00140A  D096               	goto	i2l3050
  5223  00140C                     i2l3014:
  5224                           
  5225                           ;KeyValue.c: 166: else if((strcmp(key, "VEL") == 0) || (strcmp(key, "vel") == 0))
  5226  00140C  0E76               	movlw	low _key
  5227  00140E  6E01               	movwf	strcmp@s1,c
  5228  001410  0E00               	movlw	high _key
  5229  001412  6E02               	movwf	strcmp@s1+1,c
  5230  001414  0E3A               	movlw	low STR_20
  5231  001416  6E03               	movwf	strcmp@s2,c
  5232  001418  0E10               	movlw	high STR_20
  5233  00141A  6E04               	movwf	strcmp@s2+1,c
  5234  00141C  EC60  F015         	call	_strcmp	;wreg free
  5235  001420  5001               	movf	?_strcmp,w,c
  5236  001422  1002               	iorwf	?_strcmp+1,w,c
  5237  001424  B4D8               	btfsc	status,2,c
  5238  001426  D00E               	goto	i2l3018
  5239  001428  0E76               	movlw	low _key
  5240  00142A  6E01               	movwf	strcmp@s1,c
  5241  00142C  0E00               	movlw	high _key
  5242  00142E  6E02               	movwf	strcmp@s1+1,c
  5243  001430  0E42               	movlw	low STR_21
  5244  001432  6E03               	movwf	strcmp@s2,c
  5245  001434  0E10               	movlw	high STR_21
  5246  001436  6E04               	movwf	strcmp@s2+1,c
  5247  001438  EC60  F015         	call	_strcmp	;wreg free
  5248  00143C  5001               	movf	?_strcmp,w,c
  5249  00143E  1002               	iorwf	?_strcmp+1,w,c
  5250  001440  A4D8               	btfss	status,2,c
  5251  001442  D007               	goto	i2l3022
  5252  001444                     i2l3018:
  5253                           
  5254                           ;KeyValue.c: 167: {
  5255                           ;KeyValue.c: 168: StrippedKey = 0x03;
  5256  001444  0E03               	movlw	3
  5257  001446  0100               	movlb	0	; () banked
  5258  001448  6FBF               	movwf	_StrippedKey& (0+255),b
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;KeyValue.c: 169: SerTx(';');
  5262  00144A  0E3B               	movlw	59
  5263  00144C  EC93  F016         	call	i2_SerTx
  5264                           
  5265                           ;KeyValue.c: 170: }
  5266  001450  D073               	goto	i2l3050
  5267  001452                     i2l3022:
  5268                           
  5269                           ;KeyValue.c: 172: else if ((strcmp(key, "KP") == 0) || (strcmp(key, "kp") == 0))
  5270  001452  0E76               	movlw	low _key
  5271  001454  6E01               	movwf	strcmp@s1,c
  5272  001456  0E00               	movlw	high _key
  5273  001458  6E02               	movwf	strcmp@s1+1,c
  5274  00145A  0E50               	movlw	low STR_6
  5275  00145C  6E03               	movwf	strcmp@s2,c
  5276  00145E  0E10               	movlw	high STR_6
  5277  001460  6E04               	movwf	strcmp@s2+1,c
  5278  001462  EC60  F015         	call	_strcmp	;wreg free
  5279  001466  5001               	movf	?_strcmp,w,c
  5280  001468  1002               	iorwf	?_strcmp+1,w,c
  5281  00146A  B4D8               	btfsc	status,2,c
  5282  00146C  D00E               	goto	i2l3026
  5283  00146E  0E76               	movlw	low _key
  5284  001470  6E01               	movwf	strcmp@s1,c
  5285  001472  0E00               	movlw	high _key
  5286  001474  6E02               	movwf	strcmp@s1+1,c
  5287  001476  0E5C               	movlw	low STR_7
  5288  001478  6E03               	movwf	strcmp@s2,c
  5289  00147A  0E10               	movlw	high STR_7
  5290  00147C  6E04               	movwf	strcmp@s2+1,c
  5291  00147E  EC60  F015         	call	_strcmp	;wreg free
  5292  001482  5001               	movf	?_strcmp,w,c
  5293  001484  1002               	iorwf	?_strcmp+1,w,c
  5294  001486  A4D8               	btfss	status,2,c
  5295  001488  D007               	goto	i2l3030
  5296  00148A                     i2l3026:
  5297                           
  5298                           ;KeyValue.c: 173: {
  5299                           ;KeyValue.c: 174: StrippedKey = 0x04;
  5300  00148A  0E04               	movlw	4
  5301  00148C  0100               	movlb	0	; () banked
  5302  00148E  6FBF               	movwf	_StrippedKey& (0+255),b
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;KeyValue.c: 175: SerTx(';');
  5306  001490  0E3B               	movlw	59
  5307  001492  EC93  F016         	call	i2_SerTx
  5308                           
  5309                           ;KeyValue.c: 176: }
  5310  001496  D050               	goto	i2l3050
  5311  001498                     i2l3030:
  5312                           
  5313                           ;KeyValue.c: 178: else if ((strcmp(key, "KI") == 0) || (strcmp(key, "ki") == 0))
  5314  001498  0E76               	movlw	low _key
  5315  00149A  6E01               	movwf	strcmp@s1,c
  5316  00149C  0E00               	movlw	high _key
  5317  00149E  6E02               	movwf	strcmp@s1+1,c
  5318  0014A0  0E4D               	movlw	low STR_8
  5319  0014A2  6E03               	movwf	strcmp@s2,c
  5320  0014A4  0E10               	movlw	high STR_8
  5321  0014A6  6E04               	movwf	strcmp@s2+1,c
  5322  0014A8  EC60  F015         	call	_strcmp	;wreg free
  5323  0014AC  5001               	movf	?_strcmp,w,c
  5324  0014AE  1002               	iorwf	?_strcmp+1,w,c
  5325  0014B0  B4D8               	btfsc	status,2,c
  5326  0014B2  D00E               	goto	i2l3034
  5327  0014B4  0E76               	movlw	low _key
  5328  0014B6  6E01               	movwf	strcmp@s1,c
  5329  0014B8  0E00               	movlw	high _key
  5330  0014BA  6E02               	movwf	strcmp@s1+1,c
  5331  0014BC  0E59               	movlw	low STR_9
  5332  0014BE  6E03               	movwf	strcmp@s2,c
  5333  0014C0  0E10               	movlw	high STR_9
  5334  0014C2  6E04               	movwf	strcmp@s2+1,c
  5335  0014C4  EC60  F015         	call	_strcmp	;wreg free
  5336  0014C8  5001               	movf	?_strcmp,w,c
  5337  0014CA  1002               	iorwf	?_strcmp+1,w,c
  5338  0014CC  A4D8               	btfss	status,2,c
  5339  0014CE  D007               	goto	i2l3038
  5340  0014D0                     i2l3034:
  5341                           
  5342                           ;KeyValue.c: 179: {
  5343                           ;KeyValue.c: 180: StrippedKey = 0x06;
  5344  0014D0  0E06               	movlw	6
  5345  0014D2  0100               	movlb	0	; () banked
  5346  0014D4  6FBF               	movwf	_StrippedKey& (0+255),b
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;KeyValue.c: 181: SerTx(';');
  5350  0014D6  0E3B               	movlw	59
  5351  0014D8  EC93  F016         	call	i2_SerTx
  5352                           
  5353                           ;KeyValue.c: 182: }
  5354  0014DC  D02D               	goto	i2l3050
  5355  0014DE                     i2l3038:
  5356                           
  5357                           ;KeyValue.c: 184: else if ((strcmp(key, "KD") == 0) || (strcmp(key, "kd") == 0))
  5358  0014DE  0E76               	movlw	low _key
  5359  0014E0  6E01               	movwf	strcmp@s1,c
  5360  0014E2  0E00               	movlw	high _key
  5361  0014E4  6E02               	movwf	strcmp@s1+1,c
  5362  0014E6  0E4A               	movlw	low STR_10
  5363  0014E8  6E03               	movwf	strcmp@s2,c
  5364  0014EA  0E10               	movlw	high STR_10
  5365  0014EC  6E04               	movwf	strcmp@s2+1,c
  5366  0014EE  EC60  F015         	call	_strcmp	;wreg free
  5367  0014F2  5001               	movf	?_strcmp,w,c
  5368  0014F4  1002               	iorwf	?_strcmp+1,w,c
  5369  0014F6  B4D8               	btfsc	status,2,c
  5370  0014F8  D00E               	goto	i2l3042
  5371  0014FA  0E76               	movlw	low _key
  5372  0014FC  6E01               	movwf	strcmp@s1,c
  5373  0014FE  0E00               	movlw	high _key
  5374  001500  6E02               	movwf	strcmp@s1+1,c
  5375  001502  0E56               	movlw	low STR_11
  5376  001504  6E03               	movwf	strcmp@s2,c
  5377  001506  0E10               	movlw	high STR_11
  5378  001508  6E04               	movwf	strcmp@s2+1,c
  5379  00150A  EC60  F015         	call	_strcmp	;wreg free
  5380  00150E  5001               	movf	?_strcmp,w,c
  5381  001510  1002               	iorwf	?_strcmp+1,w,c
  5382  001512  A4D8               	btfss	status,2,c
  5383  001514  D007               	goto	i2l3046
  5384  001516                     i2l3042:
  5385                           
  5386                           ;KeyValue.c: 185: {
  5387                           ;KeyValue.c: 186: StrippedKey = 0x08;
  5388  001516  0E08               	movlw	8
  5389  001518  0100               	movlb	0	; () banked
  5390  00151A  6FBF               	movwf	_StrippedKey& (0+255),b
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;KeyValue.c: 187: SerTx(';');
  5394  00151C  0E3B               	movlw	59
  5395  00151E  EC93  F016         	call	i2_SerTx
  5396                           
  5397                           ;KeyValue.c: 188: }
  5398  001522  D00A               	goto	i2l3050
  5399  001524                     i2l3046:
  5400                           
  5401                           ;KeyValue.c: 190: else
  5402                           ;KeyValue.c: 191: {
  5403                           ;KeyValue.c: 192: SerTxStr("???");
  5404  001524  0E36               	movlw	low STR_12
  5405  001526  6E02               	movwf	i2SerTxStr@string,c
  5406  001528  0E10               	movlw	high STR_12
  5407  00152A  6E03               	movwf	i2SerTxStr@string+1,c
  5408  00152C  EC34  F015         	call	i2_SerTxStr	;wreg free
  5409  001530                     i2l3048:
  5410                           
  5411                           ;KeyValue.c: 193: StrippedKey = 0;
  5412  001530  0E00               	movlw	0
  5413  001532  0100               	movlb	0	; () banked
  5414  001534  6FBF               	movwf	_StrippedKey& (0+255),b
  5415                           
  5416                           ; BSR set to: 0
  5417                           
  5418                           ; BSR set to: 0
  5419                           
  5420                           ; BSR set to: 0
  5421                           
  5422                           ; BSR set to: 0
  5423                           
  5424                           ; BSR set to: 0
  5425                           
  5426                           ; BSR set to: 0
  5427                           
  5428                           ; BSR set to: 0
  5429                           
  5430                           ; BSR set to: 0
  5431  001536  D000               	goto	i2l3050
  5432  001538                     i2l3050:
  5433                           
  5434                           ;KeyValue.c: 194: }
  5435                           ;KeyValue.c: 195: }
  5436                           ;KeyValue.c: 197: StrippedValue = strtod(value, &str_end);
  5437  001538  0E6C               	movlw	low _value
  5438  00153A  6E18               	movwf	strtod@s,c
  5439  00153C  0E00               	movlw	high _value
  5440  00153E  6E19               	movwf	strtod@s+1,c
  5441  001540  0E2A               	movlw	low keyValue@str_end
  5442  001542  6E1A               	movwf	strtod@res,c
  5443  001544  0E00               	movlw	high keyValue@str_end
  5444  001546  6E1B               	movwf	strtod@res+1,c
  5445  001548  ECE8  F00A         	call	_strtod	;wreg free
  5446  00154C  C018  F0BB         	movff	?_strtod,_StrippedValue
  5447  001550  C019  F0BC         	movff	?_strtod+1,_StrippedValue+1
  5448  001554  C01A  F0BD         	movff	?_strtod+2,_StrippedValue+2
  5449                           
  5450                           ;KeyValue.c: 201: for (x = 0; x < 5; x++)
  5451  001558  0E00               	movlw	0
  5452  00155A  6E2E               	movwf	keyValue@x,c
  5453  00155C                     i2l3054:
  5454  00155C  0E04               	movlw	4
  5455  00155E  642E               	cpfsgt	keyValue@x,c
  5456  001560  D001               	goto	i2l3058
  5457  001562  D00C               	goto	i2l3064
  5458  001564                     i2l3058:
  5459                           
  5460                           ;KeyValue.c: 202: {
  5461                           ;KeyValue.c: 203: key[x] = (0);
  5462  001564  502E               	movf	keyValue@x,w,c
  5463  001566  0D01               	mullw	1
  5464  001568  0E76               	movlw	low _key
  5465  00156A  24F3               	addwf	prodl,w,c
  5466  00156C  6ED9               	movwf	fsr2l,c
  5467  00156E  0E00               	movlw	high _key
  5468  001570  20F4               	addwfc	prodh,w,c
  5469  001572  6EDA               	movwf	fsr2h,c
  5470  001574  0E00               	movlw	0
  5471  001576  6EDF               	movwf	indf2,c
  5472  001578  2A2E               	incf	keyValue@x,f,c
  5473  00157A  D7F0               	goto	i2l3054
  5474  00157C                     i2l3064:
  5475                           
  5476                           ;KeyValue.c: 204: }
  5477                           ;KeyValue.c: 206: for (x = 0; x < 10; x++)
  5478  00157C  0E00               	movlw	0
  5479  00157E  6E2E               	movwf	keyValue@x,c
  5480  001580                     i2l3066:
  5481  001580  0E09               	movlw	9
  5482  001582  642E               	cpfsgt	keyValue@x,c
  5483  001584  D001               	goto	i2l3070
  5484  001586  D00C               	goto	i2l3076
  5485  001588                     i2l3070:
  5486                           
  5487                           ;KeyValue.c: 207: {
  5488                           ;KeyValue.c: 208: value[x] = (0);
  5489  001588  502E               	movf	keyValue@x,w,c
  5490  00158A  0D01               	mullw	1
  5491  00158C  0E6C               	movlw	low _value
  5492  00158E  24F3               	addwf	prodl,w,c
  5493  001590  6ED9               	movwf	fsr2l,c
  5494  001592  0E00               	movlw	high _value
  5495  001594  20F4               	addwfc	prodh,w,c
  5496  001596  6EDA               	movwf	fsr2h,c
  5497  001598  0E00               	movlw	0
  5498  00159A  6EDF               	movwf	indf2,c
  5499  00159C  2A2E               	incf	keyValue@x,f,c
  5500  00159E  D7F0               	goto	i2l3066
  5501  0015A0                     i2l3076:
  5502                           
  5503                           ;KeyValue.c: 209: }
  5504                           ;KeyValue.c: 211: for (x = 0; x < 30; x++)
  5505  0015A0  0E00               	movlw	0
  5506  0015A2  6E2E               	movwf	keyValue@x,c
  5507  0015A4                     i2l3078:
  5508  0015A4  0E1D               	movlw	29
  5509  0015A6  642E               	cpfsgt	keyValue@x,c
  5510  0015A8  D001               	goto	i2l3082
  5511  0015AA  D00C               	goto	i2l3088
  5512  0015AC                     i2l3082:
  5513                           
  5514                           ;KeyValue.c: 212: {
  5515                           ;KeyValue.c: 213: received[x] = (0);
  5516  0015AC  502E               	movf	keyValue@x,w,c
  5517  0015AE  0D01               	mullw	1
  5518  0015B0  0E4E               	movlw	low _received
  5519  0015B2  24F3               	addwf	prodl,w,c
  5520  0015B4  6ED9               	movwf	fsr2l,c
  5521  0015B6  0E00               	movlw	high _received
  5522  0015B8  20F4               	addwfc	prodh,w,c
  5523  0015BA  6EDA               	movwf	fsr2h,c
  5524  0015BC  0E00               	movlw	0
  5525  0015BE  6EDF               	movwf	indf2,c
  5526  0015C0  2A2E               	incf	keyValue@x,f,c
  5527  0015C2  D7F0               	goto	i2l3078
  5528  0015C4                     i2l3088:
  5529                           
  5530                           ;KeyValue.c: 214: }
  5531                           ;KeyValue.c: 215: flag = 0;
  5532  0015C4  0E00               	movlw	0
  5533  0015C6  6E2C               	movwf	keyValue@flag,c
  5534                           
  5535                           ;KeyValue.c: 216: RCflag = 1;
  5536  0015C8  0E01               	movlw	1
  5537  0015CA  0100               	movlb	0	; () banked
  5538  0015CC  6FBE               	movwf	_RCflag& (0+255),b
  5539                           
  5540                           ; BSR set to: 0
  5541  0015CE  0012               	return		;funcret
  5542  0015D0                     __end_of_keyValue:
  5543                           	opt stack 0
  5544                           pclatu	equ	0xFFB
  5545                           pclath	equ	0xFFA
  5546                           tblptru	equ	0xFF8
  5547                           tblptrh	equ	0xFF7
  5548                           tblptrl	equ	0xFF6
  5549                           tablat	equ	0xFF5
  5550                           prodh	equ	0xFF4
  5551                           prodl	equ	0xFF3
  5552                           intcon	equ	0xFF2
  5553                           indf0	equ	0xFEF
  5554                           postinc0	equ	0xFEE
  5555                           fsr0h	equ	0xFEA
  5556                           fsr0l	equ	0xFE9
  5557                           wreg	equ	0xFE8
  5558                           indf1	equ	0xFE7
  5559                           fsr1h	equ	0xFE2
  5560                           fsr1l	equ	0xFE1
  5561                           indf2	equ	0xFDF
  5562                           postinc2	equ	0xFDE
  5563                           fsr2h	equ	0xFDA
  5564                           fsr2l	equ	0xFD9
  5565                           status	equ	0xFD8
  5566                           
  5567 ;; *************** function i2_SerTxStr *****************
  5568 ;; Defined at:
  5569 ;;		line 50 in file "SerComm.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  string          2    1[COMRAM] PTR unsigned char 
  5572 ;;		 -> STR_28(4), STR_13(6), STR_12(4), STR_3(11), 
  5573 ;;		 -> value(10), STR_2(6), key(5), STR_1(36), 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;		None               void
  5578 ;; Registers used:
  5579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;Total ram usage:        2 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    1
  5592 ;; This function calls:
  5593 ;;		i2_SerTx
  5594 ;; This function is called by:
  5595 ;;		_keyValue
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text23
  5600  002A68                     __ptext23:
  5601                           	opt stack 0
  5602  002A68                     i2_SerTxStr:
  5603                           	opt stack 22
  5604                           
  5605                           ;SerComm.c: 52: while (*string)
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;incstack = 0
  5609  002A68  D016               	goto	i2l2808
  5610  002A6A                     i2l2804:
  5611                           
  5612                           ;SerComm.c: 53: SerTx(*string++);
  5613  002A6A  C002  FFF6         	movff	i2SerTxStr@string,tblptrl
  5614  002A6E  C003  FFF7         	movff	i2SerTxStr@string+1,tblptrh
  5615  002A72  0E00               	movlw	low (__smallconst shr (0+16))
  5616  002A74  6EF8               	movwf	tblptru,c
  5617  002A76  0E0F               	movlw	(high __ramtop+-1)
  5618  002A78  64F7               	cpfsgt	tblptrh,c
  5619  002A7A  D003               	bra	i2u303_47
  5620  002A7C  0008               	tblrd		*
  5621  002A7E  50F5               	movf	tablat,w,c
  5622  002A80  D005               	bra	i2u303_40
  5623  002A82                     i2u303_47:
  5624  002A82  CFF6 FFE9          	movff	tblptrl,fsr0l
  5625  002A86  CFF7 FFEA          	movff	tblptrh,fsr0h
  5626  002A8A  50EF               	movf	indf0,w,c
  5627  002A8C                     i2u303_40:
  5628  002A8C  EC93  F016         	call	i2_SerTx
  5629  002A90  4A02               	infsnz	i2SerTxStr@string,f,c
  5630  002A92  2A03               	incf	i2SerTxStr@string+1,f,c
  5631  002A94  D000               	goto	i2l2808
  5632  002A96                     i2l2808:
  5633  002A96  C002  FFF6         	movff	i2SerTxStr@string,tblptrl
  5634  002A9A  C003  FFF7         	movff	i2SerTxStr@string+1,tblptrh
  5635  002A9E  0E00               	movlw	low (__smallconst shr (0+16))
  5636  002AA0  6EF8               	movwf	tblptru,c
  5637  002AA2  0E0F               	movlw	(high __ramtop+-1)
  5638  002AA4  64F7               	cpfsgt	tblptrh,c
  5639  002AA6  D003               	bra	i2u304_47
  5640  002AA8  0008               	tblrd		*
  5641  002AAA  50F5               	movf	tablat,w,c
  5642  002AAC  D005               	bra	i2u304_40
  5643  002AAE                     i2u304_47:
  5644  002AAE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5645  002AB2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5646  002AB6  50EF               	movf	indf0,w,c
  5647  002AB8                     i2u304_40:
  5648  002AB8  0900               	iorlw	0
  5649  002ABA  A4D8               	btfss	status,2,c
  5650  002ABC  D7D6               	goto	i2l2804
  5651  002ABE  0012               	return		;funcret
  5652  002AC0                     __end_ofi2_SerTxStr:
  5653                           	opt stack 0
  5654                           pclatu	equ	0xFFB
  5655                           pclath	equ	0xFFA
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           prodh	equ	0xFF4
  5661                           prodl	equ	0xFF3
  5662                           intcon	equ	0xFF2
  5663                           indf0	equ	0xFEF
  5664                           postinc0	equ	0xFEE
  5665                           fsr0h	equ	0xFEA
  5666                           fsr0l	equ	0xFE9
  5667                           wreg	equ	0xFE8
  5668                           indf1	equ	0xFE7
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           indf2	equ	0xFDF
  5672                           postinc2	equ	0xFDE
  5673                           fsr2h	equ	0xFDA
  5674                           fsr2l	equ	0xFD9
  5675                           status	equ	0xFD8
  5676                           
  5677 ;; *************** function i2_SerTx *****************
  5678 ;; Defined at:
  5679 ;;		line 41 in file "SerComm.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  c               1    wreg     unsigned char 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  c               1    0[COMRAM] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;		None               void
  5686 ;; Registers used:
  5687 ;;		wreg
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;Total ram usage:        1 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_RCInt
  5703 ;;		_keyValue
  5704 ;;		i2_SerTxStr
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text24
  5709  002D26                     __ptext24:
  5710                           	opt stack 0
  5711  002D26                     i2_SerTx:
  5712                           	opt stack 24
  5713                           
  5714                           ;incstack = 0
  5715                           ;i2SerTx@c stored from wreg
  5716  002D26  6E01               	movwf	i2SerTx@c,c
  5717                           
  5718                           ;SerComm.c: 43: TXREG1 = c;
  5719  002D28  C001  FFAD         	movff	i2SerTx@c,4013	;volatile
  5720                           
  5721                           ;SerComm.c: 44: while (PIR1bits.TX1IF == 0);
  5722  002D2C  D000               	goto	i2l28
  5723  002D2E                     i2l28:
  5724  002D2E  A89E               	btfss	3998,4,c	;volatile
  5725  002D30  D7FE               	goto	i2l28
  5726  002D32  0012               	return		;funcret
  5727  002D34                     __end_ofi2_SerTx:
  5728                           	opt stack 0
  5729                           pclatu	equ	0xFFB
  5730                           pclath	equ	0xFFA
  5731                           tblptru	equ	0xFF8
  5732                           tblptrh	equ	0xFF7
  5733                           tblptrl	equ	0xFF6
  5734                           tablat	equ	0xFF5
  5735                           prodh	equ	0xFF4
  5736                           prodl	equ	0xFF3
  5737                           intcon	equ	0xFF2
  5738                           indf0	equ	0xFEF
  5739                           postinc0	equ	0xFEE
  5740                           fsr0h	equ	0xFEA
  5741                           fsr0l	equ	0xFE9
  5742                           wreg	equ	0xFE8
  5743                           indf1	equ	0xFE7
  5744                           fsr1h	equ	0xFE2
  5745                           fsr1l	equ	0xFE1
  5746                           indf2	equ	0xFDF
  5747                           postinc2	equ	0xFDE
  5748                           fsr2h	equ	0xFDA
  5749                           fsr2l	equ	0xFD9
  5750                           status	equ	0xFD8
  5751                           
  5752 ;; *************** function _strtod *****************
  5753 ;; Defined at:
  5754 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/common/atof.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  s               2   23[COMRAM] PTR const unsigned char 
  5757 ;;		 -> value(10), 
  5758 ;;  res             2   25[COMRAM] PTR PTR const unsigned c
  5759 ;;		 -> NULL(0), keyValue@str_end(2), 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  _u              4   31[COMRAM] struct .
  5762 ;;  expon           1   30[COMRAM] char 
  5763 ;;  flags           1   29[COMRAM] unsigned char 
  5764 ;;  eexp            1   28[COMRAM] char 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  3   23[COMRAM] char 
  5767 ;; Registers used:
  5768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;Total ram usage:       12 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    2
  5781 ;; This function calls:
  5782 ;;		___altoft
  5783 ;;		___ftdiv
  5784 ;;		___ftge
  5785 ;;		___ftneg
  5786 ;;		___lmul
  5787 ;;		_isdigit
  5788 ;;		_isspace
  5789 ;;		i2___ftmul
  5790 ;; This function is called by:
  5791 ;;		_keyValue
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text25
  5796  0015D0                     __ptext25:
  5797                           	opt stack 0
  5798  0015D0                     _strtod:
  5799                           	opt stack 21
  5800                           
  5801                           ;incstack = 0
  5802  0015D0  501A               	movf	strtod@res,w,c
  5803  0015D2  101B               	iorwf	strtod@res+1,w,c
  5804  0015D4  B4D8               	btfsc	status,2,c
  5805  0015D6  D00C               	goto	i2l2510
  5806  0015D8  C01A  FFD9         	movff	strtod@res,fsr2l
  5807  0015DC  C01B  FFDA         	movff	strtod@res+1,fsr2h
  5808  0015E0  C018  FFDE         	movff	strtod@s,postinc2
  5809  0015E4  C019  FFDD         	movff	strtod@s+1,postdec2
  5810  0015E8  D003               	goto	i2l2510
  5811  0015EA                     i2l2508:
  5812  0015EA  4A18               	infsnz	strtod@s,f,c
  5813  0015EC  2A19               	incf	strtod@s+1,f,c
  5814  0015EE  D000               	goto	i2l2510
  5815  0015F0                     i2l2510:
  5816  0015F0  C018  FFD9         	movff	strtod@s,fsr2l
  5817  0015F4  C019  FFDA         	movff	strtod@s+1,fsr2h
  5818  0015F8  50DF               	movf	indf2,w,c
  5819  0015FA  6E1D               	movwf	strtod@eexp,c
  5820  0015FC  501D               	movf	strtod@eexp,w,c
  5821  0015FE  EC06  F016         	call	_isspace
  5822  001602  B0D8               	btfsc	status,0,c
  5823  001604  D7F2               	goto	i2l2508
  5824  001606  0E00               	movlw	0
  5825  001608  6E1E               	movwf	strtod@flags,c
  5826  00160A  0E2D               	movlw	45
  5827  00160C  181D               	xorwf	strtod@eexp,w,c
  5828  00160E  A4D8               	btfss	status,2,c
  5829  001610  D003               	goto	i2l2520
  5830  001612  0E01               	movlw	1
  5831  001614  6E1E               	movwf	strtod@flags,c
  5832  001616  D004               	goto	i2l2522
  5833  001618                     i2l2520:
  5834  001618  0E2B               	movlw	43
  5835  00161A  181D               	xorwf	strtod@eexp,w,c
  5836  00161C  A4D8               	btfss	status,2,c
  5837  00161E  D003               	goto	i2l2524
  5838  001620                     i2l2522:
  5839  001620  4A18               	infsnz	strtod@s,f,c
  5840  001622  2A19               	incf	strtod@s+1,f,c
  5841  001624  D000               	goto	i2l2524
  5842  001626                     i2l2524:
  5843  001626  0E00               	movlw	0
  5844  001628  6E1D               	movwf	strtod@eexp,c
  5845  00162A  0E00               	movlw	0
  5846  00162C  6E20               	movwf	strtod@_u,c
  5847  00162E  0E00               	movlw	0
  5848  001630  6E21               	movwf	strtod@_u+1,c
  5849  001632  0E00               	movlw	0
  5850  001634  6E22               	movwf	strtod@_u+2,c
  5851  001636  0E00               	movlw	0
  5852  001638  6E23               	movwf	strtod@_u+3,c
  5853  00163A  0E00               	movlw	0
  5854  00163C  6E1F               	movwf	strtod@expon,c
  5855  00163E  D000               	goto	i2l2530
  5856  001640                     i2l2530:
  5857  001640  B81E               	btfsc	strtod@flags,4,c
  5858  001642  D00A               	goto	i2l2536
  5859  001644  C018  FFD9         	movff	strtod@s,fsr2l
  5860  001648  C019  FFDA         	movff	strtod@s+1,fsr2h
  5861  00164C  0E2E               	movlw	46
  5862  00164E  18DE               	xorwf	postinc2,w,c
  5863  001650  A4D8               	btfss	status,2,c
  5864  001652  D002               	goto	i2l2536
  5865  001654  881E               	bsf	strtod@flags,4,c
  5866  001656  D040               	goto	i2l556
  5867  001658                     i2l2536:
  5868  001658  C018  FFD9         	movff	strtod@s,fsr2l
  5869  00165C  C019  FFDA         	movff	strtod@s+1,fsr2h
  5870  001660  50DF               	movf	indf2,w,c
  5871  001662  EC54  F016         	call	_isdigit
  5872  001666  A0D8               	btfss	status,0,c
  5873  001668  D03A               	goto	i2l2554
  5874  00166A  D001               	goto	i2l2540
  5875  00166C  D038               	goto	i2l2554
  5876  00166E                     i2l2540:
  5877  00166E  821E               	bsf	strtod@flags,1,c
  5878  001670  0E08               	movlw	8
  5879  001672  181D               	xorwf	strtod@eexp,w,c
  5880  001674  B4D8               	btfsc	status,2,c
  5881  001676  D02C               	goto	i2l554
  5882  001678  B81E               	btfsc	strtod@flags,4,c
  5883  00167A  061F               	decf	strtod@expon,f,c
  5884  00167C  2A1D               	incf	strtod@eexp,f,c
  5885  00167E  C020  F001         	movff	strtod@_u,___lmul@multiplier
  5886  001682  C021  F002         	movff	strtod@_u+1,___lmul@multiplier+1
  5887  001686  C022  F003         	movff	strtod@_u+2,___lmul@multiplier+2
  5888  00168A  C023  F004         	movff	strtod@_u+3,___lmul@multiplier+3
  5889  00168E  0E0A               	movlw	10
  5890  001690  6E05               	movwf	___lmul@multiplicand,c
  5891  001692  0E00               	movlw	0
  5892  001694  6E06               	movwf	___lmul@multiplicand+1,c
  5893  001696  0E00               	movlw	0
  5894  001698  6E07               	movwf	___lmul@multiplicand+2,c
  5895  00169A  0E00               	movlw	0
  5896  00169C  6E08               	movwf	___lmul@multiplicand+3,c
  5897  00169E  EC07  F015         	call	___lmul	;wreg free
  5898  0016A2  C001  F020         	movff	?___lmul,strtod@_u
  5899  0016A6  C002  F021         	movff	?___lmul+1,strtod@_u+1
  5900  0016AA  C003  F022         	movff	?___lmul+2,strtod@_u+2
  5901  0016AE  C004  F023         	movff	?___lmul+3,strtod@_u+3
  5902  0016B2  C018  FFD9         	movff	strtod@s,fsr2l
  5903  0016B6  C019  FFDA         	movff	strtod@s+1,fsr2h
  5904  0016BA  50DF               	movf	indf2,w,c
  5905  0016BC  6E1C               	movwf	??_strtod& (0+255),c
  5906  0016BE  0ED0               	movlw	208
  5907  0016C0  261C               	addwf	??_strtod,f,c
  5908  0016C2  501C               	movf	??_strtod,w,c
  5909  0016C4  2620               	addwf	strtod@_u,f,c
  5910  0016C6  0E00               	movlw	0
  5911  0016C8  2221               	addwfc	strtod@_u+1,f,c
  5912  0016CA  2222               	addwfc	strtod@_u+2,f,c
  5913  0016CC  2223               	addwfc	strtod@_u+3,f,c
  5914  0016CE  D004               	goto	i2l556
  5915  0016D0                     i2l554:
  5916  0016D0  B81E               	btfsc	strtod@flags,4,c
  5917  0016D2  D002               	goto	i2l556
  5918  0016D4  2A1F               	incf	strtod@expon,f,c
  5919  0016D6  D000               	goto	i2l556
  5920  0016D8                     i2l556:
  5921  0016D8  4A18               	infsnz	strtod@s,f,c
  5922  0016DA  2A19               	incf	strtod@s+1,f,c
  5923  0016DC  D7B1               	goto	i2l2530
  5924  0016DE                     i2l2554:
  5925  0016DE  0E00               	movlw	0
  5926  0016E0  6E1D               	movwf	strtod@eexp,c
  5927  0016E2  C018  FFD9         	movff	strtod@s,fsr2l
  5928  0016E6  C019  FFDA         	movff	strtod@s+1,fsr2h
  5929  0016EA  0E65               	movlw	101
  5930  0016EC  18DE               	xorwf	postinc2,w,c
  5931  0016EE  B4D8               	btfsc	status,2,c
  5932  0016F0  D008               	goto	i2l2560
  5933  0016F2  C018  FFD9         	movff	strtod@s,fsr2l
  5934  0016F6  C019  FFDA         	movff	strtod@s+1,fsr2h
  5935  0016FA  0E45               	movlw	69
  5936  0016FC  18DE               	xorwf	postinc2,w,c
  5937  0016FE  A4D8               	btfss	status,2,c
  5938  001700  D065               	goto	i2l2592
  5939  001702                     i2l2560:
  5940  001702  4A18               	infsnz	strtod@s,f,c
  5941  001704  2A19               	incf	strtod@s+1,f,c
  5942  001706  C018  FFD9         	movff	strtod@s,fsr2l
  5943  00170A  C019  FFDA         	movff	strtod@s+1,fsr2h
  5944  00170E  0E2D               	movlw	45
  5945  001710  18DE               	xorwf	postinc2,w,c
  5946  001712  A4D8               	btfss	status,2,c
  5947  001714  D002               	goto	i2l2564
  5948  001716  861E               	bsf	strtod@flags,3,c
  5949  001718  D008               	goto	i2l2566
  5950  00171A                     i2l2564:
  5951  00171A  C018  FFD9         	movff	strtod@s,fsr2l
  5952  00171E  C019  FFDA         	movff	strtod@s+1,fsr2h
  5953  001722  0E2B               	movlw	43
  5954  001724  18DE               	xorwf	postinc2,w,c
  5955  001726  A4D8               	btfss	status,2,c
  5956  001728  D006               	goto	i2l2570
  5957  00172A                     i2l2566:
  5958  00172A  4A18               	infsnz	strtod@s,f,c
  5959  00172C  2A19               	incf	strtod@s+1,f,c
  5960  00172E  D003               	goto	i2l2570
  5961  001730                     i2l2568:
  5962  001730  4A18               	infsnz	strtod@s,f,c
  5963  001732  2A19               	incf	strtod@s+1,f,c
  5964  001734  D000               	goto	i2l2570
  5965  001736                     i2l2570:
  5966  001736  C018  FFD9         	movff	strtod@s,fsr2l
  5967  00173A  C019  FFDA         	movff	strtod@s+1,fsr2h
  5968  00173E  0E30               	movlw	48
  5969  001740  18DE               	xorwf	postinc2,w,c
  5970  001742  B4D8               	btfsc	status,2,c
  5971  001744  D7F5               	goto	i2l2568
  5972  001746  C018  FFD9         	movff	strtod@s,fsr2l
  5973  00174A  C019  FFDA         	movff	strtod@s+1,fsr2h
  5974  00174E  50DF               	movf	indf2,w,c
  5975  001750  EC54  F016         	call	_isdigit
  5976  001754  A0D8               	btfss	status,0,c
  5977  001756  D036               	goto	i2l2588
  5978  001758  C018  FFD9         	movff	strtod@s,fsr2l
  5979  00175C  C019  FFDA         	movff	strtod@s+1,fsr2h
  5980  001760  50DF               	movf	indf2,w,c
  5981  001762  0FD0               	addlw	208
  5982  001764  6E1D               	movwf	strtod@eexp,c
  5983  001766  4A18               	infsnz	strtod@s,f,c
  5984  001768  2A19               	incf	strtod@s+1,f,c
  5985  00176A  C018  FFD9         	movff	strtod@s,fsr2l
  5986  00176E  C019  FFDA         	movff	strtod@s+1,fsr2h
  5987  001772  50DF               	movf	indf2,w,c
  5988  001774  EC54  F016         	call	_isdigit
  5989  001778  A0D8               	btfss	status,0,c
  5990  00177A  D024               	goto	i2l2588
  5991  00177C  C018  FFD9         	movff	strtod@s,fsr2l
  5992  001780  C019  FFDA         	movff	strtod@s+1,fsr2h
  5993  001784  50DF               	movf	indf2,w,c
  5994  001786  6E1C               	movwf	??_strtod& (0+255),c
  5995  001788  501D               	movf	strtod@eexp,w,c
  5996  00178A  0D0A               	mullw	10
  5997  00178C  50F3               	movf	prodl,w,c
  5998  00178E  241C               	addwf	??_strtod,w,c
  5999  001790  0FD0               	addlw	208
  6000  001792  6E1D               	movwf	strtod@eexp,c
  6001  001794  4A18               	infsnz	strtod@s,f,c
  6002  001796  2A19               	incf	strtod@s+1,f,c
  6003  001798  C018  FFD9         	movff	strtod@s,fsr2l
  6004  00179C  C019  FFDA         	movff	strtod@s+1,fsr2h
  6005  0017A0  50DF               	movf	indf2,w,c
  6006  0017A2  EC54  F016         	call	_isdigit
  6007  0017A6  A0D8               	btfss	status,0,c
  6008  0017A8  D00D               	goto	i2l2588
  6009  0017AA  C018  FFD9         	movff	strtod@s,fsr2l
  6010  0017AE  C019  FFDA         	movff	strtod@s+1,fsr2h
  6011  0017B2  50DF               	movf	indf2,w,c
  6012  0017B4  6E1C               	movwf	??_strtod& (0+255),c
  6013  0017B6  501D               	movf	strtod@eexp,w,c
  6014  0017B8  0D0A               	mullw	10
  6015  0017BA  50F3               	movf	prodl,w,c
  6016  0017BC  241C               	addwf	??_strtod,w,c
  6017  0017BE  0FD0               	addlw	208
  6018  0017C0  6E1D               	movwf	strtod@eexp,c
  6019  0017C2  D000               	goto	i2l2588
  6020  0017C4                     i2l2588:
  6021  0017C4  A61E               	btfss	strtod@flags,3,c
  6022  0017C6  D002               	goto	i2l2592
  6023  0017C8  6C1D               	negf	strtod@eexp,c
  6024  0017CA  D000               	goto	i2l2592
  6025  0017CC                     i2l2592:
  6026  0017CC  501D               	movf	strtod@eexp,w,c
  6027  0017CE  261F               	addwf	strtod@expon,f,c
  6028  0017D0  501A               	movf	strtod@res,w,c
  6029  0017D2  101B               	iorwf	strtod@res+1,w,c
  6030  0017D4  A4D8               	btfss	status,2,c
  6031  0017D6  A21E               	btfss	strtod@flags,1,c
  6032  0017D8  D009               	goto	i2l2600
  6033  0017DA  C01A  FFD9         	movff	strtod@res,fsr2l
  6034  0017DE  C01B  FFDA         	movff	strtod@res+1,fsr2h
  6035  0017E2  C018  FFDE         	movff	strtod@s,postinc2
  6036  0017E6  C019  FFDD         	movff	strtod@s+1,postdec2
  6037  0017EA  D000               	goto	i2l2600
  6038  0017EC                     i2l2600:
  6039  0017EC  C020  F009         	movff	strtod@_u,___altoft@c
  6040  0017F0  C021  F00A         	movff	strtod@_u+1,___altoft@c+1
  6041  0017F4  C022  F00B         	movff	strtod@_u+2,___altoft@c+2
  6042  0017F8  C023  F00C         	movff	strtod@_u+3,___altoft@c+3
  6043  0017FC  ECFB  F013         	call	___altoft	;wreg free
  6044  001800  C009  F020         	movff	?___altoft,strtod@_u
  6045  001804  C00A  F021         	movff	?___altoft+1,strtod@_u+1
  6046  001808  C00B  F022         	movff	?___altoft+2,strtod@_u+2
  6047  00180C  5020               	movf	strtod@_u,w,c
  6048  00180E  1021               	iorwf	strtod@_u+1,w,c
  6049  001810  1022               	iorwf	strtod@_u+2,w,c
  6050  001812  A4D8               	btfss	status,2,c
  6051  001814  D005               	goto	i2l2608
  6052  001816  0E00               	movlw	0
  6053  001818  6E18               	movwf	?_strtod,c
  6054  00181A  0E00               	movlw	0
  6055  00181C  D0A6               	goto	L9
  6056  00181E  D0C2               	goto	i2l573
  6057  001820                     i2l2608:
  6058  001820  AE1F               	btfss	strtod@expon,7,c
  6059  001822  D04C               	goto	i2l2636
  6060  001824  6C1F               	negf	strtod@expon,c
  6061  001826  D017               	goto	i2l2616
  6062  001828                     i2l2612:
  6063  001828  C020  F009         	movff	strtod@_u,___ftdiv@f1
  6064  00182C  C021  F00A         	movff	strtod@_u+1,___ftdiv@f1+1
  6065  001830  C022  F00B         	movff	strtod@_u+2,___ftdiv@f1+2
  6066  001834  0E03               	movlw	3
  6067  001836  6E0C               	movwf	___ftdiv@f2,c
  6068  001838  0E15               	movlw	21
  6069  00183A  6E0D               	movwf	___ftdiv@f2+1,c
  6070  00183C  0E50               	movlw	80
  6071  00183E  6E0E               	movwf	___ftdiv@f2+2,c
  6072  001840  EC04  F012         	call	___ftdiv	;wreg free
  6073  001844  C009  F020         	movff	?___ftdiv,strtod@_u
  6074  001848  C00A  F021         	movff	?___ftdiv+1,strtod@_u+1
  6075  00184C  C00B  F022         	movff	?___ftdiv+2,strtod@_u+2
  6076  001850  0EF6               	movlw	246
  6077  001852  261F               	addwf	strtod@expon,f,c
  6078  001854  D000               	goto	i2l2616
  6079  001856                     i2l2616:
  6080  001856  501F               	movf	strtod@expon,w,c
  6081  001858  0A80               	xorlw	128
  6082  00185A  0F76               	addlw	-138
  6083  00185C  A0D8               	btfss	status,0,c
  6084  00185E  D018               	goto	i2l2622
  6085  001860  D7E3               	goto	i2l2612
  6086  001862  D016               	goto	i2l2622
  6087  001864                     i2l2618:
  6088  001864  C020  F009         	movff	strtod@_u,___ftdiv@f1
  6089  001868  C021  F00A         	movff	strtod@_u+1,___ftdiv@f1+1
  6090  00186C  C022  F00B         	movff	strtod@_u+2,___ftdiv@f1+2
  6091  001870  0E00               	movlw	0
  6092  001872  6E0C               	movwf	___ftdiv@f2,c
  6093  001874  0E20               	movlw	32
  6094  001876  6E0D               	movwf	___ftdiv@f2+1,c
  6095  001878  0E41               	movlw	65
  6096  00187A  6E0E               	movwf	___ftdiv@f2+2,c
  6097  00187C  EC04  F012         	call	___ftdiv	;wreg free
  6098  001880  C009  F020         	movff	?___ftdiv,strtod@_u
  6099  001884  C00A  F021         	movff	?___ftdiv+1,strtod@_u+1
  6100  001888  C00B  F022         	movff	?___ftdiv+2,strtod@_u+2
  6101  00188C  061F               	decf	strtod@expon,f,c
  6102  00188E  D000               	goto	i2l2622
  6103  001890                     i2l2622:
  6104  001890  501F               	movf	strtod@expon,w,c
  6105  001892  A4D8               	btfss	status,2,c
  6106  001894  D7E7               	goto	i2l2618
  6107  001896  C020  F001         	movff	strtod@_u,___ftge@ff1
  6108  00189A  C021  F002         	movff	strtod@_u+1,___ftge@ff1+1
  6109  00189E  C022  F003         	movff	strtod@_u+2,___ftge@ff1+2
  6110  0018A2  0E00               	movlw	0
  6111  0018A4  6E04               	movwf	___ftge@ff2,c
  6112  0018A6  0E80               	movlw	128
  6113  0018A8  6E05               	movwf	___ftge@ff2+1,c
  6114  0018AA  0E00               	movlw	0
  6115  0018AC  6E06               	movwf	___ftge@ff2+2,c
  6116  0018AE  EC31  F013         	call	___ftge	;wreg free
  6117  0018B2  D04D               	goto	L10
  6118  0018B4  D077               	goto	i2l573
  6119  0018B6  D056               	goto	i2l2660
  6120  0018B8  D075               	goto	i2l573
  6121  0018BA  D05C               	goto	i2l583
  6122  0018BC                     i2l2636:
  6123  0018BC  501F               	movf	strtod@expon,w,c
  6124  0018BE  0A80               	xorlw	128
  6125  0018C0  0F7F               	addlw	-129
  6126  0018C2  B0D8               	btfsc	status,0,c
  6127  0018C4  D019               	goto	i2l2644
  6128  0018C6  D056               	goto	i2l583
  6129  0018C8  D017               	goto	i2l2644
  6130  0018CA                     i2l2640:
  6131  0018CA  C020  F009         	movff	strtod@_u,i2___ftmul@f1
  6132  0018CE  C021  F00A         	movff	strtod@_u+1,i2___ftmul@f1+1
  6133  0018D2  C022  F00B         	movff	strtod@_u+2,i2___ftmul@f1+2
  6134  0018D6  0E03               	movlw	3
  6135  0018D8  6E0C               	movwf	i2___ftmul@f2,c
  6136  0018DA  0E15               	movlw	21
  6137  0018DC  6E0D               	movwf	i2___ftmul@f2+1,c
  6138  0018DE  0E50               	movlw	80
  6139  0018E0  6E0E               	movwf	i2___ftmul@f2+2,c
  6140  0018E2  EC88  F011         	call	i2___ftmul	;wreg free
  6141  0018E6  C009  F020         	movff	?i2___ftmul,strtod@_u
  6142  0018EA  C00A  F021         	movff	?i2___ftmul+1,strtod@_u+1
  6143  0018EE  C00B  F022         	movff	?i2___ftmul+2,strtod@_u+2
  6144  0018F2  0EF6               	movlw	246
  6145  0018F4  261F               	addwf	strtod@expon,f,c
  6146  0018F6  D000               	goto	i2l2644
  6147  0018F8                     i2l2644:
  6148  0018F8  0E0A               	movlw	10
  6149  0018FA  601F               	cpfslt	strtod@expon,c
  6150  0018FC  D7E6               	goto	i2l2640
  6151  0018FE  D016               	goto	i2l2650
  6152  001900                     i2l2646:
  6153  001900  C020  F009         	movff	strtod@_u,i2___ftmul@f1
  6154  001904  C021  F00A         	movff	strtod@_u+1,i2___ftmul@f1+1
  6155  001908  C022  F00B         	movff	strtod@_u+2,i2___ftmul@f1+2
  6156  00190C  0E00               	movlw	0
  6157  00190E  6E0C               	movwf	i2___ftmul@f2,c
  6158  001910  0E20               	movlw	32
  6159  001912  6E0D               	movwf	i2___ftmul@f2+1,c
  6160  001914  0E41               	movlw	65
  6161  001916  6E0E               	movwf	i2___ftmul@f2+2,c
  6162  001918  EC88  F011         	call	i2___ftmul	;wreg free
  6163  00191C  C009  F020         	movff	?i2___ftmul,strtod@_u
  6164  001920  C00A  F021         	movff	?i2___ftmul+1,strtod@_u+1
  6165  001924  C00B  F022         	movff	?i2___ftmul+2,strtod@_u+2
  6166  001928  061F               	decf	strtod@expon,f,c
  6167  00192A  D000               	goto	i2l2650
  6168  00192C                     i2l2650:
  6169  00192C  501F               	movf	strtod@expon,w,c
  6170  00192E  A4D8               	btfss	status,2,c
  6171  001930  D7E7               	goto	i2l2646
  6172  001932  0EFF               	movlw	255
  6173  001934  6E01               	movwf	___ftge@ff1,c
  6174  001936  0E7F               	movlw	127
  6175  001938  6E02               	movwf	___ftge@ff1+1,c
  6176  00193A  0E7F               	movlw	127
  6177  00193C  6E03               	movwf	___ftge@ff1+2,c
  6178  00193E  C020  F004         	movff	strtod@_u,___ftge@ff2
  6179  001942  C021  F005         	movff	strtod@_u+1,___ftge@ff2+1
  6180  001946  C022  F006         	movff	strtod@_u+2,___ftge@ff2+2
  6181  00194A  EC31  F013         	call	___ftge	;wreg free
  6182  00194E                     L10:
  6183  00194E  B0D8               	btfsc	status,0,c
  6184  001950  D011               	goto	i2l583
  6185  001952  A01E               	btfss	strtod@flags,0,c
  6186  001954  D007               	goto	i2l2660
  6187  001956  0E00               	movlw	0
  6188  001958  6E18               	movwf	?_strtod,c
  6189  00195A  0E80               	movlw	128
  6190  00195C  6E19               	movwf	?_strtod+1,c
  6191  00195E  0E80               	movlw	128
  6192  001960  D006               	goto	L6
  6193  001962  D020               	goto	i2l573
  6194  001964                     i2l2660:
  6195  001964  0E00               	movlw	0
  6196  001966  6E18               	movwf	?_strtod,c
  6197  001968  0E80               	movlw	128
  6198  00196A                     L9:
  6199  00196A  6E19               	movwf	?_strtod+1,c
  6200  00196C  0E00               	movlw	0
  6201  00196E                     L6:
  6202  00196E  6E1A               	movwf	?_strtod+2,c
  6203  001970  D019               	goto	i2l573
  6204  001972  D000               	goto	i2l583
  6205  001974                     i2l583:
  6206  001974  A01E               	btfss	strtod@flags,0,c
  6207  001976  D00F               	goto	i2l2666
  6208  001978  C020  F001         	movff	strtod@_u,___ftneg@f1
  6209  00197C  C021  F002         	movff	strtod@_u+1,___ftneg@f1+1
  6210  001980  C022  F003         	movff	strtod@_u+2,___ftneg@f1+2
  6211  001984  EC42  F016         	call	___ftneg	;wreg free
  6212  001988  C001  F020         	movff	?___ftneg,strtod@_u
  6213  00198C  C002  F021         	movff	?___ftneg+1,strtod@_u+1
  6214  001990  C003  F022         	movff	?___ftneg+2,strtod@_u+2
  6215  001994  D000               	goto	i2l2666
  6216  001996                     i2l2666:
  6217  001996  C020  F018         	movff	strtod@_u,?_strtod
  6218  00199A  C021  F019         	movff	strtod@_u+1,?_strtod+1
  6219  00199E  C022  F01A         	movff	strtod@_u+2,?_strtod+2
  6220  0019A2  D000               	goto	i2l573
  6221  0019A4                     i2l573:
  6222  0019A4  0012               	return		;funcret
  6223  0019A6                     __end_of_strtod:
  6224                           	opt stack 0
  6225                           pclatu	equ	0xFFB
  6226                           pclath	equ	0xFFA
  6227                           tblptru	equ	0xFF8
  6228                           tblptrh	equ	0xFF7
  6229                           tblptrl	equ	0xFF6
  6230                           tablat	equ	0xFF5
  6231                           prodh	equ	0xFF4
  6232                           prodl	equ	0xFF3
  6233                           intcon	equ	0xFF2
  6234                           indf0	equ	0xFEF
  6235                           postinc0	equ	0xFEE
  6236                           fsr0h	equ	0xFEA
  6237                           fsr0l	equ	0xFE9
  6238                           wreg	equ	0xFE8
  6239                           indf1	equ	0xFE7
  6240                           fsr1h	equ	0xFE2
  6241                           fsr1l	equ	0xFE1
  6242                           indf2	equ	0xFDF
  6243                           postinc2	equ	0xFDE
  6244                           postdec2	equ	0xFDD
  6245                           fsr2h	equ	0xFDA
  6246                           fsr2l	equ	0xFD9
  6247                           status	equ	0xFD8
  6248                           
  6249 ;; *************** function i2___ftmul *****************
  6250 ;; Defined at:
  6251 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  f1              3    8[COMRAM] float 
  6254 ;;  f2              3   11[COMRAM] float 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  __ftmul         3   18[COMRAM] unsigned um
  6257 ;;  __ftmul         1   22[COMRAM] unsigned char 
  6258 ;;  __ftmul         1   21[COMRAM] unsigned char 
  6259 ;;  __ftmul         1   17[COMRAM] unsigned char 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  3    8[COMRAM] float 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6269 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;Total ram usage:       15 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    1
  6276 ;; This function calls:
  6277 ;;		i2___ftpack
  6278 ;; This function is called by:
  6279 ;;		_strtod
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text26
  6284  002310                     __ptext26:
  6285                           	opt stack 0
  6286  002310                     i2___ftmul:
  6287                           	opt stack 21
  6288                           
  6289                           ;incstack = 0
  6290  002310  C00B  F00F         	movff	i2___ftmul@f1+2,??i2___ftmul
  6291  002314  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
  6292  002316  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
  6293  002318  340A               	rlcf	i2___ftmul@f1+1,w,c
  6294  00231A  360F               	rlcf	??i2___ftmul& (0+255),f,c
  6295  00231C  E301               	bnc	u239_41
  6296  00231E  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
  6297  002320                     u239_41:
  6298  002320  500F               	movf	??i2___ftmul,w,c
  6299  002322  6E12               	movwf	i2___ftmul@exp,c
  6300  002324  5012               	movf	i2___ftmul@exp,w,c
  6301  002326  A4D8               	btfss	status,2,c
  6302  002328  D002               	goto	i2l2442
  6303  00232A  D00E               	goto	i2l2444
  6304  00232C  D06C               	goto	i2l830
  6305  00232E                     i2l2442:
  6306  00232E  C00E  F00F         	movff	i2___ftmul@f2+2,??i2___ftmul
  6307  002332  6A10               	clrf	(??i2___ftmul+1)& (0+255),c
  6308  002334  6A11               	clrf	(??i2___ftmul+2)& (0+255),c
  6309  002336  340D               	rlcf	i2___ftmul@f2+1,w,c
  6310  002338  360F               	rlcf	??i2___ftmul& (0+255),f,c
  6311  00233A  E301               	bnc	u241_41
  6312  00233C  8010               	bsf	(??i2___ftmul+1)& (0+255),0,c
  6313  00233E                     u241_41:
  6314  00233E  500F               	movf	??i2___ftmul,w,c
  6315  002340  6E17               	movwf	i2___ftmul@sign,c
  6316  002342  5017               	movf	i2___ftmul@sign,w,c
  6317  002344  A4D8               	btfss	status,2,c
  6318  002346  D007               	goto	i2l2448
  6319  002348                     i2l2444:
  6320  002348  0E00               	movlw	0
  6321  00234A  6E09               	movwf	?i2___ftmul,c
  6322  00234C  0E00               	movlw	0
  6323  00234E  6E0A               	movwf	?i2___ftmul+1,c
  6324  002350  0E00               	movlw	0
  6325  002352  6E0B               	movwf	?i2___ftmul+2,c
  6326  002354  D058               	goto	i2l830
  6327  002356                     i2l2448:
  6328  002356  5017               	movf	i2___ftmul@sign,w,c
  6329  002358  0F7B               	addlw	123
  6330  00235A  2612               	addwf	i2___ftmul@exp,f,c
  6331  00235C  C00B  F017         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  6332  002360  500E               	movf	i2___ftmul@f2+2,w,c
  6333  002362  1A17               	xorwf	i2___ftmul@sign,f,c
  6334  002364  0E80               	movlw	128
  6335  002366  1617               	andwf	i2___ftmul@sign,f,c
  6336  002368  8E0A               	bsf	i2___ftmul@f1+1,7,c
  6337  00236A  8E0D               	bsf	i2___ftmul@f2+1,7,c
  6338  00236C  0EFF               	movlw	255
  6339  00236E  160C               	andwf	i2___ftmul@f2,f,c
  6340  002370  0EFF               	movlw	255
  6341  002372  160D               	andwf	i2___ftmul@f2+1,f,c
  6342  002374  0E00               	movlw	0
  6343  002376  160E               	andwf	i2___ftmul@f2+2,f,c
  6344  002378  0E00               	movlw	0
  6345  00237A  6E13               	movwf	i2___ftmul@f3_as_product,c
  6346  00237C  0E00               	movlw	0
  6347  00237E  6E14               	movwf	i2___ftmul@f3_as_product+1,c
  6348  002380  0E00               	movlw	0
  6349  002382  6E15               	movwf	i2___ftmul@f3_as_product+2,c
  6350  002384  0E07               	movlw	7
  6351  002386  6E16               	movwf	i2___ftmul@cntr,c
  6352  002388  D000               	goto	i2l2462
  6353  00238A                     i2l2462:
  6354  00238A  A009               	btfss	i2___ftmul@f1,0,c
  6355  00238C  D007               	goto	i2l2466
  6356  00238E  500C               	movf	i2___ftmul@f2,w,c
  6357  002390  2613               	addwf	i2___ftmul@f3_as_product,f,c
  6358  002392  500D               	movf	i2___ftmul@f2+1,w,c
  6359  002394  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
  6360  002396  500E               	movf	i2___ftmul@f2+2,w,c
  6361  002398  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
  6362  00239A  D000               	goto	i2l2466
  6363  00239C                     i2l2466:
  6364  00239C  90D8               	bcf	status,0,c
  6365  00239E  320B               	rrcf	i2___ftmul@f1+2,f,c
  6366  0023A0  320A               	rrcf	i2___ftmul@f1+1,f,c
  6367  0023A2  3209               	rrcf	i2___ftmul@f1,f,c
  6368  0023A4  90D8               	bcf	status,0,c
  6369  0023A6  360C               	rlcf	i2___ftmul@f2,f,c
  6370  0023A8  360D               	rlcf	i2___ftmul@f2+1,f,c
  6371  0023AA  360E               	rlcf	i2___ftmul@f2+2,f,c
  6372  0023AC  2E16               	decfsz	i2___ftmul@cntr,f,c
  6373  0023AE  D7ED               	goto	i2l2462
  6374  0023B0  D000               	goto	i2l2470
  6375  0023B2                     i2l2470:
  6376  0023B2  0E09               	movlw	9
  6377  0023B4  6E16               	movwf	i2___ftmul@cntr,c
  6378  0023B6  D000               	goto	i2l2472
  6379  0023B8                     i2l2472:
  6380  0023B8  A009               	btfss	i2___ftmul@f1,0,c
  6381  0023BA  D007               	goto	i2l2476
  6382  0023BC  500C               	movf	i2___ftmul@f2,w,c
  6383  0023BE  2613               	addwf	i2___ftmul@f3_as_product,f,c
  6384  0023C0  500D               	movf	i2___ftmul@f2+1,w,c
  6385  0023C2  2214               	addwfc	i2___ftmul@f3_as_product+1,f,c
  6386  0023C4  500E               	movf	i2___ftmul@f2+2,w,c
  6387  0023C6  2215               	addwfc	i2___ftmul@f3_as_product+2,f,c
  6388  0023C8  D000               	goto	i2l2476
  6389  0023CA                     i2l2476:
  6390  0023CA  90D8               	bcf	status,0,c
  6391  0023CC  320B               	rrcf	i2___ftmul@f1+2,f,c
  6392  0023CE  320A               	rrcf	i2___ftmul@f1+1,f,c
  6393  0023D0  3209               	rrcf	i2___ftmul@f1,f,c
  6394  0023D2  90D8               	bcf	status,0,c
  6395  0023D4  3215               	rrcf	i2___ftmul@f3_as_product+2,f,c
  6396  0023D6  3214               	rrcf	i2___ftmul@f3_as_product+1,f,c
  6397  0023D8  3213               	rrcf	i2___ftmul@f3_as_product,f,c
  6398  0023DA  2E16               	decfsz	i2___ftmul@cntr,f,c
  6399  0023DC  D7ED               	goto	i2l2472
  6400  0023DE  D000               	goto	i2l2480
  6401  0023E0                     i2l2480:
  6402  0023E0  C013  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  6403  0023E4  C014  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  6404  0023E8  C015  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  6405  0023EC  C012  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  6406  0023F0  C017  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  6407  0023F4  EC75  F012         	call	i2___ftpack	;wreg free
  6408  0023F8  C001  F009         	movff	?i2___ftpack,?i2___ftmul
  6409  0023FC  C002  F00A         	movff	?i2___ftpack+1,?i2___ftmul+1
  6410  002400  C003  F00B         	movff	?i2___ftpack+2,?i2___ftmul+2
  6411  002404  D000               	goto	i2l830
  6412  002406                     i2l830:
  6413  002406  0012               	return		;funcret
  6414  002408                     __end_ofi2___ftmul:
  6415                           	opt stack 0
  6416                           pclatu	equ	0xFFB
  6417                           pclath	equ	0xFFA
  6418                           tblptru	equ	0xFF8
  6419                           tblptrh	equ	0xFF7
  6420                           tblptrl	equ	0xFF6
  6421                           tablat	equ	0xFF5
  6422                           prodh	equ	0xFF4
  6423                           prodl	equ	0xFF3
  6424                           intcon	equ	0xFF2
  6425                           indf0	equ	0xFEF
  6426                           postinc0	equ	0xFEE
  6427                           fsr0h	equ	0xFEA
  6428                           fsr0l	equ	0xFE9
  6429                           wreg	equ	0xFE8
  6430                           indf1	equ	0xFE7
  6431                           fsr1h	equ	0xFE2
  6432                           fsr1l	equ	0xFE1
  6433                           indf2	equ	0xFDF
  6434                           postinc2	equ	0xFDE
  6435                           postdec2	equ	0xFDD
  6436                           fsr2h	equ	0xFDA
  6437                           fsr2l	equ	0xFD9
  6438                           status	equ	0xFD8
  6439                           
  6440 ;; *************** function _isspace *****************
  6441 ;; Defined at:
  6442 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isspace.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  c               1    wreg     unsigned char 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;  c               1    2[COMRAM] unsigned char 
  6447 ;; Return value:  Size  Location     Type
  6448 ;;		None               void
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;Total ram usage:        3 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_keyValue
  6466 ;;		_strtod
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text27
  6471  002C0C                     __ptext27:
  6472                           	opt stack 0
  6473  002C0C                     _isspace:
  6474                           	opt stack 22
  6475                           
  6476                           ;incstack = 0
  6477                           ;isspace@c stored from wreg
  6478  002C0C  6E03               	movwf	isspace@c,c
  6479  002C0E  0E01               	movlw	1
  6480  002C10  6E02               	movwf	_isspace$1255,c
  6481  002C12  0E20               	movlw	32
  6482  002C14  1803               	xorwf	isspace@c,w,c
  6483  002C16  B4D8               	btfsc	status,2,c
  6484  002C18  D00A               	goto	i2l2288
  6485  002C1A  0E0E               	movlw	14
  6486  002C1C  6003               	cpfslt	isspace@c,c
  6487  002C1E  D004               	goto	i2l2286
  6488  002C20  0E09               	movlw	9
  6489  002C22  6003               	cpfslt	isspace@c,c
  6490  002C24  D004               	goto	i2l2288
  6491  002C26  D000               	goto	i2l2286
  6492  002C28                     i2l2286:
  6493  002C28  0E00               	movlw	0
  6494  002C2A  6E02               	movwf	_isspace$1255,c
  6495  002C2C  D000               	goto	i2l2288
  6496  002C2E                     i2l2288:
  6497  002C2E  C002  F001         	movff	_isspace$1255,??_isspace
  6498  002C32  3001               	rrcf	??_isspace,w,c
  6499  002C34  D000               	goto	i2l871
  6500  002C36                     i2l871:
  6501  002C36  0012               	return		;funcret
  6502  002C38                     __end_of_isspace:
  6503                           	opt stack 0
  6504                           pclatu	equ	0xFFB
  6505                           pclath	equ	0xFFA
  6506                           tblptru	equ	0xFF8
  6507                           tblptrh	equ	0xFF7
  6508                           tblptrl	equ	0xFF6
  6509                           tablat	equ	0xFF5
  6510                           prodh	equ	0xFF4
  6511                           prodl	equ	0xFF3
  6512                           intcon	equ	0xFF2
  6513                           indf0	equ	0xFEF
  6514                           postinc0	equ	0xFEE
  6515                           fsr0h	equ	0xFEA
  6516                           fsr0l	equ	0xFE9
  6517                           wreg	equ	0xFE8
  6518                           indf1	equ	0xFE7
  6519                           fsr1h	equ	0xFE2
  6520                           fsr1l	equ	0xFE1
  6521                           indf2	equ	0xFDF
  6522                           postinc2	equ	0xFDE
  6523                           postdec2	equ	0xFDD
  6524                           fsr2h	equ	0xFDA
  6525                           fsr2l	equ	0xFD9
  6526                           status	equ	0xFD8
  6527                           
  6528 ;; *************** function _isdigit *****************
  6529 ;; Defined at:
  6530 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  c               1    wreg     unsigned char 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  c               1    2[COMRAM] unsigned char 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;		None               void
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;Total ram usage:        3 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_strtod
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text28
  6558  002CA8                     __ptext28:
  6559                           	opt stack 0
  6560  002CA8                     _isdigit:
  6561                           	opt stack 22
  6562                           
  6563                           ;incstack = 0
  6564                           ;isdigit@c stored from wreg
  6565  002CA8  6E03               	movwf	isdigit@c,c
  6566  002CAA  0E00               	movlw	0
  6567  002CAC  6E02               	movwf	_isdigit$1252,c
  6568  002CAE  0E3A               	movlw	58
  6569  002CB0  6003               	cpfslt	isdigit@c,c
  6570  002CB2  D006               	goto	i2l2408
  6571  002CB4  0E2F               	movlw	47
  6572  002CB6  6403               	cpfsgt	isdigit@c,c
  6573  002CB8  D003               	goto	i2l2408
  6574  002CBA  0E01               	movlw	1
  6575  002CBC  6E02               	movwf	_isdigit$1252,c
  6576  002CBE  D000               	goto	i2l2408
  6577  002CC0                     i2l2408:
  6578  002CC0  C002  F001         	movff	_isdigit$1252,??_isdigit
  6579  002CC4  3001               	rrcf	??_isdigit,w,c
  6580  002CC6  D000               	goto	i2l866
  6581  002CC8                     i2l866:
  6582  002CC8  0012               	return		;funcret
  6583  002CCA                     __end_of_isdigit:
  6584                           	opt stack 0
  6585                           pclatu	equ	0xFFB
  6586                           pclath	equ	0xFFA
  6587                           tblptru	equ	0xFF8
  6588                           tblptrh	equ	0xFF7
  6589                           tblptrl	equ	0xFF6
  6590                           tablat	equ	0xFF5
  6591                           prodh	equ	0xFF4
  6592                           prodl	equ	0xFF3
  6593                           intcon	equ	0xFF2
  6594                           indf0	equ	0xFEF
  6595                           postinc0	equ	0xFEE
  6596                           fsr0h	equ	0xFEA
  6597                           fsr0l	equ	0xFE9
  6598                           wreg	equ	0xFE8
  6599                           indf1	equ	0xFE7
  6600                           fsr1h	equ	0xFE2
  6601                           fsr1l	equ	0xFE1
  6602                           indf2	equ	0xFDF
  6603                           postinc2	equ	0xFDE
  6604                           postdec2	equ	0xFDD
  6605                           fsr2h	equ	0xFDA
  6606                           fsr2l	equ	0xFD9
  6607                           status	equ	0xFD8
  6608                           
  6609 ;; *************** function ___lmul *****************
  6610 ;; Defined at:
  6611 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul32.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  multiplier      4    0[COMRAM] unsigned long 
  6614 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  product         4    8[COMRAM] unsigned long 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  4    0[COMRAM] unsigned long 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6626 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6629 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;Total ram usage:       12 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_strtod
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text29
  6640  002A0E                     __ptext29:
  6641                           	opt stack 0
  6642  002A0E                     ___lmul:
  6643                           	opt stack 22
  6644                           
  6645                           ;incstack = 0
  6646  002A0E  0E00               	movlw	0
  6647  002A10  6E09               	movwf	___lmul@product,c
  6648  002A12  0E00               	movlw	0
  6649  002A14  6E0A               	movwf	___lmul@product+1,c
  6650  002A16  0E00               	movlw	0
  6651  002A18  6E0B               	movwf	___lmul@product+2,c
  6652  002A1A  0E00               	movlw	0
  6653  002A1C  6E0C               	movwf	___lmul@product+3,c
  6654  002A1E  D000               	goto	i2l2294
  6655  002A20                     i2l2294:
  6656  002A20  A001               	btfss	___lmul@multiplier,0,c
  6657  002A22  D009               	goto	i2l2298
  6658  002A24  5005               	movf	___lmul@multiplicand,w,c
  6659  002A26  2609               	addwf	___lmul@product,f,c
  6660  002A28  5006               	movf	___lmul@multiplicand+1,w,c
  6661  002A2A  220A               	addwfc	___lmul@product+1,f,c
  6662  002A2C  5007               	movf	___lmul@multiplicand+2,w,c
  6663  002A2E  220B               	addwfc	___lmul@product+2,f,c
  6664  002A30  5008               	movf	___lmul@multiplicand+3,w,c
  6665  002A32  220C               	addwfc	___lmul@product+3,f,c
  6666  002A34  D000               	goto	i2l2298
  6667  002A36                     i2l2298:
  6668  002A36  90D8               	bcf	status,0,c
  6669  002A38  3605               	rlcf	___lmul@multiplicand,f,c
  6670  002A3A  3606               	rlcf	___lmul@multiplicand+1,f,c
  6671  002A3C  3607               	rlcf	___lmul@multiplicand+2,f,c
  6672  002A3E  3608               	rlcf	___lmul@multiplicand+3,f,c
  6673  002A40  90D8               	bcf	status,0,c
  6674  002A42  3204               	rrcf	___lmul@multiplier+3,f,c
  6675  002A44  3203               	rrcf	___lmul@multiplier+2,f,c
  6676  002A46  3202               	rrcf	___lmul@multiplier+1,f,c
  6677  002A48  3201               	rrcf	___lmul@multiplier,f,c
  6678  002A4A  5001               	movf	___lmul@multiplier,w,c
  6679  002A4C  1002               	iorwf	___lmul@multiplier+1,w,c
  6680  002A4E  1003               	iorwf	___lmul@multiplier+2,w,c
  6681  002A50  1004               	iorwf	___lmul@multiplier+3,w,c
  6682  002A52  A4D8               	btfss	status,2,c
  6683  002A54  D7E5               	goto	i2l2294
  6684  002A56  C009  F001         	movff	___lmul@product,?___lmul
  6685  002A5A  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6686  002A5E  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6687  002A62  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6688  002A66  0012               	return		;funcret
  6689  002A68                     __end_of___lmul:
  6690                           	opt stack 0
  6691                           pclatu	equ	0xFFB
  6692                           pclath	equ	0xFFA
  6693                           tblptru	equ	0xFF8
  6694                           tblptrh	equ	0xFF7
  6695                           tblptrl	equ	0xFF6
  6696                           tablat	equ	0xFF5
  6697                           prodh	equ	0xFF4
  6698                           prodl	equ	0xFF3
  6699                           intcon	equ	0xFF2
  6700                           indf0	equ	0xFEF
  6701                           postinc0	equ	0xFEE
  6702                           fsr0h	equ	0xFEA
  6703                           fsr0l	equ	0xFE9
  6704                           wreg	equ	0xFE8
  6705                           indf1	equ	0xFE7
  6706                           fsr1h	equ	0xFE2
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function ___ftneg *****************
  6716 ;; Defined at:
  6717 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  f1              3    0[COMRAM] float 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  3    0[COMRAM] float 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6731 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;Total ram usage:        3 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_strtod
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text30
  6745  002C84                     __ptext30:
  6746                           	opt stack 0
  6747  002C84                     ___ftneg:
  6748                           	opt stack 22
  6749                           
  6750                           ;incstack = 0
  6751  002C84  5001               	movf	___ftneg@f1,w,c
  6752  002C86  1002               	iorwf	___ftneg@f1+1,w,c
  6753  002C88  1003               	iorwf	___ftneg@f1+2,w,c
  6754  002C8A  B4D8               	btfsc	status,2,c
  6755  002C8C  D006               	goto	i2l840
  6756  002C8E  0E00               	movlw	0
  6757  002C90  1A01               	xorwf	___ftneg@f1,f,c
  6758  002C92  0E00               	movlw	0
  6759  002C94  1A02               	xorwf	___ftneg@f1+1,f,c
  6760  002C96  0E80               	movlw	128
  6761  002C98  1A03               	xorwf	___ftneg@f1+2,f,c
  6762  002C9A                     i2l840:
  6763  002C9A  C001  F001         	movff	___ftneg@f1,?___ftneg
  6764  002C9E  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  6765  002CA2  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  6766  002CA6  0012               	return		;funcret
  6767  002CA8                     __end_of___ftneg:
  6768                           	opt stack 0
  6769                           pclatu	equ	0xFFB
  6770                           pclath	equ	0xFFA
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           indf0	equ	0xFEF
  6779                           postinc0	equ	0xFEE
  6780                           fsr0h	equ	0xFEA
  6781                           fsr0l	equ	0xFE9
  6782                           wreg	equ	0xFE8
  6783                           indf1	equ	0xFE7
  6784                           fsr1h	equ	0xFE2
  6785                           fsr1l	equ	0xFE1
  6786                           indf2	equ	0xFDF
  6787                           postinc2	equ	0xFDE
  6788                           postdec2	equ	0xFDD
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function ___ftge *****************
  6794 ;; Defined at:
  6795 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/ftge.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  ff1             3    0[COMRAM] float 
  6798 ;;  ff2             3    3[COMRAM] float 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;		None               void
  6803 ;; Registers used:
  6804 ;;		wreg, status,2, status,0
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6810 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;Total ram usage:        9 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_strtod
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text31
  6824  002662                     __ptext31:
  6825                           	opt stack 0
  6826  002662                     ___ftge:
  6827                           	opt stack 22
  6828                           
  6829                           ;incstack = 0
  6830  002662  AE03               	btfss	___ftge@ff1+2,7,c
  6831  002664  D017               	goto	i2l2416
  6832  002666  C001  F007         	movff	___ftge@ff1,??___ftge
  6833  00266A  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  6834  00266E  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  6835  002672  1E07               	comf	??___ftge,f,c
  6836  002674  1E08               	comf	??___ftge+1,f,c
  6837  002676  1E09               	comf	??___ftge+2,f,c
  6838  002678  2A07               	incf	??___ftge,f,c
  6839  00267A  0E00               	movlw	0
  6840  00267C  2208               	addwfc	??___ftge+1,f,c
  6841  00267E  2209               	addwfc	??___ftge+2,f,c
  6842  002680  0E00               	movlw	0
  6843  002682  2407               	addwf	??___ftge,w,c
  6844  002684  6E01               	movwf	___ftge@ff1,c
  6845  002686  0E00               	movlw	0
  6846  002688  2008               	addwfc	??___ftge+1,w,c
  6847  00268A  6E02               	movwf	___ftge@ff1+1,c
  6848  00268C  0E80               	movlw	128
  6849  00268E  2009               	addwfc	??___ftge+2,w,c
  6850  002690  6E03               	movwf	___ftge@ff1+2,c
  6851  002692  D000               	goto	i2l2416
  6852  002694                     i2l2416:
  6853  002694  AE06               	btfss	___ftge@ff2+2,7,c
  6854  002696  D017               	goto	i2l2420
  6855  002698  C004  F007         	movff	___ftge@ff2,??___ftge
  6856  00269C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  6857  0026A0  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  6858  0026A4  1E07               	comf	??___ftge,f,c
  6859  0026A6  1E08               	comf	??___ftge+1,f,c
  6860  0026A8  1E09               	comf	??___ftge+2,f,c
  6861  0026AA  2A07               	incf	??___ftge,f,c
  6862  0026AC  0E00               	movlw	0
  6863  0026AE  2208               	addwfc	??___ftge+1,f,c
  6864  0026B0  2209               	addwfc	??___ftge+2,f,c
  6865  0026B2  0E00               	movlw	0
  6866  0026B4  2407               	addwf	??___ftge,w,c
  6867  0026B6  6E04               	movwf	___ftge@ff2,c
  6868  0026B8  0E00               	movlw	0
  6869  0026BA  2008               	addwfc	??___ftge+1,w,c
  6870  0026BC  6E05               	movwf	___ftge@ff2+1,c
  6871  0026BE  0E80               	movlw	128
  6872  0026C0  2009               	addwfc	??___ftge+2,w,c
  6873  0026C2  6E06               	movwf	___ftge@ff2+2,c
  6874  0026C4  D000               	goto	i2l2420
  6875  0026C6                     i2l2420:
  6876  0026C6  0E00               	movlw	0
  6877  0026C8  1A01               	xorwf	___ftge@ff1,f,c
  6878  0026CA  0E00               	movlw	0
  6879  0026CC  1A02               	xorwf	___ftge@ff1+1,f,c
  6880  0026CE  0E80               	movlw	128
  6881  0026D0  1A03               	xorwf	___ftge@ff1+2,f,c
  6882  0026D2  0E00               	movlw	0
  6883  0026D4  1A04               	xorwf	___ftge@ff2,f,c
  6884  0026D6  0E00               	movlw	0
  6885  0026D8  1A05               	xorwf	___ftge@ff2+1,f,c
  6886  0026DA  0E80               	movlw	128
  6887  0026DC  1A06               	xorwf	___ftge@ff2+2,f,c
  6888  0026DE  5004               	movf	___ftge@ff2,w,c
  6889  0026E0  5C01               	subwf	___ftge@ff1,w,c
  6890  0026E2  5005               	movf	___ftge@ff2+1,w,c
  6891  0026E4  5802               	subwfb	___ftge@ff1+1,w,c
  6892  0026E6  5006               	movf	___ftge@ff2+2,w,c
  6893  0026E8  5803               	subwfb	___ftge@ff1+2,w,c
  6894  0026EA  B0D8               	btfsc	status,0,c
  6895  0026EC  D002               	goto	i2l2426
  6896  0026EE  90D8               	bcf	status,0,c
  6897  0026F0  D002               	goto	i2l824
  6898  0026F2                     i2l2426:
  6899  0026F2  80D8               	bsf	status,0,c
  6900  0026F4  D000               	goto	i2l824
  6901  0026F6                     i2l824:
  6902  0026F6  0012               	return		;funcret
  6903  0026F8                     __end_of___ftge:
  6904                           	opt stack 0
  6905                           pclatu	equ	0xFFB
  6906                           pclath	equ	0xFFA
  6907                           tblptru	equ	0xFF8
  6908                           tblptrh	equ	0xFF7
  6909                           tblptrl	equ	0xFF6
  6910                           tablat	equ	0xFF5
  6911                           prodh	equ	0xFF4
  6912                           prodl	equ	0xFF3
  6913                           intcon	equ	0xFF2
  6914                           indf0	equ	0xFEF
  6915                           postinc0	equ	0xFEE
  6916                           fsr0h	equ	0xFEA
  6917                           fsr0l	equ	0xFE9
  6918                           wreg	equ	0xFE8
  6919                           indf1	equ	0xFE7
  6920                           fsr1h	equ	0xFE2
  6921                           fsr1l	equ	0xFE1
  6922                           indf2	equ	0xFDF
  6923                           postinc2	equ	0xFDE
  6924                           postdec2	equ	0xFDD
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function ___ftdiv *****************
  6930 ;; Defined at:
  6931 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  f1              3    8[COMRAM] float 
  6934 ;;  f2              3   11[COMRAM] float 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  f3              3   18[COMRAM] float 
  6937 ;;  sign            1   22[COMRAM] unsigned char 
  6938 ;;  exp             1   21[COMRAM] unsigned char 
  6939 ;;  cntr            1   17[COMRAM] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  3    8[COMRAM] float 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6949 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;Total ram usage:       15 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    1
  6956 ;; This function calls:
  6957 ;;		i2___ftpack
  6958 ;; This function is called by:
  6959 ;;		_strtod
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text32
  6964  002408                     __ptext32:
  6965                           	opt stack 0
  6966  002408                     ___ftdiv:
  6967                           	opt stack 21
  6968                           
  6969                           ;incstack = 0
  6970  002408  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  6971  00240C  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  6972  00240E  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  6973  002410  340A               	rlcf	___ftdiv@f1+1,w,c
  6974  002412  360F               	rlcf	??___ftdiv& (0+255),f,c
  6975  002414  E301               	bnc	u227_41
  6976  002416  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  6977  002418                     u227_41:
  6978  002418  500F               	movf	??___ftdiv,w,c
  6979  00241A  6E16               	movwf	___ftdiv@exp,c
  6980  00241C  5016               	movf	___ftdiv@exp,w,c
  6981  00241E  A4D8               	btfss	status,2,c
  6982  002420  D002               	goto	i2l2360
  6983  002422  D00E               	goto	i2l2362
  6984  002424  D061               	goto	i2l815
  6985  002426                     i2l2360:
  6986  002426  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  6987  00242A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  6988  00242C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  6989  00242E  340D               	rlcf	___ftdiv@f2+1,w,c
  6990  002430  360F               	rlcf	??___ftdiv& (0+255),f,c
  6991  002432  E301               	bnc	u229_41
  6992  002434  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  6993  002436                     u229_41:
  6994  002436  500F               	movf	??___ftdiv,w,c
  6995  002438  6E17               	movwf	___ftdiv@sign,c
  6996  00243A  5017               	movf	___ftdiv@sign,w,c
  6997  00243C  A4D8               	btfss	status,2,c
  6998  00243E  D007               	goto	i2l2366
  6999  002440                     i2l2362:
  7000  002440  0E00               	movlw	0
  7001  002442  6E09               	movwf	?___ftdiv,c
  7002  002444  0E00               	movlw	0
  7003  002446  6E0A               	movwf	?___ftdiv+1,c
  7004  002448  0E00               	movlw	0
  7005  00244A  6E0B               	movwf	?___ftdiv+2,c
  7006  00244C  D04D               	goto	i2l815
  7007  00244E                     i2l2366:
  7008  00244E  0E00               	movlw	0
  7009  002450  6E13               	movwf	___ftdiv@f3,c
  7010  002452  0E00               	movlw	0
  7011  002454  6E14               	movwf	___ftdiv@f3+1,c
  7012  002456  0E00               	movlw	0
  7013  002458  6E15               	movwf	___ftdiv@f3+2,c
  7014  00245A  5017               	movf	___ftdiv@sign,w,c
  7015  00245C  0F89               	addlw	137
  7016  00245E  5E16               	subwf	___ftdiv@exp,f,c
  7017  002460  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  7018  002464  500E               	movf	___ftdiv@f2+2,w,c
  7019  002466  1A17               	xorwf	___ftdiv@sign,f,c
  7020  002468  0E80               	movlw	128
  7021  00246A  1617               	andwf	___ftdiv@sign,f,c
  7022  00246C  8E0A               	bsf	___ftdiv@f1+1,7,c
  7023  00246E  0EFF               	movlw	255
  7024  002470  1609               	andwf	___ftdiv@f1,f,c
  7025  002472  0EFF               	movlw	255
  7026  002474  160A               	andwf	___ftdiv@f1+1,f,c
  7027  002476  0E00               	movlw	0
  7028  002478  160B               	andwf	___ftdiv@f1+2,f,c
  7029  00247A  8E0D               	bsf	___ftdiv@f2+1,7,c
  7030  00247C  0EFF               	movlw	255
  7031  00247E  160C               	andwf	___ftdiv@f2,f,c
  7032  002480  0EFF               	movlw	255
  7033  002482  160D               	andwf	___ftdiv@f2+1,f,c
  7034  002484  0E00               	movlw	0
  7035  002486  160E               	andwf	___ftdiv@f2+2,f,c
  7036  002488  0E18               	movlw	24
  7037  00248A  6E12               	movwf	___ftdiv@cntr,c
  7038  00248C  D000               	goto	i2l2386
  7039  00248E                     i2l2386:
  7040  00248E  90D8               	bcf	status,0,c
  7041  002490  3613               	rlcf	___ftdiv@f3,f,c
  7042  002492  3614               	rlcf	___ftdiv@f3+1,f,c
  7043  002494  3615               	rlcf	___ftdiv@f3+2,f,c
  7044  002496  500C               	movf	___ftdiv@f2,w,c
  7045  002498  5C09               	subwf	___ftdiv@f1,w,c
  7046  00249A  500D               	movf	___ftdiv@f2+1,w,c
  7047  00249C  580A               	subwfb	___ftdiv@f1+1,w,c
  7048  00249E  500E               	movf	___ftdiv@f2+2,w,c
  7049  0024A0  580B               	subwfb	___ftdiv@f1+2,w,c
  7050  0024A2  A0D8               	btfss	status,0,c
  7051  0024A4  D007               	goto	i2l818
  7052  0024A6  500C               	movf	___ftdiv@f2,w,c
  7053  0024A8  5E09               	subwf	___ftdiv@f1,f,c
  7054  0024AA  500D               	movf	___ftdiv@f2+1,w,c
  7055  0024AC  5A0A               	subwfb	___ftdiv@f1+1,f,c
  7056  0024AE  500E               	movf	___ftdiv@f2+2,w,c
  7057  0024B0  5A0B               	subwfb	___ftdiv@f1+2,f,c
  7058  0024B2  8013               	bsf	___ftdiv@f3,0,c
  7059  0024B4                     i2l818:
  7060  0024B4  90D8               	bcf	status,0,c
  7061  0024B6  3609               	rlcf	___ftdiv@f1,f,c
  7062  0024B8  360A               	rlcf	___ftdiv@f1+1,f,c
  7063  0024BA  360B               	rlcf	___ftdiv@f1+2,f,c
  7064  0024BC  2E12               	decfsz	___ftdiv@cntr,f,c
  7065  0024BE  D7E7               	goto	i2l2386
  7066  0024C0  D000               	goto	i2l2396
  7067  0024C2                     i2l2396:
  7068  0024C2  C013  F001         	movff	___ftdiv@f3,i2___ftpack@arg
  7069  0024C6  C014  F002         	movff	___ftdiv@f3+1,i2___ftpack@arg+1
  7070  0024CA  C015  F003         	movff	___ftdiv@f3+2,i2___ftpack@arg+2
  7071  0024CE  C016  F004         	movff	___ftdiv@exp,i2___ftpack@exp
  7072  0024D2  C017  F005         	movff	___ftdiv@sign,i2___ftpack@sign
  7073  0024D6  EC75  F012         	call	i2___ftpack	;wreg free
  7074  0024DA  C001  F009         	movff	?i2___ftpack,?___ftdiv
  7075  0024DE  C002  F00A         	movff	?i2___ftpack+1,?___ftdiv+1
  7076  0024E2  C003  F00B         	movff	?i2___ftpack+2,?___ftdiv+2
  7077  0024E6  D000               	goto	i2l815
  7078  0024E8                     i2l815:
  7079  0024E8  0012               	return		;funcret
  7080  0024EA                     __end_of___ftdiv:
  7081                           	opt stack 0
  7082                           pclatu	equ	0xFFB
  7083                           pclath	equ	0xFFA
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           prodh	equ	0xFF4
  7089                           prodl	equ	0xFF3
  7090                           intcon	equ	0xFF2
  7091                           indf0	equ	0xFEF
  7092                           postinc0	equ	0xFEE
  7093                           fsr0h	equ	0xFEA
  7094                           fsr0l	equ	0xFE9
  7095                           wreg	equ	0xFE8
  7096                           indf1	equ	0xFE7
  7097                           fsr1h	equ	0xFE2
  7098                           fsr1l	equ	0xFE1
  7099                           indf2	equ	0xFDF
  7100                           postinc2	equ	0xFDE
  7101                           postdec2	equ	0xFDD
  7102                           fsr2h	equ	0xFDA
  7103                           fsr2l	equ	0xFD9
  7104                           status	equ	0xFD8
  7105                           
  7106 ;; *************** function ___altoft *****************
  7107 ;; Defined at:
  7108 ;;		line 42 in file "/opt/microchip/xc8/v1.34/sources/common/altoft.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  c               4    8[COMRAM] long 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  sign            1   17[COMRAM] unsigned char 
  7113 ;;  exp             1   16[COMRAM] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  3    8[COMRAM] float 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;Total ram usage:       10 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    1
  7130 ;; This function calls:
  7131 ;;		i2___ftpack
  7132 ;; This function is called by:
  7133 ;;		_strtod
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text33
  7138  0027F6                     __ptext33:
  7139                           	opt stack 0
  7140  0027F6                     ___altoft:
  7141                           	opt stack 21
  7142                           
  7143                           ;incstack = 0
  7144  0027F6  0E00               	movlw	0
  7145  0027F8  6E12               	movwf	___altoft@sign,c
  7146  0027FA  0E8E               	movlw	142
  7147  0027FC  6E11               	movwf	___altoft@exp,c
  7148  0027FE  AE0C               	btfss	___altoft@c+3,7,c
  7149  002800  D012               	goto	i2l2348
  7150  002802  1E0C               	comf	___altoft@c+3,f,c
  7151  002804  1E0B               	comf	___altoft@c+2,f,c
  7152  002806  1E0A               	comf	___altoft@c+1,f,c
  7153  002808  6C09               	negf	___altoft@c,c
  7154  00280A  0E00               	movlw	0
  7155  00280C  220A               	addwfc	___altoft@c+1,f,c
  7156  00280E  220B               	addwfc	___altoft@c+2,f,c
  7157  002810  220C               	addwfc	___altoft@c+3,f,c
  7158  002812  0E01               	movlw	1
  7159  002814  6E12               	movwf	___altoft@sign,c
  7160  002816  D007               	goto	i2l2348
  7161  002818                     i2l2346:
  7162  002818  90D8               	bcf	status,0,c
  7163  00281A  320C               	rrcf	___altoft@c+3,f,c
  7164  00281C  320B               	rrcf	___altoft@c+2,f,c
  7165  00281E  320A               	rrcf	___altoft@c+1,f,c
  7166  002820  3209               	rrcf	___altoft@c,f,c
  7167  002822  2A11               	incf	___altoft@exp,f,c
  7168  002824  D000               	goto	i2l2348
  7169  002826                     i2l2348:
  7170  002826  0E00               	movlw	0
  7171  002828  1409               	andwf	___altoft@c,w,c
  7172  00282A  6E0D               	movwf	??___altoft& (0+255),c
  7173  00282C  0E00               	movlw	0
  7174  00282E  140A               	andwf	___altoft@c+1,w,c
  7175  002830  6E0E               	movwf	(??___altoft+1)& (0+255),c
  7176  002832  0E00               	movlw	0
  7177  002834  140B               	andwf	___altoft@c+2,w,c
  7178  002836  6E0F               	movwf	(??___altoft+2)& (0+255),c
  7179  002838  0EFF               	movlw	255
  7180  00283A  140C               	andwf	___altoft@c+3,w,c
  7181  00283C  6E10               	movwf	(??___altoft+3)& (0+255),c
  7182  00283E  500D               	movf	??___altoft,w,c
  7183  002840  100E               	iorwf	??___altoft+1,w,c
  7184  002842  100F               	iorwf	??___altoft+2,w,c
  7185  002844  1010               	iorwf	??___altoft+3,w,c
  7186  002846  A4D8               	btfss	status,2,c
  7187  002848  D7E7               	goto	i2l2346
  7188  00284A  C009  F001         	movff	___altoft@c,i2___ftpack@arg
  7189  00284E  C00A  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
  7190  002852  C00B  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
  7191  002856  C011  F004         	movff	___altoft@exp,i2___ftpack@exp
  7192  00285A  C012  F005         	movff	___altoft@sign,i2___ftpack@sign
  7193  00285E  EC75  F012         	call	i2___ftpack	;wreg free
  7194  002862  C001  F009         	movff	?i2___ftpack,?___altoft
  7195  002866  C002  F00A         	movff	?i2___ftpack+1,?___altoft+1
  7196  00286A  C003  F00B         	movff	?i2___ftpack+2,?___altoft+2
  7197  00286E  D000               	goto	i2l464
  7198  002870                     i2l464:
  7199  002870  0012               	return		;funcret
  7200  002872                     __end_of___altoft:
  7201                           	opt stack 0
  7202                           pclatu	equ	0xFFB
  7203                           pclath	equ	0xFFA
  7204                           tblptru	equ	0xFF8
  7205                           tblptrh	equ	0xFF7
  7206                           tblptrl	equ	0xFF6
  7207                           tablat	equ	0xFF5
  7208                           prodh	equ	0xFF4
  7209                           prodl	equ	0xFF3
  7210                           intcon	equ	0xFF2
  7211                           indf0	equ	0xFEF
  7212                           postinc0	equ	0xFEE
  7213                           fsr0h	equ	0xFEA
  7214                           fsr0l	equ	0xFE9
  7215                           wreg	equ	0xFE8
  7216                           indf1	equ	0xFE7
  7217                           fsr1h	equ	0xFE2
  7218                           fsr1l	equ	0xFE1
  7219                           indf2	equ	0xFDF
  7220                           postinc2	equ	0xFDE
  7221                           postdec2	equ	0xFDD
  7222                           fsr2h	equ	0xFDA
  7223                           fsr2l	equ	0xFD9
  7224                           status	equ	0xFD8
  7225                           
  7226 ;; *************** function i2___ftpack *****************
  7227 ;; Defined at:
  7228 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  arg             3    0[COMRAM] unsigned um
  7231 ;;  exp             1    3[COMRAM] unsigned char 
  7232 ;;  sign            1    4[COMRAM] unsigned char 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  3    0[COMRAM] float 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7244 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;Total ram usage:        8 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		___altoft
  7254 ;;		___ftdiv
  7255 ;;		i2___ftmul
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text34
  7260  0024EA                     __ptext34:
  7261                           	opt stack 0
  7262  0024EA                     i2___ftpack:
  7263                           	opt stack 21
  7264                           
  7265                           ;incstack = 0
  7266  0024EA  5004               	movf	i2___ftpack@exp,w,c
  7267  0024EC  B4D8               	btfsc	status,2,c
  7268  0024EE  D005               	goto	i2l2244
  7269  0024F0  5001               	movf	i2___ftpack@arg,w,c
  7270  0024F2  1002               	iorwf	i2___ftpack@arg+1,w,c
  7271  0024F4  1003               	iorwf	i2___ftpack@arg+2,w,c
  7272  0024F6  A4D8               	btfss	status,2,c
  7273  0024F8  D00E               	goto	i2l2250
  7274  0024FA                     i2l2244:
  7275  0024FA  0E00               	movlw	0
  7276  0024FC  6E01               	movwf	?i2___ftpack,c
  7277  0024FE  0E00               	movlw	0
  7278  002500  6E02               	movwf	?i2___ftpack+1,c
  7279  002502  0E00               	movlw	0
  7280  002504  6E03               	movwf	?i2___ftpack+2,c
  7281  002506  D053               	goto	i2l743
  7282  002508  D006               	goto	i2l2250
  7283  00250A                     i2l2248:
  7284  00250A  2A04               	incf	i2___ftpack@exp,f,c
  7285  00250C  90D8               	bcf	status,0,c
  7286  00250E  3203               	rrcf	i2___ftpack@arg+2,f,c
  7287  002510  3202               	rrcf	i2___ftpack@arg+1,f,c
  7288  002512  3201               	rrcf	i2___ftpack@arg,f,c
  7289  002514  D000               	goto	i2l2250
  7290  002516                     i2l2250:
  7291  002516  0E00               	movlw	0
  7292  002518  1401               	andwf	i2___ftpack@arg,w,c
  7293  00251A  6E06               	movwf	??i2___ftpack& (0+255),c
  7294  00251C  0E00               	movlw	0
  7295  00251E  1402               	andwf	i2___ftpack@arg+1,w,c
  7296  002520  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  7297  002522  0EFE               	movlw	254
  7298  002524  1403               	andwf	i2___ftpack@arg+2,w,c
  7299  002526  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  7300  002528  5006               	movf	??i2___ftpack,w,c
  7301  00252A  1007               	iorwf	??i2___ftpack+1,w,c
  7302  00252C  1008               	iorwf	??i2___ftpack+2,w,c
  7303  00252E  B4D8               	btfsc	status,2,c
  7304  002530  D00E               	goto	i2l2256
  7305  002532  D7EB               	goto	i2l2248
  7306  002534  D00C               	goto	i2l2256
  7307  002536                     i2l2252:
  7308  002536  2A04               	incf	i2___ftpack@exp,f,c
  7309  002538  0E01               	movlw	1
  7310  00253A  2601               	addwf	i2___ftpack@arg,f,c
  7311  00253C  0E00               	movlw	0
  7312  00253E  2202               	addwfc	i2___ftpack@arg+1,f,c
  7313  002540  0E00               	movlw	0
  7314  002542  2203               	addwfc	i2___ftpack@arg+2,f,c
  7315  002544  90D8               	bcf	status,0,c
  7316  002546  3203               	rrcf	i2___ftpack@arg+2,f,c
  7317  002548  3202               	rrcf	i2___ftpack@arg+1,f,c
  7318  00254A  3201               	rrcf	i2___ftpack@arg,f,c
  7319  00254C  D000               	goto	i2l2256
  7320  00254E                     i2l2256:
  7321  00254E  0E00               	movlw	0
  7322  002550  1401               	andwf	i2___ftpack@arg,w,c
  7323  002552  6E06               	movwf	??i2___ftpack& (0+255),c
  7324  002554  0E00               	movlw	0
  7325  002556  1402               	andwf	i2___ftpack@arg+1,w,c
  7326  002558  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  7327  00255A  0EFF               	movlw	255
  7328  00255C  1403               	andwf	i2___ftpack@arg+2,w,c
  7329  00255E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  7330  002560  5006               	movf	??i2___ftpack,w,c
  7331  002562  1007               	iorwf	??i2___ftpack+1,w,c
  7332  002564  1008               	iorwf	??i2___ftpack+2,w,c
  7333  002566  B4D8               	btfsc	status,2,c
  7334  002568  D008               	goto	i2l2260
  7335  00256A  D7E5               	goto	i2l2252
  7336  00256C  D006               	goto	i2l2260
  7337  00256E                     i2l2258:
  7338  00256E  0604               	decf	i2___ftpack@exp,f,c
  7339  002570  90D8               	bcf	status,0,c
  7340  002572  3601               	rlcf	i2___ftpack@arg,f,c
  7341  002574  3602               	rlcf	i2___ftpack@arg+1,f,c
  7342  002576  3603               	rlcf	i2___ftpack@arg+2,f,c
  7343  002578  D000               	goto	i2l2260
  7344  00257A                     i2l2260:
  7345  00257A  BE02               	btfsc	i2___ftpack@arg+1,7,c
  7346  00257C  D004               	goto	i2l754
  7347  00257E  0E02               	movlw	2
  7348  002580  6004               	cpfslt	i2___ftpack@exp,c
  7349  002582  D7F5               	goto	i2l2258
  7350  002584  D000               	goto	i2l754
  7351  002586                     i2l754:
  7352  002586  B004               	btfsc	i2___ftpack@exp,0,c
  7353  002588  D002               	goto	i2l2266
  7354  00258A  9E02               	bcf	i2___ftpack@arg+1,7,c
  7355  00258C  D000               	goto	i2l2266
  7356  00258E                     i2l2266:
  7357  00258E  90D8               	bcf	status,0,c
  7358  002590  3204               	rrcf	i2___ftpack@exp,f,c
  7359  002592  5004               	movf	i2___ftpack@exp,w,c
  7360  002594  1203               	iorwf	i2___ftpack@arg+2,f,c
  7361  002596  5005               	movf	i2___ftpack@sign,w,c
  7362  002598  B4D8               	btfsc	status,2,c
  7363  00259A  D002               	goto	i2l2272
  7364  00259C  8E03               	bsf	i2___ftpack@arg+2,7,c
  7365  00259E  D000               	goto	i2l2272
  7366  0025A0                     i2l2272:
  7367  0025A0  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  7368  0025A4  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  7369  0025A8  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  7370  0025AC  D000               	goto	i2l743
  7371  0025AE                     i2l743:
  7372  0025AE  0012               	return		;funcret
  7373  0025B0                     __end_ofi2___ftpack:
  7374                           	opt stack 0
  7375                           pclatu	equ	0xFFB
  7376                           pclath	equ	0xFFA
  7377                           tblptru	equ	0xFF8
  7378                           tblptrh	equ	0xFF7
  7379                           tblptrl	equ	0xFF6
  7380                           tablat	equ	0xFF5
  7381                           prodh	equ	0xFF4
  7382                           prodl	equ	0xFF3
  7383                           intcon	equ	0xFF2
  7384                           indf0	equ	0xFEF
  7385                           postinc0	equ	0xFEE
  7386                           fsr0h	equ	0xFEA
  7387                           fsr0l	equ	0xFE9
  7388                           wreg	equ	0xFE8
  7389                           indf1	equ	0xFE7
  7390                           fsr1h	equ	0xFE2
  7391                           fsr1l	equ	0xFE1
  7392                           indf2	equ	0xFDF
  7393                           postinc2	equ	0xFDE
  7394                           postdec2	equ	0xFDD
  7395                           fsr2h	equ	0xFDA
  7396                           fsr2l	equ	0xFD9
  7397                           status	equ	0xFD8
  7398                           
  7399 ;; *************** function _strcmp *****************
  7400 ;; Defined at:
  7401 ;;		line 33 in file "/opt/microchip/xc8/v1.34/sources/common/strcmp.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  7404 ;;		 -> key(5), 
  7405 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  7406 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  7407 ;;		 -> STR_23(3), STR_22(3), STR_21(4), STR_20(4), 
  7408 ;;		 -> STR_19(4), STR_18(4), STR_17(3), STR_16(3), 
  7409 ;;		 -> STR_15(3), STR_14(3), STR_11(3), STR_10(3), 
  7410 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  7411 ;;		 -> STR_5(4), STR_4(4), 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  r               1    5[COMRAM] char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  2    0[COMRAM] int 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;Total ram usage:        6 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_keyValue
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text35
  7437  002AC0                     __ptext35:
  7438                           	opt stack 0
  7439  002AC0                     _strcmp:
  7440                           	opt stack 23
  7441                           
  7442                           ;incstack = 0
  7443  002AC0  D005               	goto	i2l2496
  7444  002AC2                     i2l2494:
  7445  002AC2  4A01               	infsnz	strcmp@s1,f,c
  7446  002AC4  2A02               	incf	strcmp@s1+1,f,c
  7447  002AC6  4A03               	infsnz	strcmp@s2,f,c
  7448  002AC8  2A04               	incf	strcmp@s2+1,f,c
  7449  002ACA  D000               	goto	i2l2496
  7450  002ACC                     i2l2496:
  7451  002ACC  C001  FFD9         	movff	strcmp@s1,fsr2l
  7452  002AD0  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  7453  002AD4  50DF               	movf	indf2,w,c
  7454  002AD6  6E05               	movwf	??_strcmp& (0+255),c
  7455  002AD8  C003  FFF6         	movff	strcmp@s2,tblptrl
  7456  002ADC  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  7457  002AE0                     	if	0	;tblptru may be non-zero
  7458  002AE0                     	endif
  7459  002AE0                     	if	0	;tblptru may be non-zero
  7460  002AE0                     	endif
  7461  002AE0  0008               	tblrd		*
  7462  002AE2  50F5               	movf	tablat,w,c
  7463  002AE4  0800               	sublw	0
  7464  002AE6  2405               	addwf	??_strcmp,w,c
  7465  002AE8  6E06               	movwf	strcmp@r,c
  7466  002AEA  5006               	movf	strcmp@r,w,c
  7467  002AEC  A4D8               	btfss	status,2,c
  7468  002AEE  D009               	goto	i2l2500
  7469  002AF0  C001  FFD9         	movff	strcmp@s1,fsr2l
  7470  002AF4  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  7471  002AF8  50DF               	movf	indf2,w,c
  7472  002AFA  B4D8               	btfsc	status,2,c
  7473  002AFC  D002               	goto	i2l2500
  7474  002AFE  D7E1               	goto	i2l2494
  7475  002B00  D000               	goto	i2l2500
  7476  002B02                     i2l2500:
  7477  002B02  5006               	movf	strcmp@r,w,c
  7478  002B04  6E01               	movwf	?_strcmp,c
  7479  002B06  6A02               	clrf	?_strcmp+1,c
  7480  002B08  BE01               	btfsc	?_strcmp,7,c
  7481  002B0A  0602               	decf	?_strcmp+1,f,c
  7482  002B0C  D000               	goto	i2l998
  7483  002B0E                     i2l998:
  7484  002B0E  0012               	return		;funcret
  7485  002B10                     __end_of_strcmp:
  7486                           	opt stack 0
  7487                           pclatu	equ	0xFFB
  7488                           pclath	equ	0xFFA
  7489                           tblptru	equ	0xFF8
  7490                           tblptrh	equ	0xFF7
  7491                           tblptrl	equ	0xFF6
  7492                           tablat	equ	0xFF5
  7493                           prodh	equ	0xFF4
  7494                           prodl	equ	0xFF3
  7495                           intcon	equ	0xFF2
  7496                           indf0	equ	0xFEF
  7497                           postinc0	equ	0xFEE
  7498                           fsr0h	equ	0xFEA
  7499                           fsr0l	equ	0xFE9
  7500                           wreg	equ	0xFE8
  7501                           indf1	equ	0xFE7
  7502                           fsr1h	equ	0xFE2
  7503                           fsr1l	equ	0xFE1
  7504                           indf2	equ	0xFDF
  7505                           postinc2	equ	0xFDE
  7506                           postdec2	equ	0xFDD
  7507                           fsr2h	equ	0xFDA
  7508                           fsr2l	equ	0xFD9
  7509                           status	equ	0xFD8
  7510                           pclatu	equ	0xFFB
  7511                           pclath	equ	0xFFA
  7512                           tblptru	equ	0xFF8
  7513                           tblptrh	equ	0xFF7
  7514                           tblptrl	equ	0xFF6
  7515                           tablat	equ	0xFF5
  7516                           prodh	equ	0xFF4
  7517                           prodl	equ	0xFF3
  7518                           intcon	equ	0xFF2
  7519                           indf0	equ	0xFEF
  7520                           postinc0	equ	0xFEE
  7521                           fsr0h	equ	0xFEA
  7522                           fsr0l	equ	0xFE9
  7523                           wreg	equ	0xFE8
  7524                           indf1	equ	0xFE7
  7525                           fsr1h	equ	0xFE2
  7526                           fsr1l	equ	0xFE1
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           fsr2h	equ	0xFDA
  7531                           fsr2l	equ	0xFD9
  7532                           status	equ	0xFD8
  7533                           
  7534                           	psect	rparam
  7535  0000                     pclatu	equ	0xFFB
  7536                           pclath	equ	0xFFA
  7537                           tblptru	equ	0xFF8
  7538                           tblptrh	equ	0xFF7
  7539                           tblptrl	equ	0xFF6
  7540                           tablat	equ	0xFF5
  7541                           prodh	equ	0xFF4
  7542                           prodl	equ	0xFF3
  7543                           intcon	equ	0xFF2
  7544                           indf0	equ	0xFEF
  7545                           postinc0	equ	0xFEE
  7546                           fsr0h	equ	0xFEA
  7547                           fsr0l	equ	0xFE9
  7548                           wreg	equ	0xFE8
  7549                           indf1	equ	0xFE7
  7550                           fsr1h	equ	0xFE2
  7551                           fsr1l	equ	0xFE1
  7552                           indf2	equ	0xFDF
  7553                           postinc2	equ	0xFDE
  7554                           postdec2	equ	0xFDD
  7555                           fsr2h	equ	0xFDA
  7556                           fsr2l	equ	0xFD9
  7557                           status	equ	0xFD8


Data Sizes:
    Strings     97
    Constant    0
    Data        1
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62     123
    BANK0           128     53      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 5
		 -> key(COMRAM[5]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), keyValue@str_end(COMRAM[2]), 

    keyValue@str_end	PTR unsigned char  size(2) Largest target is 10
		 -> value(COMRAM[10]), 

    keyValue@str	PTR unsigned char  size(2) Largest target is 30
		 -> received(COMRAM[30]), 

    DoublePtr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), SPIDisassembleDouble@dub(BANK0[3]), SPIReassembleDouble@dub(BANK0[3]), 

    MReceiveStrSPI@str	PTR unsigned char  size(2) Largest target is 4
		 -> DoubleSPIM(BANK0[4]), 

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 36
		 -> STR_28(CODE[4]), STR_13(CODE[6]), STR_12(CODE[4]), STR_3(CODE[11]), 
		 -> value(COMRAM[10]), STR_2(CODE[6]), key(COMRAM[5]), STR_1(CODE[36]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_RCInt
    _RCInt->_keyValue
    _keyValue->_strtod
    i2_SerTxStr->i2_SerTx
    _strtod->___ftdiv
    _strtod->i2___ftmul
    i2___ftmul->i2___ftpack
    ___ftdiv->i2___ftpack
    ___altoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_MReceiveStrSPI
    _initialize->_OpenSPI
    _SerInit->_SerTxStr
    _SerTxStr->_SerTx
    _SPIDisassembleDouble->_MGenerateChecksum
    _MSendSPI->_Delay10TCYx
    _MReceiveStrSPI->_breakDouble
    _breakDouble->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftpack

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7962
                                             52 BANK0      1     1      0
                        _Delay10TCYx
                     _MReceiveStrSPI
                           _MSendSPI
               _SPIDisassembleDouble
                _SPIReassembleDouble
                           _checksum
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     655
                            _OpenSPI
                            _SerInit
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0     401
                           _SerTxStr
 ---------------------------------------------------------------------------------
 (3) _SerTxStr                                             2     0      2     401
                                              1 BANK0      2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     254
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _checksum                                             6     6      0     136
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SPIDisassembleDouble                                 3     0      3     259
                                              2 BANK0      3     0      3
                  _MGenerateChecksum
 ---------------------------------------------------------------------------------
 (2) _MGenerateChecksum                                    2     2      0     136
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _MSendSPI                                             2     2      0      68
                                              1 BANK0      2     2      0
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (1) _MReceiveStrSPI                                       5     2      3    6127
                                             47 BANK0      5     2      3
                        _Delay10TCYx
                        _MReceiveSPI
                _SPIReassembleDouble
                        _breakDouble
 ---------------------------------------------------------------------------------
 (2) _breakDouble                                          9     6      3    5063
                                             38 BANK0      9     6      3
                _SPIReassembleDouble (ARG)
                              _SerTx
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     761
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     305
                                             23 BANK0     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2626
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1798
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _SerTx                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPIReassembleDouble                                  6     3      3      89
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _MReceiveSPI                                          1     1      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10TCYx                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0    8840
                                             48 COMRAM    14    14      0
                              _RCInt
 ---------------------------------------------------------------------------------
 (6) _RCInt                                                2     2      0    8840
                                             46 COMRAM     2     2      0
                           _keyValue
                            i2_SerTx
 ---------------------------------------------------------------------------------
 (7) _keyValue                                            11     7      4    8661
                                             35 COMRAM    11     7      4
                            _isspace
                             _strcmp
                             _strtod
                            i2_SerTx
                         i2_SerTxStr
 ---------------------------------------------------------------------------------
 (8) i2_SerTxStr                                           2     0      2     275
                                              1 COMRAM     2     0      2
                            i2_SerTx
 ---------------------------------------------------------------------------------
 (7) i2_SerTx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _strtod                                              12     8      4    4885
                                             23 COMRAM    12     8      4
                           ___altoft
                            ___ftdiv
                             ___ftge
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (9) i2___ftmul                                           15     9      6     895
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) _isspace                                              3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     278
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (9) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (9) ___ftge                                               9     3      6     348
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (9) ___ftdiv                                             15     9      6    1037
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) ___altoft                                            10     6      4     656
                                              8 COMRAM    10     6      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     465
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4    2423
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10TCYx
   _MReceiveStrSPI
     _Delay10TCYx
     _MReceiveSPI
     _SPIReassembleDouble
     _breakDouble
       _SPIReassembleDouble (ARG)
       _SerTx (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___lwdiv (ARG)
       ___lwmod (ARG)
   _MSendSPI
     _Delay10TCYx
   _SPIDisassembleDouble
     _MGenerateChecksum
   _SPIReassembleDouble
   _checksum
   _initialize
     _OpenSPI
     _SerInit
       _SerTxStr
         _SerTx

 _ISR (ROOT)
   _RCInt
     _keyValue
       _isspace
       _strcmp
       _strtod
         ___altoft
           i2___ftpack
         ___ftdiv
           i2___ftpack
         ___ftge
         ___ftneg
         ___lmul
         _isdigit
         _isspace
         i2___ftmul
           i2___ftpack
       i2_SerTx
       i2_SerTxStr
         i2_SerTx
     i2_SerTx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     35      44       5       53.1%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      7B       1       96.9%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BF       6        0.0%
DATA                 0      0      BF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Oct  2 04:06:25 2015

                 ___altoft@exp 0011                    _SSPSTATbits 000FC7                  ___altoft@sign 0012  
                           l50 1D7A                             l28 2D20                             l49 1D28  
                           _Kd 003F                             _Ki 0042                             _Kp 0045  
                   i2___ftpack 24EA                            l200 2BD6                            l140 1C58  
                          l144 1C94                            l170 25BC                            l163 2CF6  
                          l157 2C78                            l166 2CFE                            l182 2660  
                          l191 27F4                            l360 298C                            l185 2B96  
                          l177 261A                            l361 29AC                            l362 2992  
                          l354 296A                            l363 2996                            l356 296E  
                          l357 2970                            l653 2D14                            l830 1F7E  
                          l743 230E                            l754 22D6                            l851 21EE  
                          l963 2770                            l973 2946                            _ISR 0008  
                          _key 0076                            prod 000FF3                            wreg 000FE8  
                         ?_ISR 0001                   ___ftdiv@cntr 0012                   ___ftdiv@sign 0017  
                 __CFG_WDT$OFF 000000                           l3410 2284                           l3402 2220  
                         l3420 22E2                           l3412 22B6                           l3404 2230  
                         l3414 22C6                           l3406 2262                           l3504 2760  
                         l3520 2936                           l3512 28F8                           l3432 29B6  
                         l3426 2300                           l3450 1E88                           l3514 2906  
                         l3602 2BB2                           l3444 1E4E                           l2724 20E8  
                         l3516 2910                           l3436 29E4                           l3446 1E74  
                         l2742 216C                           l3472 1F14                           l3464 1ED8  
                         l2760 21DC                           l2752 219E                           l3608 2BD0  
                         l3482 1F58                           l3474 1F1C                           l2754 21B0  
                         l2746 2180                           l3642 25CC                           l3802 1B72  
                         l3468 1EF8                           l2748 2188                           l2756 21BE  
                         l3492 2716                           l3652 25F4                           l3580 2974  
                         l3812 1B9E                           l3732 19F6                           l3566 2D04  
                         l3398 220A                           l3478 1F3C                           l3494 2724  
                         l3646 25D6                           l3822 1BDC                           l3806 1B80  
                         l3742 1A34                           l3718 19B2                           l3496 272E  
                         l3664 262A                           l3656 260C                           l3680 2786  
                         l3584 299A                           l3832 1C08                           l3752 1A60  
                         l3674 2656                           l3690 27B2                           l3842 1C3C  
                         l3826 1BEA                           l3762 1A9E                           l3746 1A42  
                         l3834 1C16                           l3668 2634                           l3684 2794  
                         l3852 1C68                           l3772 1ACA                           l3598 2BA4  
                         l3782 1B08                           l3766 1AAC                           l3856 1C76  
                         l3792 1B34                           l3698 27F0                           l3786 1B16  
                         STR_1 1001                           STR_2 1030                           STR_3 1025  
                         STR_4 103E                           STR_5 1046                           STR_6 1050  
                         STR_7 105C                           STR_8 104D                           STR_9 1059  
                         _AZEL 007B                           u4120 29D8                           u4130 2A06  
                         u4151 1E3A                           u4127 29CE                           u4137 29FC  
                         u4171 1E64                           u2910 210E                           u2915 2104  
                         u2891 20D4                           u4737 2D06                           i2l28 2D2E  
                         _main 19A6                   ___ftpack@arg 0080                   ___ftpack@exp 0083  
                         fsr0h 000FEA                           fsr1h 000FE2                __end_ofi2_SerTx 2D34  
                         indf0 000FEF                           fsr0l 000FE9                           fsr2h 000FDA  
                         indf1 000FE7                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0018              MReceiveSPI@tempCH 0080  
                 ___ftmul@cntr 0095                   i2___ftmul@f1 0009                   i2___ftmul@f2 000C  
                 ___param_bank 000010                   ___ftmul@sign 0096                    _MReceiveSPI 2CEA  
                        ??_ISR 0031                    _Delay10TCYx 2D00                   ___fttol@exp1 00A5  
              __end_of_OpenSPI 29B4                __end_of_SerInit 2C60                   ___fttol@lval 00A1  
            _MGenerateChecksum 2B98                          ?_main 0001             ?_MGenerateChecksum 0001  
                        STR_10 104A                          STR_11 1056                          STR_20 103A  
                        STR_12 1036                          STR_13 1030                          STR_21 1042  
                        STR_22 1050                          STR_14 1053                          STR_23 105C  
                        STR_15 105F                          STR_24 104D                          STR_16 103B  
                        STR_25 1059                          STR_17 1043                          STR_26 104A  
                        STR_18 103E                          STR_27 1056                          STR_19 1046  
                        STR_28 1036                __end_of___ftdiv 24EA                __end_of___ftneg 2CA8  
              __end_of___ftmul 1F80                __end_of___fttol 21F0                __end_of___lwdiv 277A  
              __end_of___lwmod 2950                          i2l151 28AA                          i2l246 1F86  
                        i2l257 20BA                          i2l464 2870                          i2l554 16D0  
                        i2l556 16D8                          i2l573 19A4                          i2l830 2406  
                        i2l743 25AE                          i2l815 24E8                          i2l583 1974  
                        i2l824 26F6                          i2l840 2C9A                          i2l754 2586  
                        i2l818 24B4                          i2l871 2C36                          i2l866 2CC8  
                        i2l998 2B0E                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _RCInt 1F80         ??_SPIDisassembleDouble 0085            ___lmul@multiplicand 0005  
               __CFG_FCMEN$OFF 000000                          _SerTx 2D16            ??_MGenerateChecksum 0080  
              __end_of_isdigit 2CCA                  ___ftpack@sign 0084                          _value 006C  
                   _DoubleSPIM 00C0                          main@x 00B4                __end_of_isspace 2C38  
                        tablat 000FF5                          status 000FD8               __end_of_MSendSPI 2C84  
           __size_ofi2___ftmul 00F8                    ?i2_SerTxStr 0002                __initialization 2BD8  
    __end_of_MGenerateChecksum 2BD8                   __end_of_main 1C9C                  i2___ftmul@exp 0012  
               __CFG_OSC$HSPLL 000000                    ?i2___ftpack 0001                  _StrippedValue 00BB  
                  keyValue@str 0024                         ??_main 00B4                  ___fttol@sign1 00A0  
         __size_of_breakDouble 0188               __end_of_SerTxStr 2A0E                  __activetblptr 000002  
                       ?_RCInt 0001                         ?_SerTx 0001               __end_of___altoft 2872  
                    ??i2_SerTx 0001            MReceiveStrSPI@Slave 00B1               __end_of___ftpack 2310  
          MReceiveStrSPI@x_567 00B3                         i2l3010 13FE                         i2l3002 13BA  
                       i2l3030 1498                         i2l3022 1452                         i2l3014 140C  
                       i2l3006 13C6                         i2l3200 1FD4                         i2l2250 2516  
                       i2l3042 1516                         i2l3034 14D0                         i2l3026 148A  
                       i2l3018 1444                         i2l3050 1538                         i2l2500 2B02  
                       i2l2260 257A                         i2l2252 2536                         i2l2244 24FA  
                       i2l2420 26C6                         i2l3212 2028                         i2l3204 1FDE  
                       i2l2510 15F0                         i2l3070 1588                         i2l3054 155C  
                       i2l3046 1524                         i2l3038 14DE                         i2l3230 208A  
                       i2l3206 1FF4                         i2l2272 25A0                         i2l2256 254E  
                       i2l2248 250A                         i2l2360 2426                         i2l2416 2694  
                       i2l2408 2CC0                         i2l2600 17EC                         i2l2520 1618  
                       i2l3064 157C                         i2l3048 1530                         i2l2266 258E  
                       i2l2258 256E                         i2l2346 2818                         i2l2362 2440  
                       i2l2426 26F2                         i2l2442 232E                         i2l2530 1640  
                       i2l2522 1620                         i2l3082 15AC                         i2l3066 1580  
                       i2l3058 1564                         i2l3234 20A2                         i2l3226 2072  
                       i2l2348 2826                         i2l2444 2348                         i2l2612 1828  
                       i2l2540 166E                         i2l2524 1626                         i2l2508 15EA  
                       i2l3076 15A0                         i2l2366 244E                         i2l2294 2A20  
                       i2l2286 2C28                         i2l2470 23B2                         i2l2462 238A  
                       i2l2622 1890                         i2l3078 15A4                         i2l2288 2C2E  
                       i2l2480 23E0                         i2l2472 23B8                         i2l2448 2356  
                       i2l2640 18CA                         i2l2616 1856                         i2l2608 1820  
                       i2l2560 1702                         i2l2536 1658                         i2l3088 15C4  
                       i2l2386 248E                         i2l2298 2A36                         i2l2466 239C  
                       i2l2650 192C                         i2l2618 1864                         i2l2570 1736  
                       i2l2554 16DE                         i2l2396 24C2                         i2l2476 23CA  
                       i2l2660 1964                         i2l2644 18F8                         i2l2636 18BC  
                       i2l2564 171A                         i2l2804 2A6A                         i2l2900 106E  
                       i2l2494 2AC2                         i2l2646 1900                         i2l2566 172A  
                       i2l2496 2ACC                         i2l2568 1730                         i2l2592 17CC  
                       i2l2808 2A96                         i2l2912 10C0                         i2l2666 1996  
                       i2l2922 111E                         i2l2906 108C                         i2l2588 17C4  
                       i2l2932 1150                         i2l2924 1122                         i2l2908 1092  
                       i2l2950 11F8                         i2l2918 10DE                         i2l2928 1132  
                       i2l2970 12BC                         i2l2962 1276                         i2l2954 1230  
                       i2l2946 11EA                         i2l2938 117A                         i2l2982 12E6  
                       i2l2974 12CA                         i2l2966 1284                         i2l2958 123E  
                       i2l2994 1376                         i2l2986 130E                         i2l2978 12DA  
                       u241_41 233E                         i2l2998 1382                         u227_41 2418  
                       u229_41 2436                         u239_41 2320                         _RCREG1 000FAE  
                       _RCSTA1 000FAB                         _SSPBUF 000FC9                         _TXREG1 000FAD  
                       _RCflag 00BE                         _TXSTA1 000FAC               __end_of_checksum 27F6  
                       SerTx@c 0080                      ??_OpenSPI 0082                      ??_SerInit 0083  
                       ___ftge 2662                         ___lmul 2A0E                 keyValue@length 0026  
                    ??___ftdiv 000F                      ??___ftneg 0004                      ??___ftmul 008E  
                    ??___fttol 009B               __end_of_keyValue 15D0                      ??___lwdiv 0084  
                    ??___lwmod 0084               i2SerTxStr@string 0002                         clear_0 2BDE  
                       clear_1 2BEA                         _strcmp 2AC0                         _strtod 15D0  
        ___ftmul@f3_as_product 0092                   __pdataCOMRAM 007B                      ??_isdigit 0001  
            __end_ofi2___ftmul 2408                   __mediumconst 0000                      ??_isspace 0001  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
          __size_ofi2_SerTxStr 0058                     __accesstop 0080        __end_of__initialization 2C02  
                   ___altoft@c 0009            __size_ofi2___ftpack 00C6                     ___ftge@ff1 0001  
                   ___ftge@ff2 0004                  ___rparam_used 000001                     ___ftdiv@f1 0009  
                   ___ftdiv@f2 000C                     ___ftdiv@f3 0013                     ___ftneg@f1 0001  
               i2___ftpack@arg 0001                  __end_of_RCInt 20BE                 i2___ftpack@exp 0004  
                   ___ftmul@f1 0088                     ___ftmul@f2 008B                     ___fttol@f1 0097  
               __pcstackCOMRAM 0001                  __end_of_SerTx 2D26     __size_of_MGenerateChecksum 0040  
               i2___ftmul@cntr 0016                 i2___ftmul@sign 0017   __size_of_SPIReassembleDouble 0044  
                    ?_MSendSPI 0001                        ??_RCInt 002F              MReceiveStrSPI@str 00AF  
                      ??_SerTx 0080                   keyValue@flag 002C                     __pbssBANK0 00B5  
              MReceiveStrSPI@x 00B2                      ?_SerTxStr 0081                   ?_MReceiveSPI 0001  
                      ?___ftge 0001                        ?___lmul 0001                   ?_Delay10TCYx 0001  
                    ?___altoft 0009                        _BAUDCON 000FB8                 ___lmul@product 0009  
                    ?___ftpack 0080                        ?_strcmp 0001                        ?_strtod 0018  
                   ??_MSendSPI 0081                      ?_checksum 0001        __size_of_MReceiveStrSPI 00B2  
                      _SSPCON1 000FC6                 SerTxStr@string 0081                        i2_SerTx 2D26  
                      _SSPSTAT 000FC7                      ?_keyValue 0024                   ??i2_SerTxStr 0004  
                   ??_SerTxStr 0083                        _OpenSPI 2950                        __Hparam 0000  
                      _SerInit 2C38                        __Lparam 0000                __size_of___ftge 0096  
              __size_of___lmul 005A                        ___ftdiv 2408                        ___ftneg 2C84  
                      ___ftmul 1E24                        ___fttol 20BE                        ___lwdiv 26F8  
                      ___lwmod 28E4                   __psmallconst 1000                     ??___altoft 000D  
                      __pcinit 2BD8                   ??i2___ftpack 0006                     ??___ftpack 0085  
              Delay10TCYx@unit 0080        i2___ftmul@f3_as_product 0013                        __ramtop 1000  
                   _initialize 2CCA                        __ptext0 19A6                        __ptext1 2CCA  
                      __ptext2 2C38                        __ptext3 29B4                        __ptext4 2950  
                      __ptext5 277A                        __ptext6 2B10                        __ptext7 2B98  
                      __ptext8 2C60                        __ptext9 25B0                __size_of_strcmp 0050  
                 __size_of_ISR 28DC                __size_of_strtod 03D6                        _isdigit 2CA8  
              keyValue@str_end 002A                     ??_checksum 0080                   MSendSPI@data 0082  
                      _isspace 2C0C  __size_of_SPIDisassembleDouble 0044             __end_ofi2_SerTxStr 2AC0  
               __pintcode_body 2872           end_of_initialization 2C02                     ??_keyValue 0028  
                __Lmediumconst 0000                        int_func 2872             __end_ofi2___ftpack 25B0  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                ??_breakDouble 00A9                        strcmp@r 0006                        strtod@s 0018  
                    _PORTAbits 000F80                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    i2___ftmul 2310                    ___ftdiv@exp 0016            _SPIReassembleDouble 2B54  
              i2___ftpack@sign 0005                    ___ftmul@exp 0091                    _StrippedKey 00BF  
               __end_of___ftge 26F8           __size_of_MReceiveSPI 0016                 __end_of___lmul 2A68  
         __size_of_Delay10TCYx 0016                  __pidataCOMRAM 2D34                    ?_initialize 0001  
             OpenSPI@smp_phase 0081           ?_SPIReassembleDouble 0080                      _DoublePtr 004B  
               __end_of_strcmp 2B10                 _MReceiveStrSPI 25B0                 __end_of_strtod 19A6  
          __end_of_breakDouble 1E24            start_initialization 2BD8                _CurrentVelocity 00B8  
                 _CurrentAngle 00B5                    __end_of_ISR 28E4              __size_of_MSendSPI 0024  
                   ?i2___ftmul 0009               OpenSPI@sync_mode 0082                       ??___ftge 0007  
                     ??___lmul 0009              __size_of_SerTxStr 005A         __end_of_MReceiveStrSPI 2662  
        ??_SPIReassembleDouble 0083                       ??_strcmp 0005                       ??_strtod 001C  
            __size_of___altoft 007C              __size_of___ftpack 0120                    __pbssCOMRAM 003F  
                __pcstackBANK0 0080                   _ReceivedChar 004D                   _isdigit$1252 0002  
            __size_of_checksum 007C                       ?i2_SerTx 0001            __size_of_initialize 0020  
            __size_of_keyValue 056C         SPIReassembleDouble@dub 0083                       ?_OpenSPI 0080  
                     ?_SerInit 0001               ___lwdiv@dividend 0080                      __pintcode 0008  
             breakDouble@temp1 00AB               breakDouble@temp2 00AD                       ?___ftdiv 0009  
                     ?___ftneg 0001                       ?___ftmul 0088                       ?___fttol 0097  
                     ?___lwdiv 0080                       ?___lwmod 0080                    _breakDouble 1C9C  
           breakDouble@tempDub 00A9                ?_MReceiveStrSPI 00AF                    __smallconst 1000  
                     ?_isdigit 0001                 __size_of_RCInt 013E                       ?_isspace 0001  
               __size_of_SerTx 0010               ___lwdiv@quotient 0085                    ??i2___ftmul 000F  
                    checksum@y 0085                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
 __end_of_SPIDisassembleDouble 2B54                       i2u303_40 2A8C                       i2u303_47 2A82  
                     i2u304_40 2AB8                       i2u304_47 2AAE                       _PIR1bits 000F9E  
                     _RCONbits 000FD0                    strtod@flags 001E                    strtod@expon 001F  
                     i2SerTx@c 0001                OpenSPI@bus_mode 0080                       _MSendSPI 2C60  
                 _isspace$1255 0002              ___lmul@multiplier 0001               __size_ofi2_SerTx 000E  
                    keyValue@x 002E                      keyValue@y 002D                       _SetAngle 0048  
                     _SerTxStr 29B4                       __Hrparam 0000                       __Lrparam 0000  
             __size_of_OpenSPI 0064               __size_of_SerInit 0028               __size_of___ftdiv 00E2  
             __size_of___ftneg 0024                       ___altoft 27F6               __size_of___ftmul 015C  
             __size_of___fttol 0132               __size_of___lwdiv 0082               __size_of___lwmod 006C  
                 ??_initialize 0083                       ___ftpack 21F0                       _checksum 277A  
             __size_of_isdigit 0022           MGenerateChecksum@sum 0080                ___lwdiv@divisor 0082  
              breakDouble@dubs 00A6               __size_of_isspace 002C                ___lwdiv@counter 0084  
                 RCInt@counter 0030                       __ptext10 1C9C                       __ptext11 28E4  
                     __ptext12 26F8                       __ptext21 1F80                       __ptext13 20BE  
                     __ptext30 2C84                       __ptext22 1064                       __ptext14 1E24  
                     __ptext31 2662                       __ptext23 2A68                       __ptext15 21F0  
                     __ptext32 2408                       __ptext24 2D26                       __ptext16 2D16  
                     __ptext33 27F6                       __ptext25 15D0                       __ptext17 2B54  
                     __ptext34 24EA                       __ptext26 2310                       __ptext18 2CEA  
                     __ptext35 2AC0                       __ptext27 2C0C                       __ptext19 2D00  
                     __ptext28 2CA8                       __ptext29 2A0E                    checksum@sum 0084  
                     _keyValue 1064                  __size_of_main 02F6                       _received 004E  
           __end_of_initialize 2CEA                  ??_MReceiveSPI 0080                  ??_Delay10TCYx 0080  
                   strtod@eexp 001D                     _INTCONbits 000FF2           _SPIDisassembleDouble 2B10  
                     isdigit@c 0003                       intlevel2 0000               MSendSPI@tempChar 0081  
             ___lwmod@dividend 0080                       isspace@c 0003                      strtod@res 001A  
  __end_of_SPIReassembleDouble 2B98               ??_MReceiveStrSPI 00B2                   ?_breakDouble 00A6  
          __end_of_MReceiveSPI 2D00            __end_of_Delay10TCYx 2D16             MGenerateChecksum@z 0081  
                     strcmp@s1 0001                       strcmp@s2 0003                ___lwmod@divisor 0082  
              ___lwmod@counter 0084          ?_SPIDisassembleDouble 0082                       strtod@_u 0020  
                  _SSPCON1bits 000FC6        SPIDisassembleDouble@dub 0082                     i2_SerTxStr 2A68  
