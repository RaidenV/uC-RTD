

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Oct 11 19:49:49 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  0018B0                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _Angle
    46  0018B0  33                 	db	51
    47  0018B1  34                 	db	52
    48  0018B2  31                 	db	49
    49  0018B3  32                 	db	50
    50  0018B4  32                 	db	50
    51  0000                     _BAUDCON1	set	3966
    52  0000                     _OSCCONbits	set	4051
    53  0000                     _PIE1bits	set	3997
    54  0000                     _PIR1bits	set	3998
    55  0000                     _PORTAbits	set	3968
    56  0000                     _PORTD	set	3971
    57  0000                     _PORTEbits	set	3972
    58  0000                     _PORTH	set	3975
    59  0000                     _PORTJbits	set	3976
    60  0000                     _RCREG1	set	4014
    61  0000                     _RCSTA1	set	4011
    62  0000                     _SPBRG	set	4015
    63  0000                     _SSP1BUF	set	4041
    64  0000                     _SSP1CON1	set	4038
    65  0000                     _SSP1CON1bits	set	4038
    66  0000                     _SSP1STAT	set	4039
    67  0000                     _SSP1STATbits	set	4039
    68  0000                     _TRISAbits	set	3986
    69  0000                     _TRISCbits	set	3988
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISEbits	set	3990
    72  0000                     _TRISFbits	set	3991
    73  0000                     _TRISH	set	3993
    74  0000                     _TRISJbits	set	3994
    75  0000                     _TXREG1	set	4013
    76  0000                     _TXSTA1	set	4012
    77                           
    78                           	psect	smallconst
    79  001000                     __psmallconst:
    80                           	opt stack 0
    81  001000  00                 	db	0
    82  001001                     STR_3:
    83  001001  41                 	db	65	;'A'
    84  001002  6E                 	db	110	;'n'
    85  001003  67                 	db	103	;'g'
    86  001004  6C                 	db	108	;'l'
    87  001005  65                 	db	101	;'e'
    88  001006  3A                 	db	58	;':'
    89  001007  20                 	db	32
    90  001008  00                 	db	0
    91  001009  38                 	db	56	;'8'
    92  00100A  36                 	db	54	;'6'
    93  00100B  38                 	db	56	;'8'
    94  00100C  30                 	db	48	;'0'
    95  00100D  3A                 	db	58	;':'
    96  00100E  20                 	db	32
    97  00100F  00                 	db	0
    98  001010  38                 	db	56	;'8'
    99  001011  37                 	db	55	;'7'
   100  001012  32                 	db	50	;'2'
   101  001013  32                 	db	50	;'2'
   102  001014  3A                 	db	58	;':'
   103  001015  20                 	db	32
   104  001016  00                 	db	0
   105  0000                     
   106                           ; #config settings
   107  001017  00                 	db	0	; dummy byte at the end
   108  0000                     
   109                           	psect	cinit
   110  001760                     __pcinit:
   111                           	opt stack 0
   112  001760                     start_initialization:
   113                           	opt stack 0
   114  001760                     __initialization:
   115                           	opt stack 0
   116                           
   117                           ; Clear objects allocated to COMRAM (19 bytes)
   118  001760  EE00  F031         	lfsr	0,__pbssCOMRAM
   119  001764  0E13               	movlw	19
   120  001766                     clear_0:
   121  001766  6AEE               	clrf	postinc0,c
   122  001768  06E8               	decf	wreg,f,c
   123  00176A  E1FD               	bnz	clear_0
   124                           
   125                           ; Initialize objects allocated to COMRAM (5 bytes)
   126                           ; load TBLPTR registers with __pidataCOMRAM
   127  00176C  0EB0               	movlw	low __pidataCOMRAM
   128  00176E  6EF6               	movwf	tblptrl,c
   129  001770  0E18               	movlw	high __pidataCOMRAM
   130  001772  6EF7               	movwf	tblptrh,c
   131  001774  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   132  001776  6EF8               	movwf	tblptru,c
   133  001778  EE00  F044         	lfsr	0,__pdataCOMRAM
   134  00177C  EE10 F005          	lfsr	1,5
   135  001780                     copy_data0:
   136  001780  0009               	tblrd		*+
   137  001782  CFF5 FFEE          	movff	tablat,postinc0
   138  001786  50E5               	movf	postdec1,w,c
   139  001788  50E1               	movf	fsr1l,w,c
   140  00178A  E1FA               	bnz	copy_data0
   141  00178C                     end_of_initialization:
   142                           	opt stack 0
   143  00178C                     __end_of__initialization:
   144                           	opt stack 0
   145  00178C  0100               	movlb	0
   146  00178E  EF12  F00A         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           postinc0	equ	0xFEE
   152                           wreg	equ	0xFE8
   153                           postdec1	equ	0xFE5
   154                           fsr1l	equ	0xFE1
   155                           
   156                           	psect	bssCOMRAM
   157  000031                     __pbssCOMRAM:
   158                           	opt stack 0
   159  000031                     _fiveAngle:
   160                           	opt stack 0
   161  000031                     	ds	15
   162  000040                     _average:
   163                           	opt stack 0
   164  000040                     	ds	3
   165  000043                     _x:
   166                           	opt stack 0
   167  000043                     	ds	1
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           postdec1	equ	0xFE5
   175                           fsr1l	equ	0xFE1
   176                           
   177                           	psect	dataCOMRAM
   178  000044                     __pdataCOMRAM:
   179                           	opt stack 0
   180  000044                     _Angle:
   181                           	opt stack 0
   182  000044                     	ds	5
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	opt stack 0
   195  000001                     ?___lwdiv:
   196                           	opt stack 0
   197  000001                     ?___lwmod:
   198                           	opt stack 0
   199  000001                     ?___ftpack:
   200                           	opt stack 0
   201  000001                     SerTx@c:
   202                           	opt stack 0
   203  000001                     OpenSPI1@bus_mode:
   204                           	opt stack 0
   205  000001                     WriteSPI1@TempVar:
   206                           	opt stack 0
   207  000001                     Delay10TCYx@unit:
   208                           	opt stack 0
   209  000001                     Delay1KTCYx@unit:
   210                           	opt stack 0
   211  000001                     Delay1TCYx@unit:
   212                           	opt stack 0
   213  000001                     ___lwdiv@dividend:
   214                           	opt stack 0
   215  000001                     ___lwmod@dividend:
   216                           	opt stack 0
   217  000001                     ___ftpack@arg:
   218                           	opt stack 0
   219                           
   220                           ; 3 bytes @ 0x0
   221  000001                     	ds	1
   222  000002                     ?_ReadRTDpos:
   223                           	opt stack 0
   224  000002                     OpenSPI1@smp_phase:
   225                           	opt stack 0
   226  000002                     WriteSPI1@data_out:
   227                           	opt stack 0
   228  000002                     SerTxStr@string:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x1
   232  000002                     	ds	1
   233  000003                     setGPIO@value:
   234                           	opt stack 0
   235  000003                     setIODIR@dir:
   236                           	opt stack 0
   237  000003                     OpenSPI1@sync_mode:
   238                           	opt stack 0
   239  000003                     ___lwdiv@divisor:
   240                           	opt stack 0
   241  000003                     ___lwmod@divisor:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000003                     	ds	1
   246  000004                     ??_ReadRTDpos:
   247  000004                     setGPIO@address:
   248                           	opt stack 0
   249  000004                     setIODIR@address:
   250                           	opt stack 0
   251  000004                     ___ftpack@exp:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x3
   255  000004                     	ds	1
   256  000005                     lcdCommand@command:
   257                           	opt stack 0
   258  000005                     lcdChar@letter:
   259                           	opt stack 0
   260  000005                     ___ftpack@sign:
   261                           	opt stack 0
   262  000005                     ___lwmod@counter:
   263                           	opt stack 0
   264  000005                     ___lwdiv@quotient:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x4
   268  000005                     	ds	1
   269  000006                     ??___ftpack:
   270  000006                     lcdGoTo@pos:
   271                           	opt stack 0
   272  000006                     lcdWriteString@s:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x5
   276  000006                     	ds	1
   277  000007                     ReadRTDpos@HighPosition:
   278                           	opt stack 0
   279  000007                     ___lwdiv@counter:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x6
   283  000007                     	ds	1
   284  000008                     ReadRTDpos@LowPosition:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x7
   288  000008                     	ds	1
   289  000009                     ?___lwtoft:
   290                           	opt stack 0
   291  000009                     ReadRTDpos@FullPosition:
   292                           	opt stack 0
   293  000009                     ___lwtoft@c:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x8
   297  000009                     	ds	2
   298  00000B                     ReadRTDpos@x:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0xA
   302  00000B                     	ds	1
   303  00000C                     ?___ftmul:
   304                           	opt stack 0
   305  00000C                     ___ftmul@f1:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0xB
   309  00000C                     	ds	3
   310  00000F                     ___ftmul@f2:
   311                           	opt stack 0
   312                           
   313                           ; 3 bytes @ 0xE
   314  00000F                     	ds	3
   315  000012                     ??___ftmul:
   316                           
   317                           ; 0 bytes @ 0x11
   318  000012                     	ds	3
   319  000015                     ___ftmul@exp:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x14
   323  000015                     	ds	1
   324  000016                     ___ftmul@f3_as_product:
   325                           	opt stack 0
   326                           
   327                           ; 3 bytes @ 0x15
   328  000016                     	ds	3
   329  000019                     ___ftmul@cntr:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x18
   333  000019                     	ds	1
   334  00001A                     ___ftmul@sign:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x19
   338  00001A                     	ds	1
   339  00001B                     ?_RTD2Angle:
   340                           	opt stack 0
   341  00001B                     ?___fttol:
   342                           	opt stack 0
   343  00001B                     RTD2Angle@RTDAngle:
   344                           	opt stack 0
   345  00001B                     ___fttol@f1:
   346                           	opt stack 0
   347                           
   348                           ; 3 bytes @ 0x1A
   349  00001B                     	ds	3
   350  00001E                     
   351                           ; 0 bytes @ 0x1D
   352  00001E                     	ds	1
   353  00001F                     ??___fttol:
   354                           
   355                           ; 0 bytes @ 0x1E
   356  00001F                     	ds	5
   357  000024                     ___fttol@sign1:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x23
   361  000024                     	ds	1
   362  000025                     ___fttol@lval:
   363                           	opt stack 0
   364                           
   365                           ; 4 bytes @ 0x24
   366  000025                     	ds	4
   367  000029                     ___fttol@exp1:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x28
   371  000029                     	ds	1
   372  00002A                     C2LCD@angle:
   373                           	opt stack 0
   374                           
   375                           ; 3 bytes @ 0x29
   376  00002A                     	ds	3
   377  00002D                     C2LCD@temp2:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x2C
   381  00002D                     	ds	2
   382  00002F                     C2LCD@temp:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x2E
   386  00002F                     	ds	2
   387  000031                     tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           ; 0 bytes @ 0x30
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 19 in file "ResolverDriver.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;		None               void
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels required when called:    5
   422 ;; This function calls:
   423 ;;		_C2LCD
   424 ;;		_RTD2Angle
   425 ;;		_ReadRTDpos
   426 ;;		_SerTx
   427 ;;		_SerTxStr
   428 ;;		_initialize
   429 ;;		_lcdGoTo
   430 ;;		_lcdWriteString
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text0
   437  001424                     __ptext0:
   438                           	opt stack 0
   439  001424                     _main:
   440                           	opt stack 26
   441                           
   442                           ;ResolverDriver.c: 22: initialize();
   443                           
   444                           ;incstack = 0
   445  001424  EC1F  F00C         	call	_initialize	;wreg free
   446                           
   447                           ;ResolverDriver.c: 23: lcdGoTo(0x00);
   448  001428  0E00               	movlw	0
   449  00142A  EC52  F00C         	call	_lcdGoTo
   450                           
   451                           ;ResolverDriver.c: 24: lcdWriteString("Angle: ");
   452  00142E  0E01               	movlw	low STR_3
   453  001430  6E06               	movwf	lcdWriteString@s,c
   454  001432  0E10               	movlw	high STR_3
   455  001434  6E07               	movwf	lcdWriteString@s+1,c
   456  001436  EC7C  F00B         	call	_lcdWriteString	;wreg free
   457  00143A  D000               	goto	l1656
   458  00143C                     l1656:
   459                           
   460                           ;ResolverDriver.c: 26: {
   461                           ;ResolverDriver.c: 27: C2LCD(RTD2Angle(ReadRTDpos()));
   462  00143C  EC7D  F00A         	call	_ReadRTDpos	;wreg free
   463  001440  C002  F01B         	movff	?_ReadRTDpos,RTD2Angle@RTDAngle
   464  001444  C003  F01C         	movff	?_ReadRTDpos+1,RTD2Angle@RTDAngle+1
   465  001448  EC60  F00B         	call	_RTD2Angle	;wreg free
   466  00144C  C01B  F02A         	movff	?_RTD2Angle,C2LCD@angle
   467  001450  C01C  F02B         	movff	?_RTD2Angle+1,C2LCD@angle+1
   468  001454  C01D  F02C         	movff	?_RTD2Angle+2,C2LCD@angle+2
   469  001458  EC0C  F008         	call	_C2LCD	;wreg free
   470                           
   471                           ;ResolverDriver.c: 28: SerTxStr("Angle: ");
   472  00145C  0E01               	movlw	low STR_3
   473  00145E  6E02               	movwf	SerTxStr@string,c
   474  001460  0E10               	movlw	high STR_3
   475  001462  6E03               	movwf	SerTxStr@string+1,c
   476  001464  EC96  F00B         	call	_SerTxStr	;wreg free
   477                           
   478                           ;ResolverDriver.c: 29: SerTx(Angle[0]);
   479  001468  5044               	movf	_Angle,w,c
   480  00146A  EC45  F00C         	call	_SerTx
   481                           
   482                           ;ResolverDriver.c: 30: SerTx(Angle[1]);
   483  00146E  5045               	movf	_Angle+1,w,c
   484  001470  EC45  F00C         	call	_SerTx
   485                           
   486                           ;ResolverDriver.c: 31: SerTx(Angle[2]);
   487  001474  5046               	movf	_Angle+2,w,c
   488  001476  EC45  F00C         	call	_SerTx
   489                           
   490                           ;ResolverDriver.c: 32: SerTx('.');
   491  00147A  0E2E               	movlw	46
   492  00147C  EC45  F00C         	call	_SerTx
   493                           
   494                           ;ResolverDriver.c: 33: SerTx(Angle[3]);
   495  001480  5047               	movf	_Angle+3,w,c
   496  001482  EC45  F00C         	call	_SerTx
   497                           
   498                           ;ResolverDriver.c: 34: SerTx(Angle[4]);
   499  001486  5048               	movf	_Angle+4,w,c
   500  001488  EC45  F00C         	call	_SerTx
   501                           
   502                           ;ResolverDriver.c: 35: SerTx(0x0A);
   503  00148C  0E0A               	movlw	10
   504  00148E  EC45  F00C         	call	_SerTx
   505                           
   506                           ;ResolverDriver.c: 36: SerTx(0x0D);
   507  001492  0E0D               	movlw	13
   508  001494  EC45  F00C         	call	_SerTx
   509  001498  D7D1               	goto	l1656
   510  00149A  EF00  F000         	goto	start
   511  00149E                     __end_of_main:
   512                           	opt stack 0
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postdec1	equ	0xFE5
   520                           fsr1l	equ	0xFE1
   521                           
   522 ;; *************** function _lcdWriteString *****************
   523 ;; Defined at:
   524 ;;		line 82 in file "LCD.h"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  s               2    5[COMRAM] PTR unsigned char 
   527 ;;		 -> STR_3(8), STR_2(7), STR_1(7), 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;		None               void
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;Total ram usage:        2 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    3
   546 ;; This function calls:
   547 ;;		_lcdChar
   548 ;; This function is called by:
   549 ;;		_main
   550 ;;		_lcdPrint
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text1
   555  0016F8                     __ptext1:
   556                           	opt stack 0
   557  0016F8                     _lcdWriteString:
   558                           	opt stack 27
   559                           
   560                           ;LCD.h: 84: while(*s)
   561                           
   562                           ;incstack = 0
   563  0016F8  D00D               	goto	l1544
   564  0016FA                     l1540:
   565                           
   566                           ;LCD.h: 85: lcdChar(*s++);
   567  0016FA  C006  FFF6         	movff	lcdWriteString@s,tblptrl
   568  0016FE  C007  FFF7         	movff	lcdWriteString@s+1,tblptrh
   569  001702                     	if	0	;tblptru may be non-zero
   570  001702                     	endif
   571  001702                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   572  001702  0E00               	movlw	low (__mediumconst shr (0+16))
   573  001704  6EF8               	movwf	tblptru,c
   574  001706                     	endif
   575  001706  0008               	tblrd		*
   576  001708  50F5               	movf	tablat,w,c
   577  00170A  EC41  F00B         	call	_lcdChar
   578  00170E  4A06               	infsnz	lcdWriteString@s,f,c
   579  001710  2A07               	incf	lcdWriteString@s+1,f,c
   580  001712  D000               	goto	l1544
   581  001714                     l1544:
   582  001714  C006  FFF6         	movff	lcdWriteString@s,tblptrl
   583  001718  C007  FFF7         	movff	lcdWriteString@s+1,tblptrh
   584  00171C                     	if	0	;tblptru may be non-zero
   585  00171C                     	endif
   586  00171C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   587  00171C  0E00               	movlw	low (__mediumconst shr (0+16))
   588  00171E  6EF8               	movwf	tblptru,c
   589  001720                     	endif
   590  001720  0008               	tblrd		*
   591  001722  50F5               	movf	tablat,w,c
   592  001724  0900               	iorlw	0
   593  001726  A4D8               	btfss	status,2,c
   594  001728  D7E8               	goto	l1540
   595  00172A  0012               	return		;funcret
   596  00172C                     __end_of_lcdWriteString:
   597                           	opt stack 0
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           postdec1	equ	0xFE5
   605                           fsr1l	equ	0xFE1
   606                           status	equ	0xFD8
   607                           
   608 ;; *************** function _initialize *****************
   609 ;; Defined at:
   610 ;;		line 41 in file "ResolverDriver.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;		None               void
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    4
   631 ;; This function calls:
   632 ;;		_RTDInit
   633 ;;		_SerInit
   634 ;;		_lcdInit
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text2
   641  00183E                     __ptext2:
   642                           	opt stack 0
   643  00183E                     _initialize:
   644                           	opt stack 26
   645                           
   646                           ;ResolverDriver.c: 43: while(OSCCONbits.OSTS == 0);
   647                           
   648                           ;incstack = 0
   649  00183E  D000               	goto	l72
   650  001840                     l72:
   651  001840  A6D3               	btfss	4051,3,c	;volatile
   652  001842  D7FE               	goto	l72
   653                           
   654                           ;ResolverDriver.c: 45: SerInit();
   655  001844  EC29  F00C         	call	_SerInit	;wreg free
   656                           
   657                           ;ResolverDriver.c: 46: RTDInit();
   658  001848  ECC9  F00B         	call	_RTDInit	;wreg free
   659                           
   660                           ;ResolverDriver.c: 47: lcdInit();
   661  00184C  ECFA  F00A         	call	_lcdInit	;wreg free
   662  001850  0012               	return		;funcret
   663  001852                     __end_of_initialize:
   664                           	opt stack 0
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           postdec1	equ	0xFE5
   672                           fsr1l	equ	0xFE1
   673                           status	equ	0xFD8
   674                           
   675 ;; *************** function _lcdInit *****************
   676 ;; Defined at:
   677 ;;		line 110 in file "LCD.h"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;		None               void
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    3
   698 ;; This function calls:
   699 ;;		_OpenSPI1
   700 ;;		_lcdCommand
   701 ;;		_setGPIO
   702 ;;		_setIODIR
   703 ;; This function is called by:
   704 ;;		_initialize
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text3
   709  0015F4                     __ptext3:
   710                           	opt stack 0
   711  0015F4                     _lcdInit:
   712                           	opt stack 26
   713                           
   714                           ;LCD.h: 112: TRISAbits.RA2=0;
   715                           
   716                           ;incstack = 0
   717  0015F4  9492               	bcf	3986,2,c	;volatile
   718                           
   719                           ;LCD.h: 113: PORTAbits.RA2=1;
   720  0015F6  8480               	bsf	3968,2,c	;volatile
   721                           
   722                           ;LCD.h: 115: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
   723  0015F8  0E02               	movlw	2
   724  0015FA  6E01               	movwf	OpenSPI1@bus_mode,c
   725  0015FC  0E80               	movlw	128
   726  0015FE  6E02               	movwf	OpenSPI1@smp_phase,c
   727  001600  0E02               	movlw	2
   728  001602  ECA9  F00A         	call	_OpenSPI1
   729                           
   730                           ;LCD.h: 117: setIODIR(0x01,0x00);
   731  001606  0E00               	movlw	0
   732  001608  6E03               	movwf	setIODIR@dir,c
   733  00160A  0E01               	movlw	1
   734  00160C  EC05  F00C         	call	_setIODIR
   735                           
   736                           ;LCD.h: 119: setIODIR(0x00,0x00);
   737  001610  0E00               	movlw	0
   738  001612  6E03               	movwf	setIODIR@dir,c
   739  001614  0E00               	movlw	0
   740  001616  EC05  F00C         	call	_setIODIR
   741                           
   742                           ;LCD.h: 121: setGPIO(0x00,0x00);
   743  00161A  0E00               	movlw	0
   744  00161C  6E03               	movwf	setGPIO@value,c
   745  00161E  0E00               	movlw	0
   746  001620  EC12  F00C         	call	_setGPIO
   747                           
   748                           ;LCD.h: 123: lcdCommand(0b00111111);
   749  001624  0E3F               	movlw	63
   750  001626  EC1F  F00B         	call	_lcdCommand
   751                           
   752                           ;LCD.h: 125: lcdCommand(0b00001111);
   753  00162A  0E0F               	movlw	15
   754  00162C  EC1F  F00B         	call	_lcdCommand
   755                           
   756                           ;LCD.h: 127: lcdCommand(0b00000001);
   757  001630  0E01               	movlw	1
   758  001632  EC1F  F00B         	call	_lcdCommand
   759                           
   760                           ;LCD.h: 129: lcdCommand(0b00000110);
   761  001636  0E06               	movlw	6
   762  001638  EC1F  F00B         	call	_lcdCommand
   763  00163C  0012               	return		;funcret
   764  00163E                     __end_of_lcdInit:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           postinc0	equ	0xFEE
   771                           wreg	equ	0xFE8
   772                           postdec1	equ	0xFE5
   773                           fsr1l	equ	0xFE1
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function _setIODIR *****************
   777 ;; Defined at:
   778 ;;		line 43 in file "LCD.h"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  address         1    wreg     unsigned char 
   781 ;;  dir             1    2[COMRAM] unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  address         1    3[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;		None               void
   786 ;; Registers used:
   787 ;;		wreg, status,2, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   793 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;Total ram usage:        2 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    1
   800 ;; This function calls:
   801 ;;		_WriteSPI1
   802 ;; This function is called by:
   803 ;;		_lcdInit
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text4
   808  00180A                     __ptext4:
   809                           	opt stack 0
   810  00180A                     _setIODIR:
   811                           	opt stack 27
   812                           
   813                           ;incstack = 0
   814                           ;setIODIR@address stored from wreg
   815  00180A  6E04               	movwf	setIODIR@address,c
   816                           
   817                           ;LCD.h: 45: PORTAbits.RA2=0;
   818  00180C  9480               	bcf	3968,2,c	;volatile
   819                           
   820                           ;LCD.h: 46: WriteSPI1(0x40);
   821  00180E  0E40               	movlw	64
   822  001810  ECF4  F00B         	call	_WriteSPI1
   823                           
   824                           ;LCD.h: 47: WriteSPI1(address);
   825  001814  5004               	movf	setIODIR@address,w,c
   826  001816  ECF4  F00B         	call	_WriteSPI1
   827                           
   828                           ;LCD.h: 48: WriteSPI1(dir);
   829  00181A  5003               	movf	setIODIR@dir,w,c
   830  00181C  ECF4  F00B         	call	_WriteSPI1
   831                           
   832                           ;LCD.h: 49: PORTAbits.RA2=1;
   833  001820  8480               	bsf	3968,2,c	;volatile
   834  001822  0012               	return		;funcret
   835  001824                     __end_of_setIODIR:
   836                           	opt stack 0
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           postdec1	equ	0xFE5
   844                           fsr1l	equ	0xFE1
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _OpenSPI1 *****************
   848 ;; Defined at:
   849 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  sync_mode       1    wreg     unsigned char 
   852 ;;  bus_mode        1    0[COMRAM] unsigned char 
   853 ;;  smp_phase       1    1[COMRAM] unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  sync_mode       1    2[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:        3 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_lcdInit
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text5
   879  001552                     __ptext5:
   880                           	opt stack 0
   881  001552                     _OpenSPI1:
   882                           	opt stack 28
   883                           
   884                           ;incstack = 0
   885                           ;OpenSPI1@sync_mode stored from wreg
   886  001552  6E03               	movwf	OpenSPI1@sync_mode,c
   887  001554  0E3F               	movlw	63
   888  001556  16C7               	andwf	4039,f,c	;volatile
   889  001558  0E00               	movlw	0
   890  00155A  6EC6               	movwf	4038,c	;volatile
   891  00155C  5003               	movf	OpenSPI1@sync_mode,w,c
   892  00155E  12C6               	iorwf	4038,f,c	;volatile
   893  001560  5002               	movf	OpenSPI1@smp_phase,w,c
   894  001562  12C7               	iorwf	4039,f,c	;volatile
   895  001564  D005               	goto	l1326
   896  001566                     l179:
   897  001566  8CC7               	bsf	4039,6,c	;volatile
   898  001568  D013               	goto	l1330
   899  00156A                     l181:
   900  00156A  8CC7               	bsf	4039,6,c	;volatile
   901  00156C                     l182:
   902  00156C  88C6               	bsf	4038,4,c	;volatile
   903  00156E  D010               	goto	l1330
   904  001570                     l1326:
   905  001570  5001               	movf	OpenSPI1@bus_mode,w,c
   906                           
   907                           ; Switch size 1, requested type "space"
   908                           ; Number of cases is 3, Range of values is 0 to 3
   909                           ; switch strategies available:
   910                           ; Name         Instructions Cycles
   911                           ; simple_byte           10     6 (average)
   912                           ;	Chosen strategy is simple_byte
   913  001572  0A00               	xorlw	0	; case 0
   914  001574  B4D8               	btfsc	status,2,c
   915  001576  D7F7               	goto	l179
   916  001578  0A02               	xorlw	2	; case 2
   917  00157A  B4D8               	btfsc	status,2,c
   918  00157C  D7F6               	goto	l181
   919  00157E  0A01               	xorlw	1	; case 3
   920  001580  B4D8               	btfsc	status,2,c
   921  001582  D7F4               	goto	l182
   922  001584  D005               	goto	l1330
   923  001586                     l185:
   924  001586  8E97               	bsf	3991,7,c	;volatile
   925  001588                     l187:
   926  001588  8694               	bsf	3988,3,c	;volatile
   927  00158A  D00A               	goto	l186
   928  00158C                     l188:
   929  00158C  9694               	bcf	3988,3,c	;volatile
   930  00158E  D008               	goto	l186
   931  001590                     l1330:
   932  001590  5003               	movf	OpenSPI1@sync_mode,w,c
   933                           
   934                           ; Switch size 1, requested type "space"
   935                           ; Number of cases is 2, Range of values is 4 to 5
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte            7     4 (average)
   939                           ;	Chosen strategy is simple_byte
   940  001592  0A04               	xorlw	4	; case 4
   941  001594  B4D8               	btfsc	status,2,c
   942  001596  D7F7               	goto	l185
   943  001598  0A01               	xorlw	1	; case 5
   944  00159A  B4D8               	btfsc	status,2,c
   945  00159C  D7F5               	goto	l187
   946  00159E  D7F6               	goto	l188
   947  0015A0                     l186:
   948  0015A0  8894               	bsf	3988,4,c	;volatile
   949  0015A2  9A94               	bcf	3988,5,c	;volatile
   950  0015A4  8AC6               	bsf	4038,5,c	;volatile
   951  0015A6  0012               	return		;funcret
   952  0015A8                     __end_of_OpenSPI1:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           postinc0	equ	0xFEE
   959                           wreg	equ	0xFE8
   960                           postdec1	equ	0xFE5
   961                           fsr1l	equ	0xFE1
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function _SerInit *****************
   965 ;; Defined at:
   966 ;;		line 19 in file "SerComm.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;		None               void
   973 ;; Registers used:
   974 ;;		wreg, status,2
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:        0 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_initialize
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text6
   994  001852                     __ptext6:
   995                           	opt stack 0
   996  001852                     _SerInit:
   997                           	opt stack 29
   998                           
   999                           ;SerComm.c: 21: TXSTA1 = 0x24;
  1000                           
  1001                           ;incstack = 0
  1002  001852  0E24               	movlw	36
  1003  001854  6EAC               	movwf	4012,c	;volatile
  1004                           
  1005                           ;SerComm.c: 22: RCSTA1 = 0x90;
  1006  001856  0E90               	movlw	144
  1007  001858  6EAB               	movwf	4011,c	;volatile
  1008                           
  1009                           ;SerComm.c: 23: BAUDCON1 = 0x00;
  1010  00185A  0E00               	movlw	0
  1011  00185C  6E7E               	movwf	3966,c	;volatile
  1012                           
  1013                           ;SerComm.c: 24: SPBRG = 21;
  1014  00185E  0E15               	movlw	21
  1015  001860  6EAF               	movwf	4015,c	;volatile
  1016                           
  1017                           ;SerComm.c: 26: PIE1bits.RC1IE = 1;
  1018  001862  8A9D               	bsf	3997,5,c	;volatile
  1019  001864  0012               	return		;funcret
  1020  001866                     __end_of_SerInit:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _RTDInit *****************
  1033 ;; Defined at:
  1034 ;;		line 3 in file "ResolverToDigital.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    1
  1055 ;; This function calls:
  1056 ;;		_Delay10TCYx
  1057 ;;		_Delay1KTCYx
  1058 ;;		_Delay1TCYx
  1059 ;; This function is called by:
  1060 ;;		_initialize
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text7
  1065  001792                     __ptext7:
  1066                           	opt stack 0
  1067  001792                     _RTDInit:
  1068                           	opt stack 28
  1069                           
  1070                           ;ResolverToDigital.c: 5: TRISD = 0xFF;
  1071                           
  1072                           ;incstack = 0
  1073  001792  6895               	setf	3989,c	;volatile
  1074                           
  1075                           ;ResolverToDigital.c: 6: TRISH = 0xFF;
  1076  001794  6899               	setf	3993,c	;volatile
  1077                           
  1078                           ;ResolverToDigital.c: 7: TRISEbits.RE0 = 0;
  1079  001796  9096               	bcf	3990,0,c	;volatile
  1080                           
  1081                           ;ResolverToDigital.c: 8: TRISEbits.RE1 = 0;
  1082  001798  9296               	bcf	3990,1,c	;volatile
  1083                           
  1084                           ;ResolverToDigital.c: 9: TRISEbits.RE2 = 0;
  1085  00179A  9496               	bcf	3990,2,c	;volatile
  1086                           
  1087                           ;ResolverToDigital.c: 10: TRISJbits.RJ0 = 0;
  1088  00179C  909A               	bcf	3994,0,c	;volatile
  1089                           
  1090                           ;ResolverToDigital.c: 11: TRISEbits.RE5 = 1;
  1091  00179E  8A96               	bsf	3990,5,c	;volatile
  1092                           
  1093                           ;ResolverToDigital.c: 12: TRISEbits.RE6 = 1;
  1094  0017A0  8C96               	bsf	3990,6,c	;volatile
  1095                           
  1096                           ;ResolverToDigital.c: 13: TRISEbits.RE7 = 1;
  1097  0017A2  8E96               	bsf	3990,7,c	;volatile
  1098                           
  1099                           ;ResolverToDigital.c: 17: PORTJbits.RJ0 = 0;
  1100  0017A4  9088               	bcf	3976,0,c	;volatile
  1101                           
  1102                           ;ResolverToDigital.c: 18: Delay10TCYx(10);
  1103  0017A6  0E0A               	movlw	10
  1104  0017A8  EC3C  F00C         	call	_Delay10TCYx
  1105                           
  1106                           ;ResolverToDigital.c: 19: PORTJbits.RJ0 = 1;
  1107  0017AC  8088               	bsf	3976,0,c	;volatile
  1108                           
  1109                           ;ResolverToDigital.c: 20: Delay1KTCYx(20);
  1110  0017AE  0E14               	movlw	20
  1111  0017B0  EC33  F00C         	call	_Delay1KTCYx
  1112                           
  1113                           ;ResolverToDigital.c: 21: PORTEbits.RE0 = 0;
  1114  0017B4  9084               	bcf	3972,0,c	;volatile
  1115                           
  1116                           ;ResolverToDigital.c: 22: Delay1TCYx(1);
  1117  0017B6  0E01               	movlw	1
  1118  0017B8  EC4C  F00C         	call	_Delay1TCYx
  1119                           
  1120                           ;ResolverToDigital.c: 23: PORTEbits.RE0 = 1;
  1121  0017BC  8084               	bsf	3972,0,c	;volatile
  1122                           
  1123                           ;ResolverToDigital.c: 25: PORTEbits.RE2 = 0;
  1124  0017BE  9484               	bcf	3972,2,c	;volatile
  1125  0017C0  0012               	return		;funcret
  1126  0017C2                     __end_of_RTDInit:
  1127                           	opt stack 0
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           status	equ	0xFD8
  1137                           
  1138 ;; *************** function _Delay1TCYx *****************
  1139 ;; Defined at:
  1140 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1tcyx.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  unit            1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  unit            1    0[COMRAM] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;		None               void
  1147 ;; Registers used:
  1148 ;;		wreg
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;Total ram usage:        1 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_RTDInit
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text8
  1168  001898                     __ptext8:
  1169                           	opt stack 0
  1170  001898                     _Delay1TCYx:
  1171                           	opt stack 28
  1172                           
  1173                           ;incstack = 0
  1174                           ;Delay1TCYx@unit stored from wreg
  1175  001898  6E01               	movwf	Delay1TCYx@unit,c
  1176  00189A                     l445:
  1177  00189A  F000               	nop	
  1178  00189C  2E01               	decfsz	Delay1TCYx@unit,f,c
  1179  00189E  D7FD               	goto	l445
  1180  0018A0  D000               	goto	l447
  1181  0018A2                     l447:
  1182  0018A2  0012               	return		;funcret
  1183  0018A4                     __end_of_Delay1TCYx:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postdec1	equ	0xFE5
  1192                           fsr1l	equ	0xFE1
  1193                           status	equ	0xFD8
  1194                           
  1195 ;; *************** function _Delay1KTCYx *****************
  1196 ;; Defined at:
  1197 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1ktcyx.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  unit            1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  unit            1    0[COMRAM] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;		None               void
  1204 ;; Registers used:
  1205 ;;		wreg
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_RTDInit
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text9
  1225  001866                     __ptext9:
  1226                           	opt stack 0
  1227  001866                     _Delay1KTCYx:
  1228                           	opt stack 28
  1229                           
  1230                           ;incstack = 0
  1231                           ;Delay1KTCYx@unit stored from wreg
  1232  001866  6E01               	movwf	Delay1KTCYx@unit,c
  1233  001868  0EFA               	movlw	250
  1234  00186A                     u767:
  1235  00186A  F000               	nop	
  1236  00186C  2EE8               	decfsz	wreg,f,c
  1237  00186E  D7FD               	goto	u767
  1238  001870  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1239  001872  D7FA               	goto	l880
  1240  001874  D000               	goto	l440
  1241  001876                     l440:
  1242  001876  0012               	return		;funcret
  1243  001878                     __end_of_Delay1KTCYx:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1l	equ	0xFE1
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _SerTxStr *****************
  1256 ;; Defined at:
  1257 ;;		line 41 in file "SerComm.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  string          2    1[COMRAM] PTR unsigned char 
  1260 ;;		 -> STR_4(8), 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;		None               void
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    1
  1279 ;; This function calls:
  1280 ;;		_SerTx
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text10
  1287  00172C                     __ptext10:
  1288                           	opt stack 0
  1289  00172C                     _SerTxStr:
  1290                           	opt stack 29
  1291                           
  1292                           ;SerComm.c: 43: while (*string)
  1293                           
  1294                           ;incstack = 0
  1295  00172C  D00D               	goto	l1628
  1296  00172E                     l1624:
  1297                           
  1298                           ;SerComm.c: 44: SerTx(*string++);
  1299  00172E  C002  FFF6         	movff	SerTxStr@string,tblptrl
  1300  001732  C003  FFF7         	movff	SerTxStr@string+1,tblptrh
  1301  001736                     	if	0	;tblptru may be non-zero
  1302  001736                     	endif
  1303  001736                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1304  001736  0E00               	movlw	low (__mediumconst shr (0+16))
  1305  001738  6EF8               	movwf	tblptru,c
  1306  00173A                     	endif
  1307  00173A  0008               	tblrd		*
  1308  00173C  50F5               	movf	tablat,w,c
  1309  00173E  EC45  F00C         	call	_SerTx
  1310  001742  4A02               	infsnz	SerTxStr@string,f,c
  1311  001744  2A03               	incf	SerTxStr@string+1,f,c
  1312  001746  D000               	goto	l1628
  1313  001748                     l1628:
  1314  001748  C002  FFF6         	movff	SerTxStr@string,tblptrl
  1315  00174C  C003  FFF7         	movff	SerTxStr@string+1,tblptrh
  1316  001750                     	if	0	;tblptru may be non-zero
  1317  001750                     	endif
  1318  001750                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1319  001750  0E00               	movlw	low (__mediumconst shr (0+16))
  1320  001752  6EF8               	movwf	tblptru,c
  1321  001754                     	endif
  1322  001754  0008               	tblrd		*
  1323  001756  50F5               	movf	tablat,w,c
  1324  001758  0900               	iorlw	0
  1325  00175A  A4D8               	btfss	status,2,c
  1326  00175C  D7E8               	goto	l1624
  1327  00175E  0012               	return		;funcret
  1328  001760                     __end_of_SerTxStr:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postdec1	equ	0xFE5
  1337                           fsr1l	equ	0xFE1
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _SerTx *****************
  1341 ;; Defined at:
  1342 ;;		line 32 in file "SerComm.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  c               1    wreg     unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  c               1    0[COMRAM] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;;		_SerTxStr
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text11
  1371  00188A                     __ptext11:
  1372                           	opt stack 0
  1373  00188A                     _SerTx:
  1374                           	opt stack 29
  1375                           
  1376                           ;incstack = 0
  1377                           ;SerTx@c stored from wreg
  1378  00188A  6E01               	movwf	SerTx@c,c
  1379                           
  1380                           ;SerComm.c: 34: TXREG1 = c;
  1381  00188C  C001  FFAD         	movff	SerTx@c,4013	;volatile
  1382                           
  1383                           ;SerComm.c: 35: while (PIR1bits.TX1IF == 0);
  1384  001890  D000               	goto	l145
  1385  001892                     l145:
  1386  001892  A89E               	btfss	3998,4,c	;volatile
  1387  001894  D7FE               	goto	l145
  1388  001896  0012               	return		;funcret
  1389  001898                     __end_of_SerTx:
  1390                           	opt stack 0
  1391                           tblptru	equ	0xFF8
  1392                           tblptrh	equ	0xFF7
  1393                           tblptrl	equ	0xFF6
  1394                           tablat	equ	0xFF5
  1395                           postinc0	equ	0xFEE
  1396                           wreg	equ	0xFE8
  1397                           postdec1	equ	0xFE5
  1398                           fsr1l	equ	0xFE1
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function _ReadRTDpos *****************
  1402 ;; Defined at:
  1403 ;;		line 35 in file "ResolverToDigital.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  FullPosition    2    8[COMRAM] unsigned int 
  1408 ;;  helloworld      2    0        unsigned int 
  1409 ;;  x               1   10[COMRAM] unsigned char 
  1410 ;;  LowPosition     1    7[COMRAM] unsigned char 
  1411 ;;  HighPosition    1    6[COMRAM] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  2    1[COMRAM] unsigned int 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;Total ram usage:       10 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    1
  1428 ;; This function calls:
  1429 ;;		_Delay10TCYx
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text12
  1436  0014FA                     __ptext12:
  1437                           	opt stack 0
  1438  0014FA                     _ReadRTDpos:
  1439                           	opt stack 29
  1440                           
  1441                           ;ResolverToDigital.c: 37: unsigned char x;
  1442                           ;ResolverToDigital.c: 38: unsigned int FullPosition, helloworld;
  1443                           ;ResolverToDigital.c: 39: unsigned char HighPosition, LowPosition;
  1444                           ;ResolverToDigital.c: 41: {
  1445                           ;ResolverToDigital.c: 42: PORTEbits.RE1 = 1;
  1446                           
  1447                           ;incstack = 0
  1448  0014FA  8284               	bsf	3972,1,c	;volatile
  1449                           
  1450                           ;ResolverToDigital.c: 43: PORTEbits.RE0 = 0;
  1451  0014FC  9084               	bcf	3972,0,c	;volatile
  1452                           
  1453                           ;ResolverToDigital.c: 44: for(x = 0; x < 8; x++)
  1454  0014FE  0E00               	movlw	0
  1455  001500  6E0B               	movwf	ReadRTDpos@x,c
  1456  001502  D003               	goto	l1564
  1457  001504  D005               	goto	l109
  1458  001506                     l108:
  1459                           
  1460                           ;ResolverToDigital.c: 45: __nop();
  1461  001506  F000               	nop	
  1462  001508  2A0B               	incf	ReadRTDpos@x,f,c
  1463  00150A                     l1564:
  1464  00150A  0E07               	movlw	7
  1465  00150C  640B               	cpfsgt	ReadRTDpos@x,c
  1466  00150E  D7FB               	goto	l108
  1467  001510                     l109:
  1468                           
  1469                           ;ResolverToDigital.c: 46: PORTEbits.RE2 = 1;
  1470  001510  8484               	bsf	3972,2,c	;volatile
  1471                           
  1472                           ;ResolverToDigital.c: 47: PORTEbits.RE2 = 0;
  1473  001512  9484               	bcf	3972,2,c	;volatile
  1474                           
  1475                           ;ResolverToDigital.c: 48: Delay10TCYx(1);
  1476  001514  0E01               	movlw	1
  1477  001516  EC3C  F00C         	call	_Delay10TCYx
  1478                           
  1479                           ;ResolverToDigital.c: 49: HighPosition = PORTH;
  1480  00151A  CF87 F007          	movff	3975,ReadRTDpos@HighPosition	;volatile
  1481                           
  1482                           ;ResolverToDigital.c: 50: LowPosition = PORTD;
  1483  00151E  CF83 F008          	movff	3971,ReadRTDpos@LowPosition	;volatile
  1484                           
  1485                           ;ResolverToDigital.c: 51: PORTEbits.RE2 = 1;
  1486  001522  8484               	bsf	3972,2,c	;volatile
  1487                           
  1488                           ;ResolverToDigital.c: 52: PORTEbits.RE0 = 1;
  1489  001524  8084               	bsf	3972,0,c	;volatile
  1490                           
  1491                           ;ResolverToDigital.c: 53: FullPosition = LowPosition;
  1492  001526  C008  F009         	movff	ReadRTDpos@LowPosition,ReadRTDpos@FullPosition
  1493  00152A  6A0A               	clrf	ReadRTDpos@FullPosition+1,c
  1494                           
  1495                           ;ResolverToDigital.c: 54: FullPosition = FullPosition | ((HighPosition & 0x0F) << 8);
  1496  00152C  C007  F004         	movff	ReadRTDpos@HighPosition,??_ReadRTDpos
  1497  001530  0E0F               	movlw	15
  1498  001532  1604               	andwf	??_ReadRTDpos,f,c
  1499  001534  5004               	movf	??_ReadRTDpos,w,c
  1500  001536  6E06               	movwf	(??_ReadRTDpos+2)& (0+255),c
  1501  001538  6A05               	clrf	(??_ReadRTDpos+1)& (0+255),c
  1502  00153A  5009               	movf	ReadRTDpos@FullPosition,w,c
  1503  00153C  1005               	iorwf	??_ReadRTDpos+1,w,c
  1504  00153E  6E09               	movwf	ReadRTDpos@FullPosition,c
  1505  001540  500A               	movf	ReadRTDpos@FullPosition+1,w,c
  1506  001542  1006               	iorwf	??_ReadRTDpos+2,w,c
  1507  001544  6E0A               	movwf	ReadRTDpos@FullPosition+1,c
  1508                           
  1509                           ;ResolverToDigital.c: 55: return FullPosition;
  1510  001546  C009  F002         	movff	ReadRTDpos@FullPosition,?_ReadRTDpos
  1511  00154A  C00A  F003         	movff	ReadRTDpos@FullPosition+1,?_ReadRTDpos+1
  1512  00154E  D000               	goto	l110
  1513  001550                     l110:
  1514  001550  0012               	return		;funcret
  1515  001552                     __end_of_ReadRTDpos:
  1516                           	opt stack 0
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           postinc0	equ	0xFEE
  1522                           wreg	equ	0xFE8
  1523                           postdec1	equ	0xFE5
  1524                           fsr1l	equ	0xFE1
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function _RTD2Angle *****************
  1528 ;; Defined at:
  1529 ;;		line 90 in file "ResolverToDigital.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  RTDAngle        2   26[COMRAM] unsigned int 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  3   26[COMRAM] unsigned int 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1543 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;Total ram usage:        3 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    2
  1550 ;; This function calls:
  1551 ;;		___ftmul
  1552 ;;		___lwtoft
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text13
  1559  0016C0                     __ptext13:
  1560                           	opt stack 0
  1561  0016C0                     _RTD2Angle:
  1562                           	opt stack 28
  1563                           
  1564                           ;ResolverToDigital.c: 92: return 0.087890625 * RTDAngle;
  1565                           
  1566                           ;incstack = 0
  1567  0016C0  C01B  F009         	movff	RTD2Angle@RTDAngle,___lwtoft@c
  1568  0016C4  C01C  F00A         	movff	RTD2Angle@RTDAngle+1,___lwtoft@c+1
  1569  0016C8  ECE1  F00B         	call	___lwtoft	;wreg free
  1570  0016CC  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  1571  0016D0  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  1572  0016D4  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  1573  0016D8  0E00               	movlw	0
  1574  0016DA  6E0F               	movwf	___ftmul@f2,c
  1575  0016DC  0EB4               	movlw	180
  1576  0016DE  6E10               	movwf	___ftmul@f2+1,c
  1577  0016E0  0E3D               	movlw	61
  1578  0016E2  6E11               	movwf	___ftmul@f2+2,c
  1579  0016E4  ECC0  F008         	call	___ftmul	;wreg free
  1580  0016E8  C00C  F01B         	movff	?___ftmul,?_RTD2Angle
  1581  0016EC  C00D  F01C         	movff	?___ftmul+1,?_RTD2Angle+1
  1582  0016F0  C00E  F01D         	movff	?___ftmul+2,?_RTD2Angle+2
  1583  0016F4  D000               	goto	l120
  1584  0016F6                     l120:
  1585  0016F6  0012               	return		;funcret
  1586  0016F8                     __end_of_RTD2Angle:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           postdec1	equ	0xFE5
  1595                           fsr1l	equ	0xFE1
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function ___lwtoft *****************
  1599 ;; Defined at:
  1600 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  c               2    8[COMRAM] unsigned int 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  3    8[COMRAM] float 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1614 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;Total ram usage:        3 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    1
  1621 ;; This function calls:
  1622 ;;		___ftpack
  1623 ;; This function is called by:
  1624 ;;		_RTD2Angle
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text14
  1629  0017C2                     __ptext14:
  1630                           	opt stack 0
  1631  0017C2                     ___lwtoft:
  1632                           	opt stack 28
  1633                           
  1634                           ;incstack = 0
  1635  0017C2  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1636  0017C6  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1637  0017CA  6A03               	clrf	___ftpack@arg+2,c
  1638  0017CC  0E8E               	movlw	142
  1639  0017CE  6E04               	movwf	___ftpack@exp,c
  1640  0017D0  0E00               	movlw	0
  1641  0017D2  6E05               	movwf	___ftpack@sign,c
  1642  0017D4  ECAF  F009         	call	___ftpack	;wreg free
  1643  0017D8  C001  F009         	movff	?___ftpack,?___lwtoft
  1644  0017DC  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1645  0017E0  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1646  0017E4  D000               	goto	l774
  1647  0017E6                     l774:
  1648  0017E6  0012               	return		;funcret
  1649  0017E8                     __end_of___lwtoft:
  1650                           	opt stack 0
  1651                           tblptru	equ	0xFF8
  1652                           tblptrh	equ	0xFF7
  1653                           tblptrl	equ	0xFF6
  1654                           tablat	equ	0xFF5
  1655                           postinc0	equ	0xFEE
  1656                           wreg	equ	0xFE8
  1657                           postdec1	equ	0xFE5
  1658                           fsr1l	equ	0xFE1
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _C2LCD *****************
  1662 ;; Defined at:
  1663 ;;		line 50 in file "ResolverDriver.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  angle           3   41[COMRAM] float 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  temp            2   46[COMRAM] unsigned int 
  1668 ;;  temp2           2   44[COMRAM] unsigned int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;		None               void
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1678 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;Total ram usage:        7 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    4
  1685 ;; This function calls:
  1686 ;;		___ftmul
  1687 ;;		___fttol
  1688 ;;		___lwdiv
  1689 ;;		___lwmod
  1690 ;;		_lcdChar
  1691 ;;		_lcdGoTo
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text15
  1698  001018                     __ptext15:
  1699                           	opt stack 0
  1700  001018                     _C2LCD:
  1701                           	opt stack 26
  1702                           
  1703                           ;ResolverDriver.c: 53: lcdGoTo(0x09);
  1704                           
  1705                           ;incstack = 0
  1706  001018  0E09               	movlw	9
  1707  00101A  EC52  F00C         	call	_lcdGoTo
  1708                           
  1709                           ;ResolverDriver.c: 54: unsigned int temp, temp2;
  1710                           ;ResolverDriver.c: 55: temp = angle * 100;
  1711  00101E  0E00               	movlw	0
  1712  001020  6E0F               	movwf	___ftmul@f2,c
  1713  001022  0EC8               	movlw	200
  1714  001024  6E10               	movwf	___ftmul@f2+1,c
  1715  001026  0E42               	movlw	66
  1716  001028  6E11               	movwf	___ftmul@f2+2,c
  1717  00102A  C02A  F00C         	movff	C2LCD@angle,___ftmul@f1
  1718  00102E  C02B  F00D         	movff	C2LCD@angle+1,___ftmul@f1+1
  1719  001032  C02C  F00E         	movff	C2LCD@angle+2,___ftmul@f1+2
  1720  001036  ECC0  F008         	call	___ftmul	;wreg free
  1721  00103A  C00C  F01B         	movff	?___ftmul,___fttol@f1
  1722  00103E  C00D  F01C         	movff	?___ftmul+1,___fttol@f1+1
  1723  001042  C00E  F01D         	movff	?___ftmul+2,___fttol@f1+2
  1724  001046  EC3C  F009         	call	___fttol	;wreg free
  1725  00104A  C01B  F02F         	movff	?___fttol,C2LCD@temp
  1726  00104E  C01C  F030         	movff	?___fttol+1,C2LCD@temp+1
  1727                           
  1728                           ;ResolverDriver.c: 56: temp2 = temp / 10000;
  1729  001052  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  1730  001056  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  1731  00105A  0E27               	movlw	39
  1732  00105C  6E04               	movwf	___lwdiv@divisor+1,c
  1733  00105E  0E10               	movlw	16
  1734  001060  6E03               	movwf	___lwdiv@divisor,c
  1735  001062  EC4F  F00A         	call	___lwdiv	;wreg free
  1736  001066  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  1737  00106A  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  1738                           
  1739                           ;ResolverDriver.c: 57: lcdChar(temp2 + 0x30);
  1740  00106E  502D               	movf	C2LCD@temp2,w,c
  1741  001070  0F30               	addlw	48
  1742  001072  EC41  F00B         	call	_lcdChar
  1743                           
  1744                           ;ResolverDriver.c: 58: Angle[0] = (temp2 + 0x30);
  1745  001076  502D               	movf	C2LCD@temp2,w,c
  1746  001078  0F30               	addlw	48
  1747  00107A  6E44               	movwf	_Angle,c
  1748                           
  1749                           ;ResolverDriver.c: 59: temp = temp % 10000;
  1750  00107C  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  1751  001080  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  1752  001084  0E27               	movlw	39
  1753  001086  6E04               	movwf	___lwmod@divisor+1,c
  1754  001088  0E10               	movlw	16
  1755  00108A  6E03               	movwf	___lwmod@divisor,c
  1756  00108C  ECD4  F00A         	call	___lwmod	;wreg free
  1757  001090  C001  F02F         	movff	?___lwmod,C2LCD@temp
  1758  001094  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  1759                           
  1760                           ;ResolverDriver.c: 60: temp2 = temp / 1000;
  1761  001098  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  1762  00109C  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  1763  0010A0  0E03               	movlw	3
  1764  0010A2  6E04               	movwf	___lwdiv@divisor+1,c
  1765  0010A4  0EE8               	movlw	232
  1766  0010A6  6E03               	movwf	___lwdiv@divisor,c
  1767  0010A8  EC4F  F00A         	call	___lwdiv	;wreg free
  1768  0010AC  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  1769  0010B0  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  1770                           
  1771                           ;ResolverDriver.c: 61: lcdChar(temp2 + 0x30);
  1772  0010B4  502D               	movf	C2LCD@temp2,w,c
  1773  0010B6  0F30               	addlw	48
  1774  0010B8  EC41  F00B         	call	_lcdChar
  1775                           
  1776                           ;ResolverDriver.c: 62: Angle[1] = (temp2 + 0x30);
  1777  0010BC  502D               	movf	C2LCD@temp2,w,c
  1778  0010BE  0F30               	addlw	48
  1779  0010C0  6E45               	movwf	_Angle+1,c
  1780                           
  1781                           ;ResolverDriver.c: 63: temp = temp % 1000;
  1782  0010C2  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  1783  0010C6  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  1784  0010CA  0E03               	movlw	3
  1785  0010CC  6E04               	movwf	___lwmod@divisor+1,c
  1786  0010CE  0EE8               	movlw	232
  1787  0010D0  6E03               	movwf	___lwmod@divisor,c
  1788  0010D2  ECD4  F00A         	call	___lwmod	;wreg free
  1789  0010D6  C001  F02F         	movff	?___lwmod,C2LCD@temp
  1790  0010DA  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  1791                           
  1792                           ;ResolverDriver.c: 64: temp2 = temp/100;
  1793  0010DE  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  1794  0010E2  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  1795  0010E6  0E00               	movlw	0
  1796  0010E8  6E04               	movwf	___lwdiv@divisor+1,c
  1797  0010EA  0E64               	movlw	100
  1798  0010EC  6E03               	movwf	___lwdiv@divisor,c
  1799  0010EE  EC4F  F00A         	call	___lwdiv	;wreg free
  1800  0010F2  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  1801  0010F6  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  1802                           
  1803                           ;ResolverDriver.c: 65: lcdChar(temp2 + 0x30);
  1804  0010FA  502D               	movf	C2LCD@temp2,w,c
  1805  0010FC  0F30               	addlw	48
  1806  0010FE  EC41  F00B         	call	_lcdChar
  1807                           
  1808                           ;ResolverDriver.c: 66: Angle[2] = (temp2 + 0x30);
  1809  001102  502D               	movf	C2LCD@temp2,w,c
  1810  001104  0F30               	addlw	48
  1811  001106  6E46               	movwf	_Angle+2,c
  1812                           
  1813                           ;ResolverDriver.c: 67: lcdChar('.');
  1814  001108  0E2E               	movlw	46
  1815  00110A  EC41  F00B         	call	_lcdChar
  1816                           
  1817                           ;ResolverDriver.c: 68: temp = temp % 100;
  1818  00110E  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  1819  001112  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  1820  001116  0E00               	movlw	0
  1821  001118  6E04               	movwf	___lwmod@divisor+1,c
  1822  00111A  0E64               	movlw	100
  1823  00111C  6E03               	movwf	___lwmod@divisor,c
  1824  00111E  ECD4  F00A         	call	___lwmod	;wreg free
  1825  001122  C001  F02F         	movff	?___lwmod,C2LCD@temp
  1826  001126  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  1827                           
  1828                           ;ResolverDriver.c: 69: temp2 = temp/10;
  1829  00112A  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  1830  00112E  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  1831  001132  0E00               	movlw	0
  1832  001134  6E04               	movwf	___lwdiv@divisor+1,c
  1833  001136  0E0A               	movlw	10
  1834  001138  6E03               	movwf	___lwdiv@divisor,c
  1835  00113A  EC4F  F00A         	call	___lwdiv	;wreg free
  1836  00113E  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  1837  001142  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  1838                           
  1839                           ;ResolverDriver.c: 70: lcdChar(temp2 + 0x30);
  1840  001146  502D               	movf	C2LCD@temp2,w,c
  1841  001148  0F30               	addlw	48
  1842  00114A  EC41  F00B         	call	_lcdChar
  1843                           
  1844                           ;ResolverDriver.c: 71: Angle[3] = (temp2 + 0x30);
  1845  00114E  502D               	movf	C2LCD@temp2,w,c
  1846  001150  0F30               	addlw	48
  1847  001152  6E47               	movwf	_Angle+3,c
  1848                           
  1849                           ;ResolverDriver.c: 72: temp = temp % 10;
  1850  001154  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  1851  001158  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  1852  00115C  0E00               	movlw	0
  1853  00115E  6E04               	movwf	___lwmod@divisor+1,c
  1854  001160  0E0A               	movlw	10
  1855  001162  6E03               	movwf	___lwmod@divisor,c
  1856  001164  ECD4  F00A         	call	___lwmod	;wreg free
  1857  001168  C001  F02F         	movff	?___lwmod,C2LCD@temp
  1858  00116C  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  1859                           
  1860                           ;ResolverDriver.c: 73: lcdChar(temp + 0x30);
  1861  001170  502F               	movf	C2LCD@temp,w,c
  1862  001172  0F30               	addlw	48
  1863  001174  EC41  F00B         	call	_lcdChar
  1864                           
  1865                           ;ResolverDriver.c: 74: Angle[4] = (temp2 + 0x30);
  1866  001178  502D               	movf	C2LCD@temp2,w,c
  1867  00117A  0F30               	addlw	48
  1868  00117C  6E48               	movwf	_Angle+4,c
  1869  00117E  0012               	return		;funcret
  1870  001180                     __end_of_C2LCD:
  1871                           	opt stack 0
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           postdec1	equ	0xFE5
  1879                           fsr1l	equ	0xFE1
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _lcdGoTo *****************
  1883 ;; Defined at:
  1884 ;;		line 76 in file "LCD.h"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  pos             1    wreg     unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  pos             1    5[COMRAM] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;		None               void
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;Total ram usage:        1 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    3
  1905 ;; This function calls:
  1906 ;;		_lcdCommand
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;;		_C2LCD
  1910 ;;		_lcdPrint
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text16
  1915  0018A4                     __ptext16:
  1916                           	opt stack 0
  1917  0018A4                     _lcdGoTo:
  1918                           	opt stack 27
  1919                           
  1920                           ;incstack = 0
  1921                           ;lcdGoTo@pos stored from wreg
  1922  0018A4  6E06               	movwf	lcdGoTo@pos,c
  1923                           
  1924                           ;LCD.h: 79: lcdCommand(0x80+pos);
  1925  0018A6  5006               	movf	lcdGoTo@pos,w,c
  1926  0018A8  0F80               	addlw	128
  1927  0018AA  EC1F  F00B         	call	_lcdCommand
  1928  0018AE  0012               	return		;funcret
  1929  0018B0                     __end_of_lcdGoTo:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           postinc0	equ	0xFEE
  1936                           wreg	equ	0xFE8
  1937                           postdec1	equ	0xFE5
  1938                           fsr1l	equ	0xFE1
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _lcdCommand *****************
  1942 ;; Defined at:
  1943 ;;		line 52 in file "LCD.h"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  command         1    wreg     unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  command         1    4[COMRAM] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        1 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    2
  1964 ;; This function calls:
  1965 ;;		_Delay10TCYx
  1966 ;;		_setGPIO
  1967 ;; This function is called by:
  1968 ;;		_lcdGoTo
  1969 ;;		_lcdInit
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text17
  1974  00163E                     __ptext17:
  1975                           	opt stack 0
  1976  00163E                     _lcdCommand:
  1977                           	opt stack 27
  1978                           
  1979                           ;incstack = 0
  1980                           ;lcdCommand@command stored from wreg
  1981  00163E  6E05               	movwf	lcdCommand@command,c
  1982                           
  1983                           ;LCD.h: 54: setGPIO(0x12,0x00);
  1984  001640  0E00               	movlw	0
  1985  001642  6E03               	movwf	setGPIO@value,c
  1986  001644  0E12               	movlw	18
  1987  001646  EC12  F00C         	call	_setGPIO
  1988                           
  1989                           ;LCD.h: 55: Delay10TCYx(0);
  1990  00164A  0E00               	movlw	0
  1991  00164C  EC3C  F00C         	call	_Delay10TCYx
  1992                           
  1993                           ;LCD.h: 56: setGPIO(0x13, command);
  1994  001650  C005  F003         	movff	lcdCommand@command,setGPIO@value
  1995  001654  0E13               	movlw	19
  1996  001656  EC12  F00C         	call	_setGPIO
  1997                           
  1998                           ;LCD.h: 57: Delay10TCYx(0);
  1999  00165A  0E00               	movlw	0
  2000  00165C  EC3C  F00C         	call	_Delay10TCYx
  2001                           
  2002                           ;LCD.h: 58: setGPIO(0x12,0x40);
  2003  001660  0E40               	movlw	64
  2004  001662  6E03               	movwf	setGPIO@value,c
  2005  001664  0E12               	movlw	18
  2006  001666  EC12  F00C         	call	_setGPIO
  2007                           
  2008                           ;LCD.h: 59: Delay10TCYx(0);
  2009  00166A  0E00               	movlw	0
  2010  00166C  EC3C  F00C         	call	_Delay10TCYx
  2011                           
  2012                           ;LCD.h: 60: setGPIO(0x12,0x00);
  2013  001670  0E00               	movlw	0
  2014  001672  6E03               	movwf	setGPIO@value,c
  2015  001674  0E12               	movlw	18
  2016  001676  EC12  F00C         	call	_setGPIO
  2017                           
  2018                           ;LCD.h: 61: Delay10TCYx(0);
  2019  00167A  0E00               	movlw	0
  2020  00167C  EC3C  F00C         	call	_Delay10TCYx
  2021  001680  0012               	return		;funcret
  2022  001682                     __end_of_lcdCommand:
  2023                           	opt stack 0
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           fsr1l	equ	0xFE1
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function _lcdChar *****************
  2035 ;; Defined at:
  2036 ;;		line 64 in file "LCD.h"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  letter          1    wreg     unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  letter          1    4[COMRAM] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;Total ram usage:        1 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    2
  2057 ;; This function calls:
  2058 ;;		_Delay10TCYx
  2059 ;;		_setGPIO
  2060 ;; This function is called by:
  2061 ;;		_lcdWriteString
  2062 ;;		_C2LCD
  2063 ;;		_lcdPrint
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text18
  2068  001682                     __ptext18:
  2069                           	opt stack 0
  2070  001682                     _lcdChar:
  2071                           	opt stack 27
  2072                           
  2073                           ;incstack = 0
  2074                           ;lcdChar@letter stored from wreg
  2075  001682  6E05               	movwf	lcdChar@letter,c
  2076                           
  2077                           ;LCD.h: 66: setGPIO(0x12,0x80);
  2078  001684  0E80               	movlw	128
  2079  001686  6E03               	movwf	setGPIO@value,c
  2080  001688  0E12               	movlw	18
  2081  00168A  EC12  F00C         	call	_setGPIO
  2082                           
  2083                           ;LCD.h: 67: Delay10TCYx(0);
  2084  00168E  0E00               	movlw	0
  2085  001690  EC3C  F00C         	call	_Delay10TCYx
  2086                           
  2087                           ;LCD.h: 68: setGPIO(0x13,letter);
  2088  001694  C005  F003         	movff	lcdChar@letter,setGPIO@value
  2089  001698  0E13               	movlw	19
  2090  00169A  EC12  F00C         	call	_setGPIO
  2091                           
  2092                           ;LCD.h: 70: setGPIO(0x12, 0xc0);
  2093  00169E  0EC0               	movlw	192
  2094  0016A0  6E03               	movwf	setGPIO@value,c
  2095  0016A2  0E12               	movlw	18
  2096  0016A4  EC12  F00C         	call	_setGPIO
  2097                           
  2098                           ;LCD.h: 71: Delay10TCYx(0);
  2099  0016A8  0E00               	movlw	0
  2100  0016AA  EC3C  F00C         	call	_Delay10TCYx
  2101                           
  2102                           ;LCD.h: 72: setGPIO(0x12,0x00);
  2103  0016AE  0E00               	movlw	0
  2104  0016B0  6E03               	movwf	setGPIO@value,c
  2105  0016B2  0E12               	movlw	18
  2106  0016B4  EC12  F00C         	call	_setGPIO
  2107                           
  2108                           ;LCD.h: 73: Delay10TCYx(0);
  2109  0016B8  0E00               	movlw	0
  2110  0016BA  EC3C  F00C         	call	_Delay10TCYx
  2111  0016BE  0012               	return		;funcret
  2112  0016C0                     __end_of_lcdChar:
  2113                           	opt stack 0
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           postinc0	equ	0xFEE
  2119                           wreg	equ	0xFE8
  2120                           postdec1	equ	0xFE5
  2121                           fsr1l	equ	0xFE1
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _setGPIO *****************
  2125 ;; Defined at:
  2126 ;;		line 32 in file "LCD.h"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  address         1    wreg     unsigned char 
  2129 ;;  value           1    2[COMRAM] unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  address         1    3[COMRAM] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2141 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:        2 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    1
  2148 ;; This function calls:
  2149 ;;		_WriteSPI1
  2150 ;; This function is called by:
  2151 ;;		_lcdCommand
  2152 ;;		_lcdChar
  2153 ;;		_lcdInit
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text19
  2158  001824                     __ptext19:
  2159                           	opt stack 0
  2160  001824                     _setGPIO:
  2161                           	opt stack 27
  2162                           
  2163                           ;incstack = 0
  2164                           ;setGPIO@address stored from wreg
  2165  001824  6E04               	movwf	setGPIO@address,c
  2166                           
  2167                           ;LCD.h: 34: PORTAbits.RA2=0;
  2168  001826  9480               	bcf	3968,2,c	;volatile
  2169                           
  2170                           ;LCD.h: 37: WriteSPI1(0x40);
  2171  001828  0E40               	movlw	64
  2172  00182A  ECF4  F00B         	call	_WriteSPI1
  2173                           
  2174                           ;LCD.h: 38: WriteSPI1(address);
  2175  00182E  5004               	movf	setGPIO@address,w,c
  2176  001830  ECF4  F00B         	call	_WriteSPI1
  2177                           
  2178                           ;LCD.h: 39: WriteSPI1(value);
  2179  001834  5003               	movf	setGPIO@value,w,c
  2180  001836  ECF4  F00B         	call	_WriteSPI1
  2181                           
  2182                           ;LCD.h: 40: PORTAbits.RA2=1;
  2183  00183A  8480               	bsf	3968,2,c	;volatile
  2184  00183C  0012               	return		;funcret
  2185  00183E                     __end_of_setGPIO:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postdec1	equ	0xFE5
  2194                           fsr1l	equ	0xFE1
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _WriteSPI1 *****************
  2198 ;; Defined at:
  2199 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  data_out        1    wreg     unsigned char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  data_out        1    1[COMRAM] unsigned char 
  2204 ;;  TempVar         1    0[COMRAM] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      char 
  2207 ;; Registers used:
  2208 ;;		wreg
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;Total ram usage:        2 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_setGPIO
  2224 ;;		_setIODIR
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text20
  2229  0017E8                     __ptext20:
  2230                           	opt stack 0
  2231  0017E8                     _WriteSPI1:
  2232                           	opt stack 27
  2233                           
  2234                           ;incstack = 0
  2235                           ;WriteSPI1@data_out stored from wreg
  2236  0017E8  6E02               	movwf	WriteSPI1@data_out,c
  2237  0017EA  CFC9 F001          	movff	4041,WriteSPI1@TempVar	;volatile
  2238  0017EE  969E               	bcf	3998,3,c	;volatile
  2239  0017F0  9EC6               	bcf	4038,7,c	;volatile
  2240  0017F2  C002  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  2241  0017F6  BEC6               	btfsc	4038,7,c	;volatile
  2242  0017F8  D007               	goto	l201
  2243  0017FA  D002               	goto	l203
  2244                           
  2245                           ;	Return value of _WriteSPI1 is never used
  2246  0017FC  D005               	goto	l201
  2247  0017FE  D000               	goto	l203
  2248  001800                     l203:
  2249  001800  B69E               	btfsc	3998,3,c	;volatile
  2250  001802  D002               	goto	l201
  2251  001804  D7FD               	goto	l203
  2252  001806  D000               	goto	l201
  2253  001808                     l201:
  2254  001808  0012               	return		;funcret
  2255  00180A                     __end_of_WriteSPI1:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           postdec1	equ	0xFE5
  2264                           fsr1l	equ	0xFE1
  2265                           status	equ	0xFD8
  2266                           
  2267 ;; *************** function _Delay10TCYx *****************
  2268 ;; Defined at:
  2269 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  unit            1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  unit            1    0[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_lcdCommand
  2293 ;;		_lcdChar
  2294 ;;		_RTDInit
  2295 ;;		_ReadRTDpos
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text21
  2300  001878                     __ptext21:
  2301                           	opt stack 0
  2302  001878                     _Delay10TCYx:
  2303                           	opt stack 28
  2304                           
  2305                           ;incstack = 0
  2306                           ;Delay10TCYx@unit stored from wreg
  2307  001878  6E01               	movwf	Delay10TCYx@unit,c
  2308  00187A  0E03               	movlw	3
  2309  00187C                     u777:
  2310  00187C  2EE8               	decfsz	wreg,f,c
  2311  00187E  D7FE               	goto	u777
  2312  001880  F000               	nop	
  2313  001882  2E01               	decfsz	Delay10TCYx@unit,f,c
  2314  001884  D7FA               	goto	l836
  2315  001886  D000               	goto	l433
  2316  001888                     l433:
  2317  001888  0012               	return		;funcret
  2318  00188A                     __end_of_Delay10TCYx:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           postdec1	equ	0xFE5
  2327                           fsr1l	equ	0xFE1
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function ___lwmod *****************
  2331 ;; Defined at:
  2332 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  dividend        2    0[COMRAM] unsigned int 
  2335 ;;  divisor         2    2[COMRAM] unsigned int 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  counter         1    4[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2    0[COMRAM] unsigned int 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:        5 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_C2LCD
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text22
  2361  0015A8                     __ptext22:
  2362                           	opt stack 0
  2363  0015A8                     ___lwmod:
  2364                           	opt stack 29
  2365                           
  2366                           ;incstack = 0
  2367  0015A8  5003               	movf	___lwmod@divisor,w,c
  2368  0015AA  1004               	iorwf	___lwmod@divisor+1,w,c
  2369  0015AC  B4D8               	btfsc	status,2,c
  2370  0015AE  D01D               	goto	l757
  2371  0015B0  0E01               	movlw	1
  2372  0015B2  6E05               	movwf	___lwmod@counter,c
  2373  0015B4  D005               	goto	l1524
  2374  0015B6                     l1522:
  2375  0015B6  90D8               	bcf	status,0,c
  2376  0015B8  3603               	rlcf	___lwmod@divisor,f,c
  2377  0015BA  3604               	rlcf	___lwmod@divisor+1,f,c
  2378  0015BC  2A05               	incf	___lwmod@counter,f,c
  2379  0015BE  D000               	goto	l1524
  2380  0015C0                     l1524:
  2381  0015C0  BE04               	btfsc	___lwmod@divisor+1,7,c
  2382  0015C2  D002               	goto	l1526
  2383  0015C4  D7F8               	goto	l1522
  2384  0015C6  D000               	goto	l1526
  2385  0015C8                     l1526:
  2386  0015C8  5003               	movf	___lwmod@divisor,w,c
  2387  0015CA  5C01               	subwf	___lwmod@dividend,w,c
  2388  0015CC  5004               	movf	___lwmod@divisor+1,w,c
  2389  0015CE  5802               	subwfb	___lwmod@dividend+1,w,c
  2390  0015D0  A0D8               	btfss	status,0,c
  2391  0015D2  D005               	goto	l1530
  2392  0015D4  5003               	movf	___lwmod@divisor,w,c
  2393  0015D6  5E01               	subwf	___lwmod@dividend,f,c
  2394  0015D8  5004               	movf	___lwmod@divisor+1,w,c
  2395  0015DA  5A02               	subwfb	___lwmod@dividend+1,f,c
  2396  0015DC  D000               	goto	l1530
  2397  0015DE                     l1530:
  2398  0015DE  90D8               	bcf	status,0,c
  2399  0015E0  3204               	rrcf	___lwmod@divisor+1,f,c
  2400  0015E2  3203               	rrcf	___lwmod@divisor,f,c
  2401  0015E4  2E05               	decfsz	___lwmod@counter,f,c
  2402  0015E6  D7F0               	goto	l1526
  2403  0015E8  D000               	goto	l757
  2404  0015EA                     l757:
  2405  0015EA  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2406  0015EE  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2407  0015F2  0012               	return		;funcret
  2408  0015F4                     __end_of___lwmod:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postdec1	equ	0xFE5
  2417                           fsr1l	equ	0xFE1
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function ___lwdiv *****************
  2421 ;; Defined at:
  2422 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  dividend        2    0[COMRAM] unsigned int 
  2425 ;;  divisor         2    2[COMRAM] unsigned int 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  quotient        2    4[COMRAM] unsigned int 
  2428 ;;  counter         1    6[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2    0[COMRAM] unsigned int 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;Total ram usage:        7 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_C2LCD
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text23
  2452  00149E                     __ptext23:
  2453                           	opt stack 0
  2454  00149E                     ___lwdiv:
  2455                           	opt stack 29
  2456                           
  2457                           ;incstack = 0
  2458  00149E  0E00               	movlw	0
  2459  0014A0  6E06               	movwf	___lwdiv@quotient+1,c
  2460  0014A2  0E00               	movlw	0
  2461  0014A4  6E05               	movwf	___lwdiv@quotient,c
  2462  0014A6  5003               	movf	___lwdiv@divisor,w,c
  2463  0014A8  1004               	iorwf	___lwdiv@divisor+1,w,c
  2464  0014AA  B4D8               	btfsc	status,2,c
  2465  0014AC  D021               	goto	l747
  2466  0014AE  0E01               	movlw	1
  2467  0014B0  6E07               	movwf	___lwdiv@counter,c
  2468  0014B2  D005               	goto	l1504
  2469  0014B4                     l1502:
  2470  0014B4  90D8               	bcf	status,0,c
  2471  0014B6  3603               	rlcf	___lwdiv@divisor,f,c
  2472  0014B8  3604               	rlcf	___lwdiv@divisor+1,f,c
  2473  0014BA  2A07               	incf	___lwdiv@counter,f,c
  2474  0014BC  D000               	goto	l1504
  2475  0014BE                     l1504:
  2476  0014BE  BE04               	btfsc	___lwdiv@divisor+1,7,c
  2477  0014C0  D002               	goto	l1506
  2478  0014C2  D7F8               	goto	l1502
  2479  0014C4  D000               	goto	l1506
  2480  0014C6                     l1506:
  2481  0014C6  90D8               	bcf	status,0,c
  2482  0014C8  3605               	rlcf	___lwdiv@quotient,f,c
  2483  0014CA  3606               	rlcf	___lwdiv@quotient+1,f,c
  2484  0014CC  5003               	movf	___lwdiv@divisor,w,c
  2485  0014CE  5C01               	subwf	___lwdiv@dividend,w,c
  2486  0014D0  5004               	movf	___lwdiv@divisor+1,w,c
  2487  0014D2  5802               	subwfb	___lwdiv@dividend+1,w,c
  2488  0014D4  A0D8               	btfss	status,0,c
  2489  0014D6  D006               	goto	l1514
  2490  0014D8  5003               	movf	___lwdiv@divisor,w,c
  2491  0014DA  5E01               	subwf	___lwdiv@dividend,f,c
  2492  0014DC  5004               	movf	___lwdiv@divisor+1,w,c
  2493  0014DE  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2494  0014E0  8005               	bsf	___lwdiv@quotient,0,c
  2495  0014E2  D000               	goto	l1514
  2496  0014E4                     l1514:
  2497  0014E4  90D8               	bcf	status,0,c
  2498  0014E6  3204               	rrcf	___lwdiv@divisor+1,f,c
  2499  0014E8  3203               	rrcf	___lwdiv@divisor,f,c
  2500  0014EA  2E07               	decfsz	___lwdiv@counter,f,c
  2501  0014EC  D7EC               	goto	l1506
  2502  0014EE  D000               	goto	l747
  2503  0014F0                     l747:
  2504  0014F0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2505  0014F4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2506  0014F8  0012               	return		;funcret
  2507  0014FA                     __end_of___lwdiv:
  2508                           	opt stack 0
  2509                           tblptru	equ	0xFF8
  2510                           tblptrh	equ	0xFF7
  2511                           tblptrl	equ	0xFF6
  2512                           tablat	equ	0xFF5
  2513                           postinc0	equ	0xFEE
  2514                           wreg	equ	0xFE8
  2515                           postdec1	equ	0xFE5
  2516                           fsr1l	equ	0xFE1
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function ___fttol *****************
  2520 ;; Defined at:
  2521 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  f1              3   26[COMRAM] float 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  lval            4   36[COMRAM] unsigned long 
  2526 ;;  exp1            1   40[COMRAM] unsigned char 
  2527 ;;  sign1           1   35[COMRAM] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  4   26[COMRAM] long 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:       15 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_C2LCD
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text24
  2551  001278                     __ptext24:
  2552                           	opt stack 0
  2553  001278                     ___fttol:
  2554                           	opt stack 29
  2555                           
  2556                           ;incstack = 0
  2557  001278  C01D  F01F         	movff	___fttol@f1+2,??___fttol
  2558  00127C  6A20               	clrf	(??___fttol+1)& (0+255),c
  2559  00127E  6A21               	clrf	(??___fttol+2)& (0+255),c
  2560  001280  341C               	rlcf	___fttol@f1+1,w,c
  2561  001282  361F               	rlcf	??___fttol& (0+255),f,c
  2562  001284  E301               	bnc	u571
  2563  001286  8020               	bsf	(??___fttol+1)& (0+255),0,c
  2564  001288                     u571:
  2565  001288  501F               	movf	??___fttol,w,c
  2566  00128A  6E29               	movwf	___fttol@exp1,c
  2567  00128C  5029               	movf	___fttol@exp1,w,c
  2568  00128E  A4D8               	btfss	status,2,c
  2569  001290  D002               	goto	l1456
  2570  001292  D039               	goto	l1480
  2571  001294  D063               	goto	l645
  2572  001296                     l1456:
  2573  001296  0E17               	movlw	23
  2574  001298  6E1F               	movwf	??___fttol& (0+255),c
  2575  00129A  C01B  F020         	movff	___fttol@f1,??___fttol+1
  2576  00129E  C01C  F021         	movff	___fttol@f1+1,??___fttol+2
  2577  0012A2  C01D  F022         	movff	___fttol@f1+2,??___fttol+3
  2578  0012A6  281F               	incf	??___fttol,w,c
  2579  0012A8  6E23               	movwf	(??___fttol+4)& (0+255),c
  2580  0012AA  D004               	goto	u590
  2581  0012AC                     u595:
  2582  0012AC  90D8               	bcf	status,0,c
  2583  0012AE  3222               	rrcf	??___fttol+3,f,c
  2584  0012B0  3221               	rrcf	??___fttol+2,f,c
  2585  0012B2  3220               	rrcf	??___fttol+1,f,c
  2586  0012B4                     u590:
  2587  0012B4  2E23               	decfsz	(??___fttol+4)& (0+255),f,c
  2588  0012B6  D7FA               	goto	u595
  2589  0012B8  5020               	movf	??___fttol+1,w,c
  2590  0012BA  6E24               	movwf	___fttol@sign1,c
  2591  0012BC  8E1C               	bsf	___fttol@f1+1,7,c
  2592  0012BE  0EFF               	movlw	255
  2593  0012C0  161B               	andwf	___fttol@f1,f,c
  2594  0012C2  0EFF               	movlw	255
  2595  0012C4  161C               	andwf	___fttol@f1+1,f,c
  2596  0012C6  0E00               	movlw	0
  2597  0012C8  161D               	andwf	___fttol@f1+2,f,c
  2598  0012CA  501B               	movf	___fttol@f1,w,c
  2599  0012CC  6E25               	movwf	___fttol@lval,c
  2600  0012CE  501C               	movf	___fttol@f1+1,w,c
  2601  0012D0  6E26               	movwf	___fttol@lval+1,c
  2602  0012D2  501D               	movf	___fttol@f1+2,w,c
  2603  0012D4  6E27               	movwf	___fttol@lval+2,c
  2604  0012D6  6A28               	clrf	___fttol@lval+3,c
  2605  0012D8  0E8E               	movlw	142
  2606  0012DA  5E29               	subwf	___fttol@exp1,f,c
  2607  0012DC  AE29               	btfss	___fttol@exp1,7,c
  2608  0012DE  D010               	goto	l1478
  2609  0012E0  5029               	movf	___fttol@exp1,w,c
  2610  0012E2  0A80               	xorlw	128
  2611  0012E4  0F8F               	addlw	143
  2612  0012E6  B0D8               	btfsc	status,0,c
  2613  0012E8  D003               	goto	l1474
  2614  0012EA  D00D               	goto	l1480
  2615  0012EC  D037               	goto	l645
  2616  0012EE  D000               	goto	l1474
  2617  0012F0                     l1474:
  2618  0012F0  90D8               	bcf	status,0,c
  2619  0012F2  3228               	rrcf	___fttol@lval+3,f,c
  2620  0012F4  3227               	rrcf	___fttol@lval+2,f,c
  2621  0012F6  3226               	rrcf	___fttol@lval+1,f,c
  2622  0012F8  3225               	rrcf	___fttol@lval,f,c
  2623  0012FA  3E29               	incfsz	___fttol@exp1,f,c
  2624  0012FC  D7F9               	goto	l1474
  2625  0012FE  D019               	goto	l1488
  2626  001300                     l1478:
  2627  001300  0E17               	movlw	23
  2628  001302  6429               	cpfsgt	___fttol@exp1,c
  2629  001304  D011               	goto	l1486
  2630  001306                     l1480:
  2631  001306  0E00               	movlw	0
  2632  001308  6E1B               	movwf	?___fttol,c
  2633  00130A  0E00               	movlw	0
  2634  00130C  6E1C               	movwf	?___fttol+1,c
  2635  00130E  0E00               	movlw	0
  2636  001310  6E1D               	movwf	?___fttol+2,c
  2637  001312  0E00               	movlw	0
  2638  001314  6E1E               	movwf	?___fttol+3,c
  2639  001316  D022               	goto	l645
  2640  001318  D007               	goto	l1486
  2641  00131A                     l1484:
  2642  00131A  90D8               	bcf	status,0,c
  2643  00131C  3625               	rlcf	___fttol@lval,f,c
  2644  00131E  3626               	rlcf	___fttol@lval+1,f,c
  2645  001320  3627               	rlcf	___fttol@lval+2,f,c
  2646  001322  3628               	rlcf	___fttol@lval+3,f,c
  2647  001324  0629               	decf	___fttol@exp1,f,c
  2648  001326  D000               	goto	l1486
  2649  001328                     l1486:
  2650  001328  5029               	movf	___fttol@exp1,w,c
  2651  00132A  B4D8               	btfsc	status,2,c
  2652  00132C  D002               	goto	l1488
  2653  00132E  D7F5               	goto	l1484
  2654  001330  D000               	goto	l1488
  2655  001332                     l1488:
  2656  001332  5024               	movf	___fttol@sign1,w,c
  2657  001334  B4D8               	btfsc	status,2,c
  2658  001336  D009               	goto	l1492
  2659  001338  1E28               	comf	___fttol@lval+3,f,c
  2660  00133A  1E27               	comf	___fttol@lval+2,f,c
  2661  00133C  1E26               	comf	___fttol@lval+1,f,c
  2662  00133E  6C25               	negf	___fttol@lval,c
  2663  001340  0E00               	movlw	0
  2664  001342  2226               	addwfc	___fttol@lval+1,f,c
  2665  001344  2227               	addwfc	___fttol@lval+2,f,c
  2666  001346  2228               	addwfc	___fttol@lval+3,f,c
  2667  001348  D000               	goto	l1492
  2668  00134A                     l1492:
  2669  00134A  C025  F01B         	movff	___fttol@lval,?___fttol
  2670  00134E  C026  F01C         	movff	___fttol@lval+1,?___fttol+1
  2671  001352  C027  F01D         	movff	___fttol@lval+2,?___fttol+2
  2672  001356  C028  F01E         	movff	___fttol@lval+3,?___fttol+3
  2673  00135A  D000               	goto	l645
  2674  00135C                     l645:
  2675  00135C  0012               	return		;funcret
  2676  00135E                     __end_of___fttol:
  2677                           	opt stack 0
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           postdec1	equ	0xFE5
  2685                           fsr1l	equ	0xFE1
  2686                           status	equ	0xFD8
  2687                           
  2688 ;; *************** function ___ftmul *****************
  2689 ;; Defined at:
  2690 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  f1              3   11[COMRAM] float 
  2693 ;;  f2              3   14[COMRAM] float 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  2696 ;;  sign            1   25[COMRAM] unsigned char 
  2697 ;;  cntr            1   24[COMRAM] unsigned char 
  2698 ;;  exp             1   20[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  3   11[COMRAM] float 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2708 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;Total ram usage:       15 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    1
  2715 ;; This function calls:
  2716 ;;		___ftpack
  2717 ;; This function is called by:
  2718 ;;		_C2LCD
  2719 ;;		_RTD2Angle
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text25
  2724  001180                     __ptext25:
  2725                           	opt stack 0
  2726  001180                     ___ftmul:
  2727                           	opt stack 28
  2728                           
  2729                           ;incstack = 0
  2730  001180  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
  2731  001184  6A13               	clrf	(??___ftmul+1)& (0+255),c
  2732  001186  6A14               	clrf	(??___ftmul+2)& (0+255),c
  2733  001188  340D               	rlcf	___ftmul@f1+1,w,c
  2734  00118A  3612               	rlcf	??___ftmul& (0+255),f,c
  2735  00118C  E301               	bnc	u511
  2736  00118E  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  2737  001190                     u511:
  2738  001190  5012               	movf	??___ftmul,w,c
  2739  001192  6E15               	movwf	___ftmul@exp,c
  2740  001194  5015               	movf	___ftmul@exp,w,c
  2741  001196  A4D8               	btfss	status,2,c
  2742  001198  D002               	goto	l1408
  2743  00119A  D00E               	goto	l1410
  2744  00119C  D06C               	goto	l624
  2745  00119E                     l1408:
  2746  00119E  C011  F012         	movff	___ftmul@f2+2,??___ftmul
  2747  0011A2  6A13               	clrf	(??___ftmul+1)& (0+255),c
  2748  0011A4  6A14               	clrf	(??___ftmul+2)& (0+255),c
  2749  0011A6  3410               	rlcf	___ftmul@f2+1,w,c
  2750  0011A8  3612               	rlcf	??___ftmul& (0+255),f,c
  2751  0011AA  E301               	bnc	u531
  2752  0011AC  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  2753  0011AE                     u531:
  2754  0011AE  5012               	movf	??___ftmul,w,c
  2755  0011B0  6E1A               	movwf	___ftmul@sign,c
  2756  0011B2  501A               	movf	___ftmul@sign,w,c
  2757  0011B4  A4D8               	btfss	status,2,c
  2758  0011B6  D007               	goto	l1414
  2759  0011B8                     l1410:
  2760  0011B8  0E00               	movlw	0
  2761  0011BA  6E0C               	movwf	?___ftmul,c
  2762  0011BC  0E00               	movlw	0
  2763  0011BE  6E0D               	movwf	?___ftmul+1,c
  2764  0011C0  0E00               	movlw	0
  2765  0011C2  6E0E               	movwf	?___ftmul+2,c
  2766  0011C4  D058               	goto	l624
  2767  0011C6                     l1414:
  2768  0011C6  501A               	movf	___ftmul@sign,w,c
  2769  0011C8  0F7B               	addlw	123
  2770  0011CA  2615               	addwf	___ftmul@exp,f,c
  2771  0011CC  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
  2772  0011D0  5011               	movf	___ftmul@f2+2,w,c
  2773  0011D2  1A1A               	xorwf	___ftmul@sign,f,c
  2774  0011D4  0E80               	movlw	128
  2775  0011D6  161A               	andwf	___ftmul@sign,f,c
  2776  0011D8  8E0D               	bsf	___ftmul@f1+1,7,c
  2777  0011DA  8E10               	bsf	___ftmul@f2+1,7,c
  2778  0011DC  0EFF               	movlw	255
  2779  0011DE  160F               	andwf	___ftmul@f2,f,c
  2780  0011E0  0EFF               	movlw	255
  2781  0011E2  1610               	andwf	___ftmul@f2+1,f,c
  2782  0011E4  0E00               	movlw	0
  2783  0011E6  1611               	andwf	___ftmul@f2+2,f,c
  2784  0011E8  0E00               	movlw	0
  2785  0011EA  6E16               	movwf	___ftmul@f3_as_product,c
  2786  0011EC  0E00               	movlw	0
  2787  0011EE  6E17               	movwf	___ftmul@f3_as_product+1,c
  2788  0011F0  0E00               	movlw	0
  2789  0011F2  6E18               	movwf	___ftmul@f3_as_product+2,c
  2790  0011F4  0E07               	movlw	7
  2791  0011F6  6E19               	movwf	___ftmul@cntr,c
  2792  0011F8  D000               	goto	l1428
  2793  0011FA                     l1428:
  2794  0011FA  A00C               	btfss	___ftmul@f1,0,c
  2795  0011FC  D007               	goto	l1432
  2796  0011FE  500F               	movf	___ftmul@f2,w,c
  2797  001200  2616               	addwf	___ftmul@f3_as_product,f,c
  2798  001202  5010               	movf	___ftmul@f2+1,w,c
  2799  001204  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  2800  001206  5011               	movf	___ftmul@f2+2,w,c
  2801  001208  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  2802  00120A  D000               	goto	l1432
  2803  00120C                     l1432:
  2804  00120C  90D8               	bcf	status,0,c
  2805  00120E  320E               	rrcf	___ftmul@f1+2,f,c
  2806  001210  320D               	rrcf	___ftmul@f1+1,f,c
  2807  001212  320C               	rrcf	___ftmul@f1,f,c
  2808  001214  90D8               	bcf	status,0,c
  2809  001216  360F               	rlcf	___ftmul@f2,f,c
  2810  001218  3610               	rlcf	___ftmul@f2+1,f,c
  2811  00121A  3611               	rlcf	___ftmul@f2+2,f,c
  2812  00121C  2E19               	decfsz	___ftmul@cntr,f,c
  2813  00121E  D7ED               	goto	l1428
  2814  001220  D000               	goto	l1436
  2815  001222                     l1436:
  2816  001222  0E09               	movlw	9
  2817  001224  6E19               	movwf	___ftmul@cntr,c
  2818  001226  D000               	goto	l1438
  2819  001228                     l1438:
  2820  001228  A00C               	btfss	___ftmul@f1,0,c
  2821  00122A  D007               	goto	l1442
  2822  00122C  500F               	movf	___ftmul@f2,w,c
  2823  00122E  2616               	addwf	___ftmul@f3_as_product,f,c
  2824  001230  5010               	movf	___ftmul@f2+1,w,c
  2825  001232  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  2826  001234  5011               	movf	___ftmul@f2+2,w,c
  2827  001236  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  2828  001238  D000               	goto	l1442
  2829  00123A                     l1442:
  2830  00123A  90D8               	bcf	status,0,c
  2831  00123C  320E               	rrcf	___ftmul@f1+2,f,c
  2832  00123E  320D               	rrcf	___ftmul@f1+1,f,c
  2833  001240  320C               	rrcf	___ftmul@f1,f,c
  2834  001242  90D8               	bcf	status,0,c
  2835  001244  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  2836  001246  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  2837  001248  3216               	rrcf	___ftmul@f3_as_product,f,c
  2838  00124A  2E19               	decfsz	___ftmul@cntr,f,c
  2839  00124C  D7ED               	goto	l1438
  2840  00124E  D000               	goto	l1446
  2841  001250                     l1446:
  2842  001250  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2843  001254  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2844  001258  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2845  00125C  C015  F004         	movff	___ftmul@exp,___ftpack@exp
  2846  001260  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
  2847  001264  ECAF  F009         	call	___ftpack	;wreg free
  2848  001268  C001  F00C         	movff	?___ftpack,?___ftmul
  2849  00126C  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
  2850  001270  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
  2851  001274  D000               	goto	l624
  2852  001276                     l624:
  2853  001276  0012               	return		;funcret
  2854  001278                     __end_of___ftmul:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           postinc0	equ	0xFEE
  2861                           wreg	equ	0xFE8
  2862                           postdec1	equ	0xFE5
  2863                           fsr1l	equ	0xFE1
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function ___ftpack *****************
  2867 ;; Defined at:
  2868 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  arg             3    0[COMRAM] unsigned um
  2871 ;;  exp             1    3[COMRAM] unsigned char 
  2872 ;;  sign            1    4[COMRAM] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  3    0[COMRAM] float 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2884 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;Total ram usage:        8 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		___ftmul
  2894 ;;		___lwtoft
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text26
  2899  00135E                     __ptext26:
  2900                           	opt stack 0
  2901  00135E                     ___ftpack:
  2902                           	opt stack 28
  2903                           
  2904                           ;incstack = 0
  2905  00135E  5004               	movf	___ftpack@exp,w,c
  2906  001360  B4D8               	btfsc	status,2,c
  2907  001362  D005               	goto	l1338
  2908  001364  5001               	movf	___ftpack@arg,w,c
  2909  001366  1002               	iorwf	___ftpack@arg+1,w,c
  2910  001368  1003               	iorwf	___ftpack@arg+2,w,c
  2911  00136A  A4D8               	btfss	status,2,c
  2912  00136C  D00E               	goto	l1344
  2913  00136E                     l1338:
  2914  00136E  0E00               	movlw	0
  2915  001370  6E01               	movwf	?___ftpack,c
  2916  001372  0E00               	movlw	0
  2917  001374  6E02               	movwf	?___ftpack+1,c
  2918  001376  0E00               	movlw	0
  2919  001378  6E03               	movwf	?___ftpack+2,c
  2920  00137A  D053               	goto	l537
  2921  00137C  D006               	goto	l1344
  2922  00137E                     l1342:
  2923  00137E  2A04               	incf	___ftpack@exp,f,c
  2924  001380  90D8               	bcf	status,0,c
  2925  001382  3203               	rrcf	___ftpack@arg+2,f,c
  2926  001384  3202               	rrcf	___ftpack@arg+1,f,c
  2927  001386  3201               	rrcf	___ftpack@arg,f,c
  2928  001388  D000               	goto	l1344
  2929  00138A                     l1344:
  2930  00138A  0E00               	movlw	0
  2931  00138C  1401               	andwf	___ftpack@arg,w,c
  2932  00138E  6E06               	movwf	??___ftpack& (0+255),c
  2933  001390  0E00               	movlw	0
  2934  001392  1402               	andwf	___ftpack@arg+1,w,c
  2935  001394  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2936  001396  0EFE               	movlw	254
  2937  001398  1403               	andwf	___ftpack@arg+2,w,c
  2938  00139A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2939  00139C  5006               	movf	??___ftpack,w,c
  2940  00139E  1007               	iorwf	??___ftpack+1,w,c
  2941  0013A0  1008               	iorwf	??___ftpack+2,w,c
  2942  0013A2  B4D8               	btfsc	status,2,c
  2943  0013A4  D00E               	goto	l1350
  2944  0013A6  D7EB               	goto	l1342
  2945  0013A8  D00C               	goto	l1350
  2946  0013AA                     l1346:
  2947  0013AA  2A04               	incf	___ftpack@exp,f,c
  2948  0013AC  0E01               	movlw	1
  2949  0013AE  2601               	addwf	___ftpack@arg,f,c
  2950  0013B0  0E00               	movlw	0
  2951  0013B2  2202               	addwfc	___ftpack@arg+1,f,c
  2952  0013B4  0E00               	movlw	0
  2953  0013B6  2203               	addwfc	___ftpack@arg+2,f,c
  2954  0013B8  90D8               	bcf	status,0,c
  2955  0013BA  3203               	rrcf	___ftpack@arg+2,f,c
  2956  0013BC  3202               	rrcf	___ftpack@arg+1,f,c
  2957  0013BE  3201               	rrcf	___ftpack@arg,f,c
  2958  0013C0  D000               	goto	l1350
  2959  0013C2                     l1350:
  2960  0013C2  0E00               	movlw	0
  2961  0013C4  1401               	andwf	___ftpack@arg,w,c
  2962  0013C6  6E06               	movwf	??___ftpack& (0+255),c
  2963  0013C8  0E00               	movlw	0
  2964  0013CA  1402               	andwf	___ftpack@arg+1,w,c
  2965  0013CC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2966  0013CE  0EFF               	movlw	255
  2967  0013D0  1403               	andwf	___ftpack@arg+2,w,c
  2968  0013D2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2969  0013D4  5006               	movf	??___ftpack,w,c
  2970  0013D6  1007               	iorwf	??___ftpack+1,w,c
  2971  0013D8  1008               	iorwf	??___ftpack+2,w,c
  2972  0013DA  B4D8               	btfsc	status,2,c
  2973  0013DC  D008               	goto	l1354
  2974  0013DE  D7E5               	goto	l1346
  2975  0013E0  D006               	goto	l1354
  2976  0013E2                     l1352:
  2977  0013E2  0604               	decf	___ftpack@exp,f,c
  2978  0013E4  90D8               	bcf	status,0,c
  2979  0013E6  3601               	rlcf	___ftpack@arg,f,c
  2980  0013E8  3602               	rlcf	___ftpack@arg+1,f,c
  2981  0013EA  3603               	rlcf	___ftpack@arg+2,f,c
  2982  0013EC  D000               	goto	l1354
  2983  0013EE                     l1354:
  2984  0013EE  BE02               	btfsc	___ftpack@arg+1,7,c
  2985  0013F0  D004               	goto	l548
  2986  0013F2  0E02               	movlw	2
  2987  0013F4  6004               	cpfslt	___ftpack@exp,c
  2988  0013F6  D7F5               	goto	l1352
  2989  0013F8  D000               	goto	l548
  2990  0013FA                     l548:
  2991  0013FA  B004               	btfsc	___ftpack@exp,0,c
  2992  0013FC  D002               	goto	l1360
  2993  0013FE  9E02               	bcf	___ftpack@arg+1,7,c
  2994  001400  D000               	goto	l1360
  2995  001402                     l1360:
  2996  001402  90D8               	bcf	status,0,c
  2997  001404  3204               	rrcf	___ftpack@exp,f,c
  2998  001406  5004               	movf	___ftpack@exp,w,c
  2999  001408  1203               	iorwf	___ftpack@arg+2,f,c
  3000  00140A  5005               	movf	___ftpack@sign,w,c
  3001  00140C  B4D8               	btfsc	status,2,c
  3002  00140E  D002               	goto	l1366
  3003  001410  8E03               	bsf	___ftpack@arg+2,7,c
  3004  001412  D000               	goto	l1366
  3005  001414                     l1366:
  3006  001414  C001  F001         	movff	___ftpack@arg,?___ftpack
  3007  001418  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3008  00141C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3009  001420  D000               	goto	l537
  3010  001422                     l537:
  3011  001422  0012               	return		;funcret
  3012  001424                     __end_of___ftpack:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           postinc0	equ	0xFEE
  3019                           wreg	equ	0xFE8
  3020                           postdec1	equ	0xFE5
  3021                           fsr1l	equ	0xFE1
  3022                           status	equ	0xFD8
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           postdec1	equ	0xFE5
  3030                           fsr1l	equ	0xFE1
  3031                           status	equ	0xFD8
  3032                           
  3033                           	psect	rparam
  3034  0000                     tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           postinc0	equ	0xFEE
  3039                           wreg	equ	0xFE8
  3040                           postdec1	equ	0xFE5
  3041                           fsr1l	equ	0xFE1
  3042                           status	equ	0xFD8


Data Sizes:
    Strings     22
    Constant    0
    Data        5
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      72
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[8]), 

    lcdWriteString@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_C2LCD
    _lcdWriteString->_lcdChar
    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _RTDInit->_Delay10TCYx
    _RTDInit->_Delay1KTCYx
    _RTDInit->_Delay1TCYx
    _SerTxStr->_SerTx
    _ReadRTDpos->_Delay10TCYx
    _RTD2Angle->___ftmul
    ___lwtoft->___ftpack
    _C2LCD->___fttol
    _lcdGoTo->_lcdCommand
    _lcdCommand->_setGPIO
    _lcdChar->_setGPIO
    _setGPIO->_WriteSPI1
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12561
                              _C2LCD
                          _RTD2Angle
                         _ReadRTDpos
                              _SerTx
                           _SerTxStr
                         _initialize
                            _lcdGoTo
                     _lcdWriteString
 ---------------------------------------------------------------------------------
 (1) _lcdWriteString                                       2     0      2     777
                                              5 COMRAM     2     0      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    1513
                            _RTDInit
                            _SerInit
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1468
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     165
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTDInit                                              0     0      0      45
                        _Delay10TCYx
                        _Delay1KTCYx
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1TCYx                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SerTxStr                                             2     0      2     113
                                              1 COMRAM     2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (2) _SerTx                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadRTDpos                                          12    10      2     153
                                              1 COMRAM    10     8      2
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (1) _RTD2Angle                                            3     0      3    4026
                                             26 COMRAM     3     0      3
                         _ReadRTDpos (ARG)
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1704
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _C2LCD                                                7     4      3    5369
                                             41 COMRAM     7     4      3
                          _RTD2Angle (ARG)
                         _ReadRTDpos (ARG)
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                            _lcdChar
                            _lcdGoTo
 ---------------------------------------------------------------------------------
 (1) _lcdGoTo                                              1     1      0     595
                                              5 COMRAM     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0     573
                                              4 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0     573
                                              4 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     536
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay10TCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     583
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     586
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     305
                                             26 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2247
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _C2LCD
     _RTD2Angle (ARG)
       _ReadRTDpos (ARG)
         _Delay10TCYx
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     _ReadRTDpos (ARG)
       _Delay10TCYx
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _lcdChar (ARG)
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
     _lcdGoTo (ARG)
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
   _RTD2Angle
     _ReadRTDpos (ARG)
       _Delay10TCYx
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _ReadRTDpos
     _Delay10TCYx
   _SerTx
   _SerTxStr
     _SerTx
   _initialize
     _RTDInit
       _Delay10TCYx
       _Delay1KTCYx
       _Delay1TCYx
     _SerInit
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1
   _lcdGoTo
     _lcdCommand
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
   _lcdWriteString
     _lcdChar
       _Delay10TCYx
       _setGPIO
         _WriteSPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      48       1       75.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48      32        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Oct 11 19:49:49 2015

                      _x 0043                       l72 1840                      l110 1550  
                    l120 16F6                      l201 1808                      l203 1800  
                    l108 1506                      l109 1510                      l145 1892  
                    l181 156A                      l182 156C                      l440 1876  
                    l433 1888                      l185 1586                      l186 15A0  
                    l187 1588                      l179 1566                      l188 158C  
                    l445 189A                      l447 18A2                      l624 1276  
                    l537 1422                      l548 13FA                      l645 135C  
                    l747 14F0                      l836 187A                      l757 15EA  
                    l774 17E6                      l880 1868                      u511 1190  
                    u531 11AE                      u571 1288                      u590 12B4  
                    u595 12AC                      u767 186A                      u777 187C  
      lcdCommand@command 0005                      wreg 000FE8               _Delay1TCYx 1898  
           __CFG_WDT$OFF 000000                     l1410 11B8                     l1330 1590  
                   l1350 13C2                     l1342 137E                     l1414 11C6  
                   l1502 14B4                     l1326 1570                     l1360 1402  
                   l1352 13E2                     l1344 138A                     l1432 120C  
                   l1408 119E                     l1504 14BE                     l1354 13EE  
                   l1346 13AA                     l1338 136E                     l1442 123A  
                   l1514 14E4                     l1506 14C6                     l1530 15DE  
                   l1522 15B6                     l1436 1222                     l1428 11FA  
                   l1524 15C0                     l1540 16FA                     l1366 1414  
                   l1446 1250                     l1438 1228                     l1526 15C8  
                   l1480 1306                     l1456 1296                     l1624 172E  
                   l1544 1714                     l1474 12F0                     l1492 134A  
                   l1484 131A                     l1564 150A                     l1628 1748  
                   l1486 1328                     l1478 1300                     l1488 1332  
                   l1656 143C                     STR_1 1010                     STR_2 1009  
                   STR_3 1001                     STR_4 1001             __CFG_PWRT$ON 000000  
                   _main 1424             ___ftpack@arg 0001             ___ftpack@exp 0004  
        __end_of_RTDInit 17C2                     fsr1l 000FE1                     start 0000  
           ___ftmul@cntr 0019             ___param_bank 000010             ___ftmul@sign 001A  
            _Delay10TCYx 1878             ___fttol@exp1 0029          __end_of_SerInit 1866  
           ___fttol@lval 0025              _Delay1KTCYx 1866                    _C2LCD 1018  
            ReadRTDpos@x 000B        RTD2Angle@RTDAngle 001B                    ?_main 0001  
        __end_of___ftmul 1278          __end_of___fttol 135E          __end_of___lwdiv 14FA  
        __end_of___lwmod 15F4       __size_of_RTD2Angle 0038                C2LCD@temp 002F  
                  _SPBRG 000FAF                    _PORTD 000F83                    _PORTH 000F87  
                  _TRISD 000F95                    _TRISH 000F99                    _Angle 0044  
        __end_of_lcdChar 16C0          __end_of_lcdGoTo 18B0          __end_of_lcdInit 163E  
         __CFG_FCMEN$OFF 000000                    _SerTx 188A          __end_of_setGPIO 183E  
          ___ftpack@sign 0005                    tablat 000FF5                    status 000FD8  
             _ReadRTDpos 14FA          __initialization 1760             __end_of_main 149E  
         __CFG_OSC$HSPLL 000000                   ?_C2LCD 002A         __end_of_OpenSPI1 15A8  
                 ??_main 0031            ___fttol@sign1 0024         __end_of_SerTxStr 1760  
          __activetblptr 000003         ??_lcdWriteString 0008                   ?_SerTx 0001  
              ??_RTDInit 0002              ?_Delay1TCYx 0001         __end_of___ftpack 1424  
             C2LCD@angle 002A                   _RCREG1 000FAE         __end_of___lwtoft 17E8  
                 _RCSTA1 000FAB               C2LCD@temp2 002D                   _TXREG1 000FAD  
                 _TXSTA1 000FAC        __end_of_RTD2Angle 16F8                   SerTx@c 0001  
              ??_SerInit 0001         OpenSPI1@bus_mode 0001          lcdWriteString@s 0006  
              ??___ftmul 0012                ??___fttol 001F                ??___lwdiv 0005  
              ??___lwmod 0005         __end_of_setIODIR 1824                   clear_0 1766  
            setIODIR@dir 0003                ??_lcdChar 0005                ??_lcdGoTo 0006  
              ??_lcdInit 0006    ___ftmul@f3_as_product 0016             __pdataCOMRAM 0044  
              ??_setGPIO 0004             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 178C       __size_of_WriteSPI1 0022            __end_of_C2LCD 1180  
          ___rparam_used 000001              ?_ReadRTDpos 0002               ___ftmul@f1 000C  
             ___ftmul@f2 000F               ___fttol@f1 001B           __pcstackCOMRAM 0001  
          __end_of_SerTx 1898      __size_of_Delay1TCYx 000C                  ??_C2LCD 002D  
             ___lwtoft@c 0009                  ??_SerTx 0001         WriteSPI1@TempVar 0001  
              ?_OpenSPI1 0001                ?_SerTxStr 0002             ?_Delay10TCYx 0001  
             _lcdCommand 163E             ?_Delay1KTCYx 0001                ?___ftpack 0001  
      __end_of_WriteSPI1 180A                ?___lwtoft 0009      __size_of_ReadRTDpos 0058  
                _SSP1BUF 000FC9                  _RTDInit 1792           SerTxStr@string 0002  
              ?_setIODIR 0003               ??_OpenSPI1 0003               ??_SerTxStr 0004  
                __Hparam 0000                  _SerInit 1852                  __Lparam 0000  
                ___ftmul 1180                  ___fttol 1278                  ___lwdiv 149E  
                ___lwmod 15A8             __psmallconst 1000                  __pcinit 1760  
             ??___ftpack 0006          Delay10TCYx@unit 0001                  _lcdChar 1682  
                __ramtop 1000               _initialize 183E                  _lcdGoTo 18A4  
                _lcdInit 15F4                  __ptext0 1424                  __ptext1 16F8  
                __ptext2 183E                  __ptext3 15F4                  __ptext4 180A  
                __ptext5 1552                  __ptext6 1852                  __ptext7 1792  
                __ptext8 1898                  __ptext9 1866                  _average 0040  
             ??___lwtoft 000C                  _setGPIO 1824          setIODIR@address 0004  
           setGPIO@value 0003             ??_Delay1TCYx 0001     end_of_initialization 178C  
             ??_setIODIR 0004        OpenSPI1@smp_phase 0002               lcdGoTo@pos 0006  
  ReadRTDpos@LowPosition 0008                  postdec1 000FE5              ?_lcdCommand 0001  
              _RTD2Angle 16C0                  postinc0 000FEE        OpenSPI1@sync_mode 0003  
     __end_of_Delay1TCYx 18A4                _PORTAbits 000F80                _PORTEbits 000F84  
              _PORTJbits 000F88                _TRISAbits 000F92                _TRISCbits 000F94  
              _TRISEbits 000F96                _TRISFbits 000F97                _TRISJbits 000F9A  
           ??_ReadRTDpos 0004              ___ftmul@exp 0015               ?_RTD2Angle 001B  
   __size_of_Delay10TCYx 0012            __pidataCOMRAM 18B0              ?_initialize 0001  
   __size_of_Delay1KTCYx 0012            lcdChar@letter 0005      start_initialization 1760  
     __end_of_ReadRTDpos 1552      __size_of_lcdCommand 0044  __size_of_lcdWriteString 0034  
 ReadRTDpos@HighPosition 0007        __size_of_OpenSPI1 0056        __size_of_SerTxStr 0034  
      __size_of___ftpack 00C6              __pbssCOMRAM 0031        __size_of___lwtoft 0026  
              _WriteSPI1 17E8                 ?_RTDInit 0001          Delay1KTCYx@unit 0001  
    __size_of_initialize 0014        WriteSPI1@data_out 0002        __size_of_setIODIR 001A  
               ?_SerInit 0001         ___lwdiv@dividend 0001              ??_RTD2Angle 001E  
               ?___ftmul 000C                 ?___fttol 001B                 ?___lwdiv 0001  
               ?___lwmod 0001                _fiveAngle 0031                 ?_lcdChar 0001  
               ?_lcdGoTo 0001                 ?_lcdInit 0001           __size_of_C2LCD 0168  
            __smallconst 1000                 _BAUDCON1 000F7E                 ?_setGPIO 0003  
             ?_WriteSPI1 0001           __size_of_SerTx 000E         ___lwdiv@quotient 0005  
               _PIE1bits 000F9D                 _PIR1bits 000F9E           setGPIO@address 0004  
           ??_lcdCommand 0005                 _SSP1CON1 000FC6                 _SSP1STAT 000FC7  
              copy_data0 1780         __size_of_RTDInit 0030       __end_of_lcdCommand 1682  
         _lcdWriteString 16F8                 _OpenSPI1 1552   ReadRTDpos@FullPosition 0009  
               _SerTxStr 172C                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_SerInit 0014         __size_of___ftmul 00F8         __size_of___fttol 00E6  
       __size_of___lwdiv 005C         __size_of___lwmod 004C             ??_initialize 0006  
               ___ftpack 135E         __size_of_lcdChar 003E                 ___lwtoft 17C2  
       __size_of_lcdGoTo 000C         __size_of_lcdInit 004A         __size_of_setGPIO 001A  
            ??_WriteSPI1 0001          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 172C                 __ptext11 188A                 __ptext20 17E8  
               __ptext12 14FA                 __ptext21 1878                 __ptext13 16C0  
               __ptext22 15A8                 __ptext14 17C2                 __ptext23 149E  
               __ptext15 1018                 __ptext24 1278                 __ptext16 18A4  
               __ptext25 1180                 __ptext17 163E                 __ptext26 135E  
               __ptext18 1682                 __ptext19 1824             _SSP1CON1bits 000FC6  
 __end_of_lcdWriteString 172C                 _setIODIR 180A            __size_of_main 007A  
         Delay1TCYx@unit 0001       __end_of_initialize 1852            ??_Delay10TCYx 0001  
          ??_Delay1KTCYx 0001             _SSP1STATbits 000FC7          ?_lcdWriteString 0006  
       ___lwmod@dividend 0001               _OSCCONbits 000FD3      __end_of_Delay10TCYx 188A  
        ___lwmod@divisor 0003      __end_of_Delay1KTCYx 1878          ___lwmod@counter 0005  
