

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Oct 10 22:16:53 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  001BC2                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _Angle
    48  001BC2  33                 	db	51
    49  001BC3  34                 	db	52
    50  001BC4  31                 	db	49
    51  001BC5  32                 	db	50
    52  001BC6  32                 	db	50
    53  0000                     _BAUDCON1	set	3966
    54  0000                     _PORTAbits	set	3968
    55  0000                     _PORTD	set	3971
    56  0000                     _PORTEbits	set	3972
    57  0000                     _PORTH	set	3975
    58  0000                     _PORTJbits	set	3976
    59  0000                     _TRISAbits	set	3986
    60  0000                     _TRISCbits	set	3988
    61  0000                     _TRISD	set	3989
    62  0000                     _TRISEbits	set	3990
    63  0000                     _TRISFbits	set	3991
    64  0000                     _TRISH	set	3993
    65  0000                     _TRISJbits	set	3994
    66  0000                     _OSCCONbits	set	4051
    67  0000                     _PIE1bits	set	3997
    68  0000                     _PIR1bits	set	3998
    69  0000                     _RCREG1	set	4014
    70  0000                     _RCSTA1	set	4011
    71  0000                     _SPBRG	set	4015
    72  0000                     _SSP1BUF	set	4041
    73  0000                     _SSP1CON1	set	4038
    74  0000                     _SSP1CON1bits	set	4038
    75  0000                     _SSP1STAT	set	4039
    76  0000                     _SSP1STATbits	set	4039
    77  0000                     _TXREG1	set	4013
    78  0000                     _TXSTA1	set	4012
    79                           
    80                           	psect	smallconst
    81  001000                     __psmallconst:
    82                           	opt stack 0
    83  001000  00                 	db	0
    84  001001                     STR_3:
    85  001001  41                 	db	65	;'A'
    86  001002  6E                 	db	110	;'n'
    87  001003  67                 	db	103	;'g'
    88  001004  6C                 	db	108	;'l'
    89  001005  65                 	db	101	;'e'
    90  001006  3A                 	db	58	;':'
    91  001007  20                 	db	32
    92  001008  00                 	db	0
    93  001009  38                 	db	56	;'8'
    94  00100A  36                 	db	54	;'6'
    95  00100B  38                 	db	56	;'8'
    96  00100C  30                 	db	48	;'0'
    97  00100D  3A                 	db	58	;':'
    98  00100E  20                 	db	32
    99  00100F  00                 	db	0
   100  001010  38                 	db	56	;'8'
   101  001011  37                 	db	55	;'7'
   102  001012  32                 	db	50	;'2'
   103  001013  32                 	db	50	;'2'
   104  001014  3A                 	db	58	;':'
   105  001015  20                 	db	32
   106  001016  00                 	db	0
   107  0000                     
   108                           ; #config settings
   109  001017  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           	psect	cinit
   112  001A72                     __pcinit:
   113                           	opt stack 0
   114  001A72                     start_initialization:
   115                           	opt stack 0
   116  001A72                     __initialization:
   117                           	opt stack 0
   118                           
   119                           ; Clear objects allocated to COMRAM (19 bytes)
   120  001A72  EE00  F031         	lfsr	0,__pbssCOMRAM
   121  001A76  0E13               	movlw	19
   122  001A78                     clear_0:
   123  001A78  6AEE               	clrf	postinc0,c
   124  001A7A  06E8               	decf	wreg,f,c
   125  001A7C  E1FD               	bnz	clear_0
   126                           
   127                           ; Initialize objects allocated to COMRAM (5 bytes)
   128                           ; load TBLPTR registers with __pidataCOMRAM
   129  001A7E  0EC2               	movlw	low __pidataCOMRAM
   130  001A80  6EF6               	movwf	tblptrl,c
   131  001A82  0E1B               	movlw	high __pidataCOMRAM
   132  001A84  6EF7               	movwf	tblptrh,c
   133  001A86  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   134  001A88  6EF8               	movwf	tblptru,c
   135  001A8A  EE00  F044         	lfsr	0,__pdataCOMRAM
   136  001A8E  EE10 F005          	lfsr	1,5
   137  001A92                     copy_data0:
   138  001A92  0009               	tblrd		*+
   139  001A94  CFF5 FFEE          	movff	tablat,postinc0
   140  001A98  50E5               	movf	postdec1,w,c
   141  001A9A  50E1               	movf	fsr1l,w,c
   142  001A9C  E1FA               	bnz	copy_data0
   143  001A9E                     end_of_initialization:
   144                           	opt stack 0
   145  001A9E                     __end_of__initialization:
   146                           	opt stack 0
   147  001A9E  0100               	movlb	0
   148  001AA0  EF1E  F00A         	goto	_main	;jump to C main() function
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           postdec1	equ	0xFE5
   156                           fsr1l	equ	0xFE1
   157                           
   158                           	psect	bssCOMRAM
   159  000031                     __pbssCOMRAM:
   160                           	opt stack 0
   161  000031                     _fiveAngle:
   162                           	opt stack 0
   163  000031                     	ds	15
   164  000040                     _average:
   165                           	opt stack 0
   166  000040                     	ds	3
   167  000043                     _x:
   168                           	opt stack 0
   169  000043                     	ds	1
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           postdec1	equ	0xFE5
   177                           fsr1l	equ	0xFE1
   178                           
   179                           	psect	dataCOMRAM
   180  000044                     __pdataCOMRAM:
   181                           	opt stack 0
   182  000044                     _Angle:
   183                           	opt stack 0
   184  000044                     	ds	5
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           postdec1	equ	0xFE5
   192                           fsr1l	equ	0xFE1
   193                           
   194                           	psect	cstackCOMRAM
   195  000001                     __pcstackCOMRAM:
   196                           	opt stack 0
   197  000001                     ?___lwdiv:
   198                           	opt stack 0
   199  000001                     ?___lwmod:
   200                           	opt stack 0
   201  000001                     ?___ftpack:
   202                           	opt stack 0
   203  000001                     SerTx@c:
   204                           	opt stack 0
   205  000001                     OpenSPI1@bus_mode:
   206                           	opt stack 0
   207  000001                     WriteSPI1@TempVar:
   208                           	opt stack 0
   209  000001                     Delay10TCYx@unit:
   210                           	opt stack 0
   211  000001                     Delay1KTCYx@unit:
   212                           	opt stack 0
   213  000001                     Delay1TCYx@unit:
   214                           	opt stack 0
   215  000001                     ___lwdiv@dividend:
   216                           	opt stack 0
   217  000001                     ___lwmod@dividend:
   218                           	opt stack 0
   219  000001                     ___ftpack@arg:
   220                           	opt stack 0
   221                           
   222                           ; 3 bytes @ 0x0
   223  000001                     	ds	1
   224  000002                     ?_ReadRTDpos:
   225                           	opt stack 0
   226  000002                     OpenSPI1@smp_phase:
   227                           	opt stack 0
   228  000002                     WriteSPI1@data_out:
   229                           	opt stack 0
   230  000002                     SerTxStr@string:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x1
   234  000002                     	ds	1
   235  000003                     setGPIO@value:
   236                           	opt stack 0
   237  000003                     setIODIR@dir:
   238                           	opt stack 0
   239  000003                     OpenSPI1@sync_mode:
   240                           	opt stack 0
   241  000003                     ___lwdiv@divisor:
   242                           	opt stack 0
   243  000003                     ___lwmod@divisor:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x2
   247  000003                     	ds	1
   248  000004                     ??_ReadRTDpos:
   249  000004                     setGPIO@address:
   250                           	opt stack 0
   251  000004                     setIODIR@address:
   252                           	opt stack 0
   253  000004                     ___ftpack@exp:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x3
   257  000004                     	ds	1
   258  000005                     lcdCommand@command:
   259                           	opt stack 0
   260  000005                     lcdChar@letter:
   261                           	opt stack 0
   262  000005                     ___ftpack@sign:
   263                           	opt stack 0
   264  000005                     ___lwmod@counter:
   265                           	opt stack 0
   266  000005                     ___lwdiv@quotient:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x4
   270  000005                     	ds	1
   271  000006                     ??___ftpack:
   272  000006                     lcdGoTo@pos:
   273                           	opt stack 0
   274  000006                     lcdWriteString@s:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x5
   278  000006                     	ds	1
   279  000007                     ReadRTDpos@HighPosition:
   280                           	opt stack 0
   281  000007                     ___lwdiv@counter:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x6
   285  000007                     	ds	1
   286  000008                     ReadRTDpos@LowPosition:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x7
   290  000008                     	ds	1
   291  000009                     ?___ftdiv:
   292                           	opt stack 0
   293  000009                     ?___lwtoft:
   294                           	opt stack 0
   295  000009                     ReadRTDpos@FullPosition:
   296                           	opt stack 0
   297  000009                     ___lwtoft@c:
   298                           	opt stack 0
   299  000009                     ___ftdiv@f1:
   300                           	opt stack 0
   301                           
   302                           ; 3 bytes @ 0x8
   303  000009                     	ds	2
   304  00000B                     ReadRTDpos@x:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0xA
   308  00000B                     	ds	1
   309  00000C                     ?___ftmul:
   310                           	opt stack 0
   311  00000C                     ___ftdiv@f2:
   312                           	opt stack 0
   313  00000C                     ___ftmul@f1:
   314                           	opt stack 0
   315                           
   316                           ; 3 bytes @ 0xB
   317  00000C                     	ds	3
   318  00000F                     ??___ftdiv:
   319  00000F                     ___ftmul@f2:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0xE
   323  00000F                     	ds	3
   324  000012                     ??___ftmul:
   325  000012                     ___ftdiv@cntr:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x11
   329  000012                     	ds	1
   330  000013                     ___ftdiv@f3:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0x12
   334  000013                     	ds	2
   335  000015                     ___ftmul@exp:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x14
   339  000015                     	ds	1
   340  000016                     ___ftdiv@exp:
   341                           	opt stack 0
   342  000016                     ___ftmul@f3_as_product:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0x15
   346  000016                     	ds	1
   347  000017                     ___ftdiv@sign:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x16
   351  000017                     	ds	2
   352  000019                     ___ftmul@cntr:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x18
   356  000019                     	ds	1
   357  00001A                     ___ftmul@sign:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x19
   361  00001A                     	ds	1
   362  00001B                     ?_RTD2Angle:
   363                           	opt stack 0
   364  00001B                     ?___fttol:
   365                           	opt stack 0
   366  00001B                     RTD2Angle@RTDAngle:
   367                           	opt stack 0
   368  00001B                     ___fttol@f1:
   369                           	opt stack 0
   370                           
   371                           ; 3 bytes @ 0x1A
   372  00001B                     	ds	3
   373  00001E                     ?___ftadd:
   374                           	opt stack 0
   375  00001E                     ___ftadd@f1:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0x1D
   379  00001E                     	ds	1
   380  00001F                     ??___fttol:
   381                           
   382                           ; 0 bytes @ 0x1E
   383  00001F                     	ds	2
   384  000021                     ___ftadd@f2:
   385                           	opt stack 0
   386                           
   387                           ; 3 bytes @ 0x20
   388  000021                     	ds	3
   389  000024                     ??___ftadd:
   390  000024                     ___fttol@sign1:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x23
   394  000024                     	ds	1
   395  000025                     ___fttol@lval:
   396                           	opt stack 0
   397                           
   398                           ; 4 bytes @ 0x24
   399  000025                     	ds	2
   400  000027                     ___ftadd@sign:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x26
   404  000027                     	ds	1
   405  000028                     ___ftadd@exp2:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x27
   409  000028                     	ds	1
   410  000029                     ___ftadd@exp1:
   411                           	opt stack 0
   412  000029                     ___fttol@exp1:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x28
   416  000029                     	ds	1
   417  00002A                     C2LCD@angle:
   418                           	opt stack 0
   419                           
   420                           ; 3 bytes @ 0x29
   421  00002A                     	ds	3
   422  00002D                     C2LCD@temp2:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x2C
   426  00002D                     	ds	2
   427  00002F                     C2LCD@temp:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x2E
   431  00002F                     	ds	2
   432  000031                     tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           ; 0 bytes @ 0x30
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 19 in file "ResolverDriver.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;		None               void
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels required when called:    5
   467 ;; This function calls:
   468 ;;		_C2LCD
   469 ;;		_RTD2Angle
   470 ;;		_ReadRTDpos
   471 ;;		_SerTx
   472 ;;		_SerTxStr
   473 ;;		___ftadd
   474 ;;		___ftdiv
   475 ;;		_initialize
   476 ;;		_lcdGoTo
   477 ;;		_lcdWriteString
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text0
   484  00143C                     __ptext0:
   485                           	opt stack 0
   486  00143C                     _main:
   487                           	opt stack 26
   488                           
   489                           ;ResolverDriver.c: 22: initialize();
   490                           
   491                           ;incstack = 0
   492  00143C  ECA8  F00D         	call	_initialize	;wreg free
   493                           
   494                           ;ResolverDriver.c: 23: lcdGoTo(0x00);
   495  001440  0E00               	movlw	0
   496  001442  ECDB  F00D         	call	_lcdGoTo
   497                           
   498                           ;ResolverDriver.c: 24: lcdWriteString("Angle: ");
   499  001446  0E01               	movlw	low STR_3
   500  001448  6E06               	movwf	lcdWriteString@s,c
   501  00144A  0E10               	movlw	high STR_3
   502  00144C  6E07               	movwf	lcdWriteString@s+1,c
   503  00144E  EC05  F00D         	call	_lcdWriteString	;wreg free
   504  001452  D000               	goto	l1906
   505  001454                     l1906:
   506                           
   507                           ;ResolverDriver.c: 26: {
   508                           ;ResolverDriver.c: 27: average = 0;
   509  001454  0E00               	movlw	0
   510  001456  6E40               	movwf	_average,c
   511  001458  0E00               	movlw	0
   512  00145A  6E41               	movwf	_average+1,c
   513  00145C  0E00               	movlw	0
   514  00145E  6E42               	movwf	_average+2,c
   515                           
   516                           ;ResolverDriver.c: 28: for(x = 0; x < 5; x++)
   517  001460  0E00               	movlw	0
   518  001462  6E43               	movwf	_x,c
   519  001464                     l1910:
   520  001464  0E04               	movlw	4
   521  001466  6443               	cpfsgt	_x,c
   522  001468  D001               	goto	l1914
   523  00146A  D01E               	goto	l1920
   524  00146C                     l1914:
   525                           
   526                           ;ResolverDriver.c: 29: {
   527                           ;ResolverDriver.c: 30: average += RTD2Angle(ReadRTDpos());
   528  00146C  C040  F01E         	movff	_average,___ftadd@f1
   529  001470  C041  F01F         	movff	_average+1,___ftadd@f1+1
   530  001474  C042  F020         	movff	_average+2,___ftadd@f1+2
   531  001478  EC06  F00C         	call	_ReadRTDpos	;wreg free
   532  00147C  C002  F01B         	movff	?_ReadRTDpos,RTD2Angle@RTDAngle
   533  001480  C003  F01C         	movff	?_ReadRTDpos+1,RTD2Angle@RTDAngle+1
   534  001484  ECE9  F00C         	call	_RTD2Angle	;wreg free
   535  001488  C01B  F021         	movff	?_RTD2Angle,___ftadd@f2
   536  00148C  C01C  F022         	movff	?_RTD2Angle+1,___ftadd@f2+1
   537  001490  C01D  F023         	movff	?_RTD2Angle+2,___ftadd@f2+2
   538  001494  EC0C  F008         	call	___ftadd	;wreg free
   539  001498  C01E  F040         	movff	?___ftadd,_average
   540  00149C  C01F  F041         	movff	?___ftadd+1,_average+1
   541  0014A0  C020  F042         	movff	?___ftadd+2,_average+2
   542  0014A4  2A43               	incf	_x,f,c
   543  0014A6  D7DE               	goto	l1910
   544  0014A8                     l1920:
   545                           
   546                           ;ResolverDriver.c: 31: }
   547                           ;ResolverDriver.c: 33: average /= 5;
   548  0014A8  C040  F009         	movff	_average,___ftdiv@f1
   549  0014AC  C041  F00A         	movff	_average+1,___ftdiv@f1+1
   550  0014B0  C042  F00B         	movff	_average+2,___ftdiv@f1+2
   551  0014B4  0E00               	movlw	0
   552  0014B6  6E0C               	movwf	___ftdiv@f2,c
   553  0014B8  0EA0               	movlw	160
   554  0014BA  6E0D               	movwf	___ftdiv@f2+1,c
   555  0014BC  0E40               	movlw	64
   556  0014BE  6E0E               	movwf	___ftdiv@f2+2,c
   557  0014C0  EC04  F00B         	call	___ftdiv	;wreg free
   558  0014C4  C009  F040         	movff	?___ftdiv,_average
   559  0014C8  C00A  F041         	movff	?___ftdiv+1,_average+1
   560  0014CC  C00B  F042         	movff	?___ftdiv+2,_average+2
   561                           
   562                           ;ResolverDriver.c: 35: C2LCD(average);
   563  0014D0  C040  F02A         	movff	_average,C2LCD@angle
   564  0014D4  C041  F02B         	movff	_average+1,C2LCD@angle+1
   565  0014D8  C042  F02C         	movff	_average+2,C2LCD@angle+2
   566  0014DC  ECEE  F008         	call	_C2LCD	;wreg free
   567                           
   568                           ;ResolverDriver.c: 36: SerTxStr("Angle: ");
   569  0014E0  0E01               	movlw	low STR_3
   570  0014E2  6E02               	movwf	SerTxStr@string,c
   571  0014E4  0E10               	movlw	high STR_3
   572  0014E6  6E03               	movwf	SerTxStr@string+1,c
   573  0014E8  EC1F  F00D         	call	_SerTxStr	;wreg free
   574                           
   575                           ;ResolverDriver.c: 37: SerTx(Angle[0]);
   576  0014EC  5044               	movf	_Angle,w,c
   577  0014EE  ECCE  F00D         	call	_SerTx
   578                           
   579                           ;ResolverDriver.c: 38: SerTx(Angle[1]);
   580  0014F2  5045               	movf	_Angle+1,w,c
   581  0014F4  ECCE  F00D         	call	_SerTx
   582                           
   583                           ;ResolverDriver.c: 39: SerTx(Angle[2]);
   584  0014F8  5046               	movf	_Angle+2,w,c
   585  0014FA  ECCE  F00D         	call	_SerTx
   586                           
   587                           ;ResolverDriver.c: 40: SerTx('.');
   588  0014FE  0E2E               	movlw	46
   589  001500  ECCE  F00D         	call	_SerTx
   590                           
   591                           ;ResolverDriver.c: 41: SerTx(Angle[3]);
   592  001504  5047               	movf	_Angle+3,w,c
   593  001506  ECCE  F00D         	call	_SerTx
   594                           
   595                           ;ResolverDriver.c: 42: SerTx(Angle[4]);
   596  00150A  5048               	movf	_Angle+4,w,c
   597  00150C  ECCE  F00D         	call	_SerTx
   598                           
   599                           ;ResolverDriver.c: 43: SerTx(0x0A);
   600  001510  0E0A               	movlw	10
   601  001512  ECCE  F00D         	call	_SerTx
   602                           
   603                           ;ResolverDriver.c: 44: SerTx(0x0D);
   604  001516  0E0D               	movlw	13
   605  001518  ECCE  F00D         	call	_SerTx
   606  00151C  D79B               	goto	l1906
   607  00151E  EF01  F000         	goto	start
   608  001522                     __end_of_main:
   609                           	opt stack 0
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           postdec1	equ	0xFE5
   617                           fsr1l	equ	0xFE1
   618                           
   619 ;; *************** function _lcdWriteString *****************
   620 ;; Defined at:
   621 ;;		line 82 in file "LCD.h"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  s               2    5[COMRAM] PTR unsigned char 
   624 ;;		 -> STR_3(8), STR_2(7), STR_1(7), 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;		None               void
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;Total ram usage:        2 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    3
   643 ;; This function calls:
   644 ;;		_lcdChar
   645 ;; This function is called by:
   646 ;;		_main
   647 ;;		_lcdPrint
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text1
   652  001A0A                     __ptext1:
   653                           	opt stack 0
   654  001A0A                     _lcdWriteString:
   655                           	opt stack 27
   656                           
   657                           ;LCD.h: 84: while(*s)
   658                           
   659                           ;incstack = 0
   660  001A0A  D00D               	goto	l1678
   661  001A0C                     l1674:
   662                           
   663                           ;LCD.h: 85: lcdChar(*s++);
   664  001A0C  C006  FFF6         	movff	lcdWriteString@s,tblptrl
   665  001A10  C007  FFF7         	movff	lcdWriteString@s+1,tblptrh
   666  001A14                     	if	0	;tblptru may be non-zero
   667  001A14                     	endif
   668  001A14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   669  001A14  0E00               	movlw	low (__mediumconst shr (0+16))
   670  001A16  6EF8               	movwf	tblptru,c
   671  001A18                     	endif
   672  001A18  0008               	tblrd		*
   673  001A1A  50F5               	movf	tablat,w,c
   674  001A1C  ECCA  F00C         	call	_lcdChar
   675  001A20  4A06               	infsnz	lcdWriteString@s,f,c
   676  001A22  2A07               	incf	lcdWriteString@s+1,f,c
   677  001A24  D000               	goto	l1678
   678  001A26                     l1678:
   679  001A26  C006  FFF6         	movff	lcdWriteString@s,tblptrl
   680  001A2A  C007  FFF7         	movff	lcdWriteString@s+1,tblptrh
   681  001A2E                     	if	0	;tblptru may be non-zero
   682  001A2E                     	endif
   683  001A2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   684  001A2E  0E00               	movlw	low (__mediumconst shr (0+16))
   685  001A30  6EF8               	movwf	tblptru,c
   686  001A32                     	endif
   687  001A32  0008               	tblrd		*
   688  001A34  50F5               	movf	tablat,w,c
   689  001A36  0900               	iorlw	0
   690  001A38  A4D8               	btfss	status,2,c
   691  001A3A  D7E8               	goto	l1674
   692  001A3C  0012               	return		;funcret
   693  001A3E                     __end_of_lcdWriteString:
   694                           	opt stack 0
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           postdec1	equ	0xFE5
   702                           fsr1l	equ	0xFE1
   703                           status	equ	0xFD8
   704                           
   705 ;; *************** function _initialize *****************
   706 ;; Defined at:
   707 ;;		line 49 in file "ResolverDriver.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;		None               void
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:        0 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; Hardware stack levels required when called:    4
   728 ;; This function calls:
   729 ;;		_RTDInit
   730 ;;		_SerInit
   731 ;;		_lcdInit
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text2
   738  001B50                     __ptext2:
   739                           	opt stack 0
   740  001B50                     _initialize:
   741                           	opt stack 26
   742                           
   743                           ;ResolverDriver.c: 51: while(OSCCONbits.OSTS == 0);
   744                           
   745                           ;incstack = 0
   746  001B50  D000               	goto	l74
   747  001B52                     l74:
   748  001B52  A6D3               	btfss	4051,3,c	;volatile
   749  001B54  D7FE               	goto	l74
   750                           
   751                           ;ResolverDriver.c: 53: SerInit();
   752  001B56  ECB2  F00D         	call	_SerInit	;wreg free
   753                           
   754                           ;ResolverDriver.c: 54: RTDInit();
   755  001B5A  EC52  F00D         	call	_RTDInit	;wreg free
   756                           
   757                           ;ResolverDriver.c: 55: lcdInit();
   758  001B5E  EC83  F00C         	call	_lcdInit	;wreg free
   759  001B62  0012               	return		;funcret
   760  001B64                     __end_of_initialize:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           fsr1l	equ	0xFE1
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _lcdInit *****************
   773 ;; Defined at:
   774 ;;		line 110 in file "LCD.h"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    3
   795 ;; This function calls:
   796 ;;		_OpenSPI1
   797 ;;		_lcdCommand
   798 ;;		_setGPIO
   799 ;;		_setIODIR
   800 ;; This function is called by:
   801 ;;		_initialize
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text3
   806  001906                     __ptext3:
   807                           	opt stack 0
   808  001906                     _lcdInit:
   809                           	opt stack 26
   810                           
   811                           ;LCD.h: 112: TRISAbits.RA2=0;
   812                           
   813                           ;incstack = 0
   814  001906  9492               	bcf	3986,2,c	;volatile
   815                           
   816                           ;LCD.h: 113: PORTAbits.RA2=1;
   817  001908  8480               	bsf	3968,2,c	;volatile
   818                           
   819                           ;LCD.h: 115: OpenSPI1(0b00000010, 0b00000010, 0b10000000);
   820  00190A  0E02               	movlw	2
   821  00190C  6E01               	movwf	OpenSPI1@bus_mode,c
   822  00190E  0E80               	movlw	128
   823  001910  6E02               	movwf	OpenSPI1@smp_phase,c
   824  001912  0E02               	movlw	2
   825  001914  EC32  F00C         	call	_OpenSPI1
   826                           
   827                           ;LCD.h: 117: setIODIR(0x01,0x00);
   828  001918  0E00               	movlw	0
   829  00191A  6E03               	movwf	setIODIR@dir,c
   830  00191C  0E01               	movlw	1
   831  00191E  EC8E  F00D         	call	_setIODIR
   832                           
   833                           ;LCD.h: 119: setIODIR(0x00,0x00);
   834  001922  0E00               	movlw	0
   835  001924  6E03               	movwf	setIODIR@dir,c
   836  001926  0E00               	movlw	0
   837  001928  EC8E  F00D         	call	_setIODIR
   838                           
   839                           ;LCD.h: 121: setGPIO(0x00,0x00);
   840  00192C  0E00               	movlw	0
   841  00192E  6E03               	movwf	setGPIO@value,c
   842  001930  0E00               	movlw	0
   843  001932  EC9B  F00D         	call	_setGPIO
   844                           
   845                           ;LCD.h: 123: lcdCommand(0b00111111);
   846  001936  0E3F               	movlw	63
   847  001938  ECA8  F00C         	call	_lcdCommand
   848                           
   849                           ;LCD.h: 125: lcdCommand(0b00001111);
   850  00193C  0E0F               	movlw	15
   851  00193E  ECA8  F00C         	call	_lcdCommand
   852                           
   853                           ;LCD.h: 127: lcdCommand(0b00000001);
   854  001942  0E01               	movlw	1
   855  001944  ECA8  F00C         	call	_lcdCommand
   856                           
   857                           ;LCD.h: 129: lcdCommand(0b00000110);
   858  001948  0E06               	movlw	6
   859  00194A  ECA8  F00C         	call	_lcdCommand
   860  00194E  0012               	return		;funcret
   861  001950                     __end_of_lcdInit:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postdec1	equ	0xFE5
   870                           fsr1l	equ	0xFE1
   871                           status	equ	0xFD8
   872                           
   873 ;; *************** function _setIODIR *****************
   874 ;; Defined at:
   875 ;;		line 43 in file "LCD.h"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  address         1    wreg     unsigned char 
   878 ;;  dir             1    2[COMRAM] unsigned char 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  address         1    3[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;		None               void
   883 ;; Registers used:
   884 ;;		wreg, status,2, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   890 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    1
   897 ;; This function calls:
   898 ;;		_WriteSPI1
   899 ;; This function is called by:
   900 ;;		_lcdInit
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text4
   905  001B1C                     __ptext4:
   906                           	opt stack 0
   907  001B1C                     _setIODIR:
   908                           	opt stack 27
   909                           
   910                           ;incstack = 0
   911                           ;setIODIR@address stored from wreg
   912  001B1C  6E04               	movwf	setIODIR@address,c
   913                           
   914                           ;LCD.h: 45: PORTAbits.RA2=0;
   915  001B1E  9480               	bcf	3968,2,c	;volatile
   916                           
   917                           ;LCD.h: 46: WriteSPI1(0x40);
   918  001B20  0E40               	movlw	64
   919  001B22  EC7D  F00D         	call	_WriteSPI1
   920                           
   921                           ;LCD.h: 47: WriteSPI1(address);
   922  001B26  5004               	movf	setIODIR@address,w,c
   923  001B28  EC7D  F00D         	call	_WriteSPI1
   924                           
   925                           ;LCD.h: 48: WriteSPI1(dir);
   926  001B2C  5003               	movf	setIODIR@dir,w,c
   927  001B2E  EC7D  F00D         	call	_WriteSPI1
   928                           
   929                           ;LCD.h: 49: PORTAbits.RA2=1;
   930  001B32  8480               	bsf	3968,2,c	;volatile
   931  001B34  0012               	return		;funcret
   932  001B36                     __end_of_setIODIR:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           status	equ	0xFD8
   943                           
   944 ;; *************** function _OpenSPI1 *****************
   945 ;; Defined at:
   946 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1open.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  sync_mode       1    wreg     unsigned char 
   949 ;;  bus_mode        1    0[COMRAM] unsigned char 
   950 ;;  smp_phase       1    1[COMRAM] unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  sync_mode       1    2[COMRAM] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;		None               void
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        3 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_lcdInit
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text5
   976  001864                     __ptext5:
   977                           	opt stack 0
   978  001864                     _OpenSPI1:
   979                           	opt stack 28
   980                           
   981                           ;incstack = 0
   982                           ;OpenSPI1@sync_mode stored from wreg
   983  001864  6E03               	movwf	OpenSPI1@sync_mode,c
   984  001866  0E3F               	movlw	63
   985  001868  16C7               	andwf	4039,f,c	;volatile
   986  00186A  0E00               	movlw	0
   987  00186C  6EC6               	movwf	4038,c	;volatile
   988  00186E  5003               	movf	OpenSPI1@sync_mode,w,c
   989  001870  12C6               	iorwf	4038,f,c	;volatile
   990  001872  5002               	movf	OpenSPI1@smp_phase,w,c
   991  001874  12C7               	iorwf	4039,f,c	;volatile
   992  001876  D005               	goto	l1460
   993  001878                     l181:
   994  001878  8CC7               	bsf	4039,6,c	;volatile
   995  00187A  D013               	goto	l1464
   996  00187C                     l183:
   997  00187C  8CC7               	bsf	4039,6,c	;volatile
   998  00187E                     l184:
   999  00187E  88C6               	bsf	4038,4,c	;volatile
  1000  001880  D010               	goto	l1464
  1001  001882                     l1460:
  1002  001882  5001               	movf	OpenSPI1@bus_mode,w,c
  1003                           
  1004                           ; Switch size 1, requested type "space"
  1005                           ; Number of cases is 3, Range of values is 0 to 3
  1006                           ; switch strategies available:
  1007                           ; Name         Instructions Cycles
  1008                           ; simple_byte           10     6 (average)
  1009                           ;	Chosen strategy is simple_byte
  1010  001884  0A00               	xorlw	0	; case 0
  1011  001886  B4D8               	btfsc	status,2,c
  1012  001888  D7F7               	goto	l181
  1013  00188A  0A02               	xorlw	2	; case 2
  1014  00188C  B4D8               	btfsc	status,2,c
  1015  00188E  D7F6               	goto	l183
  1016  001890  0A01               	xorlw	1	; case 3
  1017  001892  B4D8               	btfsc	status,2,c
  1018  001894  D7F4               	goto	l184
  1019  001896  D005               	goto	l1464
  1020  001898                     l187:
  1021  001898  8E97               	bsf	3991,7,c	;volatile
  1022  00189A                     l189:
  1023  00189A  8694               	bsf	3988,3,c	;volatile
  1024  00189C  D00A               	goto	l188
  1025  00189E                     l190:
  1026  00189E  9694               	bcf	3988,3,c	;volatile
  1027  0018A0  D008               	goto	l188
  1028  0018A2                     l1464:
  1029  0018A2  5003               	movf	OpenSPI1@sync_mode,w,c
  1030                           
  1031                           ; Switch size 1, requested type "space"
  1032                           ; Number of cases is 2, Range of values is 4 to 5
  1033                           ; switch strategies available:
  1034                           ; Name         Instructions Cycles
  1035                           ; simple_byte            7     4 (average)
  1036                           ;	Chosen strategy is simple_byte
  1037  0018A4  0A04               	xorlw	4	; case 4
  1038  0018A6  B4D8               	btfsc	status,2,c
  1039  0018A8  D7F7               	goto	l187
  1040  0018AA  0A01               	xorlw	1	; case 5
  1041  0018AC  B4D8               	btfsc	status,2,c
  1042  0018AE  D7F5               	goto	l189
  1043  0018B0  D7F6               	goto	l190
  1044  0018B2                     l188:
  1045  0018B2  8894               	bsf	3988,4,c	;volatile
  1046  0018B4  9A94               	bcf	3988,5,c	;volatile
  1047  0018B6  8AC6               	bsf	4038,5,c	;volatile
  1048  0018B8  0012               	return		;funcret
  1049  0018BA                     __end_of_OpenSPI1:
  1050                           	opt stack 0
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           postdec1	equ	0xFE5
  1058                           fsr1l	equ	0xFE1
  1059                           status	equ	0xFD8
  1060                           
  1061 ;; *************** function _SerInit *****************
  1062 ;; Defined at:
  1063 ;;		line 19 in file "SerComm.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;		None               void
  1070 ;; Registers used:
  1071 ;;		wreg, status,2
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_initialize
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text6
  1091  001B64                     __ptext6:
  1092                           	opt stack 0
  1093  001B64                     _SerInit:
  1094                           	opt stack 29
  1095                           
  1096                           ;SerComm.c: 21: TXSTA1 = 0x24;
  1097                           
  1098                           ;incstack = 0
  1099  001B64  0E24               	movlw	36
  1100  001B66  6EAC               	movwf	4012,c	;volatile
  1101                           
  1102                           ;SerComm.c: 22: RCSTA1 = 0x90;
  1103  001B68  0E90               	movlw	144
  1104  001B6A  6EAB               	movwf	4011,c	;volatile
  1105                           
  1106                           ;SerComm.c: 23: BAUDCON1 = 0x00;
  1107  001B6C  0E00               	movlw	0
  1108  001B6E  6E7E               	movwf	3966,c	;volatile
  1109                           
  1110                           ;SerComm.c: 24: SPBRG = 21;
  1111  001B70  0E15               	movlw	21
  1112  001B72  6EAF               	movwf	4015,c	;volatile
  1113                           
  1114                           ;SerComm.c: 26: PIE1bits.RC1IE = 1;
  1115  001B74  8A9D               	bsf	3997,5,c	;volatile
  1116  001B76  0012               	return		;funcret
  1117  001B78                     __end_of_SerInit:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           postinc0	equ	0xFEE
  1124                           wreg	equ	0xFE8
  1125                           postdec1	equ	0xFE5
  1126                           fsr1l	equ	0xFE1
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _RTDInit *****************
  1130 ;; Defined at:
  1131 ;;		line 3 in file "ResolverToDigital.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;		None               void
  1138 ;; Registers used:
  1139 ;;		wreg, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    1
  1152 ;; This function calls:
  1153 ;;		_Delay10TCYx
  1154 ;;		_Delay1KTCYx
  1155 ;;		_Delay1TCYx
  1156 ;; This function is called by:
  1157 ;;		_initialize
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text7
  1162  001AA4                     __ptext7:
  1163                           	opt stack 0
  1164  001AA4                     _RTDInit:
  1165                           	opt stack 28
  1166                           
  1167                           ;ResolverToDigital.c: 5: TRISD = 0xFF;
  1168                           
  1169                           ;incstack = 0
  1170  001AA4  6895               	setf	3989,c	;volatile
  1171                           
  1172                           ;ResolverToDigital.c: 6: TRISH = 0xFF;
  1173  001AA6  6899               	setf	3993,c	;volatile
  1174                           
  1175                           ;ResolverToDigital.c: 7: TRISEbits.RE0 = 0;
  1176  001AA8  9096               	bcf	3990,0,c	;volatile
  1177                           
  1178                           ;ResolverToDigital.c: 8: TRISEbits.RE1 = 0;
  1179  001AAA  9296               	bcf	3990,1,c	;volatile
  1180                           
  1181                           ;ResolverToDigital.c: 9: TRISEbits.RE2 = 0;
  1182  001AAC  9496               	bcf	3990,2,c	;volatile
  1183                           
  1184                           ;ResolverToDigital.c: 10: TRISJbits.RJ0 = 0;
  1185  001AAE  909A               	bcf	3994,0,c	;volatile
  1186                           
  1187                           ;ResolverToDigital.c: 11: TRISEbits.RE5 = 1;
  1188  001AB0  8A96               	bsf	3990,5,c	;volatile
  1189                           
  1190                           ;ResolverToDigital.c: 12: TRISEbits.RE6 = 1;
  1191  001AB2  8C96               	bsf	3990,6,c	;volatile
  1192                           
  1193                           ;ResolverToDigital.c: 13: TRISEbits.RE7 = 1;
  1194  001AB4  8E96               	bsf	3990,7,c	;volatile
  1195                           
  1196                           ;ResolverToDigital.c: 17: PORTJbits.RJ0 = 0;
  1197  001AB6  9088               	bcf	3976,0,c	;volatile
  1198                           
  1199                           ;ResolverToDigital.c: 18: Delay10TCYx(10);
  1200  001AB8  0E0A               	movlw	10
  1201  001ABA  ECC5  F00D         	call	_Delay10TCYx
  1202                           
  1203                           ;ResolverToDigital.c: 19: PORTJbits.RJ0 = 1;
  1204  001ABE  8088               	bsf	3976,0,c	;volatile
  1205                           
  1206                           ;ResolverToDigital.c: 20: Delay1KTCYx(20);
  1207  001AC0  0E14               	movlw	20
  1208  001AC2  ECBC  F00D         	call	_Delay1KTCYx
  1209                           
  1210                           ;ResolverToDigital.c: 21: PORTEbits.RE0 = 0;
  1211  001AC6  9084               	bcf	3972,0,c	;volatile
  1212                           
  1213                           ;ResolverToDigital.c: 22: Delay1TCYx(1);
  1214  001AC8  0E01               	movlw	1
  1215  001ACA  ECD5  F00D         	call	_Delay1TCYx
  1216                           
  1217                           ;ResolverToDigital.c: 23: PORTEbits.RE0 = 1;
  1218  001ACE  8084               	bsf	3972,0,c	;volatile
  1219                           
  1220                           ;ResolverToDigital.c: 25: PORTEbits.RE2 = 0;
  1221  001AD0  9484               	bcf	3972,2,c	;volatile
  1222  001AD2  0012               	return		;funcret
  1223  001AD4                     __end_of_RTDInit:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           postdec1	equ	0xFE5
  1232                           fsr1l	equ	0xFE1
  1233                           status	equ	0xFD8
  1234                           
  1235 ;; *************** function _Delay1TCYx *****************
  1236 ;; Defined at:
  1237 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1tcyx.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  unit            1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  unit            1    0[COMRAM] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;		None               void
  1244 ;; Registers used:
  1245 ;;		wreg
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;Total ram usage:        1 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_RTDInit
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text8
  1265  001BAA                     __ptext8:
  1266                           	opt stack 0
  1267  001BAA                     _Delay1TCYx:
  1268                           	opt stack 28
  1269                           
  1270                           ;incstack = 0
  1271                           ;Delay1TCYx@unit stored from wreg
  1272  001BAA  6E01               	movwf	Delay1TCYx@unit,c
  1273  001BAC                     l447:
  1274  001BAC  F000               	nop	
  1275  001BAE  2E01               	decfsz	Delay1TCYx@unit,f,c
  1276  001BB0  D7FD               	goto	l447
  1277  001BB2  D000               	goto	l449
  1278  001BB4                     l449:
  1279  001BB4  0012               	return		;funcret
  1280  001BB6                     __end_of_Delay1TCYx:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1l	equ	0xFE1
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _Delay1KTCYx *****************
  1293 ;; Defined at:
  1294 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d1ktcyx.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  unit            1    wreg     unsigned char 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  unit            1    0[COMRAM] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;		None               void
  1301 ;; Registers used:
  1302 ;;		wreg
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:        1 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_RTDInit
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text9
  1322  001B78                     __ptext9:
  1323                           	opt stack 0
  1324  001B78                     _Delay1KTCYx:
  1325                           	opt stack 28
  1326                           
  1327                           ;incstack = 0
  1328                           ;Delay1KTCYx@unit stored from wreg
  1329  001B78  6E01               	movwf	Delay1KTCYx@unit,c
  1330  001B7A  0EFA               	movlw	250
  1331  001B7C                     u1327:
  1332  001B7C  F000               	nop	
  1333  001B7E  2EE8               	decfsz	wreg,f,c
  1334  001B80  D7FD               	goto	u1327
  1335  001B82  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1336  001B84  D7FA               	goto	l882
  1337  001B86  D000               	goto	l442
  1338  001B88                     l442:
  1339  001B88  0012               	return		;funcret
  1340  001B8A                     __end_of_Delay1KTCYx:
  1341                           	opt stack 0
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           status	equ	0xFD8
  1351                           
  1352 ;; *************** function ___ftdiv *****************
  1353 ;; Defined at:
  1354 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  f1              3    8[COMRAM] float 
  1357 ;;  f2              3   11[COMRAM] float 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  f3              3   18[COMRAM] float 
  1360 ;;  sign            1   22[COMRAM] unsigned char 
  1361 ;;  exp             1   21[COMRAM] unsigned char 
  1362 ;;  cntr            1   17[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  3    8[COMRAM] float 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:       15 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    1
  1379 ;; This function calls:
  1380 ;;		___ftpack
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text10
  1387  001608                     __ptext10:
  1388                           	opt stack 0
  1389  001608                     ___ftdiv:
  1390                           	opt stack 29
  1391                           
  1392                           ;incstack = 0
  1393  001608  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  1394  00160C  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  1395  00160E  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  1396  001610  340A               	rlcf	___ftdiv@f1+1,w,c
  1397  001612  360F               	rlcf	??___ftdiv& (0+255),f,c
  1398  001614  E301               	bnc	u1251
  1399  001616  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  1400  001618                     u1251:
  1401  001618  500F               	movf	??___ftdiv,w,c
  1402  00161A  6E16               	movwf	___ftdiv@exp,c
  1403  00161C  5016               	movf	___ftdiv@exp,w,c
  1404  00161E  A4D8               	btfss	status,2,c
  1405  001620  D002               	goto	l1840
  1406  001622  D00E               	goto	l1842
  1407  001624  D061               	goto	l611
  1408  001626                     l1840:
  1409  001626  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  1410  00162A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  1411  00162C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  1412  00162E  340D               	rlcf	___ftdiv@f2+1,w,c
  1413  001630  360F               	rlcf	??___ftdiv& (0+255),f,c
  1414  001632  E301               	bnc	u1271
  1415  001634  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  1416  001636                     u1271:
  1417  001636  500F               	movf	??___ftdiv,w,c
  1418  001638  6E17               	movwf	___ftdiv@sign,c
  1419  00163A  5017               	movf	___ftdiv@sign,w,c
  1420  00163C  A4D8               	btfss	status,2,c
  1421  00163E  D007               	goto	l1846
  1422  001640                     l1842:
  1423  001640  0E00               	movlw	0
  1424  001642  6E09               	movwf	?___ftdiv,c
  1425  001644  0E00               	movlw	0
  1426  001646  6E0A               	movwf	?___ftdiv+1,c
  1427  001648  0E00               	movlw	0
  1428  00164A  6E0B               	movwf	?___ftdiv+2,c
  1429  00164C  D04D               	goto	l611
  1430  00164E                     l1846:
  1431  00164E  0E00               	movlw	0
  1432  001650  6E13               	movwf	___ftdiv@f3,c
  1433  001652  0E00               	movlw	0
  1434  001654  6E14               	movwf	___ftdiv@f3+1,c
  1435  001656  0E00               	movlw	0
  1436  001658  6E15               	movwf	___ftdiv@f3+2,c
  1437  00165A  5017               	movf	___ftdiv@sign,w,c
  1438  00165C  0F89               	addlw	137
  1439  00165E  5E16               	subwf	___ftdiv@exp,f,c
  1440  001660  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  1441  001664  500E               	movf	___ftdiv@f2+2,w,c
  1442  001666  1A17               	xorwf	___ftdiv@sign,f,c
  1443  001668  0E80               	movlw	128
  1444  00166A  1617               	andwf	___ftdiv@sign,f,c
  1445  00166C  8E0A               	bsf	___ftdiv@f1+1,7,c
  1446  00166E  0EFF               	movlw	255
  1447  001670  1609               	andwf	___ftdiv@f1,f,c
  1448  001672  0EFF               	movlw	255
  1449  001674  160A               	andwf	___ftdiv@f1+1,f,c
  1450  001676  0E00               	movlw	0
  1451  001678  160B               	andwf	___ftdiv@f1+2,f,c
  1452  00167A  8E0D               	bsf	___ftdiv@f2+1,7,c
  1453  00167C  0EFF               	movlw	255
  1454  00167E  160C               	andwf	___ftdiv@f2,f,c
  1455  001680  0EFF               	movlw	255
  1456  001682  160D               	andwf	___ftdiv@f2+1,f,c
  1457  001684  0E00               	movlw	0
  1458  001686  160E               	andwf	___ftdiv@f2+2,f,c
  1459  001688  0E18               	movlw	24
  1460  00168A  6E12               	movwf	___ftdiv@cntr,c
  1461  00168C  D000               	goto	l1866
  1462  00168E                     l1866:
  1463  00168E  90D8               	bcf	status,0,c
  1464  001690  3613               	rlcf	___ftdiv@f3,f,c
  1465  001692  3614               	rlcf	___ftdiv@f3+1,f,c
  1466  001694  3615               	rlcf	___ftdiv@f3+2,f,c
  1467  001696  500C               	movf	___ftdiv@f2,w,c
  1468  001698  5C09               	subwf	___ftdiv@f1,w,c
  1469  00169A  500D               	movf	___ftdiv@f2+1,w,c
  1470  00169C  580A               	subwfb	___ftdiv@f1+1,w,c
  1471  00169E  500E               	movf	___ftdiv@f2+2,w,c
  1472  0016A0  580B               	subwfb	___ftdiv@f1+2,w,c
  1473  0016A2  A0D8               	btfss	status,0,c
  1474  0016A4  D007               	goto	l614
  1475  0016A6  500C               	movf	___ftdiv@f2,w,c
  1476  0016A8  5E09               	subwf	___ftdiv@f1,f,c
  1477  0016AA  500D               	movf	___ftdiv@f2+1,w,c
  1478  0016AC  5A0A               	subwfb	___ftdiv@f1+1,f,c
  1479  0016AE  500E               	movf	___ftdiv@f2+2,w,c
  1480  0016B0  5A0B               	subwfb	___ftdiv@f1+2,f,c
  1481  0016B2  8013               	bsf	___ftdiv@f3,0,c
  1482  0016B4                     l614:
  1483  0016B4  90D8               	bcf	status,0,c
  1484  0016B6  3609               	rlcf	___ftdiv@f1,f,c
  1485  0016B8  360A               	rlcf	___ftdiv@f1+1,f,c
  1486  0016BA  360B               	rlcf	___ftdiv@f1+2,f,c
  1487  0016BC  2E12               	decfsz	___ftdiv@cntr,f,c
  1488  0016BE  D7E7               	goto	l1866
  1489  0016C0  D000               	goto	l1876
  1490  0016C2                     l1876:
  1491  0016C2  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  1492  0016C6  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1493  0016CA  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1494  0016CE  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  1495  0016D2  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  1496  0016D6  EC75  F00B         	call	___ftpack	;wreg free
  1497  0016DA  C001  F009         	movff	?___ftpack,?___ftdiv
  1498  0016DE  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  1499  0016E2  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  1500  0016E6  D000               	goto	l611
  1501  0016E8                     l611:
  1502  0016E8  0012               	return		;funcret
  1503  0016EA                     __end_of___ftdiv:
  1504                           	opt stack 0
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           postinc0	equ	0xFEE
  1510                           wreg	equ	0xFE8
  1511                           postdec1	equ	0xFE5
  1512                           fsr1l	equ	0xFE1
  1513                           status	equ	0xFD8
  1514                           
  1515 ;; *************** function ___ftadd *****************
  1516 ;; Defined at:
  1517 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  f1              3   29[COMRAM] float 
  1520 ;;  f2              3   32[COMRAM] float 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  exp1            1   40[COMRAM] unsigned char 
  1523 ;;  exp2            1   39[COMRAM] unsigned char 
  1524 ;;  sign            1   38[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  3   29[COMRAM] float 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1534 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;Total ram usage:       12 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    1
  1541 ;; This function calls:
  1542 ;;		___ftpack
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text11
  1549  001018                     __ptext11:
  1550                           	opt stack 0
  1551  001018                     ___ftadd:
  1552                           	opt stack 29
  1553                           
  1554                           ;incstack = 0
  1555  001018  C020  F024         	movff	___ftadd@f1+2,??___ftadd
  1556  00101C  6A25               	clrf	(??___ftadd+1)& (0+255),c
  1557  00101E  6A26               	clrf	(??___ftadd+2)& (0+255),c
  1558  001020  341F               	rlcf	___ftadd@f1+1,w,c
  1559  001022  3624               	rlcf	??___ftadd& (0+255),f,c
  1560  001024  E301               	bnc	u1041
  1561  001026  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  1562  001028                     u1041:
  1563  001028  5024               	movf	??___ftadd,w,c
  1564  00102A  6E29               	movwf	___ftadd@exp1,c
  1565  00102C  C023  F024         	movff	___ftadd@f2+2,??___ftadd
  1566  001030  6A25               	clrf	(??___ftadd+1)& (0+255),c
  1567  001032  6A26               	clrf	(??___ftadd+2)& (0+255),c
  1568  001034  3422               	rlcf	___ftadd@f2+1,w,c
  1569  001036  3624               	rlcf	??___ftadd& (0+255),f,c
  1570  001038  E301               	bnc	u1051
  1571  00103A  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  1572  00103C                     u1051:
  1573  00103C  5024               	movf	??___ftadd,w,c
  1574  00103E  6E28               	movwf	___ftadd@exp2,c
  1575  001040  5029               	movf	___ftadd@exp1,w,c
  1576  001042  B4D8               	btfsc	status,2,c
  1577  001044  D00B               	goto	l579
  1578  001046  5028               	movf	___ftadd@exp2,w,c
  1579  001048  5C29               	subwf	___ftadd@exp1,w,c
  1580  00104A  B0D8               	btfsc	status,0,c
  1581  00104C  D00E               	goto	l1772
  1582  00104E  5029               	movf	___ftadd@exp1,w,c
  1583  001050  0800               	sublw	0
  1584  001052  2428               	addwf	___ftadd@exp2,w,c
  1585  001054  6E24               	movwf	??___ftadd& (0+255),c
  1586  001056  0E18               	movlw	24
  1587  001058  6424               	cpfsgt	??___ftadd,c
  1588  00105A  D007               	goto	l1772
  1589  00105C                     l579:
  1590  00105C  C021  F01E         	movff	___ftadd@f2,?___ftadd
  1591  001060  C022  F01F         	movff	___ftadd@f2+1,?___ftadd+1
  1592  001064  C023  F020         	movff	___ftadd@f2+2,?___ftadd+2
  1593  001068  D0B8               	goto	l580
  1594  00106A                     l1772:
  1595  00106A  5028               	movf	___ftadd@exp2,w,c
  1596  00106C  B4D8               	btfsc	status,2,c
  1597  00106E  D00B               	goto	l583
  1598  001070  5029               	movf	___ftadd@exp1,w,c
  1599  001072  5C28               	subwf	___ftadd@exp2,w,c
  1600  001074  B0D8               	btfsc	status,0,c
  1601  001076  D00E               	goto	l1778
  1602  001078  5028               	movf	___ftadd@exp2,w,c
  1603  00107A  0800               	sublw	0
  1604  00107C  2429               	addwf	___ftadd@exp1,w,c
  1605  00107E  6E24               	movwf	??___ftadd& (0+255),c
  1606  001080  0E18               	movlw	24
  1607  001082  6424               	cpfsgt	??___ftadd,c
  1608  001084  D007               	goto	l1778
  1609  001086                     l583:
  1610  001086  C01E  F01E         	movff	___ftadd@f1,?___ftadd
  1611  00108A  C01F  F01F         	movff	___ftadd@f1+1,?___ftadd+1
  1612  00108E  C020  F020         	movff	___ftadd@f1+2,?___ftadd+2
  1613  001092  D0A3               	goto	l580
  1614  001094                     l1778:
  1615  001094  0E06               	movlw	6
  1616  001096  6E27               	movwf	___ftadd@sign,c
  1617  001098  AE20               	btfss	___ftadd@f1+2,7,c
  1618  00109A  D002               	goto	l1784
  1619  00109C  8E27               	bsf	___ftadd@sign,7,c
  1620  00109E  D000               	goto	l1784
  1621  0010A0                     l1784:
  1622  0010A0  BE23               	btfsc	___ftadd@f2+2,7,c
  1623  0010A2  8C27               	bsf	___ftadd@sign,6,c
  1624  0010A4  8E1F               	bsf	___ftadd@f1+1,7,c
  1625  0010A6  0EFF               	movlw	255
  1626  0010A8  161E               	andwf	___ftadd@f1,f,c
  1627  0010AA  0EFF               	movlw	255
  1628  0010AC  161F               	andwf	___ftadd@f1+1,f,c
  1629  0010AE  0E00               	movlw	0
  1630  0010B0  1620               	andwf	___ftadd@f1+2,f,c
  1631  0010B2  8E22               	bsf	___ftadd@f2+1,7,c
  1632  0010B4  0EFF               	movlw	255
  1633  0010B6  1621               	andwf	___ftadd@f2,f,c
  1634  0010B8  0EFF               	movlw	255
  1635  0010BA  1622               	andwf	___ftadd@f2+1,f,c
  1636  0010BC  0E00               	movlw	0
  1637  0010BE  1623               	andwf	___ftadd@f2+2,f,c
  1638  0010C0  5028               	movf	___ftadd@exp2,w,c
  1639  0010C2  5C29               	subwf	___ftadd@exp1,w,c
  1640  0010C4  B0D8               	btfsc	status,0,c
  1641  0010C6  D01E               	goto	l1804
  1642  0010C8                     l1794:
  1643  0010C8  90D8               	bcf	status,0,c
  1644  0010CA  3621               	rlcf	___ftadd@f2,f,c
  1645  0010CC  3622               	rlcf	___ftadd@f2+1,f,c
  1646  0010CE  3623               	rlcf	___ftadd@f2+2,f,c
  1647  0010D0  0628               	decf	___ftadd@exp2,f,c
  1648  0010D2  5029               	movf	___ftadd@exp1,w,c
  1649  0010D4  1828               	xorwf	___ftadd@exp2,w,c
  1650  0010D6  B4D8               	btfsc	status,2,c
  1651  0010D8  D00F               	goto	l1802
  1652  0010DA  0627               	decf	___ftadd@sign,f,c
  1653  0010DC  C027  F024         	movff	___ftadd@sign,??___ftadd
  1654  0010E0  0E07               	movlw	7
  1655  0010E2  1624               	andwf	??___ftadd,f,c
  1656  0010E4  B4D8               	btfsc	status,2,c
  1657  0010E6  D008               	goto	l1802
  1658  0010E8  D7EF               	goto	l1794
  1659  0010EA  D006               	goto	l1802
  1660  0010EC                     l1800:
  1661  0010EC  90D8               	bcf	status,0,c
  1662  0010EE  3220               	rrcf	___ftadd@f1+2,f,c
  1663  0010F0  321F               	rrcf	___ftadd@f1+1,f,c
  1664  0010F2  321E               	rrcf	___ftadd@f1,f,c
  1665  0010F4  2A29               	incf	___ftadd@exp1,f,c
  1666  0010F6  D000               	goto	l1802
  1667  0010F8                     l1802:
  1668  0010F8  5028               	movf	___ftadd@exp2,w,c
  1669  0010FA  1829               	xorwf	___ftadd@exp1,w,c
  1670  0010FC  B4D8               	btfsc	status,2,c
  1671  0010FE  D024               	goto	l594
  1672  001100  D7F5               	goto	l1800
  1673  001102  D022               	goto	l594
  1674  001104                     l1804:
  1675  001104  5029               	movf	___ftadd@exp1,w,c
  1676  001106  5C28               	subwf	___ftadd@exp2,w,c
  1677  001108  B0D8               	btfsc	status,0,c
  1678  00110A  D01E               	goto	l594
  1679  00110C                     l1806:
  1680  00110C  90D8               	bcf	status,0,c
  1681  00110E  361E               	rlcf	___ftadd@f1,f,c
  1682  001110  361F               	rlcf	___ftadd@f1+1,f,c
  1683  001112  3620               	rlcf	___ftadd@f1+2,f,c
  1684  001114  0629               	decf	___ftadd@exp1,f,c
  1685  001116  5029               	movf	___ftadd@exp1,w,c
  1686  001118  1828               	xorwf	___ftadd@exp2,w,c
  1687  00111A  B4D8               	btfsc	status,2,c
  1688  00111C  D00F               	goto	l1814
  1689  00111E  0627               	decf	___ftadd@sign,f,c
  1690  001120  C027  F024         	movff	___ftadd@sign,??___ftadd
  1691  001124  0E07               	movlw	7
  1692  001126  1624               	andwf	??___ftadd,f,c
  1693  001128  B4D8               	btfsc	status,2,c
  1694  00112A  D008               	goto	l1814
  1695  00112C  D7EF               	goto	l1806
  1696  00112E  D006               	goto	l1814
  1697  001130                     l1812:
  1698  001130  90D8               	bcf	status,0,c
  1699  001132  3223               	rrcf	___ftadd@f2+2,f,c
  1700  001134  3222               	rrcf	___ftadd@f2+1,f,c
  1701  001136  3221               	rrcf	___ftadd@f2,f,c
  1702  001138  2A28               	incf	___ftadd@exp2,f,c
  1703  00113A  D000               	goto	l1814
  1704  00113C                     l1814:
  1705  00113C  5028               	movf	___ftadd@exp2,w,c
  1706  00113E  1829               	xorwf	___ftadd@exp1,w,c
  1707  001140  B4D8               	btfsc	status,2,c
  1708  001142  D002               	goto	l594
  1709  001144  D7F5               	goto	l1812
  1710  001146  D000               	goto	l594
  1711  001148                     l594:
  1712  001148  AE27               	btfss	___ftadd@sign,7,c
  1713  00114A  D00C               	goto	l603
  1714  00114C  0EFF               	movlw	255
  1715  00114E  1A1E               	xorwf	___ftadd@f1,f,c
  1716  001150  0EFF               	movlw	255
  1717  001152  1A1F               	xorwf	___ftadd@f1+1,f,c
  1718  001154  0EFF               	movlw	255
  1719  001156  1A20               	xorwf	___ftadd@f1+2,f,c
  1720  001158  0E01               	movlw	1
  1721  00115A  261E               	addwf	___ftadd@f1,f,c
  1722  00115C  0E00               	movlw	0
  1723  00115E  221F               	addwfc	___ftadd@f1+1,f,c
  1724  001160  0E00               	movlw	0
  1725  001162  2220               	addwfc	___ftadd@f1+2,f,c
  1726  001164                     l603:
  1727  001164  AC27               	btfss	___ftadd@sign,6,c
  1728  001166  D00D               	goto	l1820
  1729  001168  0EFF               	movlw	255
  1730  00116A  1A21               	xorwf	___ftadd@f2,f,c
  1731  00116C  0EFF               	movlw	255
  1732  00116E  1A22               	xorwf	___ftadd@f2+1,f,c
  1733  001170  0EFF               	movlw	255
  1734  001172  1A23               	xorwf	___ftadd@f2+2,f,c
  1735  001174  0E01               	movlw	1
  1736  001176  2621               	addwf	___ftadd@f2,f,c
  1737  001178  0E00               	movlw	0
  1738  00117A  2222               	addwfc	___ftadd@f2+1,f,c
  1739  00117C  0E00               	movlw	0
  1740  00117E  2223               	addwfc	___ftadd@f2+2,f,c
  1741  001180  D000               	goto	l1820
  1742  001182                     l1820:
  1743  001182  0E00               	movlw	0
  1744  001184  6E27               	movwf	___ftadd@sign,c
  1745  001186  501E               	movf	___ftadd@f1,w,c
  1746  001188  2621               	addwf	___ftadd@f2,f,c
  1747  00118A  501F               	movf	___ftadd@f1+1,w,c
  1748  00118C  2222               	addwfc	___ftadd@f2+1,f,c
  1749  00118E  5020               	movf	___ftadd@f1+2,w,c
  1750  001190  2223               	addwfc	___ftadd@f2+2,f,c
  1751  001192  AE23               	btfss	___ftadd@f2+2,7,c
  1752  001194  D00F               	goto	l1830
  1753  001196  0EFF               	movlw	255
  1754  001198  1A21               	xorwf	___ftadd@f2,f,c
  1755  00119A  0EFF               	movlw	255
  1756  00119C  1A22               	xorwf	___ftadd@f2+1,f,c
  1757  00119E  0EFF               	movlw	255
  1758  0011A0  1A23               	xorwf	___ftadd@f2+2,f,c
  1759  0011A2  0E01               	movlw	1
  1760  0011A4  2621               	addwf	___ftadd@f2,f,c
  1761  0011A6  0E00               	movlw	0
  1762  0011A8  2222               	addwfc	___ftadd@f2+1,f,c
  1763  0011AA  0E00               	movlw	0
  1764  0011AC  2223               	addwfc	___ftadd@f2+2,f,c
  1765  0011AE  0E01               	movlw	1
  1766  0011B0  6E27               	movwf	___ftadd@sign,c
  1767  0011B2  D000               	goto	l1830
  1768  0011B4                     l1830:
  1769  0011B4  C021  F001         	movff	___ftadd@f2,___ftpack@arg
  1770  0011B8  C022  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1771  0011BC  C023  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1772  0011C0  C029  F004         	movff	___ftadd@exp1,___ftpack@exp
  1773  0011C4  C027  F005         	movff	___ftadd@sign,___ftpack@sign
  1774  0011C8  EC75  F00B         	call	___ftpack	;wreg free
  1775  0011CC  C001  F01E         	movff	?___ftpack,?___ftadd
  1776  0011D0  C002  F01F         	movff	?___ftpack+1,?___ftadd+1
  1777  0011D4  C003  F020         	movff	?___ftpack+2,?___ftadd+2
  1778  0011D8  D000               	goto	l580
  1779  0011DA                     l580:
  1780  0011DA  0012               	return		;funcret
  1781  0011DC                     __end_of___ftadd:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           tblptrh	equ	0xFF7
  1785                           tblptrl	equ	0xFF6
  1786                           tablat	equ	0xFF5
  1787                           postinc0	equ	0xFEE
  1788                           wreg	equ	0xFE8
  1789                           postdec1	equ	0xFE5
  1790                           fsr1l	equ	0xFE1
  1791                           status	equ	0xFD8
  1792                           
  1793 ;; *************** function _SerTxStr *****************
  1794 ;; Defined at:
  1795 ;;		line 41 in file "SerComm.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  string          2    1[COMRAM] PTR unsigned char 
  1798 ;;		 -> STR_4(8), 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;		None               void
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;Total ram usage:        2 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    1
  1817 ;; This function calls:
  1818 ;;		_SerTx
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text12
  1825  001A3E                     __ptext12:
  1826                           	opt stack 0
  1827  001A3E                     _SerTxStr:
  1828                           	opt stack 29
  1829                           
  1830                           ;SerComm.c: 43: while (*string)
  1831                           
  1832                           ;incstack = 0
  1833  001A3E  D00D               	goto	l1762
  1834  001A40                     l1758:
  1835                           
  1836                           ;SerComm.c: 44: SerTx(*string++);
  1837  001A40  C002  FFF6         	movff	SerTxStr@string,tblptrl
  1838  001A44  C003  FFF7         	movff	SerTxStr@string+1,tblptrh
  1839  001A48                     	if	0	;tblptru may be non-zero
  1840  001A48                     	endif
  1841  001A48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1842  001A48  0E00               	movlw	low (__mediumconst shr (0+16))
  1843  001A4A  6EF8               	movwf	tblptru,c
  1844  001A4C                     	endif
  1845  001A4C  0008               	tblrd		*
  1846  001A4E  50F5               	movf	tablat,w,c
  1847  001A50  ECCE  F00D         	call	_SerTx
  1848  001A54  4A02               	infsnz	SerTxStr@string,f,c
  1849  001A56  2A03               	incf	SerTxStr@string+1,f,c
  1850  001A58  D000               	goto	l1762
  1851  001A5A                     l1762:
  1852  001A5A  C002  FFF6         	movff	SerTxStr@string,tblptrl
  1853  001A5E  C003  FFF7         	movff	SerTxStr@string+1,tblptrh
  1854  001A62                     	if	0	;tblptru may be non-zero
  1855  001A62                     	endif
  1856  001A62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1857  001A62  0E00               	movlw	low (__mediumconst shr (0+16))
  1858  001A64  6EF8               	movwf	tblptru,c
  1859  001A66                     	endif
  1860  001A66  0008               	tblrd		*
  1861  001A68  50F5               	movf	tablat,w,c
  1862  001A6A  0900               	iorlw	0
  1863  001A6C  A4D8               	btfss	status,2,c
  1864  001A6E  D7E8               	goto	l1758
  1865  001A70  0012               	return		;funcret
  1866  001A72                     __end_of_SerTxStr:
  1867                           	opt stack 0
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           postinc0	equ	0xFEE
  1873                           wreg	equ	0xFE8
  1874                           postdec1	equ	0xFE5
  1875                           fsr1l	equ	0xFE1
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function _SerTx *****************
  1879 ;; Defined at:
  1880 ;;		line 32 in file "SerComm.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  c               1    wreg     unsigned char 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  c               1    0[COMRAM] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;		None               void
  1887 ;; Registers used:
  1888 ;;		wreg
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;;		_SerTxStr
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text13
  1909  001B9C                     __ptext13:
  1910                           	opt stack 0
  1911  001B9C                     _SerTx:
  1912                           	opt stack 29
  1913                           
  1914                           ;incstack = 0
  1915                           ;SerTx@c stored from wreg
  1916  001B9C  6E01               	movwf	SerTx@c,c
  1917                           
  1918                           ;SerComm.c: 34: TXREG1 = c;
  1919  001B9E  C001  FFAD         	movff	SerTx@c,4013	;volatile
  1920                           
  1921                           ;SerComm.c: 35: while (PIR1bits.TX1IF == 0);
  1922  001BA2  D000               	goto	l147
  1923  001BA4                     l147:
  1924  001BA4  A89E               	btfss	3998,4,c	;volatile
  1925  001BA6  D7FE               	goto	l147
  1926  001BA8  0012               	return		;funcret
  1927  001BAA                     __end_of_SerTx:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1l	equ	0xFE1
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _ReadRTDpos *****************
  1940 ;; Defined at:
  1941 ;;		line 35 in file "ResolverToDigital.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  FullPosition    2    8[COMRAM] unsigned int 
  1946 ;;  helloworld      2    0        unsigned int 
  1947 ;;  x               1   10[COMRAM] unsigned char 
  1948 ;;  LowPosition     1    7[COMRAM] unsigned char 
  1949 ;;  HighPosition    1    6[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2    1[COMRAM] unsigned int 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:       10 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    1
  1966 ;; This function calls:
  1967 ;;		_Delay10TCYx
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text14
  1974  00180C                     __ptext14:
  1975                           	opt stack 0
  1976  00180C                     _ReadRTDpos:
  1977                           	opt stack 29
  1978                           
  1979                           ;ResolverToDigital.c: 37: unsigned char x;
  1980                           ;ResolverToDigital.c: 38: unsigned int FullPosition, helloworld;
  1981                           ;ResolverToDigital.c: 39: unsigned char HighPosition, LowPosition;
  1982                           ;ResolverToDigital.c: 41: {
  1983                           ;ResolverToDigital.c: 42: PORTEbits.RE1 = 1;
  1984                           
  1985                           ;incstack = 0
  1986  00180C  8284               	bsf	3972,1,c	;volatile
  1987                           
  1988                           ;ResolverToDigital.c: 43: PORTEbits.RE0 = 0;
  1989  00180E  9084               	bcf	3972,0,c	;volatile
  1990                           
  1991                           ;ResolverToDigital.c: 44: for(x = 0; x < 8; x++)
  1992  001810  0E00               	movlw	0
  1993  001812  6E0B               	movwf	ReadRTDpos@x,c
  1994  001814  D003               	goto	l1698
  1995  001816  D005               	goto	l111
  1996  001818                     l110:
  1997                           
  1998                           ;ResolverToDigital.c: 45: __nop();
  1999  001818  F000               	nop	
  2000  00181A  2A0B               	incf	ReadRTDpos@x,f,c
  2001  00181C                     l1698:
  2002  00181C  0E07               	movlw	7
  2003  00181E  640B               	cpfsgt	ReadRTDpos@x,c
  2004  001820  D7FB               	goto	l110
  2005  001822                     l111:
  2006                           
  2007                           ;ResolverToDigital.c: 46: PORTEbits.RE2 = 1;
  2008  001822  8484               	bsf	3972,2,c	;volatile
  2009                           
  2010                           ;ResolverToDigital.c: 47: PORTEbits.RE2 = 0;
  2011  001824  9484               	bcf	3972,2,c	;volatile
  2012                           
  2013                           ;ResolverToDigital.c: 48: Delay10TCYx(1);
  2014  001826  0E01               	movlw	1
  2015  001828  ECC5  F00D         	call	_Delay10TCYx
  2016                           
  2017                           ;ResolverToDigital.c: 49: HighPosition = PORTH;
  2018  00182C  CF87 F007          	movff	3975,ReadRTDpos@HighPosition	;volatile
  2019                           
  2020                           ;ResolverToDigital.c: 50: LowPosition = PORTD;
  2021  001830  CF83 F008          	movff	3971,ReadRTDpos@LowPosition	;volatile
  2022                           
  2023                           ;ResolverToDigital.c: 51: PORTEbits.RE2 = 1;
  2024  001834  8484               	bsf	3972,2,c	;volatile
  2025                           
  2026                           ;ResolverToDigital.c: 52: PORTEbits.RE0 = 1;
  2027  001836  8084               	bsf	3972,0,c	;volatile
  2028                           
  2029                           ;ResolverToDigital.c: 53: FullPosition = LowPosition;
  2030  001838  C008  F009         	movff	ReadRTDpos@LowPosition,ReadRTDpos@FullPosition
  2031  00183C  6A0A               	clrf	ReadRTDpos@FullPosition+1,c
  2032                           
  2033                           ;ResolverToDigital.c: 54: FullPosition = FullPosition | ((HighPosition & 0x0F) << 8);
  2034  00183E  C007  F004         	movff	ReadRTDpos@HighPosition,??_ReadRTDpos
  2035  001842  0E0F               	movlw	15
  2036  001844  1604               	andwf	??_ReadRTDpos,f,c
  2037  001846  5004               	movf	??_ReadRTDpos,w,c
  2038  001848  6E06               	movwf	(??_ReadRTDpos+2)& (0+255),c
  2039  00184A  6A05               	clrf	(??_ReadRTDpos+1)& (0+255),c
  2040  00184C  5009               	movf	ReadRTDpos@FullPosition,w,c
  2041  00184E  1005               	iorwf	??_ReadRTDpos+1,w,c
  2042  001850  6E09               	movwf	ReadRTDpos@FullPosition,c
  2043  001852  500A               	movf	ReadRTDpos@FullPosition+1,w,c
  2044  001854  1006               	iorwf	??_ReadRTDpos+2,w,c
  2045  001856  6E0A               	movwf	ReadRTDpos@FullPosition+1,c
  2046                           
  2047                           ;ResolverToDigital.c: 55: return FullPosition;
  2048  001858  C009  F002         	movff	ReadRTDpos@FullPosition,?_ReadRTDpos
  2049  00185C  C00A  F003         	movff	ReadRTDpos@FullPosition+1,?_ReadRTDpos+1
  2050  001860  D000               	goto	l112
  2051  001862                     l112:
  2052  001862  0012               	return		;funcret
  2053  001864                     __end_of_ReadRTDpos:
  2054                           	opt stack 0
  2055                           tblptru	equ	0xFF8
  2056                           tblptrh	equ	0xFF7
  2057                           tblptrl	equ	0xFF6
  2058                           tablat	equ	0xFF5
  2059                           postinc0	equ	0xFEE
  2060                           wreg	equ	0xFE8
  2061                           postdec1	equ	0xFE5
  2062                           fsr1l	equ	0xFE1
  2063                           status	equ	0xFD8
  2064                           
  2065 ;; *************** function _RTD2Angle *****************
  2066 ;; Defined at:
  2067 ;;		line 90 in file "ResolverToDigital.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  RTDAngle        2   26[COMRAM] unsigned int 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  3   26[COMRAM] unsigned int 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2081 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;Total ram usage:        3 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    2
  2088 ;; This function calls:
  2089 ;;		___ftmul
  2090 ;;		___lwtoft
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text15
  2097  0019D2                     __ptext15:
  2098                           	opt stack 0
  2099  0019D2                     _RTD2Angle:
  2100                           	opt stack 28
  2101                           
  2102                           ;ResolverToDigital.c: 92: return 0.087890625 * RTDAngle;
  2103                           
  2104                           ;incstack = 0
  2105  0019D2  C01B  F009         	movff	RTD2Angle@RTDAngle,___lwtoft@c
  2106  0019D6  C01C  F00A         	movff	RTD2Angle@RTDAngle+1,___lwtoft@c+1
  2107  0019DA  EC6A  F00D         	call	___lwtoft	;wreg free
  2108  0019DE  C009  F00C         	movff	?___lwtoft,___ftmul@f1
  2109  0019E2  C00A  F00D         	movff	?___lwtoft+1,___ftmul@f1+1
  2110  0019E6  C00B  F00E         	movff	?___lwtoft+2,___ftmul@f1+2
  2111  0019EA  0E00               	movlw	0
  2112  0019EC  6E0F               	movwf	___ftmul@f2,c
  2113  0019EE  0EB4               	movlw	180
  2114  0019F0  6E10               	movwf	___ftmul@f2+1,c
  2115  0019F2  0E3D               	movlw	61
  2116  0019F4  6E11               	movwf	___ftmul@f2+2,c
  2117  0019F6  ECA2  F009         	call	___ftmul	;wreg free
  2118  0019FA  C00C  F01B         	movff	?___ftmul,?_RTD2Angle
  2119  0019FE  C00D  F01C         	movff	?___ftmul+1,?_RTD2Angle+1
  2120  001A02  C00E  F01D         	movff	?___ftmul+2,?_RTD2Angle+2
  2121  001A06  D000               	goto	l122
  2122  001A08                     l122:
  2123  001A08  0012               	return		;funcret
  2124  001A0A                     __end_of_RTD2Angle:
  2125                           	opt stack 0
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           postinc0	equ	0xFEE
  2131                           wreg	equ	0xFE8
  2132                           postdec1	equ	0xFE5
  2133                           fsr1l	equ	0xFE1
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function ___lwtoft *****************
  2137 ;; Defined at:
  2138 ;;		line 28 in file "/opt/microchip/xc8/v1.34/sources/common/lwtoft.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  c               2    8[COMRAM] unsigned int 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  3    8[COMRAM] float 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        3 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    1
  2159 ;; This function calls:
  2160 ;;		___ftpack
  2161 ;; This function is called by:
  2162 ;;		_RTD2Angle
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text16
  2167  001AD4                     __ptext16:
  2168                           	opt stack 0
  2169  001AD4                     ___lwtoft:
  2170                           	opt stack 28
  2171                           
  2172                           ;incstack = 0
  2173  001AD4  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2174  001AD8  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2175  001ADC  6A03               	clrf	___ftpack@arg+2,c
  2176  001ADE  0E8E               	movlw	142
  2177  001AE0  6E04               	movwf	___ftpack@exp,c
  2178  001AE2  0E00               	movlw	0
  2179  001AE4  6E05               	movwf	___ftpack@sign,c
  2180  001AE6  EC75  F00B         	call	___ftpack	;wreg free
  2181  001AEA  C001  F009         	movff	?___ftpack,?___lwtoft
  2182  001AEE  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2183  001AF2  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2184  001AF6  D000               	goto	l776
  2185  001AF8                     l776:
  2186  001AF8  0012               	return		;funcret
  2187  001AFA                     __end_of___lwtoft:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1l	equ	0xFE1
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _C2LCD *****************
  2200 ;; Defined at:
  2201 ;;		line 58 in file "ResolverDriver.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  angle           3   41[COMRAM] float 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  temp            2   46[COMRAM] unsigned int 
  2206 ;;  temp2           2   44[COMRAM] unsigned int 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;		None               void
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        7 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    4
  2223 ;; This function calls:
  2224 ;;		___ftmul
  2225 ;;		___fttol
  2226 ;;		___lwdiv
  2227 ;;		___lwmod
  2228 ;;		_lcdChar
  2229 ;;		_lcdGoTo
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text17
  2236  0011DC                     __ptext17:
  2237                           	opt stack 0
  2238  0011DC                     _C2LCD:
  2239                           	opt stack 26
  2240                           
  2241                           ;ResolverDriver.c: 61: lcdGoTo(0x09);
  2242                           
  2243                           ;incstack = 0
  2244  0011DC  0E09               	movlw	9
  2245  0011DE  ECDB  F00D         	call	_lcdGoTo
  2246                           
  2247                           ;ResolverDriver.c: 62: unsigned int temp, temp2;
  2248                           ;ResolverDriver.c: 63: temp = angle * 100;
  2249  0011E2  0E00               	movlw	0
  2250  0011E4  6E0F               	movwf	___ftmul@f2,c
  2251  0011E6  0EC8               	movlw	200
  2252  0011E8  6E10               	movwf	___ftmul@f2+1,c
  2253  0011EA  0E42               	movlw	66
  2254  0011EC  6E11               	movwf	___ftmul@f2+2,c
  2255  0011EE  C02A  F00C         	movff	C2LCD@angle,___ftmul@f1
  2256  0011F2  C02B  F00D         	movff	C2LCD@angle+1,___ftmul@f1+1
  2257  0011F6  C02C  F00E         	movff	C2LCD@angle+2,___ftmul@f1+2
  2258  0011FA  ECA2  F009         	call	___ftmul	;wreg free
  2259  0011FE  C00C  F01B         	movff	?___ftmul,___fttol@f1
  2260  001202  C00D  F01C         	movff	?___ftmul+1,___fttol@f1+1
  2261  001206  C00E  F01D         	movff	?___ftmul+2,___fttol@f1+2
  2262  00120A  EC91  F00A         	call	___fttol	;wreg free
  2263  00120E  C01B  F02F         	movff	?___fttol,C2LCD@temp
  2264  001212  C01C  F030         	movff	?___fttol+1,C2LCD@temp+1
  2265                           
  2266                           ;ResolverDriver.c: 64: temp2 = temp / 10000;
  2267  001216  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  2268  00121A  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  2269  00121E  0E27               	movlw	39
  2270  001220  6E04               	movwf	___lwdiv@divisor+1,c
  2271  001222  0E10               	movlw	16
  2272  001224  6E03               	movwf	___lwdiv@divisor,c
  2273  001226  ECD8  F00B         	call	___lwdiv	;wreg free
  2274  00122A  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  2275  00122E  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  2276                           
  2277                           ;ResolverDriver.c: 65: lcdChar(temp2 + 0x30);
  2278  001232  502D               	movf	C2LCD@temp2,w,c
  2279  001234  0F30               	addlw	48
  2280  001236  ECCA  F00C         	call	_lcdChar
  2281                           
  2282                           ;ResolverDriver.c: 66: Angle[0] = (temp2 + 0x30);
  2283  00123A  502D               	movf	C2LCD@temp2,w,c
  2284  00123C  0F30               	addlw	48
  2285  00123E  6E44               	movwf	_Angle,c
  2286                           
  2287                           ;ResolverDriver.c: 67: temp = temp % 10000;
  2288  001240  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  2289  001244  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  2290  001248  0E27               	movlw	39
  2291  00124A  6E04               	movwf	___lwmod@divisor+1,c
  2292  00124C  0E10               	movlw	16
  2293  00124E  6E03               	movwf	___lwmod@divisor,c
  2294  001250  EC5D  F00C         	call	___lwmod	;wreg free
  2295  001254  C001  F02F         	movff	?___lwmod,C2LCD@temp
  2296  001258  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  2297                           
  2298                           ;ResolverDriver.c: 68: temp2 = temp / 1000;
  2299  00125C  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  2300  001260  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  2301  001264  0E03               	movlw	3
  2302  001266  6E04               	movwf	___lwdiv@divisor+1,c
  2303  001268  0EE8               	movlw	232
  2304  00126A  6E03               	movwf	___lwdiv@divisor,c
  2305  00126C  ECD8  F00B         	call	___lwdiv	;wreg free
  2306  001270  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  2307  001274  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  2308                           
  2309                           ;ResolverDriver.c: 69: lcdChar(temp2 + 0x30);
  2310  001278  502D               	movf	C2LCD@temp2,w,c
  2311  00127A  0F30               	addlw	48
  2312  00127C  ECCA  F00C         	call	_lcdChar
  2313                           
  2314                           ;ResolverDriver.c: 70: Angle[1] = (temp2 + 0x30);
  2315  001280  502D               	movf	C2LCD@temp2,w,c
  2316  001282  0F30               	addlw	48
  2317  001284  6E45               	movwf	_Angle+1,c
  2318                           
  2319                           ;ResolverDriver.c: 71: temp = temp % 1000;
  2320  001286  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  2321  00128A  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  2322  00128E  0E03               	movlw	3
  2323  001290  6E04               	movwf	___lwmod@divisor+1,c
  2324  001292  0EE8               	movlw	232
  2325  001294  6E03               	movwf	___lwmod@divisor,c
  2326  001296  EC5D  F00C         	call	___lwmod	;wreg free
  2327  00129A  C001  F02F         	movff	?___lwmod,C2LCD@temp
  2328  00129E  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  2329                           
  2330                           ;ResolverDriver.c: 72: temp2 = temp/100;
  2331  0012A2  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  2332  0012A6  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  2333  0012AA  0E00               	movlw	0
  2334  0012AC  6E04               	movwf	___lwdiv@divisor+1,c
  2335  0012AE  0E64               	movlw	100
  2336  0012B0  6E03               	movwf	___lwdiv@divisor,c
  2337  0012B2  ECD8  F00B         	call	___lwdiv	;wreg free
  2338  0012B6  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  2339  0012BA  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  2340                           
  2341                           ;ResolverDriver.c: 73: lcdChar(temp2 + 0x30);
  2342  0012BE  502D               	movf	C2LCD@temp2,w,c
  2343  0012C0  0F30               	addlw	48
  2344  0012C2  ECCA  F00C         	call	_lcdChar
  2345                           
  2346                           ;ResolverDriver.c: 74: Angle[2] = (temp2 + 0x30);
  2347  0012C6  502D               	movf	C2LCD@temp2,w,c
  2348  0012C8  0F30               	addlw	48
  2349  0012CA  6E46               	movwf	_Angle+2,c
  2350                           
  2351                           ;ResolverDriver.c: 75: lcdChar('.');
  2352  0012CC  0E2E               	movlw	46
  2353  0012CE  ECCA  F00C         	call	_lcdChar
  2354                           
  2355                           ;ResolverDriver.c: 76: temp = temp % 100;
  2356  0012D2  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  2357  0012D6  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  2358  0012DA  0E00               	movlw	0
  2359  0012DC  6E04               	movwf	___lwmod@divisor+1,c
  2360  0012DE  0E64               	movlw	100
  2361  0012E0  6E03               	movwf	___lwmod@divisor,c
  2362  0012E2  EC5D  F00C         	call	___lwmod	;wreg free
  2363  0012E6  C001  F02F         	movff	?___lwmod,C2LCD@temp
  2364  0012EA  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  2365                           
  2366                           ;ResolverDriver.c: 77: temp2 = temp/10;
  2367  0012EE  C02F  F001         	movff	C2LCD@temp,___lwdiv@dividend
  2368  0012F2  C030  F002         	movff	C2LCD@temp+1,___lwdiv@dividend+1
  2369  0012F6  0E00               	movlw	0
  2370  0012F8  6E04               	movwf	___lwdiv@divisor+1,c
  2371  0012FA  0E0A               	movlw	10
  2372  0012FC  6E03               	movwf	___lwdiv@divisor,c
  2373  0012FE  ECD8  F00B         	call	___lwdiv	;wreg free
  2374  001302  C001  F02D         	movff	?___lwdiv,C2LCD@temp2
  2375  001306  C002  F02E         	movff	?___lwdiv+1,C2LCD@temp2+1
  2376                           
  2377                           ;ResolverDriver.c: 78: lcdChar(temp2 + 0x30);
  2378  00130A  502D               	movf	C2LCD@temp2,w,c
  2379  00130C  0F30               	addlw	48
  2380  00130E  ECCA  F00C         	call	_lcdChar
  2381                           
  2382                           ;ResolverDriver.c: 79: Angle[3] = (temp2 + 0x30);
  2383  001312  502D               	movf	C2LCD@temp2,w,c
  2384  001314  0F30               	addlw	48
  2385  001316  6E47               	movwf	_Angle+3,c
  2386                           
  2387                           ;ResolverDriver.c: 80: temp = temp % 10;
  2388  001318  C02F  F001         	movff	C2LCD@temp,___lwmod@dividend
  2389  00131C  C030  F002         	movff	C2LCD@temp+1,___lwmod@dividend+1
  2390  001320  0E00               	movlw	0
  2391  001322  6E04               	movwf	___lwmod@divisor+1,c
  2392  001324  0E0A               	movlw	10
  2393  001326  6E03               	movwf	___lwmod@divisor,c
  2394  001328  EC5D  F00C         	call	___lwmod	;wreg free
  2395  00132C  C001  F02F         	movff	?___lwmod,C2LCD@temp
  2396  001330  C002  F030         	movff	?___lwmod+1,C2LCD@temp+1
  2397                           
  2398                           ;ResolverDriver.c: 81: lcdChar(temp + 0x30);
  2399  001334  502F               	movf	C2LCD@temp,w,c
  2400  001336  0F30               	addlw	48
  2401  001338  ECCA  F00C         	call	_lcdChar
  2402                           
  2403                           ;ResolverDriver.c: 82: Angle[4] = (temp2 + 0x30);
  2404  00133C  502D               	movf	C2LCD@temp2,w,c
  2405  00133E  0F30               	addlw	48
  2406  001340  6E48               	movwf	_Angle+4,c
  2407  001342  0012               	return		;funcret
  2408  001344                     __end_of_C2LCD:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postdec1	equ	0xFE5
  2417                           fsr1l	equ	0xFE1
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _lcdGoTo *****************
  2421 ;; Defined at:
  2422 ;;		line 76 in file "LCD.h"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  pos             1    wreg     unsigned char 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  pos             1    5[COMRAM] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;		None               void
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;Total ram usage:        1 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    3
  2443 ;; This function calls:
  2444 ;;		_lcdCommand
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;;		_C2LCD
  2448 ;;		_lcdPrint
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text18
  2453  001BB6                     __ptext18:
  2454                           	opt stack 0
  2455  001BB6                     _lcdGoTo:
  2456                           	opt stack 27
  2457                           
  2458                           ;incstack = 0
  2459                           ;lcdGoTo@pos stored from wreg
  2460  001BB6  6E06               	movwf	lcdGoTo@pos,c
  2461                           
  2462                           ;LCD.h: 79: lcdCommand(0x80+pos);
  2463  001BB8  5006               	movf	lcdGoTo@pos,w,c
  2464  001BBA  0F80               	addlw	128
  2465  001BBC  ECA8  F00C         	call	_lcdCommand
  2466  001BC0  0012               	return		;funcret
  2467  001BC2                     __end_of_lcdGoTo:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postdec1	equ	0xFE5
  2476                           fsr1l	equ	0xFE1
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _lcdCommand *****************
  2480 ;; Defined at:
  2481 ;;		line 52 in file "LCD.h"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  command         1    wreg     unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  command         1    4[COMRAM] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    2
  2502 ;; This function calls:
  2503 ;;		_Delay10TCYx
  2504 ;;		_setGPIO
  2505 ;; This function is called by:
  2506 ;;		_lcdGoTo
  2507 ;;		_lcdInit
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text19
  2512  001950                     __ptext19:
  2513                           	opt stack 0
  2514  001950                     _lcdCommand:
  2515                           	opt stack 27
  2516                           
  2517                           ;incstack = 0
  2518                           ;lcdCommand@command stored from wreg
  2519  001950  6E05               	movwf	lcdCommand@command,c
  2520                           
  2521                           ;LCD.h: 54: setGPIO(0x12,0x00);
  2522  001952  0E00               	movlw	0
  2523  001954  6E03               	movwf	setGPIO@value,c
  2524  001956  0E12               	movlw	18
  2525  001958  EC9B  F00D         	call	_setGPIO
  2526                           
  2527                           ;LCD.h: 55: Delay10TCYx(0);
  2528  00195C  0E00               	movlw	0
  2529  00195E  ECC5  F00D         	call	_Delay10TCYx
  2530                           
  2531                           ;LCD.h: 56: setGPIO(0x13, command);
  2532  001962  C005  F003         	movff	lcdCommand@command,setGPIO@value
  2533  001966  0E13               	movlw	19
  2534  001968  EC9B  F00D         	call	_setGPIO
  2535                           
  2536                           ;LCD.h: 57: Delay10TCYx(0);
  2537  00196C  0E00               	movlw	0
  2538  00196E  ECC5  F00D         	call	_Delay10TCYx
  2539                           
  2540                           ;LCD.h: 58: setGPIO(0x12,0x40);
  2541  001972  0E40               	movlw	64
  2542  001974  6E03               	movwf	setGPIO@value,c
  2543  001976  0E12               	movlw	18
  2544  001978  EC9B  F00D         	call	_setGPIO
  2545                           
  2546                           ;LCD.h: 59: Delay10TCYx(0);
  2547  00197C  0E00               	movlw	0
  2548  00197E  ECC5  F00D         	call	_Delay10TCYx
  2549                           
  2550                           ;LCD.h: 60: setGPIO(0x12,0x00);
  2551  001982  0E00               	movlw	0
  2552  001984  6E03               	movwf	setGPIO@value,c
  2553  001986  0E12               	movlw	18
  2554  001988  EC9B  F00D         	call	_setGPIO
  2555                           
  2556                           ;LCD.h: 61: Delay10TCYx(0);
  2557  00198C  0E00               	movlw	0
  2558  00198E  ECC5  F00D         	call	_Delay10TCYx
  2559  001992  0012               	return		;funcret
  2560  001994                     __end_of_lcdCommand:
  2561                           	opt stack 0
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1l	equ	0xFE1
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _lcdChar *****************
  2573 ;; Defined at:
  2574 ;;		line 64 in file "LCD.h"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  letter          1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  letter          1    4[COMRAM] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        1 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    2
  2595 ;; This function calls:
  2596 ;;		_Delay10TCYx
  2597 ;;		_setGPIO
  2598 ;; This function is called by:
  2599 ;;		_lcdWriteString
  2600 ;;		_C2LCD
  2601 ;;		_lcdPrint
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text20
  2606  001994                     __ptext20:
  2607                           	opt stack 0
  2608  001994                     _lcdChar:
  2609                           	opt stack 27
  2610                           
  2611                           ;incstack = 0
  2612                           ;lcdChar@letter stored from wreg
  2613  001994  6E05               	movwf	lcdChar@letter,c
  2614                           
  2615                           ;LCD.h: 66: setGPIO(0x12,0x80);
  2616  001996  0E80               	movlw	128
  2617  001998  6E03               	movwf	setGPIO@value,c
  2618  00199A  0E12               	movlw	18
  2619  00199C  EC9B  F00D         	call	_setGPIO
  2620                           
  2621                           ;LCD.h: 67: Delay10TCYx(0);
  2622  0019A0  0E00               	movlw	0
  2623  0019A2  ECC5  F00D         	call	_Delay10TCYx
  2624                           
  2625                           ;LCD.h: 68: setGPIO(0x13,letter);
  2626  0019A6  C005  F003         	movff	lcdChar@letter,setGPIO@value
  2627  0019AA  0E13               	movlw	19
  2628  0019AC  EC9B  F00D         	call	_setGPIO
  2629                           
  2630                           ;LCD.h: 70: setGPIO(0x12, 0xc0);
  2631  0019B0  0EC0               	movlw	192
  2632  0019B2  6E03               	movwf	setGPIO@value,c
  2633  0019B4  0E12               	movlw	18
  2634  0019B6  EC9B  F00D         	call	_setGPIO
  2635                           
  2636                           ;LCD.h: 71: Delay10TCYx(0);
  2637  0019BA  0E00               	movlw	0
  2638  0019BC  ECC5  F00D         	call	_Delay10TCYx
  2639                           
  2640                           ;LCD.h: 72: setGPIO(0x12,0x00);
  2641  0019C0  0E00               	movlw	0
  2642  0019C2  6E03               	movwf	setGPIO@value,c
  2643  0019C4  0E12               	movlw	18
  2644  0019C6  EC9B  F00D         	call	_setGPIO
  2645                           
  2646                           ;LCD.h: 73: Delay10TCYx(0);
  2647  0019CA  0E00               	movlw	0
  2648  0019CC  ECC5  F00D         	call	_Delay10TCYx
  2649  0019D0  0012               	return		;funcret
  2650  0019D2                     __end_of_lcdChar:
  2651                           	opt stack 0
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           postinc0	equ	0xFEE
  2657                           wreg	equ	0xFE8
  2658                           postdec1	equ	0xFE5
  2659                           fsr1l	equ	0xFE1
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function _setGPIO *****************
  2663 ;; Defined at:
  2664 ;;		line 32 in file "LCD.h"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  address         1    wreg     unsigned char 
  2667 ;;  value           1    2[COMRAM] unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  address         1    3[COMRAM] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;		None               void
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2679 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;Total ram usage:        2 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    1
  2686 ;; This function calls:
  2687 ;;		_WriteSPI1
  2688 ;; This function is called by:
  2689 ;;		_lcdCommand
  2690 ;;		_lcdChar
  2691 ;;		_lcdInit
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text21
  2696  001B36                     __ptext21:
  2697                           	opt stack 0
  2698  001B36                     _setGPIO:
  2699                           	opt stack 27
  2700                           
  2701                           ;incstack = 0
  2702                           ;setGPIO@address stored from wreg
  2703  001B36  6E04               	movwf	setGPIO@address,c
  2704                           
  2705                           ;LCD.h: 34: PORTAbits.RA2=0;
  2706  001B38  9480               	bcf	3968,2,c	;volatile
  2707                           
  2708                           ;LCD.h: 37: WriteSPI1(0x40);
  2709  001B3A  0E40               	movlw	64
  2710  001B3C  EC7D  F00D         	call	_WriteSPI1
  2711                           
  2712                           ;LCD.h: 38: WriteSPI1(address);
  2713  001B40  5004               	movf	setGPIO@address,w,c
  2714  001B42  EC7D  F00D         	call	_WriteSPI1
  2715                           
  2716                           ;LCD.h: 39: WriteSPI1(value);
  2717  001B46  5003               	movf	setGPIO@value,w,c
  2718  001B48  EC7D  F00D         	call	_WriteSPI1
  2719                           
  2720                           ;LCD.h: 40: PORTAbits.RA2=1;
  2721  001B4C  8480               	bsf	3968,2,c	;volatile
  2722  001B4E  0012               	return		;funcret
  2723  001B50                     __end_of_setGPIO:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           postdec1	equ	0xFE5
  2732                           fsr1l	equ	0xFE1
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function _WriteSPI1 *****************
  2736 ;; Defined at:
  2737 ;;		line 13 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi1writ.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  data_out        1    wreg     unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  data_out        1    1[COMRAM] unsigned char 
  2742 ;;  TempVar         1    0[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      char 
  2745 ;; Registers used:
  2746 ;;		wreg
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        2 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_setGPIO
  2762 ;;		_setIODIR
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text22
  2767  001AFA                     __ptext22:
  2768                           	opt stack 0
  2769  001AFA                     _WriteSPI1:
  2770                           	opt stack 27
  2771                           
  2772                           ;incstack = 0
  2773                           ;WriteSPI1@data_out stored from wreg
  2774  001AFA  6E02               	movwf	WriteSPI1@data_out,c
  2775  001AFC  CFC9 F001          	movff	4041,WriteSPI1@TempVar	;volatile
  2776  001B00  969E               	bcf	3998,3,c	;volatile
  2777  001B02  9EC6               	bcf	4038,7,c	;volatile
  2778  001B04  C002  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  2779  001B08  BEC6               	btfsc	4038,7,c	;volatile
  2780  001B0A  D007               	goto	l203
  2781  001B0C  D002               	goto	l205
  2782                           
  2783                           ;	Return value of _WriteSPI1 is never used
  2784  001B0E  D005               	goto	l203
  2785  001B10  D000               	goto	l205
  2786  001B12                     l205:
  2787  001B12  B69E               	btfsc	3998,3,c	;volatile
  2788  001B14  D002               	goto	l203
  2789  001B16  D7FD               	goto	l205
  2790  001B18  D000               	goto	l203
  2791  001B1A                     l203:
  2792  001B1A  0012               	return		;funcret
  2793  001B1C                     __end_of_WriteSPI1:
  2794                           	opt stack 0
  2795                           tblptru	equ	0xFF8
  2796                           tblptrh	equ	0xFF7
  2797                           tblptrl	equ	0xFF6
  2798                           tablat	equ	0xFF5
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1l	equ	0xFE1
  2803                           status	equ	0xFD8
  2804                           
  2805 ;; *************** function _Delay10TCYx *****************
  2806 ;; Defined at:
  2807 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/d10tcyx.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  unit            1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  unit            1    0[COMRAM] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;		None               void
  2814 ;; Registers used:
  2815 ;;		wreg
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_lcdCommand
  2831 ;;		_lcdChar
  2832 ;;		_RTDInit
  2833 ;;		_ReadRTDpos
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text23
  2838  001B8A                     __ptext23:
  2839                           	opt stack 0
  2840  001B8A                     _Delay10TCYx:
  2841                           	opt stack 28
  2842                           
  2843                           ;incstack = 0
  2844                           ;Delay10TCYx@unit stored from wreg
  2845  001B8A  6E01               	movwf	Delay10TCYx@unit,c
  2846  001B8C  0E03               	movlw	3
  2847  001B8E                     u1337:
  2848  001B8E  2EE8               	decfsz	wreg,f,c
  2849  001B90  D7FE               	goto	u1337
  2850  001B92  F000               	nop	
  2851  001B94  2E01               	decfsz	Delay10TCYx@unit,f,c
  2852  001B96  D7FA               	goto	l838
  2853  001B98  D000               	goto	l435
  2854  001B9A                     l435:
  2855  001B9A  0012               	return		;funcret
  2856  001B9C                     __end_of_Delay10TCYx:
  2857                           	opt stack 0
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           postdec1	equ	0xFE5
  2865                           fsr1l	equ	0xFE1
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function ___lwmod *****************
  2869 ;; Defined at:
  2870 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  dividend        2    0[COMRAM] unsigned int 
  2873 ;;  divisor         2    2[COMRAM] unsigned int 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  counter         1    4[COMRAM] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  2    0[COMRAM] unsigned int 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;Total ram usage:        5 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_C2LCD
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text24
  2899  0018BA                     __ptext24:
  2900                           	opt stack 0
  2901  0018BA                     ___lwmod:
  2902                           	opt stack 29
  2903                           
  2904                           ;incstack = 0
  2905  0018BA  5003               	movf	___lwmod@divisor,w,c
  2906  0018BC  1004               	iorwf	___lwmod@divisor+1,w,c
  2907  0018BE  B4D8               	btfsc	status,2,c
  2908  0018C0  D01D               	goto	l759
  2909  0018C2  0E01               	movlw	1
  2910  0018C4  6E05               	movwf	___lwmod@counter,c
  2911  0018C6  D005               	goto	l1658
  2912  0018C8                     l1656:
  2913  0018C8  90D8               	bcf	status,0,c
  2914  0018CA  3603               	rlcf	___lwmod@divisor,f,c
  2915  0018CC  3604               	rlcf	___lwmod@divisor+1,f,c
  2916  0018CE  2A05               	incf	___lwmod@counter,f,c
  2917  0018D0  D000               	goto	l1658
  2918  0018D2                     l1658:
  2919  0018D2  BE04               	btfsc	___lwmod@divisor+1,7,c
  2920  0018D4  D002               	goto	l1660
  2921  0018D6  D7F8               	goto	l1656
  2922  0018D8  D000               	goto	l1660
  2923  0018DA                     l1660:
  2924  0018DA  5003               	movf	___lwmod@divisor,w,c
  2925  0018DC  5C01               	subwf	___lwmod@dividend,w,c
  2926  0018DE  5004               	movf	___lwmod@divisor+1,w,c
  2927  0018E0  5802               	subwfb	___lwmod@dividend+1,w,c
  2928  0018E2  A0D8               	btfss	status,0,c
  2929  0018E4  D005               	goto	l1664
  2930  0018E6  5003               	movf	___lwmod@divisor,w,c
  2931  0018E8  5E01               	subwf	___lwmod@dividend,f,c
  2932  0018EA  5004               	movf	___lwmod@divisor+1,w,c
  2933  0018EC  5A02               	subwfb	___lwmod@dividend+1,f,c
  2934  0018EE  D000               	goto	l1664
  2935  0018F0                     l1664:
  2936  0018F0  90D8               	bcf	status,0,c
  2937  0018F2  3204               	rrcf	___lwmod@divisor+1,f,c
  2938  0018F4  3203               	rrcf	___lwmod@divisor,f,c
  2939  0018F6  2E05               	decfsz	___lwmod@counter,f,c
  2940  0018F8  D7F0               	goto	l1660
  2941  0018FA  D000               	goto	l759
  2942  0018FC                     l759:
  2943  0018FC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2944  001900  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2945  001904  0012               	return		;funcret
  2946  001906                     __end_of___lwmod:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           postdec1	equ	0xFE5
  2955                           fsr1l	equ	0xFE1
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function ___lwdiv *****************
  2959 ;; Defined at:
  2960 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  dividend        2    0[COMRAM] unsigned int 
  2963 ;;  divisor         2    2[COMRAM] unsigned int 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  quotient        2    4[COMRAM] unsigned int 
  2966 ;;  counter         1    6[COMRAM] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    0[COMRAM] unsigned int 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        7 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_C2LCD
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text25
  2990  0017B0                     __ptext25:
  2991                           	opt stack 0
  2992  0017B0                     ___lwdiv:
  2993                           	opt stack 29
  2994                           
  2995                           ;incstack = 0
  2996  0017B0  0E00               	movlw	0
  2997  0017B2  6E06               	movwf	___lwdiv@quotient+1,c
  2998  0017B4  0E00               	movlw	0
  2999  0017B6  6E05               	movwf	___lwdiv@quotient,c
  3000  0017B8  5003               	movf	___lwdiv@divisor,w,c
  3001  0017BA  1004               	iorwf	___lwdiv@divisor+1,w,c
  3002  0017BC  B4D8               	btfsc	status,2,c
  3003  0017BE  D021               	goto	l749
  3004  0017C0  0E01               	movlw	1
  3005  0017C2  6E07               	movwf	___lwdiv@counter,c
  3006  0017C4  D005               	goto	l1638
  3007  0017C6                     l1636:
  3008  0017C6  90D8               	bcf	status,0,c
  3009  0017C8  3603               	rlcf	___lwdiv@divisor,f,c
  3010  0017CA  3604               	rlcf	___lwdiv@divisor+1,f,c
  3011  0017CC  2A07               	incf	___lwdiv@counter,f,c
  3012  0017CE  D000               	goto	l1638
  3013  0017D0                     l1638:
  3014  0017D0  BE04               	btfsc	___lwdiv@divisor+1,7,c
  3015  0017D2  D002               	goto	l1640
  3016  0017D4  D7F8               	goto	l1636
  3017  0017D6  D000               	goto	l1640
  3018  0017D8                     l1640:
  3019  0017D8  90D8               	bcf	status,0,c
  3020  0017DA  3605               	rlcf	___lwdiv@quotient,f,c
  3021  0017DC  3606               	rlcf	___lwdiv@quotient+1,f,c
  3022  0017DE  5003               	movf	___lwdiv@divisor,w,c
  3023  0017E0  5C01               	subwf	___lwdiv@dividend,w,c
  3024  0017E2  5004               	movf	___lwdiv@divisor+1,w,c
  3025  0017E4  5802               	subwfb	___lwdiv@dividend+1,w,c
  3026  0017E6  A0D8               	btfss	status,0,c
  3027  0017E8  D006               	goto	l1648
  3028  0017EA  5003               	movf	___lwdiv@divisor,w,c
  3029  0017EC  5E01               	subwf	___lwdiv@dividend,f,c
  3030  0017EE  5004               	movf	___lwdiv@divisor+1,w,c
  3031  0017F0  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3032  0017F2  8005               	bsf	___lwdiv@quotient,0,c
  3033  0017F4  D000               	goto	l1648
  3034  0017F6                     l1648:
  3035  0017F6  90D8               	bcf	status,0,c
  3036  0017F8  3204               	rrcf	___lwdiv@divisor+1,f,c
  3037  0017FA  3203               	rrcf	___lwdiv@divisor,f,c
  3038  0017FC  2E07               	decfsz	___lwdiv@counter,f,c
  3039  0017FE  D7EC               	goto	l1640
  3040  001800  D000               	goto	l749
  3041  001802                     l749:
  3042  001802  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3043  001806  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3044  00180A  0012               	return		;funcret
  3045  00180C                     __end_of___lwdiv:
  3046                           	opt stack 0
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           postinc0	equ	0xFEE
  3052                           wreg	equ	0xFE8
  3053                           postdec1	equ	0xFE5
  3054                           fsr1l	equ	0xFE1
  3055                           status	equ	0xFD8
  3056                           
  3057 ;; *************** function ___fttol *****************
  3058 ;; Defined at:
  3059 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  f1              3   26[COMRAM] float 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  lval            4   36[COMRAM] unsigned long 
  3064 ;;  exp1            1   40[COMRAM] unsigned char 
  3065 ;;  sign1           1   35[COMRAM] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  4   26[COMRAM] long 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;Total ram usage:       15 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_C2LCD
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text26
  3089  001522                     __ptext26:
  3090                           	opt stack 0
  3091  001522                     ___fttol:
  3092                           	opt stack 29
  3093                           
  3094                           ;incstack = 0
  3095  001522  C01D  F01F         	movff	___fttol@f1+2,??___fttol
  3096  001526  6A20               	clrf	(??___fttol+1)& (0+255),c
  3097  001528  6A21               	clrf	(??___fttol+2)& (0+255),c
  3098  00152A  341C               	rlcf	___fttol@f1+1,w,c
  3099  00152C  361F               	rlcf	??___fttol& (0+255),f,c
  3100  00152E  E301               	bnc	u851
  3101  001530  8020               	bsf	(??___fttol+1)& (0+255),0,c
  3102  001532                     u851:
  3103  001532  501F               	movf	??___fttol,w,c
  3104  001534  6E29               	movwf	___fttol@exp1,c
  3105  001536  5029               	movf	___fttol@exp1,w,c
  3106  001538  A4D8               	btfss	status,2,c
  3107  00153A  D002               	goto	l1590
  3108  00153C  D039               	goto	l1614
  3109  00153E  D063               	goto	l647
  3110  001540                     l1590:
  3111  001540  0E17               	movlw	23
  3112  001542  6E1F               	movwf	??___fttol& (0+255),c
  3113  001544  C01B  F020         	movff	___fttol@f1,??___fttol+1
  3114  001548  C01C  F021         	movff	___fttol@f1+1,??___fttol+2
  3115  00154C  C01D  F022         	movff	___fttol@f1+2,??___fttol+3
  3116  001550  281F               	incf	??___fttol,w,c
  3117  001552  6E23               	movwf	(??___fttol+4)& (0+255),c
  3118  001554  D004               	goto	u870
  3119  001556                     u875:
  3120  001556  90D8               	bcf	status,0,c
  3121  001558  3222               	rrcf	??___fttol+3,f,c
  3122  00155A  3221               	rrcf	??___fttol+2,f,c
  3123  00155C  3220               	rrcf	??___fttol+1,f,c
  3124  00155E                     u870:
  3125  00155E  2E23               	decfsz	(??___fttol+4)& (0+255),f,c
  3126  001560  D7FA               	goto	u875
  3127  001562  5020               	movf	??___fttol+1,w,c
  3128  001564  6E24               	movwf	___fttol@sign1,c
  3129  001566  8E1C               	bsf	___fttol@f1+1,7,c
  3130  001568  0EFF               	movlw	255
  3131  00156A  161B               	andwf	___fttol@f1,f,c
  3132  00156C  0EFF               	movlw	255
  3133  00156E  161C               	andwf	___fttol@f1+1,f,c
  3134  001570  0E00               	movlw	0
  3135  001572  161D               	andwf	___fttol@f1+2,f,c
  3136  001574  501B               	movf	___fttol@f1,w,c
  3137  001576  6E25               	movwf	___fttol@lval,c
  3138  001578  501C               	movf	___fttol@f1+1,w,c
  3139  00157A  6E26               	movwf	___fttol@lval+1,c
  3140  00157C  501D               	movf	___fttol@f1+2,w,c
  3141  00157E  6E27               	movwf	___fttol@lval+2,c
  3142  001580  6A28               	clrf	___fttol@lval+3,c
  3143  001582  0E8E               	movlw	142
  3144  001584  5E29               	subwf	___fttol@exp1,f,c
  3145  001586  AE29               	btfss	___fttol@exp1,7,c
  3146  001588  D010               	goto	l1612
  3147  00158A  5029               	movf	___fttol@exp1,w,c
  3148  00158C  0A80               	xorlw	128
  3149  00158E  0F8F               	addlw	143
  3150  001590  B0D8               	btfsc	status,0,c
  3151  001592  D003               	goto	l1608
  3152  001594  D00D               	goto	l1614
  3153  001596  D037               	goto	l647
  3154  001598  D000               	goto	l1608
  3155  00159A                     l1608:
  3156  00159A  90D8               	bcf	status,0,c
  3157  00159C  3228               	rrcf	___fttol@lval+3,f,c
  3158  00159E  3227               	rrcf	___fttol@lval+2,f,c
  3159  0015A0  3226               	rrcf	___fttol@lval+1,f,c
  3160  0015A2  3225               	rrcf	___fttol@lval,f,c
  3161  0015A4  3E29               	incfsz	___fttol@exp1,f,c
  3162  0015A6  D7F9               	goto	l1608
  3163  0015A8  D019               	goto	l1622
  3164  0015AA                     l1612:
  3165  0015AA  0E17               	movlw	23
  3166  0015AC  6429               	cpfsgt	___fttol@exp1,c
  3167  0015AE  D011               	goto	l1620
  3168  0015B0                     l1614:
  3169  0015B0  0E00               	movlw	0
  3170  0015B2  6E1B               	movwf	?___fttol,c
  3171  0015B4  0E00               	movlw	0
  3172  0015B6  6E1C               	movwf	?___fttol+1,c
  3173  0015B8  0E00               	movlw	0
  3174  0015BA  6E1D               	movwf	?___fttol+2,c
  3175  0015BC  0E00               	movlw	0
  3176  0015BE  6E1E               	movwf	?___fttol+3,c
  3177  0015C0  D022               	goto	l647
  3178  0015C2  D007               	goto	l1620
  3179  0015C4                     l1618:
  3180  0015C4  90D8               	bcf	status,0,c
  3181  0015C6  3625               	rlcf	___fttol@lval,f,c
  3182  0015C8  3626               	rlcf	___fttol@lval+1,f,c
  3183  0015CA  3627               	rlcf	___fttol@lval+2,f,c
  3184  0015CC  3628               	rlcf	___fttol@lval+3,f,c
  3185  0015CE  0629               	decf	___fttol@exp1,f,c
  3186  0015D0  D000               	goto	l1620
  3187  0015D2                     l1620:
  3188  0015D2  5029               	movf	___fttol@exp1,w,c
  3189  0015D4  B4D8               	btfsc	status,2,c
  3190  0015D6  D002               	goto	l1622
  3191  0015D8  D7F5               	goto	l1618
  3192  0015DA  D000               	goto	l1622
  3193  0015DC                     l1622:
  3194  0015DC  5024               	movf	___fttol@sign1,w,c
  3195  0015DE  B4D8               	btfsc	status,2,c
  3196  0015E0  D009               	goto	l1626
  3197  0015E2  1E28               	comf	___fttol@lval+3,f,c
  3198  0015E4  1E27               	comf	___fttol@lval+2,f,c
  3199  0015E6  1E26               	comf	___fttol@lval+1,f,c
  3200  0015E8  6C25               	negf	___fttol@lval,c
  3201  0015EA  0E00               	movlw	0
  3202  0015EC  2226               	addwfc	___fttol@lval+1,f,c
  3203  0015EE  2227               	addwfc	___fttol@lval+2,f,c
  3204  0015F0  2228               	addwfc	___fttol@lval+3,f,c
  3205  0015F2  D000               	goto	l1626
  3206  0015F4                     l1626:
  3207  0015F4  C025  F01B         	movff	___fttol@lval,?___fttol
  3208  0015F8  C026  F01C         	movff	___fttol@lval+1,?___fttol+1
  3209  0015FC  C027  F01D         	movff	___fttol@lval+2,?___fttol+2
  3210  001600  C028  F01E         	movff	___fttol@lval+3,?___fttol+3
  3211  001604  D000               	goto	l647
  3212  001606                     l647:
  3213  001606  0012               	return		;funcret
  3214  001608                     __end_of___fttol:
  3215                           	opt stack 0
  3216                           tblptru	equ	0xFF8
  3217                           tblptrh	equ	0xFF7
  3218                           tblptrl	equ	0xFF6
  3219                           tablat	equ	0xFF5
  3220                           postinc0	equ	0xFEE
  3221                           wreg	equ	0xFE8
  3222                           postdec1	equ	0xFE5
  3223                           fsr1l	equ	0xFE1
  3224                           status	equ	0xFD8
  3225                           
  3226 ;; *************** function ___ftmul *****************
  3227 ;; Defined at:
  3228 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  f1              3   11[COMRAM] float 
  3231 ;;  f2              3   14[COMRAM] float 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  3234 ;;  sign            1   25[COMRAM] unsigned char 
  3235 ;;  cntr            1   24[COMRAM] unsigned char 
  3236 ;;  exp             1   20[COMRAM] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  3   11[COMRAM] float 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3246 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;Total ram usage:       15 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    1
  3253 ;; This function calls:
  3254 ;;		___ftpack
  3255 ;; This function is called by:
  3256 ;;		_C2LCD
  3257 ;;		_RTD2Angle
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text27
  3262  001344                     __ptext27:
  3263                           	opt stack 0
  3264  001344                     ___ftmul:
  3265                           	opt stack 28
  3266                           
  3267                           ;incstack = 0
  3268  001344  C00E  F012         	movff	___ftmul@f1+2,??___ftmul
  3269  001348  6A13               	clrf	(??___ftmul+1)& (0+255),c
  3270  00134A  6A14               	clrf	(??___ftmul+2)& (0+255),c
  3271  00134C  340D               	rlcf	___ftmul@f1+1,w,c
  3272  00134E  3612               	rlcf	??___ftmul& (0+255),f,c
  3273  001350  E301               	bnc	u791
  3274  001352  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  3275  001354                     u791:
  3276  001354  5012               	movf	??___ftmul,w,c
  3277  001356  6E15               	movwf	___ftmul@exp,c
  3278  001358  5015               	movf	___ftmul@exp,w,c
  3279  00135A  A4D8               	btfss	status,2,c
  3280  00135C  D002               	goto	l1542
  3281  00135E  D00E               	goto	l1544
  3282  001360  D06C               	goto	l626
  3283  001362                     l1542:
  3284  001362  C011  F012         	movff	___ftmul@f2+2,??___ftmul
  3285  001366  6A13               	clrf	(??___ftmul+1)& (0+255),c
  3286  001368  6A14               	clrf	(??___ftmul+2)& (0+255),c
  3287  00136A  3410               	rlcf	___ftmul@f2+1,w,c
  3288  00136C  3612               	rlcf	??___ftmul& (0+255),f,c
  3289  00136E  E301               	bnc	u811
  3290  001370  8013               	bsf	(??___ftmul+1)& (0+255),0,c
  3291  001372                     u811:
  3292  001372  5012               	movf	??___ftmul,w,c
  3293  001374  6E1A               	movwf	___ftmul@sign,c
  3294  001376  501A               	movf	___ftmul@sign,w,c
  3295  001378  A4D8               	btfss	status,2,c
  3296  00137A  D007               	goto	l1548
  3297  00137C                     l1544:
  3298  00137C  0E00               	movlw	0
  3299  00137E  6E0C               	movwf	?___ftmul,c
  3300  001380  0E00               	movlw	0
  3301  001382  6E0D               	movwf	?___ftmul+1,c
  3302  001384  0E00               	movlw	0
  3303  001386  6E0E               	movwf	?___ftmul+2,c
  3304  001388  D058               	goto	l626
  3305  00138A                     l1548:
  3306  00138A  501A               	movf	___ftmul@sign,w,c
  3307  00138C  0F7B               	addlw	123
  3308  00138E  2615               	addwf	___ftmul@exp,f,c
  3309  001390  C00E  F01A         	movff	___ftmul@f1+2,___ftmul@sign
  3310  001394  5011               	movf	___ftmul@f2+2,w,c
  3311  001396  1A1A               	xorwf	___ftmul@sign,f,c
  3312  001398  0E80               	movlw	128
  3313  00139A  161A               	andwf	___ftmul@sign,f,c
  3314  00139C  8E0D               	bsf	___ftmul@f1+1,7,c
  3315  00139E  8E10               	bsf	___ftmul@f2+1,7,c
  3316  0013A0  0EFF               	movlw	255
  3317  0013A2  160F               	andwf	___ftmul@f2,f,c
  3318  0013A4  0EFF               	movlw	255
  3319  0013A6  1610               	andwf	___ftmul@f2+1,f,c
  3320  0013A8  0E00               	movlw	0
  3321  0013AA  1611               	andwf	___ftmul@f2+2,f,c
  3322  0013AC  0E00               	movlw	0
  3323  0013AE  6E16               	movwf	___ftmul@f3_as_product,c
  3324  0013B0  0E00               	movlw	0
  3325  0013B2  6E17               	movwf	___ftmul@f3_as_product+1,c
  3326  0013B4  0E00               	movlw	0
  3327  0013B6  6E18               	movwf	___ftmul@f3_as_product+2,c
  3328  0013B8  0E07               	movlw	7
  3329  0013BA  6E19               	movwf	___ftmul@cntr,c
  3330  0013BC  D000               	goto	l1562
  3331  0013BE                     l1562:
  3332  0013BE  A00C               	btfss	___ftmul@f1,0,c
  3333  0013C0  D007               	goto	l1566
  3334  0013C2  500F               	movf	___ftmul@f2,w,c
  3335  0013C4  2616               	addwf	___ftmul@f3_as_product,f,c
  3336  0013C6  5010               	movf	___ftmul@f2+1,w,c
  3337  0013C8  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  3338  0013CA  5011               	movf	___ftmul@f2+2,w,c
  3339  0013CC  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  3340  0013CE  D000               	goto	l1566
  3341  0013D0                     l1566:
  3342  0013D0  90D8               	bcf	status,0,c
  3343  0013D2  320E               	rrcf	___ftmul@f1+2,f,c
  3344  0013D4  320D               	rrcf	___ftmul@f1+1,f,c
  3345  0013D6  320C               	rrcf	___ftmul@f1,f,c
  3346  0013D8  90D8               	bcf	status,0,c
  3347  0013DA  360F               	rlcf	___ftmul@f2,f,c
  3348  0013DC  3610               	rlcf	___ftmul@f2+1,f,c
  3349  0013DE  3611               	rlcf	___ftmul@f2+2,f,c
  3350  0013E0  2E19               	decfsz	___ftmul@cntr,f,c
  3351  0013E2  D7ED               	goto	l1562
  3352  0013E4  D000               	goto	l1570
  3353  0013E6                     l1570:
  3354  0013E6  0E09               	movlw	9
  3355  0013E8  6E19               	movwf	___ftmul@cntr,c
  3356  0013EA  D000               	goto	l1572
  3357  0013EC                     l1572:
  3358  0013EC  A00C               	btfss	___ftmul@f1,0,c
  3359  0013EE  D007               	goto	l1576
  3360  0013F0  500F               	movf	___ftmul@f2,w,c
  3361  0013F2  2616               	addwf	___ftmul@f3_as_product,f,c
  3362  0013F4  5010               	movf	___ftmul@f2+1,w,c
  3363  0013F6  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  3364  0013F8  5011               	movf	___ftmul@f2+2,w,c
  3365  0013FA  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  3366  0013FC  D000               	goto	l1576
  3367  0013FE                     l1576:
  3368  0013FE  90D8               	bcf	status,0,c
  3369  001400  320E               	rrcf	___ftmul@f1+2,f,c
  3370  001402  320D               	rrcf	___ftmul@f1+1,f,c
  3371  001404  320C               	rrcf	___ftmul@f1,f,c
  3372  001406  90D8               	bcf	status,0,c
  3373  001408  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  3374  00140A  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  3375  00140C  3216               	rrcf	___ftmul@f3_as_product,f,c
  3376  00140E  2E19               	decfsz	___ftmul@cntr,f,c
  3377  001410  D7ED               	goto	l1572
  3378  001412  D000               	goto	l1580
  3379  001414                     l1580:
  3380  001414  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3381  001418  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3382  00141C  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3383  001420  C015  F004         	movff	___ftmul@exp,___ftpack@exp
  3384  001424  C01A  F005         	movff	___ftmul@sign,___ftpack@sign
  3385  001428  EC75  F00B         	call	___ftpack	;wreg free
  3386  00142C  C001  F00C         	movff	?___ftpack,?___ftmul
  3387  001430  C002  F00D         	movff	?___ftpack+1,?___ftmul+1
  3388  001434  C003  F00E         	movff	?___ftpack+2,?___ftmul+2
  3389  001438  D000               	goto	l626
  3390  00143A                     l626:
  3391  00143A  0012               	return		;funcret
  3392  00143C                     __end_of___ftmul:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           postdec1	equ	0xFE5
  3401                           fsr1l	equ	0xFE1
  3402                           status	equ	0xFD8
  3403                           
  3404 ;; *************** function ___ftpack *****************
  3405 ;; Defined at:
  3406 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  arg             3    0[COMRAM] unsigned um
  3409 ;;  exp             1    3[COMRAM] unsigned char 
  3410 ;;  sign            1    4[COMRAM] unsigned char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  3    0[COMRAM] float 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3422 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;Total ram usage:        8 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		___ftadd
  3432 ;;		___ftdiv
  3433 ;;		___ftmul
  3434 ;;		___lwtoft
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text28
  3439  0016EA                     __ptext28:
  3440                           	opt stack 0
  3441  0016EA                     ___ftpack:
  3442                           	opt stack 29
  3443                           
  3444                           ;incstack = 0
  3445  0016EA  5004               	movf	___ftpack@exp,w,c
  3446  0016EC  B4D8               	btfsc	status,2,c
  3447  0016EE  D005               	goto	l1472
  3448  0016F0  5001               	movf	___ftpack@arg,w,c
  3449  0016F2  1002               	iorwf	___ftpack@arg+1,w,c
  3450  0016F4  1003               	iorwf	___ftpack@arg+2,w,c
  3451  0016F6  A4D8               	btfss	status,2,c
  3452  0016F8  D00E               	goto	l1478
  3453  0016FA                     l1472:
  3454  0016FA  0E00               	movlw	0
  3455  0016FC  6E01               	movwf	?___ftpack,c
  3456  0016FE  0E00               	movlw	0
  3457  001700  6E02               	movwf	?___ftpack+1,c
  3458  001702  0E00               	movlw	0
  3459  001704  6E03               	movwf	?___ftpack+2,c
  3460  001706  D053               	goto	l539
  3461  001708  D006               	goto	l1478
  3462  00170A                     l1476:
  3463  00170A  2A04               	incf	___ftpack@exp,f,c
  3464  00170C  90D8               	bcf	status,0,c
  3465  00170E  3203               	rrcf	___ftpack@arg+2,f,c
  3466  001710  3202               	rrcf	___ftpack@arg+1,f,c
  3467  001712  3201               	rrcf	___ftpack@arg,f,c
  3468  001714  D000               	goto	l1478
  3469  001716                     l1478:
  3470  001716  0E00               	movlw	0
  3471  001718  1401               	andwf	___ftpack@arg,w,c
  3472  00171A  6E06               	movwf	??___ftpack& (0+255),c
  3473  00171C  0E00               	movlw	0
  3474  00171E  1402               	andwf	___ftpack@arg+1,w,c
  3475  001720  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3476  001722  0EFE               	movlw	254
  3477  001724  1403               	andwf	___ftpack@arg+2,w,c
  3478  001726  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3479  001728  5006               	movf	??___ftpack,w,c
  3480  00172A  1007               	iorwf	??___ftpack+1,w,c
  3481  00172C  1008               	iorwf	??___ftpack+2,w,c
  3482  00172E  B4D8               	btfsc	status,2,c
  3483  001730  D00E               	goto	l1484
  3484  001732  D7EB               	goto	l1476
  3485  001734  D00C               	goto	l1484
  3486  001736                     l1480:
  3487  001736  2A04               	incf	___ftpack@exp,f,c
  3488  001738  0E01               	movlw	1
  3489  00173A  2601               	addwf	___ftpack@arg,f,c
  3490  00173C  0E00               	movlw	0
  3491  00173E  2202               	addwfc	___ftpack@arg+1,f,c
  3492  001740  0E00               	movlw	0
  3493  001742  2203               	addwfc	___ftpack@arg+2,f,c
  3494  001744  90D8               	bcf	status,0,c
  3495  001746  3203               	rrcf	___ftpack@arg+2,f,c
  3496  001748  3202               	rrcf	___ftpack@arg+1,f,c
  3497  00174A  3201               	rrcf	___ftpack@arg,f,c
  3498  00174C  D000               	goto	l1484
  3499  00174E                     l1484:
  3500  00174E  0E00               	movlw	0
  3501  001750  1401               	andwf	___ftpack@arg,w,c
  3502  001752  6E06               	movwf	??___ftpack& (0+255),c
  3503  001754  0E00               	movlw	0
  3504  001756  1402               	andwf	___ftpack@arg+1,w,c
  3505  001758  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3506  00175A  0EFF               	movlw	255
  3507  00175C  1403               	andwf	___ftpack@arg+2,w,c
  3508  00175E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3509  001760  5006               	movf	??___ftpack,w,c
  3510  001762  1007               	iorwf	??___ftpack+1,w,c
  3511  001764  1008               	iorwf	??___ftpack+2,w,c
  3512  001766  B4D8               	btfsc	status,2,c
  3513  001768  D008               	goto	l1488
  3514  00176A  D7E5               	goto	l1480
  3515  00176C  D006               	goto	l1488
  3516  00176E                     l1486:
  3517  00176E  0604               	decf	___ftpack@exp,f,c
  3518  001770  90D8               	bcf	status,0,c
  3519  001772  3601               	rlcf	___ftpack@arg,f,c
  3520  001774  3602               	rlcf	___ftpack@arg+1,f,c
  3521  001776  3603               	rlcf	___ftpack@arg+2,f,c
  3522  001778  D000               	goto	l1488
  3523  00177A                     l1488:
  3524  00177A  BE02               	btfsc	___ftpack@arg+1,7,c
  3525  00177C  D004               	goto	l550
  3526  00177E  0E02               	movlw	2
  3527  001780  6004               	cpfslt	___ftpack@exp,c
  3528  001782  D7F5               	goto	l1486
  3529  001784  D000               	goto	l550
  3530  001786                     l550:
  3531  001786  B004               	btfsc	___ftpack@exp,0,c
  3532  001788  D002               	goto	l1494
  3533  00178A  9E02               	bcf	___ftpack@arg+1,7,c
  3534  00178C  D000               	goto	l1494
  3535  00178E                     l1494:
  3536  00178E  90D8               	bcf	status,0,c
  3537  001790  3204               	rrcf	___ftpack@exp,f,c
  3538  001792  5004               	movf	___ftpack@exp,w,c
  3539  001794  1203               	iorwf	___ftpack@arg+2,f,c
  3540  001796  5005               	movf	___ftpack@sign,w,c
  3541  001798  B4D8               	btfsc	status,2,c
  3542  00179A  D002               	goto	l1500
  3543  00179C  8E03               	bsf	___ftpack@arg+2,7,c
  3544  00179E  D000               	goto	l1500
  3545  0017A0                     l1500:
  3546  0017A0  C001  F001         	movff	___ftpack@arg,?___ftpack
  3547  0017A4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3548  0017A8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3549  0017AC  D000               	goto	l539
  3550  0017AE                     l539:
  3551  0017AE  0012               	return		;funcret
  3552  0017B0                     __end_of___ftpack:
  3553                           	opt stack 0
  3554                           tblptru	equ	0xFF8
  3555                           tblptrh	equ	0xFF7
  3556                           tblptrl	equ	0xFF6
  3557                           tablat	equ	0xFF5
  3558                           postinc0	equ	0xFEE
  3559                           wreg	equ	0xFE8
  3560                           postdec1	equ	0xFE5
  3561                           fsr1l	equ	0xFE1
  3562                           status	equ	0xFD8
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           postdec1	equ	0xFE5
  3570                           fsr1l	equ	0xFE1
  3571                           status	equ	0xFD8
  3572                           
  3573                           	psect	rparam
  3574  0000                     tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           postinc0	equ	0xFEE
  3579                           wreg	equ	0xFE8
  3580                           postdec1	equ	0xFE5
  3581                           fsr1l	equ	0xFE1
  3582                           status	equ	0xFD8


Data Sizes:
    Strings     22
    Constant    0
    Data        5
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      72
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    SerTxStr@string	PTR unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[8]), 

    lcdWriteString@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_C2LCD
    _lcdWriteString->_lcdChar
    _lcdInit->_lcdCommand
    _setIODIR->_WriteSPI1
    _RTDInit->_Delay10TCYx
    _RTDInit->_Delay1KTCYx
    _RTDInit->_Delay1TCYx
    ___ftdiv->___ftpack
    ___ftadd->_RTD2Angle
    _SerTxStr->_SerTx
    _ReadRTDpos->_Delay10TCYx
    _RTD2Angle->___ftmul
    ___lwtoft->___ftpack
    _C2LCD->___fttol
    _lcdGoTo->_lcdCommand
    _lcdCommand->_setGPIO
    _lcdChar->_setGPIO
    _setGPIO->_WriteSPI1
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17781
                              _C2LCD
                          _RTD2Angle
                         _ReadRTDpos
                              _SerTx
                           _SerTxStr
                            ___ftadd
                            ___ftdiv
                         _initialize
                            _lcdGoTo
                     _lcdWriteString
 ---------------------------------------------------------------------------------
 (1) _lcdWriteString                                       2     0      2     777
                                              5 COMRAM     2     0      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0    1513
                            _RTDInit
                            _SerInit
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    1468
                           _OpenSPI1
                         _lcdCommand
                            _setGPIO
                           _setIODIR
 ---------------------------------------------------------------------------------
 (3) _setIODIR                                             2     1      1     165
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (3) _OpenSPI1                                             3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _SerInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTDInit                                              0     0      0      45
                        _Delay10TCYx
                        _Delay1KTCYx
                         _Delay1TCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1TCYx                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2173
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    2813
                                             29 COMRAM    12     6      6
                          _RTD2Angle (ARG)
                         _ReadRTDpos (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _SerTxStr                                             2     0      2     113
                                              1 COMRAM     2     0      2
                              _SerTx
 ---------------------------------------------------------------------------------
 (2) _SerTx                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadRTDpos                                          12    10      2     153
                                              1 COMRAM    10     8      2
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (1) _RTD2Angle                                            3     0      3    4182
                                             26 COMRAM     3     0      3
                         _ReadRTDpos (ARG)
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1782
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _C2LCD                                                7     4      3    5447
                                             41 COMRAM     7     4      3
                            ___ftmul
                            ___fttol
                            ___lwdiv
                            ___lwmod
                            _lcdChar
                            _lcdGoTo
 ---------------------------------------------------------------------------------
 (1) _lcdGoTo                                              1     1      0     595
                                              5 COMRAM     1     1      0
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0     573
                                              4 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0     573
                                              4 COMRAM     1     1      0
                        _Delay10TCYx
                            _setGPIO
 ---------------------------------------------------------------------------------
 (3) _setGPIO                                              2     1      1     536
                                              2 COMRAM     2     1      1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (4) _WriteSPI1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay10TCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     583
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     586
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     305
                                             26 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2325
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1707
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _C2LCD
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     ___lwdiv
     ___lwmod
     _lcdChar
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
     _lcdGoTo
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
   _RTD2Angle
     _ReadRTDpos (ARG)
       _Delay10TCYx
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   _ReadRTDpos
     _Delay10TCYx
   _SerTx
   _SerTxStr
     _SerTx
   ___ftadd
     _RTD2Angle (ARG)
       _ReadRTDpos (ARG)
         _Delay10TCYx
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     _ReadRTDpos (ARG)
       _Delay10TCYx
     ___ftpack (ARG)
   ___ftdiv
     ___ftpack
   _initialize
     _RTDInit
       _Delay10TCYx
       _Delay1KTCYx
       _Delay1TCYx
     _SerInit
     _lcdInit
       _OpenSPI1
       _lcdCommand
         _Delay10TCYx
         _setGPIO
           _WriteSPI1
       _setGPIO
         _WriteSPI1
       _setIODIR
         _WriteSPI1
   _lcdGoTo
     _lcdCommand
       _Delay10TCYx
       _setGPIO
         _WriteSPI1
   _lcdWriteString
     _lcdChar
       _Delay10TCYx
       _setGPIO
         _WriteSPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      48       1       75.8%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48       6        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Oct 10 22:16:53 2015

                      _x 0043                       l74 1B52             ___ftadd@exp1 0029  
           ___ftadd@exp2 0028             ___ftadd@sign 0027                      l110 1818  
                    l111 1822                      l112 1862                      l122 1A08  
                    l203 1B1A                      l205 1B12                      l147 1BA4  
                    l181 1878                      l190 189E                      l183 187C  
                    l184 187E                      l442 1B88                      l435 1B9A  
                    l603 1164                      l611 16E8                      l187 1898  
                    l188 18B2                      l189 189A                      l550 1786  
                    l614 16B4                      l447 1BAC                      l449 1BB4  
                    l626 143A                      l539 17AE                      l580 11DA  
                    l647 1606                      l583 1086                      l594 1148  
                    l579 105C                      l749 1802                      l838 1B8C  
                    l759 18FC                      l776 1AF8                      l882 1B7A  
                    u811 1372                      u851 1532                      u870 155E  
                    u791 1354                      u875 1556        lcdCommand@command 0005  
                    wreg 000FE8             ___ftdiv@cntr 0012               _Delay1TCYx 1BAA  
           ___ftdiv@sign 0017             __CFG_WDT$OFF 000000                     l1500 17A0  
                   l1620 15D2                     l1612 15AA                     l1460 1882  
                   l1542 1362                     l1614 15B0                     l1622 15DC  
                   l1480 1736                     l1472 16FA                     l1544 137C  
                   l1608 159A                     l1640 17D8                     l1800 10EC  
                   l1464 18A2                     l1570 13E6                     l1562 13BE  
                   l1626 15F4                     l1618 15C4                     l1802 10F8  
                   l1484 174E                     l1476 170A                     l1580 1414  
                   l1572 13EC                     l1548 138A                     l1636 17C6  
                   l1660 18DA                     l1820 1182                     l1812 1130  
                   l1804 1104                     l1494 178E                     l1486 176E  
                   l1478 1716                     l1566 13D0                     l1590 1540  
                   l1638 17D0                     l1830 11B4                     l1814 113C  
                   l1806 110C                     l1910 1464                     l1488 177A  
                   l1576 13FE                     l1648 17F6                     l1664 18F0  
                   l1656 18C8                     l1840 1626                     l1920 14A8  
                   l1658 18D2                     l1762 1A5A                     l1842 1640  
                   l1674 1A0C                     l1914 146C                     l1906 1454  
                   l1772 106A                     l1758 1A40                     l1846 164E  
                   l1678 1A26                     l1784 10A0                     l1698 181C  
                   l1794 10C8                     l1778 1094                     l1866 168E  
                   l1876 16C2                     STR_1 1010                     STR_2 1009  
                   STR_3 1001                     STR_4 1001                     u1041 1028  
                   u1051 103C                     u1251 1618                     u1271 1636  
                   u1327 1B7C                     u1337 1B8E             __CFG_PWRT$ON 000000  
                   _main 143C             ___ftpack@arg 0001             ___ftpack@exp 0004  
        __end_of_RTDInit 1AD4                     fsr1l 000FE1                     start 0002  
           ___ftmul@cntr 0019             ___param_bank 000010             ___ftmul@sign 001A  
            _Delay10TCYx 1B8A             ___fttol@exp1 0029          __end_of_SerInit 1B78  
           ___fttol@lval 0025              _Delay1KTCYx 1B78                    _C2LCD 11DC  
            ReadRTDpos@x 000B        RTD2Angle@RTDAngle 001B                    ?_main 0001  
        __end_of___ftadd 11DC          __end_of___ftdiv 16EA          __end_of___ftmul 143C  
        __end_of___fttol 1608          __end_of___lwdiv 180C          __end_of___lwmod 1906  
     __size_of_RTD2Angle 0038                C2LCD@temp 002F                    _SPBRG 000FAF  
                  _PORTD 000F83                    _PORTH 000F87                    _TRISD 000F95  
                  _TRISH 000F99                    _Angle 0044          __end_of_lcdChar 19D2  
        __end_of_lcdGoTo 1BC2          __end_of_lcdInit 1950           __CFG_FCMEN$OFF 000000  
                  _SerTx 1B9C          __end_of_setGPIO 1B50            ___ftpack@sign 0005  
                  tablat 000FF5                    status 000FD8               _ReadRTDpos 180C  
        __initialization 1A72             __end_of_main 1522           __CFG_OSC$HSPLL 000000  
                 ?_C2LCD 002A         __end_of_OpenSPI1 18BA                   ??_main 0031  
          ___fttol@sign1 0024         __end_of_SerTxStr 1A72            __activetblptr 000003  
       ??_lcdWriteString 0008                   ?_SerTx 0001                ??_RTDInit 0002  
            ?_Delay1TCYx 0001         __end_of___ftpack 17B0               C2LCD@angle 002A  
                 _RCREG1 000FAE         __end_of___lwtoft 1AFA                   _RCSTA1 000FAB  
             C2LCD@temp2 002D                   _TXREG1 000FAD                   _TXSTA1 000FAC  
      __end_of_RTD2Angle 1A0A                   SerTx@c 0001                ??_SerInit 0001  
       OpenSPI1@bus_mode 0001                ??___ftadd 0024          lcdWriteString@s 0006  
              ??___ftdiv 000F                ??___ftmul 0012                ??___fttol 001F  
              ??___lwdiv 0005                ??___lwmod 0005         __end_of_setIODIR 1B36  
                 clear_0 1A78              setIODIR@dir 0003                ??_lcdChar 0005  
              ??_lcdGoTo 0006                ??_lcdInit 0006    ___ftmul@f3_as_product 0016  
           __pdataCOMRAM 0044                ??_setGPIO 0004             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 1A9E       __size_of_WriteSPI1 0022  
             ___ftadd@f1 001E               ___ftadd@f2 0021            __end_of_C2LCD 1344  
          ___rparam_used 000001               ___ftdiv@f1 0009               ___ftdiv@f2 000C  
             ___ftdiv@f3 0013              ?_ReadRTDpos 0002               ___ftmul@f1 000C  
             ___ftmul@f2 000F               ___fttol@f1 001B           __pcstackCOMRAM 0001  
          __end_of_SerTx 1BAA      __size_of_Delay1TCYx 000C                  ??_C2LCD 002D  
             ___lwtoft@c 0009                  ??_SerTx 0001         WriteSPI1@TempVar 0001  
              ?_OpenSPI1 0001                ?_SerTxStr 0002             ?_Delay10TCYx 0001  
             _lcdCommand 1950             ?_Delay1KTCYx 0001                ?___ftpack 0001  
      __end_of_WriteSPI1 1B1C                ?___lwtoft 0009      __size_of_ReadRTDpos 0058  
                _SSP1BUF 000FC9                  _RTDInit 1AA4           SerTxStr@string 0002  
              ?_setIODIR 0003               ??_OpenSPI1 0003               ??_SerTxStr 0004  
                __Hparam 0000                  _SerInit 1B64                  __Lparam 0000  
                ___ftadd 1018                  ___ftdiv 1608                  ___ftmul 1344  
                ___fttol 1522                  ___lwdiv 17B0                  ___lwmod 18BA  
           __psmallconst 1000                  __pcinit 1A72               ??___ftpack 0006  
        Delay10TCYx@unit 0001                  _lcdChar 1994                  __ramtop 1000  
             _initialize 1B50                  _lcdGoTo 1BB6                  _lcdInit 1906  
                __ptext0 143C                  __ptext1 1A0A                  __ptext2 1B50  
                __ptext3 1906                  __ptext4 1B1C                  __ptext5 1864  
                __ptext6 1B64                  __ptext7 1AA4                  __ptext8 1BAA  
                __ptext9 1B78                  _average 0040               ??___lwtoft 000C  
                _setGPIO 1B36          setIODIR@address 0004             setGPIO@value 0003  
           ??_Delay1TCYx 0001     end_of_initialization 1A9E               ??_setIODIR 0004  
      OpenSPI1@smp_phase 0002               lcdGoTo@pos 0006    ReadRTDpos@LowPosition 0008  
                postdec1 000FE5              ?_lcdCommand 0001                _RTD2Angle 19D2  
                postinc0 000FEE        OpenSPI1@sync_mode 0003       __end_of_Delay1TCYx 1BB6  
              _PORTAbits 000F80                _PORTEbits 000F84                _PORTJbits 000F88  
              _TRISAbits 000F92                _TRISCbits 000F94                _TRISEbits 000F96  
              _TRISFbits 000F97                _TRISJbits 000F9A              ___ftdiv@exp 0016  
           ??_ReadRTDpos 0004              ___ftmul@exp 0015               ?_RTD2Angle 001B  
   __size_of_Delay10TCYx 0012            __pidataCOMRAM 1BC2              ?_initialize 0001  
   __size_of_Delay1KTCYx 0012            lcdChar@letter 0005      start_initialization 1A72  
     __end_of_ReadRTDpos 1864      __size_of_lcdCommand 0044  __size_of_lcdWriteString 0034  
 ReadRTDpos@HighPosition 0007        __size_of_OpenSPI1 0056        __size_of_SerTxStr 0034  
      __size_of___ftpack 00C6              __pbssCOMRAM 0031        __size_of___lwtoft 0026  
              _WriteSPI1 1AFA                 ?_RTDInit 0001          Delay1KTCYx@unit 0001  
    __size_of_initialize 0014        WriteSPI1@data_out 0002        __size_of_setIODIR 001A  
               ?_SerInit 0001         ___lwdiv@dividend 0001              ??_RTD2Angle 001E  
               ?___ftadd 001E                 ?___ftdiv 0009                 ?___ftmul 000C  
               ?___fttol 001B                 ?___lwdiv 0001                 ?___lwmod 0001  
              _fiveAngle 0031                 ?_lcdChar 0001                 ?_lcdGoTo 0001  
               ?_lcdInit 0001           __size_of_C2LCD 0168              __smallconst 1000  
               _BAUDCON1 000F7E                 ?_setGPIO 0003               ?_WriteSPI1 0001  
         __size_of_SerTx 000E         ___lwdiv@quotient 0005                 _PIE1bits 000F9D  
               _PIR1bits 000F9E           setGPIO@address 0004             ??_lcdCommand 0005  
               _SSP1CON1 000FC6                 _SSP1STAT 000FC7                copy_data0 1A92  
       __size_of_RTDInit 0030       __end_of_lcdCommand 1994           _lcdWriteString 1A0A  
               _OpenSPI1 1864   ReadRTDpos@FullPosition 0009                 _SerTxStr 1A3E  
               __Hrparam 0000                 __Lrparam 0000         __size_of_SerInit 0014  
       __size_of___ftadd 01C4         __size_of___ftdiv 00E2         __size_of___ftmul 00F8  
       __size_of___fttol 00E6         __size_of___lwdiv 005C         __size_of___lwmod 004C  
           ??_initialize 0006                 ___ftpack 16EA         __size_of_lcdChar 003E  
               ___lwtoft 1AD4         __size_of_lcdGoTo 000C         __size_of_lcdInit 004A  
       __size_of_setGPIO 001A              ??_WriteSPI1 0001          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 1608                 __ptext11 1018  
               __ptext20 1994                 __ptext12 1A3E                 __ptext21 1B36  
               __ptext13 1B9C                 __ptext22 1AFA                 __ptext14 180C  
               __ptext23 1B8A                 __ptext15 19D2                 __ptext24 18BA  
               __ptext16 1AD4                 __ptext25 17B0                 __ptext17 11DC  
               __ptext26 1522                 __ptext18 1BB6                 __ptext27 1344  
               __ptext19 1950                 __ptext28 16EA             _SSP1CON1bits 000FC6  
 __end_of_lcdWriteString 1A3E                 _setIODIR 1B1C            __size_of_main 00E6  
         Delay1TCYx@unit 0001       __end_of_initialize 1B64            ??_Delay10TCYx 0001  
          ??_Delay1KTCYx 0001             _SSP1STATbits 000FC7          ?_lcdWriteString 0006  
       ___lwmod@dividend 0001               _OSCCONbits 000FD3      __end_of_Delay10TCYx 1B9C  
        ___lwmod@divisor 0003      __end_of_Delay1KTCYx 1B8A          ___lwmod@counter 0005  
